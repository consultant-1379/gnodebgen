//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.09.08 at 04:50:40 PM IST 
//


package com.ericsson.tool.asn.nr.mapper.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AggregatedBandwidthMapper.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AggregatedBandwidthMapper"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="mhz50"/&gt;
 *     &lt;enumeration value="mhz100"/&gt;
 *     &lt;enumeration value="mhz150"/&gt;
 *     &lt;enumeration value="mhz200"/&gt;
 *     &lt;enumeration value="mhz250"/&gt;
 *     &lt;enumeration value="mhz300"/&gt;
 *     &lt;enumeration value="mhz350"/&gt;
 *     &lt;enumeration value="mhz400"/&gt;
 *     &lt;enumeration value="mhz450"/&gt;
 *     &lt;enumeration value="mhz500"/&gt;
 *     &lt;enumeration value="mhz550"/&gt;
 *     &lt;enumeration value="mhz600"/&gt;
 *     &lt;enumeration value="mhz650"/&gt;
 *     &lt;enumeration value="mhz700"/&gt;
 *     &lt;enumeration value="mhz750"/&gt;
 *     &lt;enumeration value="mhz800"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "AggregatedBandwidthMapper")
@XmlEnum
public enum AggregatedBandwidthMapper {

    @XmlEnumValue("mhz50")
    MHZ_50("mhz50"),
    @XmlEnumValue("mhz100")
    MHZ_100("mhz100"),
    @XmlEnumValue("mhz150")
    MHZ_150("mhz150"),
    @XmlEnumValue("mhz200")
    MHZ_200("mhz200"),
    @XmlEnumValue("mhz250")
    MHZ_250("mhz250"),
    @XmlEnumValue("mhz300")
    MHZ_300("mhz300"),
    @XmlEnumValue("mhz350")
    MHZ_350("mhz350"),
    @XmlEnumValue("mhz400")
    MHZ_400("mhz400"),
    @XmlEnumValue("mhz450")
    MHZ_450("mhz450"),
    @XmlEnumValue("mhz500")
    MHZ_500("mhz500"),
    @XmlEnumValue("mhz550")
    MHZ_550("mhz550"),
    @XmlEnumValue("mhz600")
    MHZ_600("mhz600"),
    @XmlEnumValue("mhz650")
    MHZ_650("mhz650"),
    @XmlEnumValue("mhz700")
    MHZ_700("mhz700"),
    @XmlEnumValue("mhz750")
    MHZ_750("mhz750"),
    @XmlEnumValue("mhz800")
    MHZ_800("mhz800");
    private final String value;

    AggregatedBandwidthMapper(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AggregatedBandwidthMapper fromValue(String v) {
        for (AggregatedBandwidthMapper c: AggregatedBandwidthMapper.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
