/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;
import asn.nr.generated.NR_RRC_Definitions.P_Max;

public class ConfigRestrictInfoSCG_powerCoordination_FR1 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public P_Max p_maxNR_FR1;  // optional
   public P_Max p_maxEUTRA;  // optional
   public P_Max p_maxUE_FR1;  // optional

   public ConfigRestrictInfoSCG_powerCoordination_FR1 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public ConfigRestrictInfoSCG_powerCoordination_FR1 (
      P_Max p_maxNR_FR1_,
      P_Max p_maxEUTRA_,
      P_Max p_maxUE_FR1_
   ) {
      super();
      p_maxNR_FR1 = p_maxNR_FR1_;
      p_maxEUTRA = p_maxEUTRA_;
      p_maxUE_FR1 = p_maxUE_FR1_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public ConfigRestrictInfoSCG_powerCoordination_FR1 (long p_maxNR_FR1_,
      long p_maxEUTRA_,
      long p_maxUE_FR1_
   ) {
      super();
      p_maxNR_FR1 = new P_Max (p_maxNR_FR1_);
      p_maxEUTRA = new P_Max (p_maxEUTRA_);
      p_maxUE_FR1 = new P_Max (p_maxUE_FR1_);
   }

   public void init () {
      p_maxNR_FR1 = null;
      p_maxEUTRA = null;
      p_maxUE_FR1 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return p_maxNR_FR1;
         case 1: return p_maxEUTRA;
         case 2: return p_maxUE_FR1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "p-maxNR-FR1";
         case 1: return "p-maxEUTRA";
         case 2: return "p-maxUE-FR1";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean p_maxNR_FR1Present = buffer.decodeBit ("p_maxNR_FR1Present");
      boolean p_maxEUTRAPresent = buffer.decodeBit ("p_maxEUTRAPresent");
      boolean p_maxUE_FR1Present = buffer.decodeBit ("p_maxUE_FR1Present");

      // decode p_maxNR_FR1

      if (p_maxNR_FR1Present) {
         buffer.getContext().eventDispatcher.startElement("p_maxNR_FR1", -1);

         p_maxNR_FR1 = new P_Max();
         p_maxNR_FR1.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("p_maxNR_FR1", -1);
      }
      else {
         p_maxNR_FR1 = null;
      }

      // decode p_maxEUTRA

      if (p_maxEUTRAPresent) {
         buffer.getContext().eventDispatcher.startElement("p_maxEUTRA", -1);

         p_maxEUTRA = new P_Max();
         p_maxEUTRA.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("p_maxEUTRA", -1);
      }
      else {
         p_maxEUTRA = null;
      }

      // decode p_maxUE_FR1

      if (p_maxUE_FR1Present) {
         buffer.getContext().eventDispatcher.startElement("p_maxUE_FR1", -1);

         p_maxUE_FR1 = new P_Max();
         p_maxUE_FR1.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("p_maxUE_FR1", -1);
      }
      else {
         p_maxUE_FR1 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((p_maxNR_FR1 != null), null);
      buffer.encodeBit ((p_maxEUTRA != null), null);
      buffer.encodeBit ((p_maxUE_FR1 != null), null);

      // encode p_maxNR_FR1

      if (p_maxNR_FR1 != null) {
         buffer.getContext().eventDispatcher.startElement("p_maxNR_FR1", -1);

         p_maxNR_FR1.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("p_maxNR_FR1", -1);
      }

      // encode p_maxEUTRA

      if (p_maxEUTRA != null) {
         buffer.getContext().eventDispatcher.startElement("p_maxEUTRA", -1);

         p_maxEUTRA.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("p_maxEUTRA", -1);
      }

      // encode p_maxUE_FR1

      if (p_maxUE_FR1 != null) {
         buffer.getContext().eventDispatcher.startElement("p_maxUE_FR1", -1);

         p_maxUE_FR1.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("p_maxUE_FR1", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (p_maxNR_FR1 != null) p_maxNR_FR1.print (_sb, "p_maxNR_FR1", _level+1);
      if (p_maxEUTRA != null) p_maxEUTRA.print (_sb, "p_maxEUTRA", _level+1);
      if (p_maxUE_FR1 != null) p_maxUE_FR1.print (_sb, "p_maxUE_FR1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
