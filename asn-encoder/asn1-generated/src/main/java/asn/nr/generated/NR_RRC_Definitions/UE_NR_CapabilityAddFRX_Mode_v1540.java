/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UE_NR_CapabilityAddFRX_Mode_v1540 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UE-NR-CapabilityAddFRX-Mode-v1540";
   }

   public IMS_ParametersFRX_Diff ims_ParametersFRX_Diff;  // optional

   public UE_NR_CapabilityAddFRX_Mode_v1540 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UE_NR_CapabilityAddFRX_Mode_v1540 (
      IMS_ParametersFRX_Diff ims_ParametersFRX_Diff_
   ) {
      super();
      ims_ParametersFRX_Diff = ims_ParametersFRX_Diff_;
   }

   public void init () {
      ims_ParametersFRX_Diff = null;
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ims_ParametersFRX_Diff;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ims-ParametersFRX-Diff";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean ims_ParametersFRX_DiffPresent = buffer.decodeBit ("ims_ParametersFRX_DiffPresent");

      // decode ims_ParametersFRX_Diff

      if (ims_ParametersFRX_DiffPresent) {
         buffer.getContext().eventDispatcher.startElement("ims_ParametersFRX_Diff", -1);

         ims_ParametersFRX_Diff = new IMS_ParametersFRX_Diff();
         ims_ParametersFRX_Diff.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ims_ParametersFRX_Diff", -1);
      }
      else {
         ims_ParametersFRX_Diff = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((ims_ParametersFRX_Diff != null), null);

      // encode ims_ParametersFRX_Diff

      if (ims_ParametersFRX_Diff != null) {
         buffer.getContext().eventDispatcher.startElement("ims_ParametersFRX_Diff", -1);

         ims_ParametersFRX_Diff.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ims_ParametersFRX_Diff", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ims_ParametersFRX_Diff != null) ims_ParametersFRX_Diff.print (_sb, "ims_ParametersFRX_Diff", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
