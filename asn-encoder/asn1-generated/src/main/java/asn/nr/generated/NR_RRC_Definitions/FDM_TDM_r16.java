/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class FDM_TDM_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "FDM-TDM-r16";
   }

   public FDM_TDM_r16_repetitionScheme_r16 repetitionScheme_r16 = null;
   public Asn1Integer startingSymbolOffsetK_r16;  // optional

   public FDM_TDM_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public FDM_TDM_r16 (
      FDM_TDM_r16_repetitionScheme_r16 repetitionScheme_r16_,
      Asn1Integer startingSymbolOffsetK_r16_
   ) {
      super();
      repetitionScheme_r16 = repetitionScheme_r16_;
      startingSymbolOffsetK_r16 = startingSymbolOffsetK_r16_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public FDM_TDM_r16 (
      FDM_TDM_r16_repetitionScheme_r16 repetitionScheme_r16_
   ) {
      super();
      repetitionScheme_r16 = repetitionScheme_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public FDM_TDM_r16 (FDM_TDM_r16_repetitionScheme_r16 repetitionScheme_r16_,
      long startingSymbolOffsetK_r16_
   ) {
      super();
      repetitionScheme_r16 = repetitionScheme_r16_;
      startingSymbolOffsetK_r16 = new Asn1Integer (startingSymbolOffsetK_r16_);
   }

   public void init () {
      repetitionScheme_r16 = null;
      startingSymbolOffsetK_r16 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return repetitionScheme_r16;
         case 1: return startingSymbolOffsetK_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "repetitionScheme-r16";
         case 1: return "startingSymbolOffsetK-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean startingSymbolOffsetK_r16Present = buffer.decodeBit ("startingSymbolOffsetK_r16Present");

      // decode repetitionScheme_r16

      buffer.getContext().eventDispatcher.startElement("repetitionScheme_r16", -1);

      {
         int tval = FDM_TDM_r16_repetitionScheme_r16.decodeEnumValue (buffer);
         repetitionScheme_r16 = FDM_TDM_r16_repetitionScheme_r16.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("repetitionScheme_r16", -1);

      // decode startingSymbolOffsetK_r16

      if (startingSymbolOffsetK_r16Present) {
         buffer.getContext().eventDispatcher.startElement("startingSymbolOffsetK_r16", -1);

         startingSymbolOffsetK_r16 = new Asn1Integer();
         startingSymbolOffsetK_r16.decode (buffer, 0, 7);

         buffer.invokeCharacters(startingSymbolOffsetK_r16.toString());
         buffer.getContext().eventDispatcher.endElement("startingSymbolOffsetK_r16", -1);
      }
      else {
         startingSymbolOffsetK_r16 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((startingSymbolOffsetK_r16 != null), null);

      // encode repetitionScheme_r16

      if (repetitionScheme_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("repetitionScheme_r16", -1);

         repetitionScheme_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("repetitionScheme_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("repetitionScheme_r16");

      // encode startingSymbolOffsetK_r16

      if (startingSymbolOffsetK_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("startingSymbolOffsetK_r16", -1);

         startingSymbolOffsetK_r16.encode (buffer, 0, 7);

         buffer.getContext().eventDispatcher.endElement("startingSymbolOffsetK_r16", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (repetitionScheme_r16 != null) repetitionScheme_r16.print (_sb, "repetitionScheme_r16", _level+1);
      if (startingSymbolOffsetK_r16 != null) startingSymbolOffsetK_r16.print (_sb, "startingSymbolOffsetK_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
