/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class BandSidelink_r16_sync_Sidelink_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public BandSidelink_r16_sync_Sidelink_r16_gNB_Sync_r16 gNB_Sync_r16 = null;  // optional
   public BandSidelink_r16_sync_Sidelink_r16_gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16 gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16 = null;  // optional
   public BandSidelink_r16_sync_Sidelink_r16_gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16 gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16 = null;  // optional

   public BandSidelink_r16_sync_Sidelink_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public BandSidelink_r16_sync_Sidelink_r16 (
      BandSidelink_r16_sync_Sidelink_r16_gNB_Sync_r16 gNB_Sync_r16_,
      BandSidelink_r16_sync_Sidelink_r16_gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16 gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16_,
      BandSidelink_r16_sync_Sidelink_r16_gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16 gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16_
   ) {
      super();
      gNB_Sync_r16 = gNB_Sync_r16_;
      gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16 = gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16_;
      gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16 = gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16_;
   }

   public void init () {
      gNB_Sync_r16 = null;
      gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16 = null;
      gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return gNB_Sync_r16;
         case 1: return gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16;
         case 2: return gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "gNB-Sync-r16";
         case 1: return "gNB-GNSS-UE-SyncWithPriorityOnGNB-ENB-r16";
         case 2: return "gNB-GNSS-UE-SyncWithPriorityOnGNSS-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean gNB_Sync_r16Present = buffer.decodeBit ("gNB_Sync_r16Present");
      boolean gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16Present = buffer.decodeBit ("gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16Present");
      boolean gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16Present = buffer.decodeBit ("gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16Present");

      // decode gNB_Sync_r16

      if (gNB_Sync_r16Present) {
         buffer.getContext().eventDispatcher.startElement("gNB_Sync_r16", -1);

         int tval = BandSidelink_r16_sync_Sidelink_r16_gNB_Sync_r16.decodeEnumValue (buffer);
         gNB_Sync_r16 = BandSidelink_r16_sync_Sidelink_r16_gNB_Sync_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("gNB_Sync_r16", -1);
      }
      else {
         gNB_Sync_r16 = null;
      }

      // decode gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16

      if (gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16Present) {
         buffer.getContext().eventDispatcher.startElement("gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16", -1);

         int tval = BandSidelink_r16_sync_Sidelink_r16_gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16.decodeEnumValue (buffer);
         gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16 = BandSidelink_r16_sync_Sidelink_r16_gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16", -1);
      }
      else {
         gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16 = null;
      }

      // decode gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16

      if (gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16Present) {
         buffer.getContext().eventDispatcher.startElement("gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16", -1);

         int tval = BandSidelink_r16_sync_Sidelink_r16_gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16.decodeEnumValue (buffer);
         gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16 = BandSidelink_r16_sync_Sidelink_r16_gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16", -1);
      }
      else {
         gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((gNB_Sync_r16 != null), null);
      buffer.encodeBit ((gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16 != null), null);
      buffer.encodeBit ((gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16 != null), null);

      // encode gNB_Sync_r16

      if (gNB_Sync_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("gNB_Sync_r16", -1);

         gNB_Sync_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("gNB_Sync_r16", -1);
      }

      // encode gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16

      if (gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16", -1);

         gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16", -1);
      }

      // encode gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16

      if (gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16", -1);

         gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (gNB_Sync_r16 != null) gNB_Sync_r16.print (_sb, "gNB_Sync_r16", _level+1);
      if (gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16 != null) gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16.print (_sb, "gNB_GNSS_UE_SyncWithPriorityOnGNB_ENB_r16", _level+1);
      if (gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16 != null) gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16.print (_sb, "gNB_GNSS_UE_SyncWithPriorityOnGNSS_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
