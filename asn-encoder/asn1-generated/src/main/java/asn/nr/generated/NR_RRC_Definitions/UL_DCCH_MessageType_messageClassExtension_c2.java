/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UL_DCCH_MessageType_messageClassExtension_c2 extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _ULDEDICATEDMESSAGESEGMENT_R16 = 1;
   public final static byte _DEDICATEDSIBREQUEST_R16 = 2;
   public final static byte _MCGFAILUREINFORMATION_R16 = 3;
   public final static byte _UEINFORMATIONRESPONSE_R16 = 4;
   public final static byte _SIDELINKUEINFORMATIONNR_R16 = 5;
   public final static byte _ULINFORMATIONTRANSFERIRAT_R16 = 6;
   public final static byte _IABOTHERINFORMATION_R16 = 7;
   public final static byte _SPARE9 = 8;
   public final static byte _SPARE8 = 9;
   public final static byte _SPARE7 = 10;
   public final static byte _SPARE6 = 11;
   public final static byte _SPARE5 = 12;
   public final static byte _SPARE4 = 13;
   public final static byte _SPARE3 = 14;
   public final static byte _SPARE2 = 15;
   public final static byte _SPARE1 = 16;

   public UL_DCCH_MessageType_messageClassExtension_c2 () {
      super();
   }

   public UL_DCCH_MessageType_messageClassExtension_c2 (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _ULDEDICATEDMESSAGESEGMENT_R16: return "ulDedicatedMessageSegment_r16";
      case _DEDICATEDSIBREQUEST_R16: return "dedicatedSIBRequest_r16";
      case _MCGFAILUREINFORMATION_R16: return "mcgFailureInformation_r16";
      case _UEINFORMATIONRESPONSE_R16: return "ueInformationResponse_r16";
      case _SIDELINKUEINFORMATIONNR_R16: return "sidelinkUEInformationNR_r16";
      case _ULINFORMATIONTRANSFERIRAT_R16: return "ulInformationTransferIRAT_r16";
      case _IABOTHERINFORMATION_R16: return "iabOtherInformation_r16";
      case _SPARE9: return "spare9";
      case _SPARE8: return "spare8";
      case _SPARE7: return "spare7";
      case _SPARE6: return "spare6";
      case _SPARE5: return "spare5";
      case _SPARE4: return "spare4";
      case _SPARE3: return "spare3";
      case _SPARE2: return "spare2";
      case _SPARE1: return "spare1";
      default: return "UNDEFINED";
      }
   }

   public void set_ulDedicatedMessageSegment_r16 (ULDedicatedMessageSegment_r16 value) {
      setElement (_ULDEDICATEDMESSAGESEGMENT_R16, value);
   }

   public void set_dedicatedSIBRequest_r16 (DedicatedSIBRequest_r16 value) {
      setElement (_DEDICATEDSIBREQUEST_R16, value);
   }

   public void set_mcgFailureInformation_r16 (MCGFailureInformation_r16 value) {
      setElement (_MCGFAILUREINFORMATION_R16, value);
   }

   public void set_ueInformationResponse_r16 (UEInformationResponse_r16 value) {
      setElement (_UEINFORMATIONRESPONSE_R16, value);
   }

   public void set_sidelinkUEInformationNR_r16 (SidelinkUEInformationNR_r16 value) {
      setElement (_SIDELINKUEINFORMATIONNR_R16, value);
   }

   public void set_ulInformationTransferIRAT_r16 (ULInformationTransferIRAT_r16 value) {
      setElement (_ULINFORMATIONTRANSFERIRAT_R16, value);
   }

   public void set_iabOtherInformation_r16 (IABOtherInformation_r16 value) {
      setElement (_IABOTHERINFORMATION_R16, value);
   }

   public void set_spare9 () {
      setElement (_SPARE9, Asn1Null.NULL_VALUE);
   }

   public void set_spare8 () {
      setElement (_SPARE8, Asn1Null.NULL_VALUE);
   }

   public void set_spare7 () {
      setElement (_SPARE7, Asn1Null.NULL_VALUE);
   }

   public void set_spare6 () {
      setElement (_SPARE6, Asn1Null.NULL_VALUE);
   }

   public void set_spare5 () {
      setElement (_SPARE5, Asn1Null.NULL_VALUE);
   }

   public void set_spare4 () {
      setElement (_SPARE4, Asn1Null.NULL_VALUE);
   }

   public void set_spare3 () {
      setElement (_SPARE3, Asn1Null.NULL_VALUE);
   }

   public void set_spare2 () {
      setElement (_SPARE2, Asn1Null.NULL_VALUE);
   }

   public void set_spare1 () {
      setElement (_SPARE1, Asn1Null.NULL_VALUE);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (16, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // ulDedicatedMessageSegment_r16
         case 0: { 
            ULDedicatedMessageSegment_r16 ulDedicatedMessageSegment_r16;
            element = ulDedicatedMessageSegment_r16 = new ULDedicatedMessageSegment_r16();
            ulDedicatedMessageSegment_r16.decode (buffer);
            break;
         }

         // dedicatedSIBRequest_r16
         case 1: { 
            DedicatedSIBRequest_r16 dedicatedSIBRequest_r16;
            element = dedicatedSIBRequest_r16 = new DedicatedSIBRequest_r16();
            dedicatedSIBRequest_r16.decode (buffer);
            break;
         }

         // mcgFailureInformation_r16
         case 2: { 
            MCGFailureInformation_r16 mcgFailureInformation_r16;
            element = mcgFailureInformation_r16 = new MCGFailureInformation_r16();
            mcgFailureInformation_r16.decode (buffer);
            break;
         }

         // ueInformationResponse_r16
         case 3: { 
            UEInformationResponse_r16 ueInformationResponse_r16;
            element = ueInformationResponse_r16 = new UEInformationResponse_r16();
            ueInformationResponse_r16.decode (buffer);
            break;
         }

         // sidelinkUEInformationNR_r16
         case 4: { 
            SidelinkUEInformationNR_r16 sidelinkUEInformationNR_r16;
            element = sidelinkUEInformationNR_r16 = new SidelinkUEInformationNR_r16();
            sidelinkUEInformationNR_r16.decode (buffer);
            break;
         }

         // ulInformationTransferIRAT_r16
         case 5: { 
            ULInformationTransferIRAT_r16 ulInformationTransferIRAT_r16;
            element = ulInformationTransferIRAT_r16 = new ULInformationTransferIRAT_r16();
            ulInformationTransferIRAT_r16.decode (buffer);
            break;
         }

         // iabOtherInformation_r16
         case 6: { 
            IABOtherInformation_r16 iabOtherInformation_r16;
            element = iabOtherInformation_r16 = new IABOtherInformation_r16();
            iabOtherInformation_r16.decode (buffer);
            break;
         }

         // spare9
         case 7: { 
            Asn1Null spare9;
            element = spare9 = Asn1Null.NULL_VALUE;
            spare9.decode (buffer);

            buffer.invokeCharacters(spare9.toString());
            break;
         }

         // spare8
         case 8: { 
            Asn1Null spare8;
            element = spare8 = Asn1Null.NULL_VALUE;
            spare8.decode (buffer);

            buffer.invokeCharacters(spare8.toString());
            break;
         }

         // spare7
         case 9: { 
            Asn1Null spare7;
            element = spare7 = Asn1Null.NULL_VALUE;
            spare7.decode (buffer);

            buffer.invokeCharacters(spare7.toString());
            break;
         }

         // spare6
         case 10: { 
            Asn1Null spare6;
            element = spare6 = Asn1Null.NULL_VALUE;
            spare6.decode (buffer);

            buffer.invokeCharacters(spare6.toString());
            break;
         }

         // spare5
         case 11: { 
            Asn1Null spare5;
            element = spare5 = Asn1Null.NULL_VALUE;
            spare5.decode (buffer);

            buffer.invokeCharacters(spare5.toString());
            break;
         }

         // spare4
         case 12: { 
            Asn1Null spare4;
            element = spare4 = Asn1Null.NULL_VALUE;
            spare4.decode (buffer);

            buffer.invokeCharacters(spare4.toString());
            break;
         }

         // spare3
         case 13: { 
            Asn1Null spare3;
            element = spare3 = Asn1Null.NULL_VALUE;
            spare3.decode (buffer);

            buffer.invokeCharacters(spare3.toString());
            break;
         }

         // spare2
         case 14: { 
            Asn1Null spare2;
            element = spare2 = Asn1Null.NULL_VALUE;
            spare2.decode (buffer);

            buffer.invokeCharacters(spare2.toString());
            break;
         }

         // spare1
         case 15: { 
            Asn1Null spare1;
            element = spare1 = Asn1Null.NULL_VALUE;
            spare1.decode (buffer);

            buffer.invokeCharacters(spare1.toString());
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // Encode choice index value

      buffer.encodeConsWholeNumber (choiceID - 1, 16, "index");

      buffer.getContext().eventDispatcher.startElement("getElemName()", -1);

      switch (choiceID) {
         // ulDedicatedMessageSegment_r16
         case _ULDEDICATEDMESSAGESEGMENT_R16:
            ULDedicatedMessageSegment_r16 ulDedicatedMessageSegment_r16 = (ULDedicatedMessageSegment_r16) element;
            ulDedicatedMessageSegment_r16.encode (buffer);
            break;

         // dedicatedSIBRequest_r16
         case _DEDICATEDSIBREQUEST_R16:
            DedicatedSIBRequest_r16 dedicatedSIBRequest_r16 = (DedicatedSIBRequest_r16) element;
            dedicatedSIBRequest_r16.encode (buffer);
            break;

         // mcgFailureInformation_r16
         case _MCGFAILUREINFORMATION_R16:
            MCGFailureInformation_r16 mcgFailureInformation_r16 = (MCGFailureInformation_r16) element;
            mcgFailureInformation_r16.encode (buffer);
            break;

         // ueInformationResponse_r16
         case _UEINFORMATIONRESPONSE_R16:
            UEInformationResponse_r16 ueInformationResponse_r16 = (UEInformationResponse_r16) element;
            ueInformationResponse_r16.encode (buffer);
            break;

         // sidelinkUEInformationNR_r16
         case _SIDELINKUEINFORMATIONNR_R16:
            SidelinkUEInformationNR_r16 sidelinkUEInformationNR_r16 = (SidelinkUEInformationNR_r16) element;
            sidelinkUEInformationNR_r16.encode (buffer);
            break;

         // ulInformationTransferIRAT_r16
         case _ULINFORMATIONTRANSFERIRAT_R16:
            ULInformationTransferIRAT_r16 ulInformationTransferIRAT_r16 = (ULInformationTransferIRAT_r16) element;
            ulInformationTransferIRAT_r16.encode (buffer);
            break;

         // iabOtherInformation_r16
         case _IABOTHERINFORMATION_R16:
            IABOtherInformation_r16 iabOtherInformation_r16 = (IABOtherInformation_r16) element;
            iabOtherInformation_r16.encode (buffer);
            break;

         // spare9
         case _SPARE9:
            Asn1Null spare9 = (Asn1Null) element;
            spare9.encode (buffer);
            break;

         // spare8
         case _SPARE8:
            Asn1Null spare8 = (Asn1Null) element;
            spare8.encode (buffer);
            break;

         // spare7
         case _SPARE7:
            Asn1Null spare7 = (Asn1Null) element;
            spare7.encode (buffer);
            break;

         // spare6
         case _SPARE6:
            Asn1Null spare6 = (Asn1Null) element;
            spare6.encode (buffer);
            break;

         // spare5
         case _SPARE5:
            Asn1Null spare5 = (Asn1Null) element;
            spare5.encode (buffer);
            break;

         // spare4
         case _SPARE4:
            Asn1Null spare4 = (Asn1Null) element;
            spare4.encode (buffer);
            break;

         // spare3
         case _SPARE3:
            Asn1Null spare3 = (Asn1Null) element;
            spare3.encode (buffer);
            break;

         // spare2
         case _SPARE2:
            Asn1Null spare2 = (Asn1Null) element;
            spare2.encode (buffer);
            break;

         // spare1
         case _SPARE1:
            Asn1Null spare1 = (Asn1Null) element;
            spare1.encode (buffer);
            break;

         default:
         throw new Asn1InvalidChoiceOptionException();
      }

      buffer.getContext().eventDispatcher.endElement("getElemName()", -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
