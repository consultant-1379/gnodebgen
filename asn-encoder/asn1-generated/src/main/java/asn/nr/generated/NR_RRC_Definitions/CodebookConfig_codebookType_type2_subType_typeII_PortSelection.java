/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CodebookConfig_codebookType_type2_subType_typeII_PortSelection extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CodebookConfig_codebookType_type2_subType_typeII_PortSelection_portSelectionSamplingSize portSelectionSamplingSize = null;  // optional
   public Asn1BitString typeII_PortSelectionRI_Restriction;

   public CodebookConfig_codebookType_type2_subType_typeII_PortSelection () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CodebookConfig_codebookType_type2_subType_typeII_PortSelection (
      CodebookConfig_codebookType_type2_subType_typeII_PortSelection_portSelectionSamplingSize portSelectionSamplingSize_,
      Asn1BitString typeII_PortSelectionRI_Restriction_
   ) {
      super();
      portSelectionSamplingSize = portSelectionSamplingSize_;
      typeII_PortSelectionRI_Restriction = typeII_PortSelectionRI_Restriction_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public CodebookConfig_codebookType_type2_subType_typeII_PortSelection (
      Asn1BitString typeII_PortSelectionRI_Restriction_
   ) {
      super();
      typeII_PortSelectionRI_Restriction = typeII_PortSelectionRI_Restriction_;
   }

   public void init () {
      portSelectionSamplingSize = null;
      typeII_PortSelectionRI_Restriction = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return portSelectionSamplingSize;
         case 1: return typeII_PortSelectionRI_Restriction;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "portSelectionSamplingSize";
         case 1: return "typeII-PortSelectionRI-Restriction";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean portSelectionSamplingSizePresent = buffer.decodeBit ("portSelectionSamplingSizePresent");

      // decode portSelectionSamplingSize

      if (portSelectionSamplingSizePresent) {
         buffer.getContext().eventDispatcher.startElement("portSelectionSamplingSize", -1);

         int tval = CodebookConfig_codebookType_type2_subType_typeII_PortSelection_portSelectionSamplingSize.decodeEnumValue (buffer);
         portSelectionSamplingSize = CodebookConfig_codebookType_type2_subType_typeII_PortSelection_portSelectionSamplingSize.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("portSelectionSamplingSize", -1);
      }
      else {
         portSelectionSamplingSize = null;
      }

      // decode typeII_PortSelectionRI_Restriction

      buffer.getContext().eventDispatcher.startElement("typeII_PortSelectionRI_Restriction", -1);

      typeII_PortSelectionRI_Restriction = new Asn1BitString();
      typeII_PortSelectionRI_Restriction.decode (buffer, 2, 2);

      buffer.invokeCharacters(typeII_PortSelectionRI_Restriction.toString());
      buffer.getContext().eventDispatcher.endElement("typeII_PortSelectionRI_Restriction", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((portSelectionSamplingSize != null), null);

      // encode portSelectionSamplingSize

      if (portSelectionSamplingSize != null) {
         buffer.getContext().eventDispatcher.startElement("portSelectionSamplingSize", -1);

         portSelectionSamplingSize.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("portSelectionSamplingSize", -1);
      }

      // encode typeII_PortSelectionRI_Restriction

      if (typeII_PortSelectionRI_Restriction != null) {
         buffer.getContext().eventDispatcher.startElement("typeII_PortSelectionRI_Restriction", -1);

         typeII_PortSelectionRI_Restriction.encode (buffer, 2, 2);

         buffer.getContext().eventDispatcher.endElement("typeII_PortSelectionRI_Restriction", -1);
      }
      else throw new Asn1MissingRequiredException ("typeII_PortSelectionRI_Restriction");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (portSelectionSamplingSize != null) portSelectionSamplingSize.print (_sb, "portSelectionSamplingSize", _level+1);
      if (typeII_PortSelectionRI_Restriction != null) typeII_PortSelectionRI_Restriction.print (_sb, "typeII_PortSelectionRI_Restriction", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
