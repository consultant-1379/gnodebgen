/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class FeatureSetUplink_v1610_ul_FullPwrMode2_TPMIGroup_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1BitString twoPorts_r16;  // optional
   public FeatureSetUplink_v1610_ul_FullPwrMode2_TPMIGroup_r16_fourPortsNonCoherent_r16 fourPortsNonCoherent_r16 = null;  // optional
   public FeatureSetUplink_v1610_ul_FullPwrMode2_TPMIGroup_r16_fourPortsPartialCoherent_r16 fourPortsPartialCoherent_r16 = null;  // optional

   public FeatureSetUplink_v1610_ul_FullPwrMode2_TPMIGroup_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public FeatureSetUplink_v1610_ul_FullPwrMode2_TPMIGroup_r16 (
      Asn1BitString twoPorts_r16_,
      FeatureSetUplink_v1610_ul_FullPwrMode2_TPMIGroup_r16_fourPortsNonCoherent_r16 fourPortsNonCoherent_r16_,
      FeatureSetUplink_v1610_ul_FullPwrMode2_TPMIGroup_r16_fourPortsPartialCoherent_r16 fourPortsPartialCoherent_r16_
   ) {
      super();
      twoPorts_r16 = twoPorts_r16_;
      fourPortsNonCoherent_r16 = fourPortsNonCoherent_r16_;
      fourPortsPartialCoherent_r16 = fourPortsPartialCoherent_r16_;
   }

   public void init () {
      twoPorts_r16 = null;
      fourPortsNonCoherent_r16 = null;
      fourPortsPartialCoherent_r16 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return twoPorts_r16;
         case 1: return fourPortsNonCoherent_r16;
         case 2: return fourPortsPartialCoherent_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "twoPorts-r16";
         case 1: return "fourPortsNonCoherent-r16";
         case 2: return "fourPortsPartialCoherent-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean twoPorts_r16Present = buffer.decodeBit ("twoPorts_r16Present");
      boolean fourPortsNonCoherent_r16Present = buffer.decodeBit ("fourPortsNonCoherent_r16Present");
      boolean fourPortsPartialCoherent_r16Present = buffer.decodeBit ("fourPortsPartialCoherent_r16Present");

      // decode twoPorts_r16

      if (twoPorts_r16Present) {
         buffer.getContext().eventDispatcher.startElement("twoPorts_r16", -1);

         twoPorts_r16 = new Asn1BitString();
         twoPorts_r16.decode (buffer, 2, 2);

         buffer.invokeCharacters(twoPorts_r16.toString());
         buffer.getContext().eventDispatcher.endElement("twoPorts_r16", -1);
      }
      else {
         twoPorts_r16 = null;
      }

      // decode fourPortsNonCoherent_r16

      if (fourPortsNonCoherent_r16Present) {
         buffer.getContext().eventDispatcher.startElement("fourPortsNonCoherent_r16", -1);

         int tval = FeatureSetUplink_v1610_ul_FullPwrMode2_TPMIGroup_r16_fourPortsNonCoherent_r16.decodeEnumValue (buffer);
         fourPortsNonCoherent_r16 = FeatureSetUplink_v1610_ul_FullPwrMode2_TPMIGroup_r16_fourPortsNonCoherent_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("fourPortsNonCoherent_r16", -1);
      }
      else {
         fourPortsNonCoherent_r16 = null;
      }

      // decode fourPortsPartialCoherent_r16

      if (fourPortsPartialCoherent_r16Present) {
         buffer.getContext().eventDispatcher.startElement("fourPortsPartialCoherent_r16", -1);

         int tval = FeatureSetUplink_v1610_ul_FullPwrMode2_TPMIGroup_r16_fourPortsPartialCoherent_r16.decodeEnumValue (buffer);
         fourPortsPartialCoherent_r16 = FeatureSetUplink_v1610_ul_FullPwrMode2_TPMIGroup_r16_fourPortsPartialCoherent_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("fourPortsPartialCoherent_r16", -1);
      }
      else {
         fourPortsPartialCoherent_r16 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((twoPorts_r16 != null), null);
      buffer.encodeBit ((fourPortsNonCoherent_r16 != null), null);
      buffer.encodeBit ((fourPortsPartialCoherent_r16 != null), null);

      // encode twoPorts_r16

      if (twoPorts_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("twoPorts_r16", -1);

         twoPorts_r16.encode (buffer, 2, 2);

         buffer.getContext().eventDispatcher.endElement("twoPorts_r16", -1);
      }

      // encode fourPortsNonCoherent_r16

      if (fourPortsNonCoherent_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("fourPortsNonCoherent_r16", -1);

         fourPortsNonCoherent_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("fourPortsNonCoherent_r16", -1);
      }

      // encode fourPortsPartialCoherent_r16

      if (fourPortsPartialCoherent_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("fourPortsPartialCoherent_r16", -1);

         fourPortsPartialCoherent_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("fourPortsPartialCoherent_r16", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (twoPorts_r16 != null) twoPorts_r16.print (_sb, "twoPorts_r16", _level+1);
      if (fourPortsNonCoherent_r16 != null) fourPortsNonCoherent_r16.print (_sb, "fourPortsNonCoherent_r16", _level+1);
      if (fourPortsPartialCoherent_r16 != null) fourPortsPartialCoherent_r16.print (_sb, "fourPortsPartialCoherent_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
