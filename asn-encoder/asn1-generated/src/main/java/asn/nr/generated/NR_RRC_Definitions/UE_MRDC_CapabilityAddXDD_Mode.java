/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UE_MRDC_CapabilityAddXDD_Mode extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UE-MRDC-CapabilityAddXDD-Mode";
   }

   public MeasAndMobParametersMRDC_XDD_Diff measAndMobParametersMRDC_XDD_Diff;  // optional
   public GeneralParametersMRDC_XDD_Diff generalParametersMRDC_XDD_Diff;  // optional

   public UE_MRDC_CapabilityAddXDD_Mode () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UE_MRDC_CapabilityAddXDD_Mode (
      MeasAndMobParametersMRDC_XDD_Diff measAndMobParametersMRDC_XDD_Diff_,
      GeneralParametersMRDC_XDD_Diff generalParametersMRDC_XDD_Diff_
   ) {
      super();
      measAndMobParametersMRDC_XDD_Diff = measAndMobParametersMRDC_XDD_Diff_;
      generalParametersMRDC_XDD_Diff = generalParametersMRDC_XDD_Diff_;
   }

   public void init () {
      measAndMobParametersMRDC_XDD_Diff = null;
      generalParametersMRDC_XDD_Diff = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return measAndMobParametersMRDC_XDD_Diff;
         case 1: return generalParametersMRDC_XDD_Diff;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "measAndMobParametersMRDC-XDD-Diff";
         case 1: return "generalParametersMRDC-XDD-Diff";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean measAndMobParametersMRDC_XDD_DiffPresent = buffer.decodeBit ("measAndMobParametersMRDC_XDD_DiffPresent");
      boolean generalParametersMRDC_XDD_DiffPresent = buffer.decodeBit ("generalParametersMRDC_XDD_DiffPresent");

      // decode measAndMobParametersMRDC_XDD_Diff

      if (measAndMobParametersMRDC_XDD_DiffPresent) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersMRDC_XDD_Diff", -1);

         measAndMobParametersMRDC_XDD_Diff = new MeasAndMobParametersMRDC_XDD_Diff();
         measAndMobParametersMRDC_XDD_Diff.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measAndMobParametersMRDC_XDD_Diff", -1);
      }
      else {
         measAndMobParametersMRDC_XDD_Diff = null;
      }

      // decode generalParametersMRDC_XDD_Diff

      if (generalParametersMRDC_XDD_DiffPresent) {
         buffer.getContext().eventDispatcher.startElement("generalParametersMRDC_XDD_Diff", -1);

         generalParametersMRDC_XDD_Diff = new GeneralParametersMRDC_XDD_Diff();
         generalParametersMRDC_XDD_Diff.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("generalParametersMRDC_XDD_Diff", -1);
      }
      else {
         generalParametersMRDC_XDD_Diff = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((measAndMobParametersMRDC_XDD_Diff != null), null);
      buffer.encodeBit ((generalParametersMRDC_XDD_Diff != null), null);

      // encode measAndMobParametersMRDC_XDD_Diff

      if (measAndMobParametersMRDC_XDD_Diff != null) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersMRDC_XDD_Diff", -1);

         measAndMobParametersMRDC_XDD_Diff.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("measAndMobParametersMRDC_XDD_Diff", -1);
      }

      // encode generalParametersMRDC_XDD_Diff

      if (generalParametersMRDC_XDD_Diff != null) {
         buffer.getContext().eventDispatcher.startElement("generalParametersMRDC_XDD_Diff", -1);

         generalParametersMRDC_XDD_Diff.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("generalParametersMRDC_XDD_Diff", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (measAndMobParametersMRDC_XDD_Diff != null) measAndMobParametersMRDC_XDD_Diff.print (_sb, "measAndMobParametersMRDC_XDD_Diff", _level+1);
      if (generalParametersMRDC_XDD_Diff != null) generalParametersMRDC_XDD_Diff.print (_sb, "generalParametersMRDC_XDD_Diff", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
