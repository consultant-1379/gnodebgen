/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class IntraFreqCAG_CellListPerPLMN_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "IntraFreqCAG-CellListPerPLMN-r16";
   }

   public Asn1Integer plmn_IdentityIndex_r16;
   public IntraFreqCAG_CellListPerPLMN_r16_cag_CellList_r16 cag_CellList_r16;

   public IntraFreqCAG_CellListPerPLMN_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public IntraFreqCAG_CellListPerPLMN_r16 (
      Asn1Integer plmn_IdentityIndex_r16_,
      IntraFreqCAG_CellListPerPLMN_r16_cag_CellList_r16 cag_CellList_r16_
   ) {
      super();
      plmn_IdentityIndex_r16 = plmn_IdentityIndex_r16_;
      cag_CellList_r16 = cag_CellList_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public IntraFreqCAG_CellListPerPLMN_r16 (long plmn_IdentityIndex_r16_,
      IntraFreqCAG_CellListPerPLMN_r16_cag_CellList_r16 cag_CellList_r16_
   ) {
      super();
      plmn_IdentityIndex_r16 = new Asn1Integer (plmn_IdentityIndex_r16_);
      cag_CellList_r16 = cag_CellList_r16_;
   }

   public void init () {
      plmn_IdentityIndex_r16 = null;
      cag_CellList_r16 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return plmn_IdentityIndex_r16;
         case 1: return cag_CellList_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "plmn-IdentityIndex-r16";
         case 1: return "cag-CellList-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode plmn_IdentityIndex_r16

      buffer.getContext().eventDispatcher.startElement("plmn_IdentityIndex_r16", -1);

      plmn_IdentityIndex_r16 = new Asn1Integer();
      plmn_IdentityIndex_r16.decode (buffer, 1, 12);

      buffer.invokeCharacters(plmn_IdentityIndex_r16.toString());
      buffer.getContext().eventDispatcher.endElement("plmn_IdentityIndex_r16", -1);

      // decode cag_CellList_r16

      buffer.getContext().eventDispatcher.startElement("cag_CellList_r16", -1);

      cag_CellList_r16 = new IntraFreqCAG_CellListPerPLMN_r16_cag_CellList_r16();
      cag_CellList_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("cag_CellList_r16", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode plmn_IdentityIndex_r16

      if (plmn_IdentityIndex_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("plmn_IdentityIndex_r16", -1);

         plmn_IdentityIndex_r16.encode (buffer, 1, 12);

         buffer.getContext().eventDispatcher.endElement("plmn_IdentityIndex_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("plmn_IdentityIndex_r16");

      // encode cag_CellList_r16

      if (cag_CellList_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("cag_CellList_r16", -1);

         cag_CellList_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("cag_CellList_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("cag_CellList_r16");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (plmn_IdentityIndex_r16 != null) plmn_IdentityIndex_r16.print (_sb, "plmn_IdentityIndex_r16", _level+1);
      if (cag_CellList_r16 != null) cag_CellList_r16.print (_sb, "cag_CellList_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
