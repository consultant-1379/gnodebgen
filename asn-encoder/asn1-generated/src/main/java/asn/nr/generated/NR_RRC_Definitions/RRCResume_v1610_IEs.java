/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RRCResume_v1610_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RRCResume-v1610-IEs";
   }

   public RRCResume_v1610_IEs_idleModeMeasurementReq_r16 idleModeMeasurementReq_r16 = null;  // optional
   public RRCResume_v1610_IEs_restoreMCG_SCells_r16 restoreMCG_SCells_r16 = null;  // optional
   public RRCResume_v1610_IEs_restoreSCG_r16 restoreSCG_r16 = null;  // optional
   public RRCResume_v1610_IEs_mrdc_SecondaryCellGroup_r16 mrdc_SecondaryCellGroup_r16;  // optional
   public RRCResume_v1610_IEs_needForGapsConfigNR_r16 needForGapsConfigNR_r16;  // optional
   public RRCResume_v1610_IEs_nonCriticalExtension nonCriticalExtension;  // optional

   public RRCResume_v1610_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RRCResume_v1610_IEs (
      RRCResume_v1610_IEs_idleModeMeasurementReq_r16 idleModeMeasurementReq_r16_,
      RRCResume_v1610_IEs_restoreMCG_SCells_r16 restoreMCG_SCells_r16_,
      RRCResume_v1610_IEs_restoreSCG_r16 restoreSCG_r16_,
      RRCResume_v1610_IEs_mrdc_SecondaryCellGroup_r16 mrdc_SecondaryCellGroup_r16_,
      RRCResume_v1610_IEs_needForGapsConfigNR_r16 needForGapsConfigNR_r16_,
      RRCResume_v1610_IEs_nonCriticalExtension nonCriticalExtension_
   ) {
      super();
      idleModeMeasurementReq_r16 = idleModeMeasurementReq_r16_;
      restoreMCG_SCells_r16 = restoreMCG_SCells_r16_;
      restoreSCG_r16 = restoreSCG_r16_;
      mrdc_SecondaryCellGroup_r16 = mrdc_SecondaryCellGroup_r16_;
      needForGapsConfigNR_r16 = needForGapsConfigNR_r16_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      idleModeMeasurementReq_r16 = null;
      restoreMCG_SCells_r16 = null;
      restoreSCG_r16 = null;
      mrdc_SecondaryCellGroup_r16 = null;
      needForGapsConfigNR_r16 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return idleModeMeasurementReq_r16;
         case 1: return restoreMCG_SCells_r16;
         case 2: return restoreSCG_r16;
         case 3: return mrdc_SecondaryCellGroup_r16;
         case 4: return needForGapsConfigNR_r16;
         case 5: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "idleModeMeasurementReq-r16";
         case 1: return "restoreMCG-SCells-r16";
         case 2: return "restoreSCG-r16";
         case 3: return "mrdc-SecondaryCellGroup-r16";
         case 4: return "needForGapsConfigNR-r16";
         case 5: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean idleModeMeasurementReq_r16Present = buffer.decodeBit ("idleModeMeasurementReq_r16Present");
      boolean restoreMCG_SCells_r16Present = buffer.decodeBit ("restoreMCG_SCells_r16Present");
      boolean restoreSCG_r16Present = buffer.decodeBit ("restoreSCG_r16Present");
      boolean mrdc_SecondaryCellGroup_r16Present = buffer.decodeBit ("mrdc_SecondaryCellGroup_r16Present");
      boolean needForGapsConfigNR_r16Present = buffer.decodeBit ("needForGapsConfigNR_r16Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode idleModeMeasurementReq_r16

      if (idleModeMeasurementReq_r16Present) {
         buffer.getContext().eventDispatcher.startElement("idleModeMeasurementReq_r16", -1);

         int tval = RRCResume_v1610_IEs_idleModeMeasurementReq_r16.decodeEnumValue (buffer);
         idleModeMeasurementReq_r16 = RRCResume_v1610_IEs_idleModeMeasurementReq_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("idleModeMeasurementReq_r16", -1);
      }
      else {
         idleModeMeasurementReq_r16 = null;
      }

      // decode restoreMCG_SCells_r16

      if (restoreMCG_SCells_r16Present) {
         buffer.getContext().eventDispatcher.startElement("restoreMCG_SCells_r16", -1);

         int tval = RRCResume_v1610_IEs_restoreMCG_SCells_r16.decodeEnumValue (buffer);
         restoreMCG_SCells_r16 = RRCResume_v1610_IEs_restoreMCG_SCells_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("restoreMCG_SCells_r16", -1);
      }
      else {
         restoreMCG_SCells_r16 = null;
      }

      // decode restoreSCG_r16

      if (restoreSCG_r16Present) {
         buffer.getContext().eventDispatcher.startElement("restoreSCG_r16", -1);

         int tval = RRCResume_v1610_IEs_restoreSCG_r16.decodeEnumValue (buffer);
         restoreSCG_r16 = RRCResume_v1610_IEs_restoreSCG_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("restoreSCG_r16", -1);
      }
      else {
         restoreSCG_r16 = null;
      }

      // decode mrdc_SecondaryCellGroup_r16

      if (mrdc_SecondaryCellGroup_r16Present) {
         buffer.getContext().eventDispatcher.startElement("mrdc_SecondaryCellGroup_r16", -1);

         mrdc_SecondaryCellGroup_r16 = new RRCResume_v1610_IEs_mrdc_SecondaryCellGroup_r16();
         mrdc_SecondaryCellGroup_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mrdc_SecondaryCellGroup_r16", -1);
      }
      else {
         mrdc_SecondaryCellGroup_r16 = null;
      }

      // decode needForGapsConfigNR_r16

      if (needForGapsConfigNR_r16Present) {
         buffer.getContext().eventDispatcher.startElement("needForGapsConfigNR_r16", -1);

         needForGapsConfigNR_r16 = new RRCResume_v1610_IEs_needForGapsConfigNR_r16();
         needForGapsConfigNR_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("needForGapsConfigNR_r16", -1);
      }
      else {
         needForGapsConfigNR_r16 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new RRCResume_v1610_IEs_nonCriticalExtension();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((idleModeMeasurementReq_r16 != null), null);
      buffer.encodeBit ((restoreMCG_SCells_r16 != null), null);
      buffer.encodeBit ((restoreSCG_r16 != null), null);
      buffer.encodeBit ((mrdc_SecondaryCellGroup_r16 != null), null);
      buffer.encodeBit ((needForGapsConfigNR_r16 != null), null);
      buffer.encodeBit ((nonCriticalExtension != null), null);

      // encode idleModeMeasurementReq_r16

      if (idleModeMeasurementReq_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("idleModeMeasurementReq_r16", -1);

         idleModeMeasurementReq_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("idleModeMeasurementReq_r16", -1);
      }

      // encode restoreMCG_SCells_r16

      if (restoreMCG_SCells_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("restoreMCG_SCells_r16", -1);

         restoreMCG_SCells_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("restoreMCG_SCells_r16", -1);
      }

      // encode restoreSCG_r16

      if (restoreSCG_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("restoreSCG_r16", -1);

         restoreSCG_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("restoreSCG_r16", -1);
      }

      // encode mrdc_SecondaryCellGroup_r16

      if (mrdc_SecondaryCellGroup_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("mrdc_SecondaryCellGroup_r16", -1);

         mrdc_SecondaryCellGroup_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("mrdc_SecondaryCellGroup_r16", -1);
      }

      // encode needForGapsConfigNR_r16

      if (needForGapsConfigNR_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("needForGapsConfigNR_r16", -1);

         needForGapsConfigNR_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("needForGapsConfigNR_r16", -1);
      }

      // encode nonCriticalExtension

      if (nonCriticalExtension != null) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (idleModeMeasurementReq_r16 != null) idleModeMeasurementReq_r16.print (_sb, "idleModeMeasurementReq_r16", _level+1);
      if (restoreMCG_SCells_r16 != null) restoreMCG_SCells_r16.print (_sb, "restoreMCG_SCells_r16", _level+1);
      if (restoreSCG_r16 != null) restoreSCG_r16.print (_sb, "restoreSCG_r16", _level+1);
      if (mrdc_SecondaryCellGroup_r16 != null) mrdc_SecondaryCellGroup_r16.print (_sb, "mrdc_SecondaryCellGroup_r16", _level+1);
      if (needForGapsConfigNR_r16 != null) needForGapsConfigNR_r16.print (_sb, "needForGapsConfigNR_r16", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
