/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;
import asn.nr.generated.NR_RRC_Definitions.P_Max;

public class ConfigRestrictInfoDAPS_r16_powerCoordination_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public P_Max p_DAPS_Source_r16;
   public P_Max p_DAPS_Target_r16;
   public ConfigRestrictInfoDAPS_r16_powerCoordination_r16_uplinkPowerSharingDAPS_Mode_r16 uplinkPowerSharingDAPS_Mode_r16 = null;

   public ConfigRestrictInfoDAPS_r16_powerCoordination_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public ConfigRestrictInfoDAPS_r16_powerCoordination_r16 (
      P_Max p_DAPS_Source_r16_,
      P_Max p_DAPS_Target_r16_,
      ConfigRestrictInfoDAPS_r16_powerCoordination_r16_uplinkPowerSharingDAPS_Mode_r16 uplinkPowerSharingDAPS_Mode_r16_
   ) {
      super();
      p_DAPS_Source_r16 = p_DAPS_Source_r16_;
      p_DAPS_Target_r16 = p_DAPS_Target_r16_;
      uplinkPowerSharingDAPS_Mode_r16 = uplinkPowerSharingDAPS_Mode_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public ConfigRestrictInfoDAPS_r16_powerCoordination_r16 (long p_DAPS_Source_r16_,
      long p_DAPS_Target_r16_,
      ConfigRestrictInfoDAPS_r16_powerCoordination_r16_uplinkPowerSharingDAPS_Mode_r16 uplinkPowerSharingDAPS_Mode_r16_
   ) {
      super();
      p_DAPS_Source_r16 = new P_Max (p_DAPS_Source_r16_);
      p_DAPS_Target_r16 = new P_Max (p_DAPS_Target_r16_);
      uplinkPowerSharingDAPS_Mode_r16 = uplinkPowerSharingDAPS_Mode_r16_;
   }

   public void init () {
      p_DAPS_Source_r16 = null;
      p_DAPS_Target_r16 = null;
      uplinkPowerSharingDAPS_Mode_r16 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return p_DAPS_Source_r16;
         case 1: return p_DAPS_Target_r16;
         case 2: return uplinkPowerSharingDAPS_Mode_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "p-DAPS-Source-r16";
         case 1: return "p-DAPS-Target-r16";
         case 2: return "uplinkPowerSharingDAPS-Mode-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode p_DAPS_Source_r16

      buffer.getContext().eventDispatcher.startElement("p_DAPS_Source_r16", -1);

      p_DAPS_Source_r16 = new P_Max();
      p_DAPS_Source_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("p_DAPS_Source_r16", -1);

      // decode p_DAPS_Target_r16

      buffer.getContext().eventDispatcher.startElement("p_DAPS_Target_r16", -1);

      p_DAPS_Target_r16 = new P_Max();
      p_DAPS_Target_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("p_DAPS_Target_r16", -1);

      // decode uplinkPowerSharingDAPS_Mode_r16

      buffer.getContext().eventDispatcher.startElement("uplinkPowerSharingDAPS_Mode_r16", -1);

      {
         int tval = ConfigRestrictInfoDAPS_r16_powerCoordination_r16_uplinkPowerSharingDAPS_Mode_r16.decodeEnumValue (buffer);
         uplinkPowerSharingDAPS_Mode_r16 = ConfigRestrictInfoDAPS_r16_powerCoordination_r16_uplinkPowerSharingDAPS_Mode_r16.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("uplinkPowerSharingDAPS_Mode_r16", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode p_DAPS_Source_r16

      if (p_DAPS_Source_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("p_DAPS_Source_r16", -1);

         p_DAPS_Source_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("p_DAPS_Source_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("p_DAPS_Source_r16");

      // encode p_DAPS_Target_r16

      if (p_DAPS_Target_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("p_DAPS_Target_r16", -1);

         p_DAPS_Target_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("p_DAPS_Target_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("p_DAPS_Target_r16");

      // encode uplinkPowerSharingDAPS_Mode_r16

      if (uplinkPowerSharingDAPS_Mode_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("uplinkPowerSharingDAPS_Mode_r16", -1);

         uplinkPowerSharingDAPS_Mode_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("uplinkPowerSharingDAPS_Mode_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("uplinkPowerSharingDAPS_Mode_r16");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (p_DAPS_Source_r16 != null) p_DAPS_Source_r16.print (_sb, "p_DAPS_Source_r16", _level+1);
      if (p_DAPS_Target_r16 != null) p_DAPS_Target_r16.print (_sb, "p_DAPS_Target_r16", _level+1);
      if (uplinkPowerSharingDAPS_Mode_r16 != null) uplinkPowerSharingDAPS_Mode_r16.print (_sb, "uplinkPowerSharingDAPS_Mode_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
