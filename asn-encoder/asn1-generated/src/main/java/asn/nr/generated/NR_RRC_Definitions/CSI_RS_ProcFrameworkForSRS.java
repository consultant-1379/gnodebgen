/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CSI_RS_ProcFrameworkForSRS extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CSI-RS-ProcFrameworkForSRS";
   }

   public Asn1Integer maxNumberPeriodicSRS_AssocCSI_RS_PerBWP;
   public Asn1Integer maxNumberAperiodicSRS_AssocCSI_RS_PerBWP;
   public Asn1Integer maxNumberSP_SRS_AssocCSI_RS_PerBWP;
   public Asn1Integer simultaneousSRS_AssocCSI_RS_PerCC;

   public CSI_RS_ProcFrameworkForSRS () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CSI_RS_ProcFrameworkForSRS (
      Asn1Integer maxNumberPeriodicSRS_AssocCSI_RS_PerBWP_,
      Asn1Integer maxNumberAperiodicSRS_AssocCSI_RS_PerBWP_,
      Asn1Integer maxNumberSP_SRS_AssocCSI_RS_PerBWP_,
      Asn1Integer simultaneousSRS_AssocCSI_RS_PerCC_
   ) {
      super();
      maxNumberPeriodicSRS_AssocCSI_RS_PerBWP = maxNumberPeriodicSRS_AssocCSI_RS_PerBWP_;
      maxNumberAperiodicSRS_AssocCSI_RS_PerBWP = maxNumberAperiodicSRS_AssocCSI_RS_PerBWP_;
      maxNumberSP_SRS_AssocCSI_RS_PerBWP = maxNumberSP_SRS_AssocCSI_RS_PerBWP_;
      simultaneousSRS_AssocCSI_RS_PerCC = simultaneousSRS_AssocCSI_RS_PerCC_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CSI_RS_ProcFrameworkForSRS (long maxNumberPeriodicSRS_AssocCSI_RS_PerBWP_,
      long maxNumberAperiodicSRS_AssocCSI_RS_PerBWP_,
      long maxNumberSP_SRS_AssocCSI_RS_PerBWP_,
      long simultaneousSRS_AssocCSI_RS_PerCC_
   ) {
      super();
      maxNumberPeriodicSRS_AssocCSI_RS_PerBWP = new Asn1Integer (maxNumberPeriodicSRS_AssocCSI_RS_PerBWP_);
      maxNumberAperiodicSRS_AssocCSI_RS_PerBWP = new Asn1Integer (maxNumberAperiodicSRS_AssocCSI_RS_PerBWP_);
      maxNumberSP_SRS_AssocCSI_RS_PerBWP = new Asn1Integer (maxNumberSP_SRS_AssocCSI_RS_PerBWP_);
      simultaneousSRS_AssocCSI_RS_PerCC = new Asn1Integer (simultaneousSRS_AssocCSI_RS_PerCC_);
   }

   public void init () {
      maxNumberPeriodicSRS_AssocCSI_RS_PerBWP = null;
      maxNumberAperiodicSRS_AssocCSI_RS_PerBWP = null;
      maxNumberSP_SRS_AssocCSI_RS_PerBWP = null;
      simultaneousSRS_AssocCSI_RS_PerCC = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return maxNumberPeriodicSRS_AssocCSI_RS_PerBWP;
         case 1: return maxNumberAperiodicSRS_AssocCSI_RS_PerBWP;
         case 2: return maxNumberSP_SRS_AssocCSI_RS_PerBWP;
         case 3: return simultaneousSRS_AssocCSI_RS_PerCC;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "maxNumberPeriodicSRS-AssocCSI-RS-PerBWP";
         case 1: return "maxNumberAperiodicSRS-AssocCSI-RS-PerBWP";
         case 2: return "maxNumberSP-SRS-AssocCSI-RS-PerBWP";
         case 3: return "simultaneousSRS-AssocCSI-RS-PerCC";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode maxNumberPeriodicSRS_AssocCSI_RS_PerBWP

      buffer.getContext().eventDispatcher.startElement("maxNumberPeriodicSRS_AssocCSI_RS_PerBWP", -1);

      maxNumberPeriodicSRS_AssocCSI_RS_PerBWP = new Asn1Integer();
      maxNumberPeriodicSRS_AssocCSI_RS_PerBWP.decode (buffer, 1, 4);

      buffer.invokeCharacters(maxNumberPeriodicSRS_AssocCSI_RS_PerBWP.toString());
      buffer.getContext().eventDispatcher.endElement("maxNumberPeriodicSRS_AssocCSI_RS_PerBWP", -1);

      // decode maxNumberAperiodicSRS_AssocCSI_RS_PerBWP

      buffer.getContext().eventDispatcher.startElement("maxNumberAperiodicSRS_AssocCSI_RS_PerBWP", -1);

      maxNumberAperiodicSRS_AssocCSI_RS_PerBWP = new Asn1Integer();
      maxNumberAperiodicSRS_AssocCSI_RS_PerBWP.decode (buffer, 1, 4);

      buffer.invokeCharacters(maxNumberAperiodicSRS_AssocCSI_RS_PerBWP.toString());
      buffer.getContext().eventDispatcher.endElement("maxNumberAperiodicSRS_AssocCSI_RS_PerBWP", -1);

      // decode maxNumberSP_SRS_AssocCSI_RS_PerBWP

      buffer.getContext().eventDispatcher.startElement("maxNumberSP_SRS_AssocCSI_RS_PerBWP", -1);

      maxNumberSP_SRS_AssocCSI_RS_PerBWP = new Asn1Integer();
      maxNumberSP_SRS_AssocCSI_RS_PerBWP.decode (buffer, 0, 4);

      buffer.invokeCharacters(maxNumberSP_SRS_AssocCSI_RS_PerBWP.toString());
      buffer.getContext().eventDispatcher.endElement("maxNumberSP_SRS_AssocCSI_RS_PerBWP", -1);

      // decode simultaneousSRS_AssocCSI_RS_PerCC

      buffer.getContext().eventDispatcher.startElement("simultaneousSRS_AssocCSI_RS_PerCC", -1);

      simultaneousSRS_AssocCSI_RS_PerCC = new Asn1Integer();
      simultaneousSRS_AssocCSI_RS_PerCC.decode (buffer, 1, 8);

      buffer.invokeCharacters(simultaneousSRS_AssocCSI_RS_PerCC.toString());
      buffer.getContext().eventDispatcher.endElement("simultaneousSRS_AssocCSI_RS_PerCC", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode maxNumberPeriodicSRS_AssocCSI_RS_PerBWP

      if (maxNumberPeriodicSRS_AssocCSI_RS_PerBWP != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberPeriodicSRS_AssocCSI_RS_PerBWP", -1);

         maxNumberPeriodicSRS_AssocCSI_RS_PerBWP.encode (buffer, 1, 4);

         buffer.getContext().eventDispatcher.endElement("maxNumberPeriodicSRS_AssocCSI_RS_PerBWP", -1);
      }
      else throw new Asn1MissingRequiredException ("maxNumberPeriodicSRS_AssocCSI_RS_PerBWP");

      // encode maxNumberAperiodicSRS_AssocCSI_RS_PerBWP

      if (maxNumberAperiodicSRS_AssocCSI_RS_PerBWP != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberAperiodicSRS_AssocCSI_RS_PerBWP", -1);

         maxNumberAperiodicSRS_AssocCSI_RS_PerBWP.encode (buffer, 1, 4);

         buffer.getContext().eventDispatcher.endElement("maxNumberAperiodicSRS_AssocCSI_RS_PerBWP", -1);
      }
      else throw new Asn1MissingRequiredException ("maxNumberAperiodicSRS_AssocCSI_RS_PerBWP");

      // encode maxNumberSP_SRS_AssocCSI_RS_PerBWP

      if (maxNumberSP_SRS_AssocCSI_RS_PerBWP != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberSP_SRS_AssocCSI_RS_PerBWP", -1);

         maxNumberSP_SRS_AssocCSI_RS_PerBWP.encode (buffer, 0, 4);

         buffer.getContext().eventDispatcher.endElement("maxNumberSP_SRS_AssocCSI_RS_PerBWP", -1);
      }
      else throw new Asn1MissingRequiredException ("maxNumberSP_SRS_AssocCSI_RS_PerBWP");

      // encode simultaneousSRS_AssocCSI_RS_PerCC

      if (simultaneousSRS_AssocCSI_RS_PerCC != null) {
         buffer.getContext().eventDispatcher.startElement("simultaneousSRS_AssocCSI_RS_PerCC", -1);

         simultaneousSRS_AssocCSI_RS_PerCC.encode (buffer, 1, 8);

         buffer.getContext().eventDispatcher.endElement("simultaneousSRS_AssocCSI_RS_PerCC", -1);
      }
      else throw new Asn1MissingRequiredException ("simultaneousSRS_AssocCSI_RS_PerCC");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (maxNumberPeriodicSRS_AssocCSI_RS_PerBWP != null) maxNumberPeriodicSRS_AssocCSI_RS_PerBWP.print (_sb, "maxNumberPeriodicSRS_AssocCSI_RS_PerBWP", _level+1);
      if (maxNumberAperiodicSRS_AssocCSI_RS_PerBWP != null) maxNumberAperiodicSRS_AssocCSI_RS_PerBWP.print (_sb, "maxNumberAperiodicSRS_AssocCSI_RS_PerBWP", _level+1);
      if (maxNumberSP_SRS_AssocCSI_RS_PerBWP != null) maxNumberSP_SRS_AssocCSI_RS_PerBWP.print (_sb, "maxNumberSP_SRS_AssocCSI_RS_PerBWP", _level+1);
      if (simultaneousSRS_AssocCSI_RS_PerCC != null) simultaneousSRS_AssocCSI_RS_PerCC.print (_sb, "simultaneousSRS_AssocCSI_RS_PerCC", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
