/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MeasAndMobParameters extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MeasAndMobParameters";
   }

   public MeasAndMobParametersCommon measAndMobParametersCommon;  // optional
   public MeasAndMobParametersXDD_Diff measAndMobParametersXDD_Diff;  // optional
   public MeasAndMobParametersFRX_Diff measAndMobParametersFRX_Diff;  // optional

   public MeasAndMobParameters () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasAndMobParameters (
      MeasAndMobParametersCommon measAndMobParametersCommon_,
      MeasAndMobParametersXDD_Diff measAndMobParametersXDD_Diff_,
      MeasAndMobParametersFRX_Diff measAndMobParametersFRX_Diff_
   ) {
      super();
      measAndMobParametersCommon = measAndMobParametersCommon_;
      measAndMobParametersXDD_Diff = measAndMobParametersXDD_Diff_;
      measAndMobParametersFRX_Diff = measAndMobParametersFRX_Diff_;
   }

   public void init () {
      measAndMobParametersCommon = null;
      measAndMobParametersXDD_Diff = null;
      measAndMobParametersFRX_Diff = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return measAndMobParametersCommon;
         case 1: return measAndMobParametersXDD_Diff;
         case 2: return measAndMobParametersFRX_Diff;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "measAndMobParametersCommon";
         case 1: return "measAndMobParametersXDD-Diff";
         case 2: return "measAndMobParametersFRX-Diff";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean measAndMobParametersCommonPresent = buffer.decodeBit ("measAndMobParametersCommonPresent");
      boolean measAndMobParametersXDD_DiffPresent = buffer.decodeBit ("measAndMobParametersXDD_DiffPresent");
      boolean measAndMobParametersFRX_DiffPresent = buffer.decodeBit ("measAndMobParametersFRX_DiffPresent");

      // decode measAndMobParametersCommon

      if (measAndMobParametersCommonPresent) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersCommon", -1);

         measAndMobParametersCommon = new MeasAndMobParametersCommon();
         measAndMobParametersCommon.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measAndMobParametersCommon", -1);
      }
      else {
         measAndMobParametersCommon = null;
      }

      // decode measAndMobParametersXDD_Diff

      if (measAndMobParametersXDD_DiffPresent) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersXDD_Diff", -1);

         measAndMobParametersXDD_Diff = new MeasAndMobParametersXDD_Diff();
         measAndMobParametersXDD_Diff.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measAndMobParametersXDD_Diff", -1);
      }
      else {
         measAndMobParametersXDD_Diff = null;
      }

      // decode measAndMobParametersFRX_Diff

      if (measAndMobParametersFRX_DiffPresent) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersFRX_Diff", -1);

         measAndMobParametersFRX_Diff = new MeasAndMobParametersFRX_Diff();
         measAndMobParametersFRX_Diff.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measAndMobParametersFRX_Diff", -1);
      }
      else {
         measAndMobParametersFRX_Diff = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((measAndMobParametersCommon != null), null);
      buffer.encodeBit ((measAndMobParametersXDD_Diff != null), null);
      buffer.encodeBit ((measAndMobParametersFRX_Diff != null), null);

      // encode measAndMobParametersCommon

      if (measAndMobParametersCommon != null) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersCommon", -1);

         measAndMobParametersCommon.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("measAndMobParametersCommon", -1);
      }

      // encode measAndMobParametersXDD_Diff

      if (measAndMobParametersXDD_Diff != null) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersXDD_Diff", -1);

         measAndMobParametersXDD_Diff.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("measAndMobParametersXDD_Diff", -1);
      }

      // encode measAndMobParametersFRX_Diff

      if (measAndMobParametersFRX_Diff != null) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersFRX_Diff", -1);

         measAndMobParametersFRX_Diff.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("measAndMobParametersFRX_Diff", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (measAndMobParametersCommon != null) measAndMobParametersCommon.print (_sb, "measAndMobParametersCommon", _level+1);
      if (measAndMobParametersXDD_Diff != null) measAndMobParametersXDD_Diff.print (_sb, "measAndMobParametersXDD_Diff", _level+1);
      if (measAndMobParametersFRX_Diff != null) measAndMobParametersFRX_Diff.print (_sb, "measAndMobParametersFRX_Diff", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
