/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _B56 = 0;
   public static final int _B144 = 1;
   public static final int _B208 = 2;
   public static final int _B256 = 3;
   public static final int _B282 = 4;
   public static final int _B480 = 5;
   public static final int _B640 = 6;
   public static final int _B800 = 7;
   public static final int _B1000 = 8;
   public static final int _B72 = 9;
   public static final int _SPARE6 = 10;
   public static final int _SPARE5 = 11;
   public static final int _SPARE4 = 12;
   public static final int _SPARE3 = 13;
   public static final int _SPARE2 = 14;
   public static final int _SPARE1 = 15;

   // Singleton instances of RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _b56 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(0);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _b144 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(1);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _b208 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(2);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _b256 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(3);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _b282 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(4);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _b480 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(5);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _b640 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(6);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _b800 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(7);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _b1000 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(8);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _b72 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(9);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _spare6 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(10);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _spare5 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(11);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _spare4 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(12);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _spare3 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(13);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _spare2 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(14);
   protected static final RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA _spare1 = new RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA(15);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    */
   protected RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for b56.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA b56() {
      return _b56;
   }

   /**
    * Singleton accessor method for b144.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA b144() {
      return _b144;
   }

   /**
    * Singleton accessor method for b208.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA b208() {
      return _b208;
   }

   /**
    * Singleton accessor method for b256.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA b256() {
      return _b256;
   }

   /**
    * Singleton accessor method for b282.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA b282() {
      return _b282;
   }

   /**
    * Singleton accessor method for b480.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA b480() {
      return _b480;
   }

   /**
    * Singleton accessor method for b640.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA b640() {
      return _b640;
   }

   /**
    * Singleton accessor method for b800.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA b800() {
      return _b800;
   }

   /**
    * Singleton accessor method for b1000.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA b1000() {
      return _b1000;
   }

   /**
    * Singleton accessor method for b72.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA b72() {
      return _b72;
   }

   /**
    * Singleton accessor method for spare6.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA spare6() {
      return _spare6;
   }

   /**
    * Singleton accessor method for spare5.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA spare5() {
      return _spare5;
   }

   /**
    * Singleton accessor method for spare4.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA spare4() {
      return _spare4;
   }

   /**
    * Singleton accessor method for spare3.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA spare3() {
      return _spare3;
   }

   /**
    * Singleton accessor method for spare2.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA spare2() {
      return _spare2;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA spare1() {
      return _spare1;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA.valueOf( RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return b56();
         case 1: return b144();
         case 2: return b208();
         case 3: return b256();
         case 4: return b282();
         case 5: return b480();
         case 6: return b640();
         case 7: return b800();
         case 8: return b1000();
         case 9: return b72();
         case 10: return spare6();
         case 11: return spare5();
         case 12: return spare4();
         case 13: return spare3();
         case 14: return spare2();
         case 15: return spare1();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (16);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA.valueOf(ret).toString());

      return ret;
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      switch ((int)value) {
         case 0: ui = 0; /* b56 */break;
         case 1: ui = 1; /* b144 */break;
         case 2: ui = 2; /* b208 */break;
         case 3: ui = 3; /* b256 */break;
         case 4: ui = 4; /* b282 */break;
         case 5: ui = 5; /* b480 */break;
         case 6: ui = 6; /* b640 */break;
         case 7: ui = 7; /* b800 */break;
         case 8: ui = 8; /* b1000 */break;
         case 9: ui = 9; /* b72 */break;
         case 10: ui = 10; /* spare6 */break;
         case 11: ui = 11; /* spare5 */break;
         case 12: ui = 12; /* spare4 */break;
         case 13: ui = 13; /* spare3 */break;
         case 14: ui = 14; /* spare2 */break;
         case 15: ui = 15; /* spare1 */break;
         default:
            throw new Asn1InvalidEnumException (value);
      }

      buffer.encodeConsWholeNumber (ui, 16);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("b56");
         case 1: return ("b144");
         case 2: return ("b208");
         case 3: return ("b256");
         case 4: return ("b282");
         case 5: return ("b480");
         case 6: return ("b640");
         case 7: return ("b800");
         case 8: return ("b1000");
         case 9: return ("b72");
         case 10: return ("spare6");
         case 11: return ("spare5");
         case 12: return ("spare4");
         case 13: return ("spare3");
         case 14: return ("spare2");
         case 15: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
