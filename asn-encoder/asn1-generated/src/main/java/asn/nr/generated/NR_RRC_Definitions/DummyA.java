/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class DummyA extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "DummyA";
   }

   public Asn1Integer maxNumberNZP_CSI_RS_PerCC;
   public DummyA_maxNumberPortsAcrossNZP_CSI_RS_PerCC maxNumberPortsAcrossNZP_CSI_RS_PerCC = null;
   public DummyA_maxNumberCS_IM_PerCC maxNumberCS_IM_PerCC = null;
   public DummyA_maxNumberSimultaneousCSI_RS_ActBWP_AllCC maxNumberSimultaneousCSI_RS_ActBWP_AllCC = null;
   public DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC = null;

   public DummyA () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public DummyA (
      Asn1Integer maxNumberNZP_CSI_RS_PerCC_,
      DummyA_maxNumberPortsAcrossNZP_CSI_RS_PerCC maxNumberPortsAcrossNZP_CSI_RS_PerCC_,
      DummyA_maxNumberCS_IM_PerCC maxNumberCS_IM_PerCC_,
      DummyA_maxNumberSimultaneousCSI_RS_ActBWP_AllCC maxNumberSimultaneousCSI_RS_ActBWP_AllCC_,
      DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC_
   ) {
      super();
      maxNumberNZP_CSI_RS_PerCC = maxNumberNZP_CSI_RS_PerCC_;
      maxNumberPortsAcrossNZP_CSI_RS_PerCC = maxNumberPortsAcrossNZP_CSI_RS_PerCC_;
      maxNumberCS_IM_PerCC = maxNumberCS_IM_PerCC_;
      maxNumberSimultaneousCSI_RS_ActBWP_AllCC = maxNumberSimultaneousCSI_RS_ActBWP_AllCC_;
      totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC = totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public DummyA (long maxNumberNZP_CSI_RS_PerCC_,
      DummyA_maxNumberPortsAcrossNZP_CSI_RS_PerCC maxNumberPortsAcrossNZP_CSI_RS_PerCC_,
      DummyA_maxNumberCS_IM_PerCC maxNumberCS_IM_PerCC_,
      DummyA_maxNumberSimultaneousCSI_RS_ActBWP_AllCC maxNumberSimultaneousCSI_RS_ActBWP_AllCC_,
      DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC_
   ) {
      super();
      maxNumberNZP_CSI_RS_PerCC = new Asn1Integer (maxNumberNZP_CSI_RS_PerCC_);
      maxNumberPortsAcrossNZP_CSI_RS_PerCC = maxNumberPortsAcrossNZP_CSI_RS_PerCC_;
      maxNumberCS_IM_PerCC = maxNumberCS_IM_PerCC_;
      maxNumberSimultaneousCSI_RS_ActBWP_AllCC = maxNumberSimultaneousCSI_RS_ActBWP_AllCC_;
      totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC = totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC_;
   }

   public void init () {
      maxNumberNZP_CSI_RS_PerCC = null;
      maxNumberPortsAcrossNZP_CSI_RS_PerCC = null;
      maxNumberCS_IM_PerCC = null;
      maxNumberSimultaneousCSI_RS_ActBWP_AllCC = null;
      totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return maxNumberNZP_CSI_RS_PerCC;
         case 1: return maxNumberPortsAcrossNZP_CSI_RS_PerCC;
         case 2: return maxNumberCS_IM_PerCC;
         case 3: return maxNumberSimultaneousCSI_RS_ActBWP_AllCC;
         case 4: return totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "maxNumberNZP-CSI-RS-PerCC";
         case 1: return "maxNumberPortsAcrossNZP-CSI-RS-PerCC";
         case 2: return "maxNumberCS-IM-PerCC";
         case 3: return "maxNumberSimultaneousCSI-RS-ActBWP-AllCC";
         case 4: return "totalNumberPortsSimultaneousCSI-RS-ActBWP-AllCC";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode maxNumberNZP_CSI_RS_PerCC

      buffer.getContext().eventDispatcher.startElement("maxNumberNZP_CSI_RS_PerCC", -1);

      maxNumberNZP_CSI_RS_PerCC = new Asn1Integer();
      maxNumberNZP_CSI_RS_PerCC.decode (buffer, 1, 32);

      buffer.invokeCharacters(maxNumberNZP_CSI_RS_PerCC.toString());
      buffer.getContext().eventDispatcher.endElement("maxNumberNZP_CSI_RS_PerCC", -1);

      // decode maxNumberPortsAcrossNZP_CSI_RS_PerCC

      buffer.getContext().eventDispatcher.startElement("maxNumberPortsAcrossNZP_CSI_RS_PerCC", -1);

      {
         int tval = DummyA_maxNumberPortsAcrossNZP_CSI_RS_PerCC.decodeEnumValue (buffer);
         maxNumberPortsAcrossNZP_CSI_RS_PerCC = DummyA_maxNumberPortsAcrossNZP_CSI_RS_PerCC.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("maxNumberPortsAcrossNZP_CSI_RS_PerCC", -1);

      // decode maxNumberCS_IM_PerCC

      buffer.getContext().eventDispatcher.startElement("maxNumberCS_IM_PerCC", -1);

      {
         int tval = DummyA_maxNumberCS_IM_PerCC.decodeEnumValue (buffer);
         maxNumberCS_IM_PerCC = DummyA_maxNumberCS_IM_PerCC.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("maxNumberCS_IM_PerCC", -1);

      // decode maxNumberSimultaneousCSI_RS_ActBWP_AllCC

      buffer.getContext().eventDispatcher.startElement("maxNumberSimultaneousCSI_RS_ActBWP_AllCC", -1);

      {
         int tval = DummyA_maxNumberSimultaneousCSI_RS_ActBWP_AllCC.decodeEnumValue (buffer);
         maxNumberSimultaneousCSI_RS_ActBWP_AllCC = DummyA_maxNumberSimultaneousCSI_RS_ActBWP_AllCC.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("maxNumberSimultaneousCSI_RS_ActBWP_AllCC", -1);

      // decode totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC

      buffer.getContext().eventDispatcher.startElement("totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC", -1);

      {
         int tval = DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC.decodeEnumValue (buffer);
         totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC = DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode maxNumberNZP_CSI_RS_PerCC

      if (maxNumberNZP_CSI_RS_PerCC != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberNZP_CSI_RS_PerCC", -1);

         maxNumberNZP_CSI_RS_PerCC.encode (buffer, 1, 32);

         buffer.getContext().eventDispatcher.endElement("maxNumberNZP_CSI_RS_PerCC", -1);
      }
      else throw new Asn1MissingRequiredException ("maxNumberNZP_CSI_RS_PerCC");

      // encode maxNumberPortsAcrossNZP_CSI_RS_PerCC

      if (maxNumberPortsAcrossNZP_CSI_RS_PerCC != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberPortsAcrossNZP_CSI_RS_PerCC", -1);

         maxNumberPortsAcrossNZP_CSI_RS_PerCC.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("maxNumberPortsAcrossNZP_CSI_RS_PerCC", -1);
      }
      else throw new Asn1MissingRequiredException ("maxNumberPortsAcrossNZP_CSI_RS_PerCC");

      // encode maxNumberCS_IM_PerCC

      if (maxNumberCS_IM_PerCC != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberCS_IM_PerCC", -1);

         maxNumberCS_IM_PerCC.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("maxNumberCS_IM_PerCC", -1);
      }
      else throw new Asn1MissingRequiredException ("maxNumberCS_IM_PerCC");

      // encode maxNumberSimultaneousCSI_RS_ActBWP_AllCC

      if (maxNumberSimultaneousCSI_RS_ActBWP_AllCC != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberSimultaneousCSI_RS_ActBWP_AllCC", -1);

         maxNumberSimultaneousCSI_RS_ActBWP_AllCC.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("maxNumberSimultaneousCSI_RS_ActBWP_AllCC", -1);
      }
      else throw new Asn1MissingRequiredException ("maxNumberSimultaneousCSI_RS_ActBWP_AllCC");

      // encode totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC

      if (totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC != null) {
         buffer.getContext().eventDispatcher.startElement("totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC", -1);

         totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC", -1);
      }
      else throw new Asn1MissingRequiredException ("totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (maxNumberNZP_CSI_RS_PerCC != null) maxNumberNZP_CSI_RS_PerCC.print (_sb, "maxNumberNZP_CSI_RS_PerCC", _level+1);
      if (maxNumberPortsAcrossNZP_CSI_RS_PerCC != null) maxNumberPortsAcrossNZP_CSI_RS_PerCC.print (_sb, "maxNumberPortsAcrossNZP_CSI_RS_PerCC", _level+1);
      if (maxNumberCS_IM_PerCC != null) maxNumberCS_IM_PerCC.print (_sb, "maxNumberCS_IM_PerCC", _level+1);
      if (maxNumberSimultaneousCSI_RS_ActBWP_AllCC != null) maxNumberSimultaneousCSI_RS_ActBWP_AllCC.print (_sb, "maxNumberSimultaneousCSI_RS_ActBWP_AllCC", _level+1);
      if (totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC != null) totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC.print (_sb, "totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
