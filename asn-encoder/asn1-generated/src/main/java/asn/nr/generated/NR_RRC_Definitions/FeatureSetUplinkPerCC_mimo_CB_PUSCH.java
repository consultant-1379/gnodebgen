/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class FeatureSetUplinkPerCC_mimo_CB_PUSCH extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public MIMO_LayersUL maxNumberMIMO_LayersCB_PUSCH = null;  // optional
   public Asn1Integer maxNumberSRS_ResourcePerSet;

   public FeatureSetUplinkPerCC_mimo_CB_PUSCH () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public FeatureSetUplinkPerCC_mimo_CB_PUSCH (
      MIMO_LayersUL maxNumberMIMO_LayersCB_PUSCH_,
      Asn1Integer maxNumberSRS_ResourcePerSet_
   ) {
      super();
      maxNumberMIMO_LayersCB_PUSCH = maxNumberMIMO_LayersCB_PUSCH_;
      maxNumberSRS_ResourcePerSet = maxNumberSRS_ResourcePerSet_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public FeatureSetUplinkPerCC_mimo_CB_PUSCH (
      Asn1Integer maxNumberSRS_ResourcePerSet_
   ) {
      super();
      maxNumberSRS_ResourcePerSet = maxNumberSRS_ResourcePerSet_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public FeatureSetUplinkPerCC_mimo_CB_PUSCH (MIMO_LayersUL maxNumberMIMO_LayersCB_PUSCH_,
      long maxNumberSRS_ResourcePerSet_
   ) {
      super();
      maxNumberMIMO_LayersCB_PUSCH = maxNumberMIMO_LayersCB_PUSCH_;
      maxNumberSRS_ResourcePerSet = new Asn1Integer (maxNumberSRS_ResourcePerSet_);
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public FeatureSetUplinkPerCC_mimo_CB_PUSCH (
      long maxNumberSRS_ResourcePerSet_
   ) {
      super();
      maxNumberSRS_ResourcePerSet = new Asn1Integer (maxNumberSRS_ResourcePerSet_);
   }

   public void init () {
      maxNumberMIMO_LayersCB_PUSCH = null;
      maxNumberSRS_ResourcePerSet = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return maxNumberMIMO_LayersCB_PUSCH;
         case 1: return maxNumberSRS_ResourcePerSet;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "maxNumberMIMO-LayersCB-PUSCH";
         case 1: return "maxNumberSRS-ResourcePerSet";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean maxNumberMIMO_LayersCB_PUSCHPresent = buffer.decodeBit ("maxNumberMIMO_LayersCB_PUSCHPresent");

      // decode maxNumberMIMO_LayersCB_PUSCH

      if (maxNumberMIMO_LayersCB_PUSCHPresent) {
         buffer.getContext().eventDispatcher.startElement("maxNumberMIMO_LayersCB_PUSCH", -1);

         int tval = MIMO_LayersUL.decodeEnumValue (buffer);
         maxNumberMIMO_LayersCB_PUSCH = MIMO_LayersUL.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("maxNumberMIMO_LayersCB_PUSCH", -1);
      }
      else {
         maxNumberMIMO_LayersCB_PUSCH = null;
      }

      // decode maxNumberSRS_ResourcePerSet

      buffer.getContext().eventDispatcher.startElement("maxNumberSRS_ResourcePerSet", -1);

      maxNumberSRS_ResourcePerSet = new Asn1Integer();
      maxNumberSRS_ResourcePerSet.decode (buffer, 1, 2);

      buffer.invokeCharacters(maxNumberSRS_ResourcePerSet.toString());
      buffer.getContext().eventDispatcher.endElement("maxNumberSRS_ResourcePerSet", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((maxNumberMIMO_LayersCB_PUSCH != null), null);

      // encode maxNumberMIMO_LayersCB_PUSCH

      if (maxNumberMIMO_LayersCB_PUSCH != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberMIMO_LayersCB_PUSCH", -1);

         maxNumberMIMO_LayersCB_PUSCH.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("maxNumberMIMO_LayersCB_PUSCH", -1);
      }

      // encode maxNumberSRS_ResourcePerSet

      if (maxNumberSRS_ResourcePerSet != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberSRS_ResourcePerSet", -1);

         maxNumberSRS_ResourcePerSet.encode (buffer, 1, 2);

         buffer.getContext().eventDispatcher.endElement("maxNumberSRS_ResourcePerSet", -1);
      }
      else throw new Asn1MissingRequiredException ("maxNumberSRS_ResourcePerSet");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (maxNumberMIMO_LayersCB_PUSCH != null) maxNumberMIMO_LayersCB_PUSCH.print (_sb, "maxNumberMIMO_LayersCB_PUSCH", _level+1);
      if (maxNumberSRS_ResourcePerSet != null) maxNumberSRS_ResourcePerSet.print (_sb, "maxNumberSRS_ResourcePerSet", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
