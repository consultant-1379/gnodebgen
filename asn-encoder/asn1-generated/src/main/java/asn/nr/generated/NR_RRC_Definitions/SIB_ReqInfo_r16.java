/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SIB_ReqInfo_r16 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SIB-ReqInfo-r16";
   }

   // Integer constants for switch-case
   public static final int _SIB12 = 0;
   public static final int _SIB13 = 1;
   public static final int _SIB14 = 2;
   public static final int _SPARE5 = 3;
   public static final int _SPARE4 = 4;
   public static final int _SPARE3 = 5;
   public static final int _SPARE2 = 6;
   public static final int _SPARE1 = 7;

   // Singleton instances of SIB_ReqInfo_r16
   protected static final SIB_ReqInfo_r16 _sib12 = new SIB_ReqInfo_r16(0);
   protected static final SIB_ReqInfo_r16 _sib13 = new SIB_ReqInfo_r16(1);
   protected static final SIB_ReqInfo_r16 _sib14 = new SIB_ReqInfo_r16(2);
   protected static final SIB_ReqInfo_r16 _spare5 = new SIB_ReqInfo_r16(3);
   protected static final SIB_ReqInfo_r16 _spare4 = new SIB_ReqInfo_r16(4);
   protected static final SIB_ReqInfo_r16 _spare3 = new SIB_ReqInfo_r16(5);
   protected static final SIB_ReqInfo_r16 _spare2 = new SIB_ReqInfo_r16(6);
   protected static final SIB_ReqInfo_r16 _spare1 = new SIB_ReqInfo_r16(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected SIB_ReqInfo_r16 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for sib12.
    */
   public static SIB_ReqInfo_r16 sib12() {
      return _sib12;
   }

   /**
    * Singleton accessor method for sib13.
    */
   public static SIB_ReqInfo_r16 sib13() {
      return _sib13;
   }

   /**
    * Singleton accessor method for sib14.
    */
   public static SIB_ReqInfo_r16 sib14() {
      return _sib14;
   }

   /**
    * Singleton accessor method for spare5.
    */
   public static SIB_ReqInfo_r16 spare5() {
      return _spare5;
   }

   /**
    * Singleton accessor method for spare4.
    */
   public static SIB_ReqInfo_r16 spare4() {
      return _spare4;
   }

   /**
    * Singleton accessor method for spare3.
    */
   public static SIB_ReqInfo_r16 spare3() {
      return _spare3;
   }

   /**
    * Singleton accessor method for spare2.
    */
   public static SIB_ReqInfo_r16 spare2() {
      return _spare2;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static SIB_ReqInfo_r16 spare1() {
      return _spare1;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return SIB_ReqInfo_r16.valueOf( SIB_ReqInfo_r16.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static SIB_ReqInfo_r16 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return sib12();
         case 1: return sib13();
         case 2: return sib14();
         case 3: return spare5();
         case 4: return spare4();
         case 5: return spare3();
         case 6: return spare2();
         case 7: return spare1();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (SIB_ReqInfo_r16.valueOf(ret).toString());

      return ret;
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      switch ((int)value) {
         case 0: ui = 0; /* sib12 */break;
         case 1: ui = 1; /* sib13 */break;
         case 2: ui = 2; /* sib14 */break;
         case 3: ui = 3; /* spare5 */break;
         case 4: ui = 4; /* spare4 */break;
         case 5: ui = 5; /* spare3 */break;
         case 6: ui = 6; /* spare2 */break;
         case 7: ui = 7; /* spare1 */break;
         default:
            throw new Asn1InvalidEnumException (value);
      }

      buffer.encodeConsWholeNumber (ui, 8);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("sib12");
         case 1: return ("sib13");
         case 2: return ("sib14");
         case 3: return ("spare5");
         case 4: return ("spare4");
         case 5: return ("spare3");
         case 6: return ("spare2");
         case 7: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
