/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 31-Dec-2020.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class OverheatingAssistance_reducedMaxCCs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer reducedCCsDL;
   public Asn1Integer reducedCCsUL;

   public OverheatingAssistance_reducedMaxCCs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public OverheatingAssistance_reducedMaxCCs (
      Asn1Integer reducedCCsDL_,
      Asn1Integer reducedCCsUL_
   ) {
      super();
      reducedCCsDL = reducedCCsDL_;
      reducedCCsUL = reducedCCsUL_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public OverheatingAssistance_reducedMaxCCs (long reducedCCsDL_,
      long reducedCCsUL_
   ) {
      super();
      reducedCCsDL = new Asn1Integer (reducedCCsDL_);
      reducedCCsUL = new Asn1Integer (reducedCCsUL_);
   }

   public void init () {
      reducedCCsDL = null;
      reducedCCsUL = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return reducedCCsDL;
         case 1: return reducedCCsUL;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "reducedCCsDL";
         case 1: return "reducedCCsUL";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode reducedCCsDL

      buffer.getContext().eventDispatcher.startElement("reducedCCsDL", -1);

      reducedCCsDL = new Asn1Integer();
      reducedCCsDL.decode (buffer, 0, 31);
      buffer.getContext().eventDispatcher.endElement("reducedCCsDL", -1);

      // decode reducedCCsUL

      buffer.getContext().eventDispatcher.startElement("reducedCCsUL", -1);

      reducedCCsUL = new Asn1Integer();
      reducedCCsUL.decode (buffer, 0, 31);
      buffer.getContext().eventDispatcher.endElement("reducedCCsUL", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode reducedCCsDL

      if (reducedCCsDL != null) {
         buffer.getContext().eventDispatcher.startElement("reducedCCsDL", -1);

         reducedCCsDL.encode (buffer, 0, 31);

         buffer.getContext().eventDispatcher.endElement("reducedCCsDL", -1);
      }
      else throw new Asn1MissingRequiredException ("reducedCCsDL");

      // encode reducedCCsUL

      if (reducedCCsUL != null) {
         buffer.getContext().eventDispatcher.startElement("reducedCCsUL", -1);

         reducedCCsUL.encode (buffer, 0, 31);

         buffer.getContext().eventDispatcher.endElement("reducedCCsUL", -1);
      }
      else throw new Asn1MissingRequiredException ("reducedCCsUL");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (reducedCCsDL != null) reducedCCsDL.print (_sb, "reducedCCsDL", _level+1);
      if (reducedCCsUL != null) reducedCCsUL.print (_sb, "reducedCCsUL", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
