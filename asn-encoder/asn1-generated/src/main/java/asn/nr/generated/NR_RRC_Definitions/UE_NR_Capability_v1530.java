/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UE_NR_Capability_v1530 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UE-NR-Capability-v1530";
   }

   public UE_NR_CapabilityAddXDD_Mode_v1530 fdd_Add_UE_NR_Capabilities_v1530;  // optional
   public UE_NR_CapabilityAddXDD_Mode_v1530 tdd_Add_UE_NR_Capabilities_v1530;  // optional
   public UE_NR_Capability_v1530_dummy dummy = null;  // optional
   public InterRAT_Parameters interRAT_Parameters;  // optional
   public UE_NR_Capability_v1530_inactiveState inactiveState = null;  // optional
   public UE_NR_Capability_v1530_delayBudgetReporting delayBudgetReporting = null;  // optional
   public UE_NR_Capability_v1540 nonCriticalExtension;  // optional

   public UE_NR_Capability_v1530 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UE_NR_Capability_v1530 (
      UE_NR_CapabilityAddXDD_Mode_v1530 fdd_Add_UE_NR_Capabilities_v1530_,
      UE_NR_CapabilityAddXDD_Mode_v1530 tdd_Add_UE_NR_Capabilities_v1530_,
      UE_NR_Capability_v1530_dummy dummy_,
      InterRAT_Parameters interRAT_Parameters_,
      UE_NR_Capability_v1530_inactiveState inactiveState_,
      UE_NR_Capability_v1530_delayBudgetReporting delayBudgetReporting_,
      UE_NR_Capability_v1540 nonCriticalExtension_
   ) {
      super();
      fdd_Add_UE_NR_Capabilities_v1530 = fdd_Add_UE_NR_Capabilities_v1530_;
      tdd_Add_UE_NR_Capabilities_v1530 = tdd_Add_UE_NR_Capabilities_v1530_;
      dummy = dummy_;
      interRAT_Parameters = interRAT_Parameters_;
      inactiveState = inactiveState_;
      delayBudgetReporting = delayBudgetReporting_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      fdd_Add_UE_NR_Capabilities_v1530 = null;
      tdd_Add_UE_NR_Capabilities_v1530 = null;
      dummy = null;
      interRAT_Parameters = null;
      inactiveState = null;
      delayBudgetReporting = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return fdd_Add_UE_NR_Capabilities_v1530;
         case 1: return tdd_Add_UE_NR_Capabilities_v1530;
         case 2: return dummy;
         case 3: return interRAT_Parameters;
         case 4: return inactiveState;
         case 5: return delayBudgetReporting;
         case 6: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "fdd-Add-UE-NR-Capabilities-v1530";
         case 1: return "tdd-Add-UE-NR-Capabilities-v1530";
         case 2: return "dummy";
         case 3: return "interRAT-Parameters";
         case 4: return "inactiveState";
         case 5: return "delayBudgetReporting";
         case 6: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean fdd_Add_UE_NR_Capabilities_v1530Present = buffer.decodeBit ("fdd_Add_UE_NR_Capabilities_v1530Present");
      boolean tdd_Add_UE_NR_Capabilities_v1530Present = buffer.decodeBit ("tdd_Add_UE_NR_Capabilities_v1530Present");
      boolean dummyPresent = buffer.decodeBit ("dummyPresent");
      boolean interRAT_ParametersPresent = buffer.decodeBit ("interRAT_ParametersPresent");
      boolean inactiveStatePresent = buffer.decodeBit ("inactiveStatePresent");
      boolean delayBudgetReportingPresent = buffer.decodeBit ("delayBudgetReportingPresent");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode fdd_Add_UE_NR_Capabilities_v1530

      if (fdd_Add_UE_NR_Capabilities_v1530Present) {
         buffer.getContext().eventDispatcher.startElement("fdd_Add_UE_NR_Capabilities_v1530", -1);

         fdd_Add_UE_NR_Capabilities_v1530 = new UE_NR_CapabilityAddXDD_Mode_v1530();
         fdd_Add_UE_NR_Capabilities_v1530.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("fdd_Add_UE_NR_Capabilities_v1530", -1);
      }
      else {
         fdd_Add_UE_NR_Capabilities_v1530 = null;
      }

      // decode tdd_Add_UE_NR_Capabilities_v1530

      if (tdd_Add_UE_NR_Capabilities_v1530Present) {
         buffer.getContext().eventDispatcher.startElement("tdd_Add_UE_NR_Capabilities_v1530", -1);

         tdd_Add_UE_NR_Capabilities_v1530 = new UE_NR_CapabilityAddXDD_Mode_v1530();
         tdd_Add_UE_NR_Capabilities_v1530.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tdd_Add_UE_NR_Capabilities_v1530", -1);
      }
      else {
         tdd_Add_UE_NR_Capabilities_v1530 = null;
      }

      // decode dummy

      if (dummyPresent) {
         buffer.getContext().eventDispatcher.startElement("dummy", -1);

         int tval = UE_NR_Capability_v1530_dummy.decodeEnumValue (buffer);
         dummy = UE_NR_Capability_v1530_dummy.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("dummy", -1);
      }
      else {
         dummy = null;
      }

      // decode interRAT_Parameters

      if (interRAT_ParametersPresent) {
         buffer.getContext().eventDispatcher.startElement("interRAT_Parameters", -1);

         interRAT_Parameters = new InterRAT_Parameters();
         interRAT_Parameters.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("interRAT_Parameters", -1);
      }
      else {
         interRAT_Parameters = null;
      }

      // decode inactiveState

      if (inactiveStatePresent) {
         buffer.getContext().eventDispatcher.startElement("inactiveState", -1);

         int tval = UE_NR_Capability_v1530_inactiveState.decodeEnumValue (buffer);
         inactiveState = UE_NR_Capability_v1530_inactiveState.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("inactiveState", -1);
      }
      else {
         inactiveState = null;
      }

      // decode delayBudgetReporting

      if (delayBudgetReportingPresent) {
         buffer.getContext().eventDispatcher.startElement("delayBudgetReporting", -1);

         int tval = UE_NR_Capability_v1530_delayBudgetReporting.decodeEnumValue (buffer);
         delayBudgetReporting = UE_NR_Capability_v1530_delayBudgetReporting.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("delayBudgetReporting", -1);
      }
      else {
         delayBudgetReporting = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new UE_NR_Capability_v1540();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((fdd_Add_UE_NR_Capabilities_v1530 != null), null);
      buffer.encodeBit ((tdd_Add_UE_NR_Capabilities_v1530 != null), null);
      buffer.encodeBit ((dummy != null), null);
      buffer.encodeBit ((interRAT_Parameters != null), null);
      buffer.encodeBit ((inactiveState != null), null);
      buffer.encodeBit ((delayBudgetReporting != null), null);
      buffer.encodeBit ((nonCriticalExtension != null), null);

      // encode fdd_Add_UE_NR_Capabilities_v1530

      if (fdd_Add_UE_NR_Capabilities_v1530 != null) {
         buffer.getContext().eventDispatcher.startElement("fdd_Add_UE_NR_Capabilities_v1530", -1);

         fdd_Add_UE_NR_Capabilities_v1530.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("fdd_Add_UE_NR_Capabilities_v1530", -1);
      }

      // encode tdd_Add_UE_NR_Capabilities_v1530

      if (tdd_Add_UE_NR_Capabilities_v1530 != null) {
         buffer.getContext().eventDispatcher.startElement("tdd_Add_UE_NR_Capabilities_v1530", -1);

         tdd_Add_UE_NR_Capabilities_v1530.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("tdd_Add_UE_NR_Capabilities_v1530", -1);
      }

      // encode dummy

      if (dummy != null) {
         buffer.getContext().eventDispatcher.startElement("dummy", -1);

         dummy.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("dummy", -1);
      }

      // encode interRAT_Parameters

      if (interRAT_Parameters != null) {
         buffer.getContext().eventDispatcher.startElement("interRAT_Parameters", -1);

         interRAT_Parameters.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("interRAT_Parameters", -1);
      }

      // encode inactiveState

      if (inactiveState != null) {
         buffer.getContext().eventDispatcher.startElement("inactiveState", -1);

         inactiveState.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("inactiveState", -1);
      }

      // encode delayBudgetReporting

      if (delayBudgetReporting != null) {
         buffer.getContext().eventDispatcher.startElement("delayBudgetReporting", -1);

         delayBudgetReporting.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("delayBudgetReporting", -1);
      }

      // encode nonCriticalExtension

      if (nonCriticalExtension != null) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (fdd_Add_UE_NR_Capabilities_v1530 != null) fdd_Add_UE_NR_Capabilities_v1530.print (_sb, "fdd_Add_UE_NR_Capabilities_v1530", _level+1);
      if (tdd_Add_UE_NR_Capabilities_v1530 != null) tdd_Add_UE_NR_Capabilities_v1530.print (_sb, "tdd_Add_UE_NR_Capabilities_v1530", _level+1);
      if (dummy != null) dummy.print (_sb, "dummy", _level+1);
      if (interRAT_Parameters != null) interRAT_Parameters.print (_sb, "interRAT_Parameters", _level+1);
      if (inactiveState != null) inactiveState.print (_sb, "inactiveState", _level+1);
      if (delayBudgetReporting != null) delayBudgetReporting.print (_sb, "delayBudgetReporting", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
