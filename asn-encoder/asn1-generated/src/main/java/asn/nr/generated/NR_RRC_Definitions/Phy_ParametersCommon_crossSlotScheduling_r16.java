/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class Phy_ParametersCommon_crossSlotScheduling_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Phy_ParametersCommon_crossSlotScheduling_r16_non_SharedSpectrumChAccess_r16 non_SharedSpectrumChAccess_r16 = null;  // optional
   public Phy_ParametersCommon_crossSlotScheduling_r16_sharedSpectrumChAccess_r16 sharedSpectrumChAccess_r16 = null;  // optional

   public Phy_ParametersCommon_crossSlotScheduling_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public Phy_ParametersCommon_crossSlotScheduling_r16 (
      Phy_ParametersCommon_crossSlotScheduling_r16_non_SharedSpectrumChAccess_r16 non_SharedSpectrumChAccess_r16_,
      Phy_ParametersCommon_crossSlotScheduling_r16_sharedSpectrumChAccess_r16 sharedSpectrumChAccess_r16_
   ) {
      super();
      non_SharedSpectrumChAccess_r16 = non_SharedSpectrumChAccess_r16_;
      sharedSpectrumChAccess_r16 = sharedSpectrumChAccess_r16_;
   }

   public void init () {
      non_SharedSpectrumChAccess_r16 = null;
      sharedSpectrumChAccess_r16 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return non_SharedSpectrumChAccess_r16;
         case 1: return sharedSpectrumChAccess_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "non-SharedSpectrumChAccess-r16";
         case 1: return "sharedSpectrumChAccess-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean non_SharedSpectrumChAccess_r16Present = buffer.decodeBit ("non_SharedSpectrumChAccess_r16Present");
      boolean sharedSpectrumChAccess_r16Present = buffer.decodeBit ("sharedSpectrumChAccess_r16Present");

      // decode non_SharedSpectrumChAccess_r16

      if (non_SharedSpectrumChAccess_r16Present) {
         buffer.getContext().eventDispatcher.startElement("non_SharedSpectrumChAccess_r16", -1);

         int tval = Phy_ParametersCommon_crossSlotScheduling_r16_non_SharedSpectrumChAccess_r16.decodeEnumValue (buffer);
         non_SharedSpectrumChAccess_r16 = Phy_ParametersCommon_crossSlotScheduling_r16_non_SharedSpectrumChAccess_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("non_SharedSpectrumChAccess_r16", -1);
      }
      else {
         non_SharedSpectrumChAccess_r16 = null;
      }

      // decode sharedSpectrumChAccess_r16

      if (sharedSpectrumChAccess_r16Present) {
         buffer.getContext().eventDispatcher.startElement("sharedSpectrumChAccess_r16", -1);

         int tval = Phy_ParametersCommon_crossSlotScheduling_r16_sharedSpectrumChAccess_r16.decodeEnumValue (buffer);
         sharedSpectrumChAccess_r16 = Phy_ParametersCommon_crossSlotScheduling_r16_sharedSpectrumChAccess_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("sharedSpectrumChAccess_r16", -1);
      }
      else {
         sharedSpectrumChAccess_r16 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((non_SharedSpectrumChAccess_r16 != null), null);
      buffer.encodeBit ((sharedSpectrumChAccess_r16 != null), null);

      // encode non_SharedSpectrumChAccess_r16

      if (non_SharedSpectrumChAccess_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("non_SharedSpectrumChAccess_r16", -1);

         non_SharedSpectrumChAccess_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("non_SharedSpectrumChAccess_r16", -1);
      }

      // encode sharedSpectrumChAccess_r16

      if (sharedSpectrumChAccess_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sharedSpectrumChAccess_r16", -1);

         sharedSpectrumChAccess_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("sharedSpectrumChAccess_r16", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (non_SharedSpectrumChAccess_r16 != null) non_SharedSpectrumChAccess_r16.print (_sb, "non_SharedSpectrumChAccess_r16", _level+1);
      if (sharedSpectrumChAccess_r16 != null) sharedSpectrumChAccess_r16.print (_sb, "sharedSpectrumChAccess_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
