/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class FeatureSetUplinkPerCC_v1540 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "FeatureSetUplinkPerCC-v1540";
   }

   public FeatureSetUplinkPerCC_v1540_mimo_NonCB_PUSCH mimo_NonCB_PUSCH;  // optional

   public FeatureSetUplinkPerCC_v1540 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public FeatureSetUplinkPerCC_v1540 (
      FeatureSetUplinkPerCC_v1540_mimo_NonCB_PUSCH mimo_NonCB_PUSCH_
   ) {
      super();
      mimo_NonCB_PUSCH = mimo_NonCB_PUSCH_;
   }

   public void init () {
      mimo_NonCB_PUSCH = null;
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return mimo_NonCB_PUSCH;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "mimo-NonCB-PUSCH";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean mimo_NonCB_PUSCHPresent = buffer.decodeBit ("mimo_NonCB_PUSCHPresent");

      // decode mimo_NonCB_PUSCH

      if (mimo_NonCB_PUSCHPresent) {
         buffer.getContext().eventDispatcher.startElement("mimo_NonCB_PUSCH", -1);

         mimo_NonCB_PUSCH = new FeatureSetUplinkPerCC_v1540_mimo_NonCB_PUSCH();
         mimo_NonCB_PUSCH.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mimo_NonCB_PUSCH", -1);
      }
      else {
         mimo_NonCB_PUSCH = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((mimo_NonCB_PUSCH != null), null);

      // encode mimo_NonCB_PUSCH

      if (mimo_NonCB_PUSCH != null) {
         buffer.getContext().eventDispatcher.startElement("mimo_NonCB_PUSCH", -1);

         mimo_NonCB_PUSCH.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("mimo_NonCB_PUSCH", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (mimo_NonCB_PUSCH != null) mimo_NonCB_PUSCH.print (_sb, "mimo_NonCB_PUSCH", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
