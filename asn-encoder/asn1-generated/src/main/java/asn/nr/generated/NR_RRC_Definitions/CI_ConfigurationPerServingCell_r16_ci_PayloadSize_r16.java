/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _N1 = 0;
   public static final int _N2 = 1;
   public static final int _N4 = 2;
   public static final int _N5 = 3;
   public static final int _N7 = 4;
   public static final int _N8 = 5;
   public static final int _N10 = 6;
   public static final int _N14 = 7;
   public static final int _N16 = 8;
   public static final int _N20 = 9;
   public static final int _N28 = 10;
   public static final int _N32 = 11;
   public static final int _N35 = 12;
   public static final int _N42 = 13;
   public static final int _N56 = 14;
   public static final int _N112 = 15;

   // Singleton instances of CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n1 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(0);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n2 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(1);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n4 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(2);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n5 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(3);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n7 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(4);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n8 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(5);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n10 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(6);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n14 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(7);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n16 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(8);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n20 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(9);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n28 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(10);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n32 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(11);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n35 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(12);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n42 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(13);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n56 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(14);
   protected static final CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 _n112 = new CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16(15);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    */
   protected CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for n1.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n1() {
      return _n1;
   }

   /**
    * Singleton accessor method for n2.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n2() {
      return _n2;
   }

   /**
    * Singleton accessor method for n4.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n4() {
      return _n4;
   }

   /**
    * Singleton accessor method for n5.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n5() {
      return _n5;
   }

   /**
    * Singleton accessor method for n7.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n7() {
      return _n7;
   }

   /**
    * Singleton accessor method for n8.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n8() {
      return _n8;
   }

   /**
    * Singleton accessor method for n10.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n10() {
      return _n10;
   }

   /**
    * Singleton accessor method for n14.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n14() {
      return _n14;
   }

   /**
    * Singleton accessor method for n16.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n16() {
      return _n16;
   }

   /**
    * Singleton accessor method for n20.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n20() {
      return _n20;
   }

   /**
    * Singleton accessor method for n28.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n28() {
      return _n28;
   }

   /**
    * Singleton accessor method for n32.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n32() {
      return _n32;
   }

   /**
    * Singleton accessor method for n35.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n35() {
      return _n35;
   }

   /**
    * Singleton accessor method for n42.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n42() {
      return _n42;
   }

   /**
    * Singleton accessor method for n56.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n56() {
      return _n56;
   }

   /**
    * Singleton accessor method for n112.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 n112() {
      return _n112;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16.valueOf( CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return n1();
         case 1: return n2();
         case 2: return n4();
         case 3: return n5();
         case 4: return n7();
         case 5: return n8();
         case 6: return n10();
         case 7: return n14();
         case 8: return n16();
         case 9: return n20();
         case 10: return n28();
         case 11: return n32();
         case 12: return n35();
         case 13: return n42();
         case 14: return n56();
         case 15: return n112();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (16);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16.valueOf(ret).toString());

      return ret;
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      switch ((int)value) {
         case 0: ui = 0; /* n1 */break;
         case 1: ui = 1; /* n2 */break;
         case 2: ui = 2; /* n4 */break;
         case 3: ui = 3; /* n5 */break;
         case 4: ui = 4; /* n7 */break;
         case 5: ui = 5; /* n8 */break;
         case 6: ui = 6; /* n10 */break;
         case 7: ui = 7; /* n14 */break;
         case 8: ui = 8; /* n16 */break;
         case 9: ui = 9; /* n20 */break;
         case 10: ui = 10; /* n28 */break;
         case 11: ui = 11; /* n32 */break;
         case 12: ui = 12; /* n35 */break;
         case 13: ui = 13; /* n42 */break;
         case 14: ui = 14; /* n56 */break;
         case 15: ui = 15; /* n112 */break;
         default:
            throw new Asn1InvalidEnumException (value);
      }

      buffer.encodeConsWholeNumber (ui, 16);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("n1");
         case 1: return ("n2");
         case 2: return ("n4");
         case 3: return ("n5");
         case 4: return ("n7");
         case 5: return ("n8");
         case 6: return ("n10");
         case 7: return ("n14");
         case 8: return ("n16");
         case 9: return ("n20");
         case 10: return ("n28");
         case 11: return ("n32");
         case 12: return ("n35");
         case 13: return ("n42");
         case 14: return ("n56");
         case 15: return ("n112");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
