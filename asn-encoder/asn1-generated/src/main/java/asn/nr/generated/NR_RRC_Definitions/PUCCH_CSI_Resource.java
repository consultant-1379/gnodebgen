/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PUCCH_CSI_Resource extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PUCCH-CSI-Resource";
   }

   public BWP_Id uplinkBandwidthPartId;
   public PUCCH_ResourceId pucch_Resource;

   public PUCCH_CSI_Resource () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PUCCH_CSI_Resource (
      BWP_Id uplinkBandwidthPartId_,
      PUCCH_ResourceId pucch_Resource_
   ) {
      super();
      uplinkBandwidthPartId = uplinkBandwidthPartId_;
      pucch_Resource = pucch_Resource_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PUCCH_CSI_Resource (long uplinkBandwidthPartId_,
      long pucch_Resource_
   ) {
      super();
      uplinkBandwidthPartId = new BWP_Id (uplinkBandwidthPartId_);
      pucch_Resource = new PUCCH_ResourceId (pucch_Resource_);
   }

   public void init () {
      uplinkBandwidthPartId = null;
      pucch_Resource = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return uplinkBandwidthPartId;
         case 1: return pucch_Resource;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "uplinkBandwidthPartId";
         case 1: return "pucch-Resource";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode uplinkBandwidthPartId

      buffer.getContext().eventDispatcher.startElement("uplinkBandwidthPartId", -1);

      uplinkBandwidthPartId = new BWP_Id();
      uplinkBandwidthPartId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("uplinkBandwidthPartId", -1);

      // decode pucch_Resource

      buffer.getContext().eventDispatcher.startElement("pucch_Resource", -1);

      pucch_Resource = new PUCCH_ResourceId();
      pucch_Resource.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("pucch_Resource", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode uplinkBandwidthPartId

      if (uplinkBandwidthPartId != null) {
         buffer.getContext().eventDispatcher.startElement("uplinkBandwidthPartId", -1);

         uplinkBandwidthPartId.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("uplinkBandwidthPartId", -1);
      }
      else throw new Asn1MissingRequiredException ("uplinkBandwidthPartId");

      // encode pucch_Resource

      if (pucch_Resource != null) {
         buffer.getContext().eventDispatcher.startElement("pucch_Resource", -1);

         pucch_Resource.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("pucch_Resource", -1);
      }
      else throw new Asn1MissingRequiredException ("pucch_Resource");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (uplinkBandwidthPartId != null) uplinkBandwidthPartId.print (_sb, "uplinkBandwidthPartId", _level+1);
      if (pucch_Resource != null) pucch_Resource.print (_sb, "pucch_Resource", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
