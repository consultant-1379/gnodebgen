/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MeasIdToAddMod extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MeasIdToAddMod";
   }

   public MeasId measId;
   public MeasObjectId measObjectId;
   public ReportConfigId reportConfigId;

   public MeasIdToAddMod () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasIdToAddMod (
      MeasId measId_,
      MeasObjectId measObjectId_,
      ReportConfigId reportConfigId_
   ) {
      super();
      measId = measId_;
      measObjectId = measObjectId_;
      reportConfigId = reportConfigId_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public MeasIdToAddMod (long measId_,
      long measObjectId_,
      long reportConfigId_
   ) {
      super();
      measId = new MeasId (measId_);
      measObjectId = new MeasObjectId (measObjectId_);
      reportConfigId = new ReportConfigId (reportConfigId_);
   }

   public void init () {
      measId = null;
      measObjectId = null;
      reportConfigId = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return measId;
         case 1: return measObjectId;
         case 2: return reportConfigId;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "measId";
         case 1: return "measObjectId";
         case 2: return "reportConfigId";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode measId

      buffer.getContext().eventDispatcher.startElement("measId", -1);

      measId = new MeasId();
      measId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("measId", -1);

      // decode measObjectId

      buffer.getContext().eventDispatcher.startElement("measObjectId", -1);

      measObjectId = new MeasObjectId();
      measObjectId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("measObjectId", -1);

      // decode reportConfigId

      buffer.getContext().eventDispatcher.startElement("reportConfigId", -1);

      reportConfigId = new ReportConfigId();
      reportConfigId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("reportConfigId", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode measId

      if (measId != null) {
         buffer.getContext().eventDispatcher.startElement("measId", -1);

         measId.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("measId", -1);
      }
      else throw new Asn1MissingRequiredException ("measId");

      // encode measObjectId

      if (measObjectId != null) {
         buffer.getContext().eventDispatcher.startElement("measObjectId", -1);

         measObjectId.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("measObjectId", -1);
      }
      else throw new Asn1MissingRequiredException ("measObjectId");

      // encode reportConfigId

      if (reportConfigId != null) {
         buffer.getContext().eventDispatcher.startElement("reportConfigId", -1);

         reportConfigId.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("reportConfigId", -1);
      }
      else throw new Asn1MissingRequiredException ("reportConfigId");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (measId != null) measId.print (_sb, "measId", _level+1);
      if (measObjectId != null) measObjectId.print (_sb, "measObjectId", _level+1);
      if (reportConfigId != null) reportConfigId.print (_sb, "reportConfigId", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
