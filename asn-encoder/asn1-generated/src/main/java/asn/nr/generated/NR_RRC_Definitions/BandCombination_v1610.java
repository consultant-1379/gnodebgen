/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class BandCombination_v1610 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "BandCombination-v1610";
   }

   public BandCombination_v1610_bandList_v1610 bandList_v1610;  // optional
   public CA_ParametersNR_v1610 ca_ParametersNR_v1610;  // optional
   public CA_ParametersNRDC_v1610 ca_ParametersNRDC_v1610;  // optional
   public BandCombination_v1610_powerClass_v1610 powerClass_v1610 = null;  // optional
   public BandCombination_v1610_powerClassNRPart_r16 powerClassNRPart_r16 = null;  // optional
   public FeatureSetCombinationId featureSetCombinationDAPS_r16;  // optional
   public MRDC_Parameters_v1620 mrdc_Parameters_v1620;  // optional

   public BandCombination_v1610 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public BandCombination_v1610 (
      BandCombination_v1610_bandList_v1610 bandList_v1610_,
      CA_ParametersNR_v1610 ca_ParametersNR_v1610_,
      CA_ParametersNRDC_v1610 ca_ParametersNRDC_v1610_,
      BandCombination_v1610_powerClass_v1610 powerClass_v1610_,
      BandCombination_v1610_powerClassNRPart_r16 powerClassNRPart_r16_,
      FeatureSetCombinationId featureSetCombinationDAPS_r16_,
      MRDC_Parameters_v1620 mrdc_Parameters_v1620_
   ) {
      super();
      bandList_v1610 = bandList_v1610_;
      ca_ParametersNR_v1610 = ca_ParametersNR_v1610_;
      ca_ParametersNRDC_v1610 = ca_ParametersNRDC_v1610_;
      powerClass_v1610 = powerClass_v1610_;
      powerClassNRPart_r16 = powerClassNRPart_r16_;
      featureSetCombinationDAPS_r16 = featureSetCombinationDAPS_r16_;
      mrdc_Parameters_v1620 = mrdc_Parameters_v1620_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public BandCombination_v1610 (BandCombination_v1610_bandList_v1610 bandList_v1610_,
      CA_ParametersNR_v1610 ca_ParametersNR_v1610_,
      CA_ParametersNRDC_v1610 ca_ParametersNRDC_v1610_,
      BandCombination_v1610_powerClass_v1610 powerClass_v1610_,
      BandCombination_v1610_powerClassNRPart_r16 powerClassNRPart_r16_,
      long featureSetCombinationDAPS_r16_,
      MRDC_Parameters_v1620 mrdc_Parameters_v1620_
   ) {
      super();
      bandList_v1610 = bandList_v1610_;
      ca_ParametersNR_v1610 = ca_ParametersNR_v1610_;
      ca_ParametersNRDC_v1610 = ca_ParametersNRDC_v1610_;
      powerClass_v1610 = powerClass_v1610_;
      powerClassNRPart_r16 = powerClassNRPart_r16_;
      featureSetCombinationDAPS_r16 = new FeatureSetCombinationId (featureSetCombinationDAPS_r16_);
      mrdc_Parameters_v1620 = mrdc_Parameters_v1620_;
   }

   public void init () {
      bandList_v1610 = null;
      ca_ParametersNR_v1610 = null;
      ca_ParametersNRDC_v1610 = null;
      powerClass_v1610 = null;
      powerClassNRPart_r16 = null;
      featureSetCombinationDAPS_r16 = null;
      mrdc_Parameters_v1620 = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return bandList_v1610;
         case 1: return ca_ParametersNR_v1610;
         case 2: return ca_ParametersNRDC_v1610;
         case 3: return powerClass_v1610;
         case 4: return powerClassNRPart_r16;
         case 5: return featureSetCombinationDAPS_r16;
         case 6: return mrdc_Parameters_v1620;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "bandList-v1610";
         case 1: return "ca-ParametersNR-v1610";
         case 2: return "ca-ParametersNRDC-v1610";
         case 3: return "powerClass-v1610";
         case 4: return "powerClassNRPart-r16";
         case 5: return "featureSetCombinationDAPS-r16";
         case 6: return "mrdc-Parameters-v1620";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean bandList_v1610Present = buffer.decodeBit ("bandList_v1610Present");
      boolean ca_ParametersNR_v1610Present = buffer.decodeBit ("ca_ParametersNR_v1610Present");
      boolean ca_ParametersNRDC_v1610Present = buffer.decodeBit ("ca_ParametersNRDC_v1610Present");
      boolean powerClass_v1610Present = buffer.decodeBit ("powerClass_v1610Present");
      boolean powerClassNRPart_r16Present = buffer.decodeBit ("powerClassNRPart_r16Present");
      boolean featureSetCombinationDAPS_r16Present = buffer.decodeBit ("featureSetCombinationDAPS_r16Present");
      boolean mrdc_Parameters_v1620Present = buffer.decodeBit ("mrdc_Parameters_v1620Present");

      // decode bandList_v1610

      if (bandList_v1610Present) {
         buffer.getContext().eventDispatcher.startElement("bandList_v1610", -1);

         bandList_v1610 = new BandCombination_v1610_bandList_v1610();
         bandList_v1610.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bandList_v1610", -1);
      }
      else {
         bandList_v1610 = null;
      }

      // decode ca_ParametersNR_v1610

      if (ca_ParametersNR_v1610Present) {
         buffer.getContext().eventDispatcher.startElement("ca_ParametersNR_v1610", -1);

         ca_ParametersNR_v1610 = new CA_ParametersNR_v1610();
         ca_ParametersNR_v1610.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ca_ParametersNR_v1610", -1);
      }
      else {
         ca_ParametersNR_v1610 = null;
      }

      // decode ca_ParametersNRDC_v1610

      if (ca_ParametersNRDC_v1610Present) {
         buffer.getContext().eventDispatcher.startElement("ca_ParametersNRDC_v1610", -1);

         ca_ParametersNRDC_v1610 = new CA_ParametersNRDC_v1610();
         ca_ParametersNRDC_v1610.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ca_ParametersNRDC_v1610", -1);
      }
      else {
         ca_ParametersNRDC_v1610 = null;
      }

      // decode powerClass_v1610

      if (powerClass_v1610Present) {
         buffer.getContext().eventDispatcher.startElement("powerClass_v1610", -1);

         int tval = BandCombination_v1610_powerClass_v1610.decodeEnumValue (buffer);
         powerClass_v1610 = BandCombination_v1610_powerClass_v1610.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("powerClass_v1610", -1);
      }
      else {
         powerClass_v1610 = null;
      }

      // decode powerClassNRPart_r16

      if (powerClassNRPart_r16Present) {
         buffer.getContext().eventDispatcher.startElement("powerClassNRPart_r16", -1);

         int tval = BandCombination_v1610_powerClassNRPart_r16.decodeEnumValue (buffer);
         powerClassNRPart_r16 = BandCombination_v1610_powerClassNRPart_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("powerClassNRPart_r16", -1);
      }
      else {
         powerClassNRPart_r16 = null;
      }

      // decode featureSetCombinationDAPS_r16

      if (featureSetCombinationDAPS_r16Present) {
         buffer.getContext().eventDispatcher.startElement("featureSetCombinationDAPS_r16", -1);

         featureSetCombinationDAPS_r16 = new FeatureSetCombinationId();
         featureSetCombinationDAPS_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("featureSetCombinationDAPS_r16", -1);
      }
      else {
         featureSetCombinationDAPS_r16 = null;
      }

      // decode mrdc_Parameters_v1620

      if (mrdc_Parameters_v1620Present) {
         buffer.getContext().eventDispatcher.startElement("mrdc_Parameters_v1620", -1);

         mrdc_Parameters_v1620 = new MRDC_Parameters_v1620();
         mrdc_Parameters_v1620.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mrdc_Parameters_v1620", -1);
      }
      else {
         mrdc_Parameters_v1620 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((bandList_v1610 != null), null);
      buffer.encodeBit ((ca_ParametersNR_v1610 != null), null);
      buffer.encodeBit ((ca_ParametersNRDC_v1610 != null), null);
      buffer.encodeBit ((powerClass_v1610 != null), null);
      buffer.encodeBit ((powerClassNRPart_r16 != null), null);
      buffer.encodeBit ((featureSetCombinationDAPS_r16 != null), null);
      buffer.encodeBit ((mrdc_Parameters_v1620 != null), null);

      // encode bandList_v1610

      if (bandList_v1610 != null) {
         buffer.getContext().eventDispatcher.startElement("bandList_v1610", -1);

         bandList_v1610.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("bandList_v1610", -1);
      }

      // encode ca_ParametersNR_v1610

      if (ca_ParametersNR_v1610 != null) {
         buffer.getContext().eventDispatcher.startElement("ca_ParametersNR_v1610", -1);

         ca_ParametersNR_v1610.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ca_ParametersNR_v1610", -1);
      }

      // encode ca_ParametersNRDC_v1610

      if (ca_ParametersNRDC_v1610 != null) {
         buffer.getContext().eventDispatcher.startElement("ca_ParametersNRDC_v1610", -1);

         ca_ParametersNRDC_v1610.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ca_ParametersNRDC_v1610", -1);
      }

      // encode powerClass_v1610

      if (powerClass_v1610 != null) {
         buffer.getContext().eventDispatcher.startElement("powerClass_v1610", -1);

         powerClass_v1610.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("powerClass_v1610", -1);
      }

      // encode powerClassNRPart_r16

      if (powerClassNRPart_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("powerClassNRPart_r16", -1);

         powerClassNRPart_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("powerClassNRPart_r16", -1);
      }

      // encode featureSetCombinationDAPS_r16

      if (featureSetCombinationDAPS_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("featureSetCombinationDAPS_r16", -1);

         featureSetCombinationDAPS_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("featureSetCombinationDAPS_r16", -1);
      }

      // encode mrdc_Parameters_v1620

      if (mrdc_Parameters_v1620 != null) {
         buffer.getContext().eventDispatcher.startElement("mrdc_Parameters_v1620", -1);

         mrdc_Parameters_v1620.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("mrdc_Parameters_v1620", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (bandList_v1610 != null) bandList_v1610.print (_sb, "bandList_v1610", _level+1);
      if (ca_ParametersNR_v1610 != null) ca_ParametersNR_v1610.print (_sb, "ca_ParametersNR_v1610", _level+1);
      if (ca_ParametersNRDC_v1610 != null) ca_ParametersNRDC_v1610.print (_sb, "ca_ParametersNRDC_v1610", _level+1);
      if (powerClass_v1610 != null) powerClass_v1610.print (_sb, "powerClass_v1610", _level+1);
      if (powerClassNRPart_r16 != null) powerClassNRPart_r16.print (_sb, "powerClassNRPart_r16", _level+1);
      if (featureSetCombinationDAPS_r16 != null) featureSetCombinationDAPS_r16.print (_sb, "featureSetCombinationDAPS_r16", _level+1);
      if (mrdc_Parameters_v1620 != null) mrdc_Parameters_v1620.print (_sb, "mrdc_Parameters_v1620", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
