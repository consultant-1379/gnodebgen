/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CG_COT_Sharing_r16_cot_Sharing_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer duration_r16;
   public Asn1Integer offset_r16;
   public Asn1Integer channelAccessPriority_r16;

   public CG_COT_Sharing_r16_cot_Sharing_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CG_COT_Sharing_r16_cot_Sharing_r16 (
      Asn1Integer duration_r16_,
      Asn1Integer offset_r16_,
      Asn1Integer channelAccessPriority_r16_
   ) {
      super();
      duration_r16 = duration_r16_;
      offset_r16 = offset_r16_;
      channelAccessPriority_r16 = channelAccessPriority_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CG_COT_Sharing_r16_cot_Sharing_r16 (long duration_r16_,
      long offset_r16_,
      long channelAccessPriority_r16_
   ) {
      super();
      duration_r16 = new Asn1Integer (duration_r16_);
      offset_r16 = new Asn1Integer (offset_r16_);
      channelAccessPriority_r16 = new Asn1Integer (channelAccessPriority_r16_);
   }

   public void init () {
      duration_r16 = null;
      offset_r16 = null;
      channelAccessPriority_r16 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return duration_r16;
         case 1: return offset_r16;
         case 2: return channelAccessPriority_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "duration-r16";
         case 1: return "offset-r16";
         case 2: return "channelAccessPriority-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode duration_r16

      buffer.getContext().eventDispatcher.startElement("duration_r16", -1);

      duration_r16 = new Asn1Integer();
      duration_r16.decode (buffer, 1, 39);

      buffer.invokeCharacters(duration_r16.toString());
      buffer.getContext().eventDispatcher.endElement("duration_r16", -1);

      // decode offset_r16

      buffer.getContext().eventDispatcher.startElement("offset_r16", -1);

      offset_r16 = new Asn1Integer();
      offset_r16.decode (buffer, 1, 39);

      buffer.invokeCharacters(offset_r16.toString());
      buffer.getContext().eventDispatcher.endElement("offset_r16", -1);

      // decode channelAccessPriority_r16

      buffer.getContext().eventDispatcher.startElement("channelAccessPriority_r16", -1);

      channelAccessPriority_r16 = new Asn1Integer();
      channelAccessPriority_r16.decode (buffer, 1, 4);

      buffer.invokeCharacters(channelAccessPriority_r16.toString());
      buffer.getContext().eventDispatcher.endElement("channelAccessPriority_r16", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode duration_r16

      if (duration_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("duration_r16", -1);

         duration_r16.encode (buffer, 1, 39);

         buffer.getContext().eventDispatcher.endElement("duration_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("duration_r16");

      // encode offset_r16

      if (offset_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("offset_r16", -1);

         offset_r16.encode (buffer, 1, 39);

         buffer.getContext().eventDispatcher.endElement("offset_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("offset_r16");

      // encode channelAccessPriority_r16

      if (channelAccessPriority_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("channelAccessPriority_r16", -1);

         channelAccessPriority_r16.encode (buffer, 1, 4);

         buffer.getContext().eventDispatcher.endElement("channelAccessPriority_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("channelAccessPriority_r16");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (duration_r16 != null) duration_r16.print (_sb, "duration_r16", _level+1);
      if (offset_r16 != null) offset_r16.print (_sb, "offset_r16", _level+1);
      if (channelAccessPriority_r16 != null) channelAccessPriority_r16.print (_sb, "channelAccessPriority_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
