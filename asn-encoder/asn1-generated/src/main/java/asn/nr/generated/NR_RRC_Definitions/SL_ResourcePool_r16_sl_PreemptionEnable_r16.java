/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_ResourcePool_r16_sl_PreemptionEnable_r16 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _ENABLED = 0;
   public static final int _PL1 = 1;
   public static final int _PL2 = 2;
   public static final int _PL3 = 3;
   public static final int _PL4 = 4;
   public static final int _PL5 = 5;
   public static final int _PL6 = 6;
   public static final int _PL7 = 7;
   public static final int _PL8 = 8;

   // Singleton instances of SL_ResourcePool_r16_sl_PreemptionEnable_r16
   protected static final SL_ResourcePool_r16_sl_PreemptionEnable_r16 _enabled = new SL_ResourcePool_r16_sl_PreemptionEnable_r16(0);
   protected static final SL_ResourcePool_r16_sl_PreemptionEnable_r16 _pl1 = new SL_ResourcePool_r16_sl_PreemptionEnable_r16(1);
   protected static final SL_ResourcePool_r16_sl_PreemptionEnable_r16 _pl2 = new SL_ResourcePool_r16_sl_PreemptionEnable_r16(2);
   protected static final SL_ResourcePool_r16_sl_PreemptionEnable_r16 _pl3 = new SL_ResourcePool_r16_sl_PreemptionEnable_r16(3);
   protected static final SL_ResourcePool_r16_sl_PreemptionEnable_r16 _pl4 = new SL_ResourcePool_r16_sl_PreemptionEnable_r16(4);
   protected static final SL_ResourcePool_r16_sl_PreemptionEnable_r16 _pl5 = new SL_ResourcePool_r16_sl_PreemptionEnable_r16(5);
   protected static final SL_ResourcePool_r16_sl_PreemptionEnable_r16 _pl6 = new SL_ResourcePool_r16_sl_PreemptionEnable_r16(6);
   protected static final SL_ResourcePool_r16_sl_PreemptionEnable_r16 _pl7 = new SL_ResourcePool_r16_sl_PreemptionEnable_r16(7);
   protected static final SL_ResourcePool_r16_sl_PreemptionEnable_r16 _pl8 = new SL_ResourcePool_r16_sl_PreemptionEnable_r16(8);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    */
   protected SL_ResourcePool_r16_sl_PreemptionEnable_r16 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for enabled.
    */
   public static SL_ResourcePool_r16_sl_PreemptionEnable_r16 enabled() {
      return _enabled;
   }

   /**
    * Singleton accessor method for pl1.
    */
   public static SL_ResourcePool_r16_sl_PreemptionEnable_r16 pl1() {
      return _pl1;
   }

   /**
    * Singleton accessor method for pl2.
    */
   public static SL_ResourcePool_r16_sl_PreemptionEnable_r16 pl2() {
      return _pl2;
   }

   /**
    * Singleton accessor method for pl3.
    */
   public static SL_ResourcePool_r16_sl_PreemptionEnable_r16 pl3() {
      return _pl3;
   }

   /**
    * Singleton accessor method for pl4.
    */
   public static SL_ResourcePool_r16_sl_PreemptionEnable_r16 pl4() {
      return _pl4;
   }

   /**
    * Singleton accessor method for pl5.
    */
   public static SL_ResourcePool_r16_sl_PreemptionEnable_r16 pl5() {
      return _pl5;
   }

   /**
    * Singleton accessor method for pl6.
    */
   public static SL_ResourcePool_r16_sl_PreemptionEnable_r16 pl6() {
      return _pl6;
   }

   /**
    * Singleton accessor method for pl7.
    */
   public static SL_ResourcePool_r16_sl_PreemptionEnable_r16 pl7() {
      return _pl7;
   }

   /**
    * Singleton accessor method for pl8.
    */
   public static SL_ResourcePool_r16_sl_PreemptionEnable_r16 pl8() {
      return _pl8;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return SL_ResourcePool_r16_sl_PreemptionEnable_r16.valueOf( SL_ResourcePool_r16_sl_PreemptionEnable_r16.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static SL_ResourcePool_r16_sl_PreemptionEnable_r16 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return enabled();
         case 1: return pl1();
         case 2: return pl2();
         case 3: return pl3();
         case 4: return pl4();
         case 5: return pl5();
         case 6: return pl6();
         case 7: return pl7();
         case 8: return pl8();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (9);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (SL_ResourcePool_r16_sl_PreemptionEnable_r16.valueOf(ret).toString());

      return ret;
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      switch ((int)value) {
         case 0: ui = 0; /* enabled */break;
         case 1: ui = 1; /* pl1 */break;
         case 2: ui = 2; /* pl2 */break;
         case 3: ui = 3; /* pl3 */break;
         case 4: ui = 4; /* pl4 */break;
         case 5: ui = 5; /* pl5 */break;
         case 6: ui = 6; /* pl6 */break;
         case 7: ui = 7; /* pl7 */break;
         case 8: ui = 8; /* pl8 */break;
         default:
            throw new Asn1InvalidEnumException (value);
      }

      buffer.encodeConsWholeNumber (ui, 9);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("enabled");
         case 1: return ("pl1");
         case 2: return ("pl2");
         case 3: return ("pl3");
         case 4: return ("pl4");
         case 5: return ("pl5");
         case 6: return ("pl6");
         case 7: return ("pl7");
         case 8: return ("pl8");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
