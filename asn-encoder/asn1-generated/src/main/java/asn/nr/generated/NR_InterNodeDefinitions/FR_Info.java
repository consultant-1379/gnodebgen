/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;
import asn.nr.generated.NR_RRC_Definitions.ServCellIndex;

public class FR_Info extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "FR-Info";
   }

   public ServCellIndex servCellIndex;
   public FR_Info_fr_Type fr_Type = null;

   public FR_Info () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public FR_Info (
      ServCellIndex servCellIndex_,
      FR_Info_fr_Type fr_Type_
   ) {
      super();
      servCellIndex = servCellIndex_;
      fr_Type = fr_Type_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public FR_Info (long servCellIndex_,
      FR_Info_fr_Type fr_Type_
   ) {
      super();
      servCellIndex = new ServCellIndex (servCellIndex_);
      fr_Type = fr_Type_;
   }

   public void init () {
      servCellIndex = null;
      fr_Type = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return servCellIndex;
         case 1: return fr_Type;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "servCellIndex";
         case 1: return "fr-Type";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode servCellIndex

      buffer.getContext().eventDispatcher.startElement("servCellIndex", -1);

      servCellIndex = new ServCellIndex();
      servCellIndex.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("servCellIndex", -1);

      // decode fr_Type

      buffer.getContext().eventDispatcher.startElement("fr_Type", -1);

      {
         int tval = FR_Info_fr_Type.decodeEnumValue (buffer);
         fr_Type = FR_Info_fr_Type.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("fr_Type", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode servCellIndex

      if (servCellIndex != null) {
         buffer.getContext().eventDispatcher.startElement("servCellIndex", -1);

         servCellIndex.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("servCellIndex", -1);
      }
      else throw new Asn1MissingRequiredException ("servCellIndex");

      // encode fr_Type

      if (fr_Type != null) {
         buffer.getContext().eventDispatcher.startElement("fr_Type", -1);

         fr_Type.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("fr_Type", -1);
      }
      else throw new Asn1MissingRequiredException ("fr_Type");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (servCellIndex != null) servCellIndex.print (_sb, "servCellIndex", _level+1);
      if (fr_Type != null) fr_Type.print (_sb, "fr_Type", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
