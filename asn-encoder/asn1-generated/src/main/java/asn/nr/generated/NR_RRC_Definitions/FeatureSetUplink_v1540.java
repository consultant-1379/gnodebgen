/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class FeatureSetUplink_v1540 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "FeatureSetUplink-v1540";
   }

   public FeatureSetUplink_v1540_zeroSlotOffsetAperiodicSRS zeroSlotOffsetAperiodicSRS = null;  // optional
   public FeatureSetUplink_v1540_pa_PhaseDiscontinuityImpacts pa_PhaseDiscontinuityImpacts = null;  // optional
   public FeatureSetUplink_v1540_pusch_SeparationWithGap pusch_SeparationWithGap = null;  // optional
   public FeatureSetUplink_v1540_pusch_ProcessingType2 pusch_ProcessingType2;  // optional
   public FeatureSetUplink_v1540_ul_MCS_TableAlt_DynamicIndication ul_MCS_TableAlt_DynamicIndication = null;  // optional

   public FeatureSetUplink_v1540 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public FeatureSetUplink_v1540 (
      FeatureSetUplink_v1540_zeroSlotOffsetAperiodicSRS zeroSlotOffsetAperiodicSRS_,
      FeatureSetUplink_v1540_pa_PhaseDiscontinuityImpacts pa_PhaseDiscontinuityImpacts_,
      FeatureSetUplink_v1540_pusch_SeparationWithGap pusch_SeparationWithGap_,
      FeatureSetUplink_v1540_pusch_ProcessingType2 pusch_ProcessingType2_,
      FeatureSetUplink_v1540_ul_MCS_TableAlt_DynamicIndication ul_MCS_TableAlt_DynamicIndication_
   ) {
      super();
      zeroSlotOffsetAperiodicSRS = zeroSlotOffsetAperiodicSRS_;
      pa_PhaseDiscontinuityImpacts = pa_PhaseDiscontinuityImpacts_;
      pusch_SeparationWithGap = pusch_SeparationWithGap_;
      pusch_ProcessingType2 = pusch_ProcessingType2_;
      ul_MCS_TableAlt_DynamicIndication = ul_MCS_TableAlt_DynamicIndication_;
   }

   public void init () {
      zeroSlotOffsetAperiodicSRS = null;
      pa_PhaseDiscontinuityImpacts = null;
      pusch_SeparationWithGap = null;
      pusch_ProcessingType2 = null;
      ul_MCS_TableAlt_DynamicIndication = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return zeroSlotOffsetAperiodicSRS;
         case 1: return pa_PhaseDiscontinuityImpacts;
         case 2: return pusch_SeparationWithGap;
         case 3: return pusch_ProcessingType2;
         case 4: return ul_MCS_TableAlt_DynamicIndication;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "zeroSlotOffsetAperiodicSRS";
         case 1: return "pa-PhaseDiscontinuityImpacts";
         case 2: return "pusch-SeparationWithGap";
         case 3: return "pusch-ProcessingType2";
         case 4: return "ul-MCS-TableAlt-DynamicIndication";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean zeroSlotOffsetAperiodicSRSPresent = buffer.decodeBit ("zeroSlotOffsetAperiodicSRSPresent");
      boolean pa_PhaseDiscontinuityImpactsPresent = buffer.decodeBit ("pa_PhaseDiscontinuityImpactsPresent");
      boolean pusch_SeparationWithGapPresent = buffer.decodeBit ("pusch_SeparationWithGapPresent");
      boolean pusch_ProcessingType2Present = buffer.decodeBit ("pusch_ProcessingType2Present");
      boolean ul_MCS_TableAlt_DynamicIndicationPresent = buffer.decodeBit ("ul_MCS_TableAlt_DynamicIndicationPresent");

      // decode zeroSlotOffsetAperiodicSRS

      if (zeroSlotOffsetAperiodicSRSPresent) {
         buffer.getContext().eventDispatcher.startElement("zeroSlotOffsetAperiodicSRS", -1);

         int tval = FeatureSetUplink_v1540_zeroSlotOffsetAperiodicSRS.decodeEnumValue (buffer);
         zeroSlotOffsetAperiodicSRS = FeatureSetUplink_v1540_zeroSlotOffsetAperiodicSRS.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("zeroSlotOffsetAperiodicSRS", -1);
      }
      else {
         zeroSlotOffsetAperiodicSRS = null;
      }

      // decode pa_PhaseDiscontinuityImpacts

      if (pa_PhaseDiscontinuityImpactsPresent) {
         buffer.getContext().eventDispatcher.startElement("pa_PhaseDiscontinuityImpacts", -1);

         int tval = FeatureSetUplink_v1540_pa_PhaseDiscontinuityImpacts.decodeEnumValue (buffer);
         pa_PhaseDiscontinuityImpacts = FeatureSetUplink_v1540_pa_PhaseDiscontinuityImpacts.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("pa_PhaseDiscontinuityImpacts", -1);
      }
      else {
         pa_PhaseDiscontinuityImpacts = null;
      }

      // decode pusch_SeparationWithGap

      if (pusch_SeparationWithGapPresent) {
         buffer.getContext().eventDispatcher.startElement("pusch_SeparationWithGap", -1);

         int tval = FeatureSetUplink_v1540_pusch_SeparationWithGap.decodeEnumValue (buffer);
         pusch_SeparationWithGap = FeatureSetUplink_v1540_pusch_SeparationWithGap.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("pusch_SeparationWithGap", -1);
      }
      else {
         pusch_SeparationWithGap = null;
      }

      // decode pusch_ProcessingType2

      if (pusch_ProcessingType2Present) {
         buffer.getContext().eventDispatcher.startElement("pusch_ProcessingType2", -1);

         pusch_ProcessingType2 = new FeatureSetUplink_v1540_pusch_ProcessingType2();
         pusch_ProcessingType2.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("pusch_ProcessingType2", -1);
      }
      else {
         pusch_ProcessingType2 = null;
      }

      // decode ul_MCS_TableAlt_DynamicIndication

      if (ul_MCS_TableAlt_DynamicIndicationPresent) {
         buffer.getContext().eventDispatcher.startElement("ul_MCS_TableAlt_DynamicIndication", -1);

         int tval = FeatureSetUplink_v1540_ul_MCS_TableAlt_DynamicIndication.decodeEnumValue (buffer);
         ul_MCS_TableAlt_DynamicIndication = FeatureSetUplink_v1540_ul_MCS_TableAlt_DynamicIndication.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ul_MCS_TableAlt_DynamicIndication", -1);
      }
      else {
         ul_MCS_TableAlt_DynamicIndication = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((zeroSlotOffsetAperiodicSRS != null), null);
      buffer.encodeBit ((pa_PhaseDiscontinuityImpacts != null), null);
      buffer.encodeBit ((pusch_SeparationWithGap != null), null);
      buffer.encodeBit ((pusch_ProcessingType2 != null), null);
      buffer.encodeBit ((ul_MCS_TableAlt_DynamicIndication != null), null);

      // encode zeroSlotOffsetAperiodicSRS

      if (zeroSlotOffsetAperiodicSRS != null) {
         buffer.getContext().eventDispatcher.startElement("zeroSlotOffsetAperiodicSRS", -1);

         zeroSlotOffsetAperiodicSRS.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("zeroSlotOffsetAperiodicSRS", -1);
      }

      // encode pa_PhaseDiscontinuityImpacts

      if (pa_PhaseDiscontinuityImpacts != null) {
         buffer.getContext().eventDispatcher.startElement("pa_PhaseDiscontinuityImpacts", -1);

         pa_PhaseDiscontinuityImpacts.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("pa_PhaseDiscontinuityImpacts", -1);
      }

      // encode pusch_SeparationWithGap

      if (pusch_SeparationWithGap != null) {
         buffer.getContext().eventDispatcher.startElement("pusch_SeparationWithGap", -1);

         pusch_SeparationWithGap.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("pusch_SeparationWithGap", -1);
      }

      // encode pusch_ProcessingType2

      if (pusch_ProcessingType2 != null) {
         buffer.getContext().eventDispatcher.startElement("pusch_ProcessingType2", -1);

         pusch_ProcessingType2.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("pusch_ProcessingType2", -1);
      }

      // encode ul_MCS_TableAlt_DynamicIndication

      if (ul_MCS_TableAlt_DynamicIndication != null) {
         buffer.getContext().eventDispatcher.startElement("ul_MCS_TableAlt_DynamicIndication", -1);

         ul_MCS_TableAlt_DynamicIndication.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ul_MCS_TableAlt_DynamicIndication", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (zeroSlotOffsetAperiodicSRS != null) zeroSlotOffsetAperiodicSRS.print (_sb, "zeroSlotOffsetAperiodicSRS", _level+1);
      if (pa_PhaseDiscontinuityImpacts != null) pa_PhaseDiscontinuityImpacts.print (_sb, "pa_PhaseDiscontinuityImpacts", _level+1);
      if (pusch_SeparationWithGap != null) pusch_SeparationWithGap.print (_sb, "pusch_SeparationWithGap", _level+1);
      if (pusch_ProcessingType2 != null) pusch_ProcessingType2.print (_sb, "pusch_ProcessingType2", _level+1);
      if (ul_MCS_TableAlt_DynamicIndication != null) ul_MCS_TableAlt_DynamicIndication.print (_sb, "ul_MCS_TableAlt_DynamicIndication", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
