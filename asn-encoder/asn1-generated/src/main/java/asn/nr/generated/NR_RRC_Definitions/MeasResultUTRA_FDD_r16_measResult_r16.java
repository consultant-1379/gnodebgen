/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MeasResultUTRA_FDD_r16_measResult_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer utra_FDD_RSCP_r16;  // optional
   public Asn1Integer utra_FDD_EcN0_r16;  // optional

   public MeasResultUTRA_FDD_r16_measResult_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasResultUTRA_FDD_r16_measResult_r16 (
      Asn1Integer utra_FDD_RSCP_r16_,
      Asn1Integer utra_FDD_EcN0_r16_
   ) {
      super();
      utra_FDD_RSCP_r16 = utra_FDD_RSCP_r16_;
      utra_FDD_EcN0_r16 = utra_FDD_EcN0_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public MeasResultUTRA_FDD_r16_measResult_r16 (long utra_FDD_RSCP_r16_,
      long utra_FDD_EcN0_r16_
   ) {
      super();
      utra_FDD_RSCP_r16 = new Asn1Integer (utra_FDD_RSCP_r16_);
      utra_FDD_EcN0_r16 = new Asn1Integer (utra_FDD_EcN0_r16_);
   }

   public void init () {
      utra_FDD_RSCP_r16 = null;
      utra_FDD_EcN0_r16 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return utra_FDD_RSCP_r16;
         case 1: return utra_FDD_EcN0_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "utra-FDD-RSCP-r16";
         case 1: return "utra-FDD-EcN0-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean utra_FDD_RSCP_r16Present = buffer.decodeBit ("utra_FDD_RSCP_r16Present");
      boolean utra_FDD_EcN0_r16Present = buffer.decodeBit ("utra_FDD_EcN0_r16Present");

      // decode utra_FDD_RSCP_r16

      if (utra_FDD_RSCP_r16Present) {
         buffer.getContext().eventDispatcher.startElement("utra_FDD_RSCP_r16", -1);

         utra_FDD_RSCP_r16 = new Asn1Integer();
         utra_FDD_RSCP_r16.decode (buffer, -5, 91);

         buffer.invokeCharacters(utra_FDD_RSCP_r16.toString());
         buffer.getContext().eventDispatcher.endElement("utra_FDD_RSCP_r16", -1);
      }
      else {
         utra_FDD_RSCP_r16 = null;
      }

      // decode utra_FDD_EcN0_r16

      if (utra_FDD_EcN0_r16Present) {
         buffer.getContext().eventDispatcher.startElement("utra_FDD_EcN0_r16", -1);

         utra_FDD_EcN0_r16 = new Asn1Integer();
         utra_FDD_EcN0_r16.decode (buffer, 0, 49);

         buffer.invokeCharacters(utra_FDD_EcN0_r16.toString());
         buffer.getContext().eventDispatcher.endElement("utra_FDD_EcN0_r16", -1);
      }
      else {
         utra_FDD_EcN0_r16 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((utra_FDD_RSCP_r16 != null), null);
      buffer.encodeBit ((utra_FDD_EcN0_r16 != null), null);

      // encode utra_FDD_RSCP_r16

      if (utra_FDD_RSCP_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("utra_FDD_RSCP_r16", -1);

         utra_FDD_RSCP_r16.encode (buffer, -5, 91);

         buffer.getContext().eventDispatcher.endElement("utra_FDD_RSCP_r16", -1);
      }

      // encode utra_FDD_EcN0_r16

      if (utra_FDD_EcN0_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("utra_FDD_EcN0_r16", -1);

         utra_FDD_EcN0_r16.encode (buffer, 0, 49);

         buffer.getContext().eventDispatcher.endElement("utra_FDD_EcN0_r16", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (utra_FDD_RSCP_r16 != null) utra_FDD_RSCP_r16.print (_sb, "utra_FDD_RSCP_r16", _level+1);
      if (utra_FDD_EcN0_r16 != null) utra_FDD_EcN0_r16.print (_sb, "utra_FDD_EcN0_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
