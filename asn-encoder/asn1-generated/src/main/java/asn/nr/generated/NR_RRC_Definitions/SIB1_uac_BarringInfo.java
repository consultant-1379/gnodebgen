/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SIB1_uac_BarringInfo extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public UAC_BarringPerCatList uac_BarringForCommon;  // optional
   public UAC_BarringPerPLMN_List uac_BarringPerPLMN_List;  // optional
   public UAC_BarringInfoSetList uac_BarringInfoSetList;
   public SIB1_uac_BarringInfo_uac_AccessCategory1_SelectionAssistanceInfo uac_AccessCategory1_SelectionAssistanceInfo;  // optional

   public SIB1_uac_BarringInfo () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SIB1_uac_BarringInfo (
      UAC_BarringPerCatList uac_BarringForCommon_,
      UAC_BarringPerPLMN_List uac_BarringPerPLMN_List_,
      UAC_BarringInfoSetList uac_BarringInfoSetList_,
      SIB1_uac_BarringInfo_uac_AccessCategory1_SelectionAssistanceInfo uac_AccessCategory1_SelectionAssistanceInfo_
   ) {
      super();
      uac_BarringForCommon = uac_BarringForCommon_;
      uac_BarringPerPLMN_List = uac_BarringPerPLMN_List_;
      uac_BarringInfoSetList = uac_BarringInfoSetList_;
      uac_AccessCategory1_SelectionAssistanceInfo = uac_AccessCategory1_SelectionAssistanceInfo_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SIB1_uac_BarringInfo (
      UAC_BarringInfoSetList uac_BarringInfoSetList_
   ) {
      super();
      uac_BarringInfoSetList = uac_BarringInfoSetList_;
   }

   public void init () {
      uac_BarringForCommon = null;
      uac_BarringPerPLMN_List = null;
      uac_BarringInfoSetList = null;
      uac_AccessCategory1_SelectionAssistanceInfo = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return uac_BarringForCommon;
         case 1: return uac_BarringPerPLMN_List;
         case 2: return uac_BarringInfoSetList;
         case 3: return uac_AccessCategory1_SelectionAssistanceInfo;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "uac-BarringForCommon";
         case 1: return "uac-BarringPerPLMN-List";
         case 2: return "uac-BarringInfoSetList";
         case 3: return "uac-AccessCategory1-SelectionAssistanceInfo";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean uac_BarringForCommonPresent = buffer.decodeBit ("uac_BarringForCommonPresent");
      boolean uac_BarringPerPLMN_ListPresent = buffer.decodeBit ("uac_BarringPerPLMN_ListPresent");
      boolean uac_AccessCategory1_SelectionAssistanceInfoPresent = buffer.decodeBit ("uac_AccessCategory1_SelectionAssistanceInfoPresent");

      // decode uac_BarringForCommon

      if (uac_BarringForCommonPresent) {
         buffer.getContext().eventDispatcher.startElement("uac_BarringForCommon", -1);

         uac_BarringForCommon = new UAC_BarringPerCatList();
         uac_BarringForCommon.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("uac_BarringForCommon", -1);
      }
      else {
         uac_BarringForCommon = null;
      }

      // decode uac_BarringPerPLMN_List

      if (uac_BarringPerPLMN_ListPresent) {
         buffer.getContext().eventDispatcher.startElement("uac_BarringPerPLMN_List", -1);

         uac_BarringPerPLMN_List = new UAC_BarringPerPLMN_List();
         uac_BarringPerPLMN_List.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("uac_BarringPerPLMN_List", -1);
      }
      else {
         uac_BarringPerPLMN_List = null;
      }

      // decode uac_BarringInfoSetList

      buffer.getContext().eventDispatcher.startElement("uac_BarringInfoSetList", -1);

      uac_BarringInfoSetList = new UAC_BarringInfoSetList();
      uac_BarringInfoSetList.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("uac_BarringInfoSetList", -1);

      // decode uac_AccessCategory1_SelectionAssistanceInfo

      if (uac_AccessCategory1_SelectionAssistanceInfoPresent) {
         buffer.getContext().eventDispatcher.startElement("uac_AccessCategory1_SelectionAssistanceInfo", -1);

         uac_AccessCategory1_SelectionAssistanceInfo = new SIB1_uac_BarringInfo_uac_AccessCategory1_SelectionAssistanceInfo();
         uac_AccessCategory1_SelectionAssistanceInfo.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("uac_AccessCategory1_SelectionAssistanceInfo", -1);
      }
      else {
         uac_AccessCategory1_SelectionAssistanceInfo = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((uac_BarringForCommon != null), null);
      buffer.encodeBit ((uac_BarringPerPLMN_List != null), null);
      buffer.encodeBit ((uac_AccessCategory1_SelectionAssistanceInfo != null), null);

      // encode uac_BarringForCommon

      if (uac_BarringForCommon != null) {
         buffer.getContext().eventDispatcher.startElement("uac_BarringForCommon", -1);

         uac_BarringForCommon.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("uac_BarringForCommon", -1);
      }

      // encode uac_BarringPerPLMN_List

      if (uac_BarringPerPLMN_List != null) {
         buffer.getContext().eventDispatcher.startElement("uac_BarringPerPLMN_List", -1);

         uac_BarringPerPLMN_List.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("uac_BarringPerPLMN_List", -1);
      }

      // encode uac_BarringInfoSetList

      if (uac_BarringInfoSetList != null) {
         buffer.getContext().eventDispatcher.startElement("uac_BarringInfoSetList", -1);

         uac_BarringInfoSetList.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("uac_BarringInfoSetList", -1);
      }
      else throw new Asn1MissingRequiredException ("uac_BarringInfoSetList");

      // encode uac_AccessCategory1_SelectionAssistanceInfo

      if (uac_AccessCategory1_SelectionAssistanceInfo != null) {
         buffer.getContext().eventDispatcher.startElement("uac_AccessCategory1_SelectionAssistanceInfo", -1);

         uac_AccessCategory1_SelectionAssistanceInfo.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("uac_AccessCategory1_SelectionAssistanceInfo", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (uac_BarringForCommon != null) uac_BarringForCommon.print (_sb, "uac_BarringForCommon", _level+1);
      if (uac_BarringPerPLMN_List != null) uac_BarringPerPLMN_List.print (_sb, "uac_BarringPerPLMN_List", _level+1);
      if (uac_BarringInfoSetList != null) uac_BarringInfoSetList.print (_sb, "uac_BarringInfoSetList", _level+1);
      if (uac_AccessCategory1_SelectionAssistanceInfo != null) uac_AccessCategory1_SelectionAssistanceInfo.print (_sb, "uac_AccessCategory1_SelectionAssistanceInfo", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
