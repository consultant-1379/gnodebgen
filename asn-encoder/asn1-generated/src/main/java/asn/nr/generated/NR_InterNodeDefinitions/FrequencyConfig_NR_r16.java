/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;
import asn.nr.generated.NR_RRC_Definitions.FreqBandIndicatorNR;
import asn.nr.generated.NR_RRC_Definitions.ARFCN_ValueNR;
import asn.nr.generated.NR_RRC_Definitions.SubcarrierSpacing;

public class FrequencyConfig_NR_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "FrequencyConfig-NR-r16";
   }

   public FreqBandIndicatorNR freqBandIndicatorNR_r16;
   public ARFCN_ValueNR carrierCenterFreq_NR_r16;
   public Asn1Integer carrierBandwidth_NR_r16;
   public SubcarrierSpacing subcarrierSpacing_NR_r16 = null;

   public FrequencyConfig_NR_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public FrequencyConfig_NR_r16 (
      FreqBandIndicatorNR freqBandIndicatorNR_r16_,
      ARFCN_ValueNR carrierCenterFreq_NR_r16_,
      Asn1Integer carrierBandwidth_NR_r16_,
      SubcarrierSpacing subcarrierSpacing_NR_r16_
   ) {
      super();
      freqBandIndicatorNR_r16 = freqBandIndicatorNR_r16_;
      carrierCenterFreq_NR_r16 = carrierCenterFreq_NR_r16_;
      carrierBandwidth_NR_r16 = carrierBandwidth_NR_r16_;
      subcarrierSpacing_NR_r16 = subcarrierSpacing_NR_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public FrequencyConfig_NR_r16 (long freqBandIndicatorNR_r16_,
      long carrierCenterFreq_NR_r16_,
      long carrierBandwidth_NR_r16_,
      SubcarrierSpacing subcarrierSpacing_NR_r16_
   ) {
      super();
      freqBandIndicatorNR_r16 = new FreqBandIndicatorNR (freqBandIndicatorNR_r16_);
      carrierCenterFreq_NR_r16 = new ARFCN_ValueNR (carrierCenterFreq_NR_r16_);
      carrierBandwidth_NR_r16 = new Asn1Integer (carrierBandwidth_NR_r16_);
      subcarrierSpacing_NR_r16 = subcarrierSpacing_NR_r16_;
   }

   public void init () {
      freqBandIndicatorNR_r16 = null;
      carrierCenterFreq_NR_r16 = null;
      carrierBandwidth_NR_r16 = null;
      subcarrierSpacing_NR_r16 = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return freqBandIndicatorNR_r16;
         case 1: return carrierCenterFreq_NR_r16;
         case 2: return carrierBandwidth_NR_r16;
         case 3: return subcarrierSpacing_NR_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "freqBandIndicatorNR-r16";
         case 1: return "carrierCenterFreq-NR-r16";
         case 2: return "carrierBandwidth-NR-r16";
         case 3: return "subcarrierSpacing-NR-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode freqBandIndicatorNR_r16

      buffer.getContext().eventDispatcher.startElement("freqBandIndicatorNR_r16", -1);

      freqBandIndicatorNR_r16 = new FreqBandIndicatorNR();
      freqBandIndicatorNR_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("freqBandIndicatorNR_r16", -1);

      // decode carrierCenterFreq_NR_r16

      buffer.getContext().eventDispatcher.startElement("carrierCenterFreq_NR_r16", -1);

      carrierCenterFreq_NR_r16 = new ARFCN_ValueNR();
      carrierCenterFreq_NR_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("carrierCenterFreq_NR_r16", -1);

      // decode carrierBandwidth_NR_r16

      buffer.getContext().eventDispatcher.startElement("carrierBandwidth_NR_r16", -1);

      carrierBandwidth_NR_r16 = new Asn1Integer();
      carrierBandwidth_NR_r16.decode (buffer, 1, 275);

      buffer.invokeCharacters(carrierBandwidth_NR_r16.toString());
      buffer.getContext().eventDispatcher.endElement("carrierBandwidth_NR_r16", -1);

      // decode subcarrierSpacing_NR_r16

      buffer.getContext().eventDispatcher.startElement("subcarrierSpacing_NR_r16", -1);

      {
         int tval = SubcarrierSpacing.decodeEnumValue (buffer);
         subcarrierSpacing_NR_r16 = SubcarrierSpacing.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("subcarrierSpacing_NR_r16", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode freqBandIndicatorNR_r16

      if (freqBandIndicatorNR_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("freqBandIndicatorNR_r16", -1);

         freqBandIndicatorNR_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("freqBandIndicatorNR_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("freqBandIndicatorNR_r16");

      // encode carrierCenterFreq_NR_r16

      if (carrierCenterFreq_NR_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("carrierCenterFreq_NR_r16", -1);

         carrierCenterFreq_NR_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("carrierCenterFreq_NR_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("carrierCenterFreq_NR_r16");

      // encode carrierBandwidth_NR_r16

      if (carrierBandwidth_NR_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("carrierBandwidth_NR_r16", -1);

         carrierBandwidth_NR_r16.encode (buffer, 1, 275);

         buffer.getContext().eventDispatcher.endElement("carrierBandwidth_NR_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("carrierBandwidth_NR_r16");

      // encode subcarrierSpacing_NR_r16

      if (subcarrierSpacing_NR_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("subcarrierSpacing_NR_r16", -1);

         subcarrierSpacing_NR_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("subcarrierSpacing_NR_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("subcarrierSpacing_NR_r16");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (freqBandIndicatorNR_r16 != null) freqBandIndicatorNR_r16.print (_sb, "freqBandIndicatorNR_r16", _level+1);
      if (carrierCenterFreq_NR_r16 != null) carrierCenterFreq_NR_r16.print (_sb, "carrierCenterFreq_NR_r16", _level+1);
      if (carrierBandwidth_NR_r16 != null) carrierBandwidth_NR_r16.print (_sb, "carrierBandwidth_NR_r16", _level+1);
      if (subcarrierSpacing_NR_r16 != null) subcarrierSpacing_NR_r16.print (_sb, "subcarrierSpacing_NR_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
