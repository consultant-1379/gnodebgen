/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class TAG_Config extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "TAG-Config";
   }

   public TAG_Config_tag_ToReleaseList tag_ToReleaseList;  // optional
   public TAG_Config_tag_ToAddModList tag_ToAddModList;  // optional

   public TAG_Config () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public TAG_Config (
      TAG_Config_tag_ToReleaseList tag_ToReleaseList_,
      TAG_Config_tag_ToAddModList tag_ToAddModList_
   ) {
      super();
      tag_ToReleaseList = tag_ToReleaseList_;
      tag_ToAddModList = tag_ToAddModList_;
   }

   public void init () {
      tag_ToReleaseList = null;
      tag_ToAddModList = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return tag_ToReleaseList;
         case 1: return tag_ToAddModList;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "tag-ToReleaseList";
         case 1: return "tag-ToAddModList";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean tag_ToReleaseListPresent = buffer.decodeBit ("tag_ToReleaseListPresent");
      boolean tag_ToAddModListPresent = buffer.decodeBit ("tag_ToAddModListPresent");

      // decode tag_ToReleaseList

      if (tag_ToReleaseListPresent) {
         buffer.getContext().eventDispatcher.startElement("tag_ToReleaseList", -1);

         tag_ToReleaseList = new TAG_Config_tag_ToReleaseList();
         tag_ToReleaseList.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tag_ToReleaseList", -1);
      }
      else {
         tag_ToReleaseList = null;
      }

      // decode tag_ToAddModList

      if (tag_ToAddModListPresent) {
         buffer.getContext().eventDispatcher.startElement("tag_ToAddModList", -1);

         tag_ToAddModList = new TAG_Config_tag_ToAddModList();
         tag_ToAddModList.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tag_ToAddModList", -1);
      }
      else {
         tag_ToAddModList = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((tag_ToReleaseList != null), null);
      buffer.encodeBit ((tag_ToAddModList != null), null);

      // encode tag_ToReleaseList

      if (tag_ToReleaseList != null) {
         buffer.getContext().eventDispatcher.startElement("tag_ToReleaseList", -1);

         tag_ToReleaseList.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("tag_ToReleaseList", -1);
      }

      // encode tag_ToAddModList

      if (tag_ToAddModList != null) {
         buffer.getContext().eventDispatcher.startElement("tag_ToAddModList", -1);

         tag_ToAddModList.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("tag_ToAddModList", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (tag_ToReleaseList != null) tag_ToReleaseList.print (_sb, "tag_ToReleaseList", _level+1);
      if (tag_ToAddModList != null) tag_ToAddModList.print (_sb, "tag_ToAddModList", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
