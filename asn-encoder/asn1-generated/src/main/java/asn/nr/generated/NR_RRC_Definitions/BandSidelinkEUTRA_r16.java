/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class BandSidelinkEUTRA_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "BandSidelinkEUTRA-r16";
   }

   public FreqBandIndicatorEUTRA freqBandSidelinkEUTRA_r16;
   public BandSidelinkEUTRA_r16_gnb_ScheduledMode3SidelinkEUTRA_r16 gnb_ScheduledMode3SidelinkEUTRA_r16;  // optional
   public BandSidelinkEUTRA_r16_gnb_ScheduledMode4SidelinkEUTRA_r16 gnb_ScheduledMode4SidelinkEUTRA_r16 = null;  // optional

   public BandSidelinkEUTRA_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public BandSidelinkEUTRA_r16 (
      FreqBandIndicatorEUTRA freqBandSidelinkEUTRA_r16_,
      BandSidelinkEUTRA_r16_gnb_ScheduledMode3SidelinkEUTRA_r16 gnb_ScheduledMode3SidelinkEUTRA_r16_,
      BandSidelinkEUTRA_r16_gnb_ScheduledMode4SidelinkEUTRA_r16 gnb_ScheduledMode4SidelinkEUTRA_r16_
   ) {
      super();
      freqBandSidelinkEUTRA_r16 = freqBandSidelinkEUTRA_r16_;
      gnb_ScheduledMode3SidelinkEUTRA_r16 = gnb_ScheduledMode3SidelinkEUTRA_r16_;
      gnb_ScheduledMode4SidelinkEUTRA_r16 = gnb_ScheduledMode4SidelinkEUTRA_r16_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public BandSidelinkEUTRA_r16 (
      FreqBandIndicatorEUTRA freqBandSidelinkEUTRA_r16_
   ) {
      super();
      freqBandSidelinkEUTRA_r16 = freqBandSidelinkEUTRA_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public BandSidelinkEUTRA_r16 (long freqBandSidelinkEUTRA_r16_,
      BandSidelinkEUTRA_r16_gnb_ScheduledMode3SidelinkEUTRA_r16 gnb_ScheduledMode3SidelinkEUTRA_r16_,
      BandSidelinkEUTRA_r16_gnb_ScheduledMode4SidelinkEUTRA_r16 gnb_ScheduledMode4SidelinkEUTRA_r16_
   ) {
      super();
      freqBandSidelinkEUTRA_r16 = new FreqBandIndicatorEUTRA (freqBandSidelinkEUTRA_r16_);
      gnb_ScheduledMode3SidelinkEUTRA_r16 = gnb_ScheduledMode3SidelinkEUTRA_r16_;
      gnb_ScheduledMode4SidelinkEUTRA_r16 = gnb_ScheduledMode4SidelinkEUTRA_r16_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public BandSidelinkEUTRA_r16 (
      long freqBandSidelinkEUTRA_r16_
   ) {
      super();
      freqBandSidelinkEUTRA_r16 = new FreqBandIndicatorEUTRA (freqBandSidelinkEUTRA_r16_);
   }

   public void init () {
      freqBandSidelinkEUTRA_r16 = null;
      gnb_ScheduledMode3SidelinkEUTRA_r16 = null;
      gnb_ScheduledMode4SidelinkEUTRA_r16 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return freqBandSidelinkEUTRA_r16;
         case 1: return gnb_ScheduledMode3SidelinkEUTRA_r16;
         case 2: return gnb_ScheduledMode4SidelinkEUTRA_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "freqBandSidelinkEUTRA-r16";
         case 1: return "gnb-ScheduledMode3SidelinkEUTRA-r16";
         case 2: return "gnb-ScheduledMode4SidelinkEUTRA-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean gnb_ScheduledMode3SidelinkEUTRA_r16Present = buffer.decodeBit ("gnb_ScheduledMode3SidelinkEUTRA_r16Present");
      boolean gnb_ScheduledMode4SidelinkEUTRA_r16Present = buffer.decodeBit ("gnb_ScheduledMode4SidelinkEUTRA_r16Present");

      // decode freqBandSidelinkEUTRA_r16

      buffer.getContext().eventDispatcher.startElement("freqBandSidelinkEUTRA_r16", -1);

      freqBandSidelinkEUTRA_r16 = new FreqBandIndicatorEUTRA();
      freqBandSidelinkEUTRA_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("freqBandSidelinkEUTRA_r16", -1);

      // decode gnb_ScheduledMode3SidelinkEUTRA_r16

      if (gnb_ScheduledMode3SidelinkEUTRA_r16Present) {
         buffer.getContext().eventDispatcher.startElement("gnb_ScheduledMode3SidelinkEUTRA_r16", -1);

         gnb_ScheduledMode3SidelinkEUTRA_r16 = new BandSidelinkEUTRA_r16_gnb_ScheduledMode3SidelinkEUTRA_r16();
         gnb_ScheduledMode3SidelinkEUTRA_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("gnb_ScheduledMode3SidelinkEUTRA_r16", -1);
      }
      else {
         gnb_ScheduledMode3SidelinkEUTRA_r16 = null;
      }

      // decode gnb_ScheduledMode4SidelinkEUTRA_r16

      if (gnb_ScheduledMode4SidelinkEUTRA_r16Present) {
         buffer.getContext().eventDispatcher.startElement("gnb_ScheduledMode4SidelinkEUTRA_r16", -1);

         int tval = BandSidelinkEUTRA_r16_gnb_ScheduledMode4SidelinkEUTRA_r16.decodeEnumValue (buffer);
         gnb_ScheduledMode4SidelinkEUTRA_r16 = BandSidelinkEUTRA_r16_gnb_ScheduledMode4SidelinkEUTRA_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("gnb_ScheduledMode4SidelinkEUTRA_r16", -1);
      }
      else {
         gnb_ScheduledMode4SidelinkEUTRA_r16 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((gnb_ScheduledMode3SidelinkEUTRA_r16 != null), null);
      buffer.encodeBit ((gnb_ScheduledMode4SidelinkEUTRA_r16 != null), null);

      // encode freqBandSidelinkEUTRA_r16

      if (freqBandSidelinkEUTRA_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("freqBandSidelinkEUTRA_r16", -1);

         freqBandSidelinkEUTRA_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("freqBandSidelinkEUTRA_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("freqBandSidelinkEUTRA_r16");

      // encode gnb_ScheduledMode3SidelinkEUTRA_r16

      if (gnb_ScheduledMode3SidelinkEUTRA_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("gnb_ScheduledMode3SidelinkEUTRA_r16", -1);

         gnb_ScheduledMode3SidelinkEUTRA_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("gnb_ScheduledMode3SidelinkEUTRA_r16", -1);
      }

      // encode gnb_ScheduledMode4SidelinkEUTRA_r16

      if (gnb_ScheduledMode4SidelinkEUTRA_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("gnb_ScheduledMode4SidelinkEUTRA_r16", -1);

         gnb_ScheduledMode4SidelinkEUTRA_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("gnb_ScheduledMode4SidelinkEUTRA_r16", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (freqBandSidelinkEUTRA_r16 != null) freqBandSidelinkEUTRA_r16.print (_sb, "freqBandSidelinkEUTRA_r16", _level+1);
      if (gnb_ScheduledMode3SidelinkEUTRA_r16 != null) gnb_ScheduledMode3SidelinkEUTRA_r16.print (_sb, "gnb_ScheduledMode3SidelinkEUTRA_r16", _level+1);
      if (gnb_ScheduledMode4SidelinkEUTRA_r16 != null) gnb_ScheduledMode4SidelinkEUTRA_r16.print (_sb, "gnb_ScheduledMode4SidelinkEUTRA_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
