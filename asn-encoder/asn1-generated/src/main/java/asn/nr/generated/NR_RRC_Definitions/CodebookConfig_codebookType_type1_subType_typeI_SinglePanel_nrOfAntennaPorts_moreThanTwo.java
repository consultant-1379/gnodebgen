/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2 n1_n2;
   public Asn1BitString typeI_SinglePanel_codebookSubsetRestriction_i2;  // optional

   public CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo (
      CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2 n1_n2_,
      Asn1BitString typeI_SinglePanel_codebookSubsetRestriction_i2_
   ) {
      super();
      n1_n2 = n1_n2_;
      typeI_SinglePanel_codebookSubsetRestriction_i2 = typeI_SinglePanel_codebookSubsetRestriction_i2_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo (
      CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2 n1_n2_
   ) {
      super();
      n1_n2 = n1_n2_;
   }

   public void init () {
      n1_n2 = null;
      typeI_SinglePanel_codebookSubsetRestriction_i2 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return n1_n2;
         case 1: return typeI_SinglePanel_codebookSubsetRestriction_i2;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "n1-n2";
         case 1: return "typeI-SinglePanel-codebookSubsetRestriction-i2";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean typeI_SinglePanel_codebookSubsetRestriction_i2Present = buffer.decodeBit ("typeI_SinglePanel_codebookSubsetRestriction_i2Present");

      // decode n1_n2

      buffer.getContext().eventDispatcher.startElement("n1_n2", -1);

      n1_n2 = new CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2();
      n1_n2.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("n1_n2", -1);

      // decode typeI_SinglePanel_codebookSubsetRestriction_i2

      if (typeI_SinglePanel_codebookSubsetRestriction_i2Present) {
         buffer.getContext().eventDispatcher.startElement("typeI_SinglePanel_codebookSubsetRestriction_i2", -1);

         typeI_SinglePanel_codebookSubsetRestriction_i2 = new Asn1BitString();
         typeI_SinglePanel_codebookSubsetRestriction_i2.decode (buffer, 16, 16);

         buffer.invokeCharacters(typeI_SinglePanel_codebookSubsetRestriction_i2.toString());
         buffer.getContext().eventDispatcher.endElement("typeI_SinglePanel_codebookSubsetRestriction_i2", -1);
      }
      else {
         typeI_SinglePanel_codebookSubsetRestriction_i2 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((typeI_SinglePanel_codebookSubsetRestriction_i2 != null), null);

      // encode n1_n2

      if (n1_n2 != null) {
         buffer.getContext().eventDispatcher.startElement("n1_n2", -1);

         n1_n2.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("n1_n2", -1);
      }
      else throw new Asn1MissingRequiredException ("n1_n2");

      // encode typeI_SinglePanel_codebookSubsetRestriction_i2

      if (typeI_SinglePanel_codebookSubsetRestriction_i2 != null) {
         buffer.getContext().eventDispatcher.startElement("typeI_SinglePanel_codebookSubsetRestriction_i2", -1);

         typeI_SinglePanel_codebookSubsetRestriction_i2.encode (buffer, 16, 16);

         buffer.getContext().eventDispatcher.endElement("typeI_SinglePanel_codebookSubsetRestriction_i2", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (n1_n2 != null) n1_n2.print (_sb, "n1_n2", _level+1);
      if (typeI_SinglePanel_codebookSubsetRestriction_i2 != null) typeI_SinglePanel_codebookSubsetRestriction_i2.print (_sb, "typeI_SinglePanel_codebookSubsetRestriction_i2", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
