/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class FailureInfoDAPS_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "FailureInfoDAPS-r16";
   }

   public FailureInfoDAPS_r16_failureType_r16 failureType_r16 = null;

   public FailureInfoDAPS_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public FailureInfoDAPS_r16 (
      FailureInfoDAPS_r16_failureType_r16 failureType_r16_
   ) {
      super();
      failureType_r16 = failureType_r16_;
   }

   public void init () {
      failureType_r16 = null;
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return failureType_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "failureType-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode failureType_r16

      buffer.getContext().eventDispatcher.startElement("failureType_r16", -1);

      {
         int tval = FailureInfoDAPS_r16_failureType_r16.decodeEnumValue (buffer);
         failureType_r16 = FailureInfoDAPS_r16_failureType_r16.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("failureType_r16", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode failureType_r16

      if (failureType_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("failureType_r16", -1);

         failureType_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("failureType_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("failureType_r16");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (failureType_r16 != null) failureType_r16.print (_sb, "failureType_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
