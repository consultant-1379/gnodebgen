/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class DRX_Preference_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "DRX-Preference-r16";
   }

   public DRX_Preference_r16_preferredDRX_InactivityTimer_r16 preferredDRX_InactivityTimer_r16 = null;  // optional
   public DRX_Preference_r16_preferredDRX_LongCycle_r16 preferredDRX_LongCycle_r16 = null;  // optional
   public DRX_Preference_r16_preferredDRX_ShortCycle_r16 preferredDRX_ShortCycle_r16 = null;  // optional
   public Asn1Integer preferredDRX_ShortCycleTimer_r16;  // optional

   public DRX_Preference_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public DRX_Preference_r16 (
      DRX_Preference_r16_preferredDRX_InactivityTimer_r16 preferredDRX_InactivityTimer_r16_,
      DRX_Preference_r16_preferredDRX_LongCycle_r16 preferredDRX_LongCycle_r16_,
      DRX_Preference_r16_preferredDRX_ShortCycle_r16 preferredDRX_ShortCycle_r16_,
      Asn1Integer preferredDRX_ShortCycleTimer_r16_
   ) {
      super();
      preferredDRX_InactivityTimer_r16 = preferredDRX_InactivityTimer_r16_;
      preferredDRX_LongCycle_r16 = preferredDRX_LongCycle_r16_;
      preferredDRX_ShortCycle_r16 = preferredDRX_ShortCycle_r16_;
      preferredDRX_ShortCycleTimer_r16 = preferredDRX_ShortCycleTimer_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public DRX_Preference_r16 (DRX_Preference_r16_preferredDRX_InactivityTimer_r16 preferredDRX_InactivityTimer_r16_,
      DRX_Preference_r16_preferredDRX_LongCycle_r16 preferredDRX_LongCycle_r16_,
      DRX_Preference_r16_preferredDRX_ShortCycle_r16 preferredDRX_ShortCycle_r16_,
      long preferredDRX_ShortCycleTimer_r16_
   ) {
      super();
      preferredDRX_InactivityTimer_r16 = preferredDRX_InactivityTimer_r16_;
      preferredDRX_LongCycle_r16 = preferredDRX_LongCycle_r16_;
      preferredDRX_ShortCycle_r16 = preferredDRX_ShortCycle_r16_;
      preferredDRX_ShortCycleTimer_r16 = new Asn1Integer (preferredDRX_ShortCycleTimer_r16_);
   }

   public void init () {
      preferredDRX_InactivityTimer_r16 = null;
      preferredDRX_LongCycle_r16 = null;
      preferredDRX_ShortCycle_r16 = null;
      preferredDRX_ShortCycleTimer_r16 = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return preferredDRX_InactivityTimer_r16;
         case 1: return preferredDRX_LongCycle_r16;
         case 2: return preferredDRX_ShortCycle_r16;
         case 3: return preferredDRX_ShortCycleTimer_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "preferredDRX-InactivityTimer-r16";
         case 1: return "preferredDRX-LongCycle-r16";
         case 2: return "preferredDRX-ShortCycle-r16";
         case 3: return "preferredDRX-ShortCycleTimer-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean preferredDRX_InactivityTimer_r16Present = buffer.decodeBit ("preferredDRX_InactivityTimer_r16Present");
      boolean preferredDRX_LongCycle_r16Present = buffer.decodeBit ("preferredDRX_LongCycle_r16Present");
      boolean preferredDRX_ShortCycle_r16Present = buffer.decodeBit ("preferredDRX_ShortCycle_r16Present");
      boolean preferredDRX_ShortCycleTimer_r16Present = buffer.decodeBit ("preferredDRX_ShortCycleTimer_r16Present");

      // decode preferredDRX_InactivityTimer_r16

      if (preferredDRX_InactivityTimer_r16Present) {
         buffer.getContext().eventDispatcher.startElement("preferredDRX_InactivityTimer_r16", -1);

         int tval = DRX_Preference_r16_preferredDRX_InactivityTimer_r16.decodeEnumValue (buffer);
         preferredDRX_InactivityTimer_r16 = DRX_Preference_r16_preferredDRX_InactivityTimer_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("preferredDRX_InactivityTimer_r16", -1);
      }
      else {
         preferredDRX_InactivityTimer_r16 = null;
      }

      // decode preferredDRX_LongCycle_r16

      if (preferredDRX_LongCycle_r16Present) {
         buffer.getContext().eventDispatcher.startElement("preferredDRX_LongCycle_r16", -1);

         int tval = DRX_Preference_r16_preferredDRX_LongCycle_r16.decodeEnumValue (buffer);
         preferredDRX_LongCycle_r16 = DRX_Preference_r16_preferredDRX_LongCycle_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("preferredDRX_LongCycle_r16", -1);
      }
      else {
         preferredDRX_LongCycle_r16 = null;
      }

      // decode preferredDRX_ShortCycle_r16

      if (preferredDRX_ShortCycle_r16Present) {
         buffer.getContext().eventDispatcher.startElement("preferredDRX_ShortCycle_r16", -1);

         int tval = DRX_Preference_r16_preferredDRX_ShortCycle_r16.decodeEnumValue (buffer);
         preferredDRX_ShortCycle_r16 = DRX_Preference_r16_preferredDRX_ShortCycle_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("preferredDRX_ShortCycle_r16", -1);
      }
      else {
         preferredDRX_ShortCycle_r16 = null;
      }

      // decode preferredDRX_ShortCycleTimer_r16

      if (preferredDRX_ShortCycleTimer_r16Present) {
         buffer.getContext().eventDispatcher.startElement("preferredDRX_ShortCycleTimer_r16", -1);

         preferredDRX_ShortCycleTimer_r16 = new Asn1Integer();
         preferredDRX_ShortCycleTimer_r16.decode (buffer, 1, 16);

         buffer.invokeCharacters(preferredDRX_ShortCycleTimer_r16.toString());
         buffer.getContext().eventDispatcher.endElement("preferredDRX_ShortCycleTimer_r16", -1);
      }
      else {
         preferredDRX_ShortCycleTimer_r16 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((preferredDRX_InactivityTimer_r16 != null), null);
      buffer.encodeBit ((preferredDRX_LongCycle_r16 != null), null);
      buffer.encodeBit ((preferredDRX_ShortCycle_r16 != null), null);
      buffer.encodeBit ((preferredDRX_ShortCycleTimer_r16 != null), null);

      // encode preferredDRX_InactivityTimer_r16

      if (preferredDRX_InactivityTimer_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("preferredDRX_InactivityTimer_r16", -1);

         preferredDRX_InactivityTimer_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("preferredDRX_InactivityTimer_r16", -1);
      }

      // encode preferredDRX_LongCycle_r16

      if (preferredDRX_LongCycle_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("preferredDRX_LongCycle_r16", -1);

         preferredDRX_LongCycle_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("preferredDRX_LongCycle_r16", -1);
      }

      // encode preferredDRX_ShortCycle_r16

      if (preferredDRX_ShortCycle_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("preferredDRX_ShortCycle_r16", -1);

         preferredDRX_ShortCycle_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("preferredDRX_ShortCycle_r16", -1);
      }

      // encode preferredDRX_ShortCycleTimer_r16

      if (preferredDRX_ShortCycleTimer_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("preferredDRX_ShortCycleTimer_r16", -1);

         preferredDRX_ShortCycleTimer_r16.encode (buffer, 1, 16);

         buffer.getContext().eventDispatcher.endElement("preferredDRX_ShortCycleTimer_r16", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (preferredDRX_InactivityTimer_r16 != null) preferredDRX_InactivityTimer_r16.print (_sb, "preferredDRX_InactivityTimer_r16", _level+1);
      if (preferredDRX_LongCycle_r16 != null) preferredDRX_LongCycle_r16.print (_sb, "preferredDRX_LongCycle_r16", _level+1);
      if (preferredDRX_ShortCycle_r16 != null) preferredDRX_ShortCycle_r16.print (_sb, "preferredDRX_ShortCycle_r16", _level+1);
      if (preferredDRX_ShortCycleTimer_r16 != null) preferredDRX_ShortCycleTimer_r16.print (_sb, "preferredDRX_ShortCycleTimer_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
