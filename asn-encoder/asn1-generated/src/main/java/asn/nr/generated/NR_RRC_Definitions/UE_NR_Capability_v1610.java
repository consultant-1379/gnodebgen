/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UE_NR_Capability_v1610 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UE-NR-Capability-v1610";
   }

   public UE_NR_Capability_v1610_inDeviceCoexInd_r16 inDeviceCoexInd_r16 = null;  // optional
   public UE_NR_Capability_v1610_dl_DedicatedMessageSegmentation_r16 dl_DedicatedMessageSegmentation_r16 = null;  // optional
   public NRDC_Parameters_v1610 nrdc_Parameters_v1610;  // optional
   public PowSav_Parameters_r16 powSav_Parameters_r16;  // optional
   public UE_NR_CapabilityAddFRX_Mode_v1610 fr1_Add_UE_NR_Capabilities_v1610;  // optional
   public UE_NR_CapabilityAddFRX_Mode_v1610 fr2_Add_UE_NR_Capabilities_v1610;  // optional
   public UE_NR_Capability_v1610_bh_RLF_Indication_r16 bh_RLF_Indication_r16 = null;  // optional
   public UE_NR_Capability_v1610_directSN_AdditionFirstRRC_IAB_r16 directSN_AdditionFirstRRC_IAB_r16 = null;  // optional
   public BAP_Parameters_r16 bap_Parameters_r16;  // optional
   public UE_NR_Capability_v1610_referenceTimeProvision_r16 referenceTimeProvision_r16 = null;  // optional
   public SidelinkParameters_r16 sidelinkParameters_r16;  // optional
   public HighSpeedParameters_r16 highSpeedParameters_r16;  // optional
   public MAC_Parameters_v1610 mac_Parameters_v1610;  // optional
   public UE_NR_Capability_v1610_mcgRLF_RecoveryViaSCG_r16 mcgRLF_RecoveryViaSCG_r16 = null;  // optional
   public UE_NR_Capability_v1610_resumeWithStoredMCG_SCells_r16 resumeWithStoredMCG_SCells_r16 = null;  // optional
   public UE_NR_Capability_v1610_resumeWithStoredSCG_r16 resumeWithStoredSCG_r16 = null;  // optional
   public UE_NR_Capability_v1610_resumeWithSCG_Config_r16 resumeWithSCG_Config_r16 = null;  // optional
   public UE_BasedPerfMeas_Parameters_r16 ue_BasedPerfMeas_Parameters_r16;  // optional
   public SON_Parameters_r16 son_Parameters_r16;  // optional
   public UE_NR_Capability_v1610_onDemandSIB_Connected_r16 onDemandSIB_Connected_r16 = null;  // optional
   public UE_NR_Capability_v1640 nonCriticalExtension;  // optional

   public UE_NR_Capability_v1610 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UE_NR_Capability_v1610 (
      UE_NR_Capability_v1610_inDeviceCoexInd_r16 inDeviceCoexInd_r16_,
      UE_NR_Capability_v1610_dl_DedicatedMessageSegmentation_r16 dl_DedicatedMessageSegmentation_r16_,
      NRDC_Parameters_v1610 nrdc_Parameters_v1610_,
      PowSav_Parameters_r16 powSav_Parameters_r16_,
      UE_NR_CapabilityAddFRX_Mode_v1610 fr1_Add_UE_NR_Capabilities_v1610_,
      UE_NR_CapabilityAddFRX_Mode_v1610 fr2_Add_UE_NR_Capabilities_v1610_,
      UE_NR_Capability_v1610_bh_RLF_Indication_r16 bh_RLF_Indication_r16_,
      UE_NR_Capability_v1610_directSN_AdditionFirstRRC_IAB_r16 directSN_AdditionFirstRRC_IAB_r16_,
      BAP_Parameters_r16 bap_Parameters_r16_,
      UE_NR_Capability_v1610_referenceTimeProvision_r16 referenceTimeProvision_r16_,
      SidelinkParameters_r16 sidelinkParameters_r16_,
      HighSpeedParameters_r16 highSpeedParameters_r16_,
      MAC_Parameters_v1610 mac_Parameters_v1610_,
      UE_NR_Capability_v1610_mcgRLF_RecoveryViaSCG_r16 mcgRLF_RecoveryViaSCG_r16_,
      UE_NR_Capability_v1610_resumeWithStoredMCG_SCells_r16 resumeWithStoredMCG_SCells_r16_,
      UE_NR_Capability_v1610_resumeWithStoredSCG_r16 resumeWithStoredSCG_r16_,
      UE_NR_Capability_v1610_resumeWithSCG_Config_r16 resumeWithSCG_Config_r16_,
      UE_BasedPerfMeas_Parameters_r16 ue_BasedPerfMeas_Parameters_r16_,
      SON_Parameters_r16 son_Parameters_r16_,
      UE_NR_Capability_v1610_onDemandSIB_Connected_r16 onDemandSIB_Connected_r16_,
      UE_NR_Capability_v1640 nonCriticalExtension_
   ) {
      super();
      inDeviceCoexInd_r16 = inDeviceCoexInd_r16_;
      dl_DedicatedMessageSegmentation_r16 = dl_DedicatedMessageSegmentation_r16_;
      nrdc_Parameters_v1610 = nrdc_Parameters_v1610_;
      powSav_Parameters_r16 = powSav_Parameters_r16_;
      fr1_Add_UE_NR_Capabilities_v1610 = fr1_Add_UE_NR_Capabilities_v1610_;
      fr2_Add_UE_NR_Capabilities_v1610 = fr2_Add_UE_NR_Capabilities_v1610_;
      bh_RLF_Indication_r16 = bh_RLF_Indication_r16_;
      directSN_AdditionFirstRRC_IAB_r16 = directSN_AdditionFirstRRC_IAB_r16_;
      bap_Parameters_r16 = bap_Parameters_r16_;
      referenceTimeProvision_r16 = referenceTimeProvision_r16_;
      sidelinkParameters_r16 = sidelinkParameters_r16_;
      highSpeedParameters_r16 = highSpeedParameters_r16_;
      mac_Parameters_v1610 = mac_Parameters_v1610_;
      mcgRLF_RecoveryViaSCG_r16 = mcgRLF_RecoveryViaSCG_r16_;
      resumeWithStoredMCG_SCells_r16 = resumeWithStoredMCG_SCells_r16_;
      resumeWithStoredSCG_r16 = resumeWithStoredSCG_r16_;
      resumeWithSCG_Config_r16 = resumeWithSCG_Config_r16_;
      ue_BasedPerfMeas_Parameters_r16 = ue_BasedPerfMeas_Parameters_r16_;
      son_Parameters_r16 = son_Parameters_r16_;
      onDemandSIB_Connected_r16 = onDemandSIB_Connected_r16_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      inDeviceCoexInd_r16 = null;
      dl_DedicatedMessageSegmentation_r16 = null;
      nrdc_Parameters_v1610 = null;
      powSav_Parameters_r16 = null;
      fr1_Add_UE_NR_Capabilities_v1610 = null;
      fr2_Add_UE_NR_Capabilities_v1610 = null;
      bh_RLF_Indication_r16 = null;
      directSN_AdditionFirstRRC_IAB_r16 = null;
      bap_Parameters_r16 = null;
      referenceTimeProvision_r16 = null;
      sidelinkParameters_r16 = null;
      highSpeedParameters_r16 = null;
      mac_Parameters_v1610 = null;
      mcgRLF_RecoveryViaSCG_r16 = null;
      resumeWithStoredMCG_SCells_r16 = null;
      resumeWithStoredSCG_r16 = null;
      resumeWithSCG_Config_r16 = null;
      ue_BasedPerfMeas_Parameters_r16 = null;
      son_Parameters_r16 = null;
      onDemandSIB_Connected_r16 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 21; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return inDeviceCoexInd_r16;
         case 1: return dl_DedicatedMessageSegmentation_r16;
         case 2: return nrdc_Parameters_v1610;
         case 3: return powSav_Parameters_r16;
         case 4: return fr1_Add_UE_NR_Capabilities_v1610;
         case 5: return fr2_Add_UE_NR_Capabilities_v1610;
         case 6: return bh_RLF_Indication_r16;
         case 7: return directSN_AdditionFirstRRC_IAB_r16;
         case 8: return bap_Parameters_r16;
         case 9: return referenceTimeProvision_r16;
         case 10: return sidelinkParameters_r16;
         case 11: return highSpeedParameters_r16;
         case 12: return mac_Parameters_v1610;
         case 13: return mcgRLF_RecoveryViaSCG_r16;
         case 14: return resumeWithStoredMCG_SCells_r16;
         case 15: return resumeWithStoredSCG_r16;
         case 16: return resumeWithSCG_Config_r16;
         case 17: return ue_BasedPerfMeas_Parameters_r16;
         case 18: return son_Parameters_r16;
         case 19: return onDemandSIB_Connected_r16;
         case 20: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "inDeviceCoexInd-r16";
         case 1: return "dl-DedicatedMessageSegmentation-r16";
         case 2: return "nrdc-Parameters-v1610";
         case 3: return "powSav-Parameters-r16";
         case 4: return "fr1-Add-UE-NR-Capabilities-v1610";
         case 5: return "fr2-Add-UE-NR-Capabilities-v1610";
         case 6: return "bh-RLF-Indication-r16";
         case 7: return "directSN-AdditionFirstRRC-IAB-r16";
         case 8: return "bap-Parameters-r16";
         case 9: return "referenceTimeProvision-r16";
         case 10: return "sidelinkParameters-r16";
         case 11: return "highSpeedParameters-r16";
         case 12: return "mac-Parameters-v1610";
         case 13: return "mcgRLF-RecoveryViaSCG-r16";
         case 14: return "resumeWithStoredMCG-SCells-r16";
         case 15: return "resumeWithStoredSCG-r16";
         case 16: return "resumeWithSCG-Config-r16";
         case 17: return "ue-BasedPerfMeas-Parameters-r16";
         case 18: return "son-Parameters-r16";
         case 19: return "onDemandSIB-Connected-r16";
         case 20: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean inDeviceCoexInd_r16Present = buffer.decodeBit ("inDeviceCoexInd_r16Present");
      boolean dl_DedicatedMessageSegmentation_r16Present = buffer.decodeBit ("dl_DedicatedMessageSegmentation_r16Present");
      boolean nrdc_Parameters_v1610Present = buffer.decodeBit ("nrdc_Parameters_v1610Present");
      boolean powSav_Parameters_r16Present = buffer.decodeBit ("powSav_Parameters_r16Present");
      boolean fr1_Add_UE_NR_Capabilities_v1610Present = buffer.decodeBit ("fr1_Add_UE_NR_Capabilities_v1610Present");
      boolean fr2_Add_UE_NR_Capabilities_v1610Present = buffer.decodeBit ("fr2_Add_UE_NR_Capabilities_v1610Present");
      boolean bh_RLF_Indication_r16Present = buffer.decodeBit ("bh_RLF_Indication_r16Present");
      boolean directSN_AdditionFirstRRC_IAB_r16Present = buffer.decodeBit ("directSN_AdditionFirstRRC_IAB_r16Present");
      boolean bap_Parameters_r16Present = buffer.decodeBit ("bap_Parameters_r16Present");
      boolean referenceTimeProvision_r16Present = buffer.decodeBit ("referenceTimeProvision_r16Present");
      boolean sidelinkParameters_r16Present = buffer.decodeBit ("sidelinkParameters_r16Present");
      boolean highSpeedParameters_r16Present = buffer.decodeBit ("highSpeedParameters_r16Present");
      boolean mac_Parameters_v1610Present = buffer.decodeBit ("mac_Parameters_v1610Present");
      boolean mcgRLF_RecoveryViaSCG_r16Present = buffer.decodeBit ("mcgRLF_RecoveryViaSCG_r16Present");
      boolean resumeWithStoredMCG_SCells_r16Present = buffer.decodeBit ("resumeWithStoredMCG_SCells_r16Present");
      boolean resumeWithStoredSCG_r16Present = buffer.decodeBit ("resumeWithStoredSCG_r16Present");
      boolean resumeWithSCG_Config_r16Present = buffer.decodeBit ("resumeWithSCG_Config_r16Present");
      boolean ue_BasedPerfMeas_Parameters_r16Present = buffer.decodeBit ("ue_BasedPerfMeas_Parameters_r16Present");
      boolean son_Parameters_r16Present = buffer.decodeBit ("son_Parameters_r16Present");
      boolean onDemandSIB_Connected_r16Present = buffer.decodeBit ("onDemandSIB_Connected_r16Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode inDeviceCoexInd_r16

      if (inDeviceCoexInd_r16Present) {
         buffer.getContext().eventDispatcher.startElement("inDeviceCoexInd_r16", -1);

         int tval = UE_NR_Capability_v1610_inDeviceCoexInd_r16.decodeEnumValue (buffer);
         inDeviceCoexInd_r16 = UE_NR_Capability_v1610_inDeviceCoexInd_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("inDeviceCoexInd_r16", -1);
      }
      else {
         inDeviceCoexInd_r16 = null;
      }

      // decode dl_DedicatedMessageSegmentation_r16

      if (dl_DedicatedMessageSegmentation_r16Present) {
         buffer.getContext().eventDispatcher.startElement("dl_DedicatedMessageSegmentation_r16", -1);

         int tval = UE_NR_Capability_v1610_dl_DedicatedMessageSegmentation_r16.decodeEnumValue (buffer);
         dl_DedicatedMessageSegmentation_r16 = UE_NR_Capability_v1610_dl_DedicatedMessageSegmentation_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("dl_DedicatedMessageSegmentation_r16", -1);
      }
      else {
         dl_DedicatedMessageSegmentation_r16 = null;
      }

      // decode nrdc_Parameters_v1610

      if (nrdc_Parameters_v1610Present) {
         buffer.getContext().eventDispatcher.startElement("nrdc_Parameters_v1610", -1);

         nrdc_Parameters_v1610 = new NRDC_Parameters_v1610();
         nrdc_Parameters_v1610.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nrdc_Parameters_v1610", -1);
      }
      else {
         nrdc_Parameters_v1610 = null;
      }

      // decode powSav_Parameters_r16

      if (powSav_Parameters_r16Present) {
         buffer.getContext().eventDispatcher.startElement("powSav_Parameters_r16", -1);

         powSav_Parameters_r16 = new PowSav_Parameters_r16();
         powSav_Parameters_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("powSav_Parameters_r16", -1);
      }
      else {
         powSav_Parameters_r16 = null;
      }

      // decode fr1_Add_UE_NR_Capabilities_v1610

      if (fr1_Add_UE_NR_Capabilities_v1610Present) {
         buffer.getContext().eventDispatcher.startElement("fr1_Add_UE_NR_Capabilities_v1610", -1);

         fr1_Add_UE_NR_Capabilities_v1610 = new UE_NR_CapabilityAddFRX_Mode_v1610();
         fr1_Add_UE_NR_Capabilities_v1610.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("fr1_Add_UE_NR_Capabilities_v1610", -1);
      }
      else {
         fr1_Add_UE_NR_Capabilities_v1610 = null;
      }

      // decode fr2_Add_UE_NR_Capabilities_v1610

      if (fr2_Add_UE_NR_Capabilities_v1610Present) {
         buffer.getContext().eventDispatcher.startElement("fr2_Add_UE_NR_Capabilities_v1610", -1);

         fr2_Add_UE_NR_Capabilities_v1610 = new UE_NR_CapabilityAddFRX_Mode_v1610();
         fr2_Add_UE_NR_Capabilities_v1610.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("fr2_Add_UE_NR_Capabilities_v1610", -1);
      }
      else {
         fr2_Add_UE_NR_Capabilities_v1610 = null;
      }

      // decode bh_RLF_Indication_r16

      if (bh_RLF_Indication_r16Present) {
         buffer.getContext().eventDispatcher.startElement("bh_RLF_Indication_r16", -1);

         int tval = UE_NR_Capability_v1610_bh_RLF_Indication_r16.decodeEnumValue (buffer);
         bh_RLF_Indication_r16 = UE_NR_Capability_v1610_bh_RLF_Indication_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("bh_RLF_Indication_r16", -1);
      }
      else {
         bh_RLF_Indication_r16 = null;
      }

      // decode directSN_AdditionFirstRRC_IAB_r16

      if (directSN_AdditionFirstRRC_IAB_r16Present) {
         buffer.getContext().eventDispatcher.startElement("directSN_AdditionFirstRRC_IAB_r16", -1);

         int tval = UE_NR_Capability_v1610_directSN_AdditionFirstRRC_IAB_r16.decodeEnumValue (buffer);
         directSN_AdditionFirstRRC_IAB_r16 = UE_NR_Capability_v1610_directSN_AdditionFirstRRC_IAB_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("directSN_AdditionFirstRRC_IAB_r16", -1);
      }
      else {
         directSN_AdditionFirstRRC_IAB_r16 = null;
      }

      // decode bap_Parameters_r16

      if (bap_Parameters_r16Present) {
         buffer.getContext().eventDispatcher.startElement("bap_Parameters_r16", -1);

         bap_Parameters_r16 = new BAP_Parameters_r16();
         bap_Parameters_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bap_Parameters_r16", -1);
      }
      else {
         bap_Parameters_r16 = null;
      }

      // decode referenceTimeProvision_r16

      if (referenceTimeProvision_r16Present) {
         buffer.getContext().eventDispatcher.startElement("referenceTimeProvision_r16", -1);

         int tval = UE_NR_Capability_v1610_referenceTimeProvision_r16.decodeEnumValue (buffer);
         referenceTimeProvision_r16 = UE_NR_Capability_v1610_referenceTimeProvision_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("referenceTimeProvision_r16", -1);
      }
      else {
         referenceTimeProvision_r16 = null;
      }

      // decode sidelinkParameters_r16

      if (sidelinkParameters_r16Present) {
         buffer.getContext().eventDispatcher.startElement("sidelinkParameters_r16", -1);

         sidelinkParameters_r16 = new SidelinkParameters_r16();
         sidelinkParameters_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sidelinkParameters_r16", -1);
      }
      else {
         sidelinkParameters_r16 = null;
      }

      // decode highSpeedParameters_r16

      if (highSpeedParameters_r16Present) {
         buffer.getContext().eventDispatcher.startElement("highSpeedParameters_r16", -1);

         highSpeedParameters_r16 = new HighSpeedParameters_r16();
         highSpeedParameters_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("highSpeedParameters_r16", -1);
      }
      else {
         highSpeedParameters_r16 = null;
      }

      // decode mac_Parameters_v1610

      if (mac_Parameters_v1610Present) {
         buffer.getContext().eventDispatcher.startElement("mac_Parameters_v1610", -1);

         mac_Parameters_v1610 = new MAC_Parameters_v1610();
         mac_Parameters_v1610.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mac_Parameters_v1610", -1);
      }
      else {
         mac_Parameters_v1610 = null;
      }

      // decode mcgRLF_RecoveryViaSCG_r16

      if (mcgRLF_RecoveryViaSCG_r16Present) {
         buffer.getContext().eventDispatcher.startElement("mcgRLF_RecoveryViaSCG_r16", -1);

         int tval = UE_NR_Capability_v1610_mcgRLF_RecoveryViaSCG_r16.decodeEnumValue (buffer);
         mcgRLF_RecoveryViaSCG_r16 = UE_NR_Capability_v1610_mcgRLF_RecoveryViaSCG_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("mcgRLF_RecoveryViaSCG_r16", -1);
      }
      else {
         mcgRLF_RecoveryViaSCG_r16 = null;
      }

      // decode resumeWithStoredMCG_SCells_r16

      if (resumeWithStoredMCG_SCells_r16Present) {
         buffer.getContext().eventDispatcher.startElement("resumeWithStoredMCG_SCells_r16", -1);

         int tval = UE_NR_Capability_v1610_resumeWithStoredMCG_SCells_r16.decodeEnumValue (buffer);
         resumeWithStoredMCG_SCells_r16 = UE_NR_Capability_v1610_resumeWithStoredMCG_SCells_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("resumeWithStoredMCG_SCells_r16", -1);
      }
      else {
         resumeWithStoredMCG_SCells_r16 = null;
      }

      // decode resumeWithStoredSCG_r16

      if (resumeWithStoredSCG_r16Present) {
         buffer.getContext().eventDispatcher.startElement("resumeWithStoredSCG_r16", -1);

         int tval = UE_NR_Capability_v1610_resumeWithStoredSCG_r16.decodeEnumValue (buffer);
         resumeWithStoredSCG_r16 = UE_NR_Capability_v1610_resumeWithStoredSCG_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("resumeWithStoredSCG_r16", -1);
      }
      else {
         resumeWithStoredSCG_r16 = null;
      }

      // decode resumeWithSCG_Config_r16

      if (resumeWithSCG_Config_r16Present) {
         buffer.getContext().eventDispatcher.startElement("resumeWithSCG_Config_r16", -1);

         int tval = UE_NR_Capability_v1610_resumeWithSCG_Config_r16.decodeEnumValue (buffer);
         resumeWithSCG_Config_r16 = UE_NR_Capability_v1610_resumeWithSCG_Config_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("resumeWithSCG_Config_r16", -1);
      }
      else {
         resumeWithSCG_Config_r16 = null;
      }

      // decode ue_BasedPerfMeas_Parameters_r16

      if (ue_BasedPerfMeas_Parameters_r16Present) {
         buffer.getContext().eventDispatcher.startElement("ue_BasedPerfMeas_Parameters_r16", -1);

         ue_BasedPerfMeas_Parameters_r16 = new UE_BasedPerfMeas_Parameters_r16();
         ue_BasedPerfMeas_Parameters_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ue_BasedPerfMeas_Parameters_r16", -1);
      }
      else {
         ue_BasedPerfMeas_Parameters_r16 = null;
      }

      // decode son_Parameters_r16

      if (son_Parameters_r16Present) {
         buffer.getContext().eventDispatcher.startElement("son_Parameters_r16", -1);

         son_Parameters_r16 = new SON_Parameters_r16();
         son_Parameters_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("son_Parameters_r16", -1);
      }
      else {
         son_Parameters_r16 = null;
      }

      // decode onDemandSIB_Connected_r16

      if (onDemandSIB_Connected_r16Present) {
         buffer.getContext().eventDispatcher.startElement("onDemandSIB_Connected_r16", -1);

         int tval = UE_NR_Capability_v1610_onDemandSIB_Connected_r16.decodeEnumValue (buffer);
         onDemandSIB_Connected_r16 = UE_NR_Capability_v1610_onDemandSIB_Connected_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("onDemandSIB_Connected_r16", -1);
      }
      else {
         onDemandSIB_Connected_r16 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new UE_NR_Capability_v1640();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((inDeviceCoexInd_r16 != null), null);
      buffer.encodeBit ((dl_DedicatedMessageSegmentation_r16 != null), null);
      buffer.encodeBit ((nrdc_Parameters_v1610 != null), null);
      buffer.encodeBit ((powSav_Parameters_r16 != null), null);
      buffer.encodeBit ((fr1_Add_UE_NR_Capabilities_v1610 != null), null);
      buffer.encodeBit ((fr2_Add_UE_NR_Capabilities_v1610 != null), null);
      buffer.encodeBit ((bh_RLF_Indication_r16 != null), null);
      buffer.encodeBit ((directSN_AdditionFirstRRC_IAB_r16 != null), null);
      buffer.encodeBit ((bap_Parameters_r16 != null), null);
      buffer.encodeBit ((referenceTimeProvision_r16 != null), null);
      buffer.encodeBit ((sidelinkParameters_r16 != null), null);
      buffer.encodeBit ((highSpeedParameters_r16 != null), null);
      buffer.encodeBit ((mac_Parameters_v1610 != null), null);
      buffer.encodeBit ((mcgRLF_RecoveryViaSCG_r16 != null), null);
      buffer.encodeBit ((resumeWithStoredMCG_SCells_r16 != null), null);
      buffer.encodeBit ((resumeWithStoredSCG_r16 != null), null);
      buffer.encodeBit ((resumeWithSCG_Config_r16 != null), null);
      buffer.encodeBit ((ue_BasedPerfMeas_Parameters_r16 != null), null);
      buffer.encodeBit ((son_Parameters_r16 != null), null);
      buffer.encodeBit ((onDemandSIB_Connected_r16 != null), null);
      buffer.encodeBit ((nonCriticalExtension != null), null);

      // encode inDeviceCoexInd_r16

      if (inDeviceCoexInd_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("inDeviceCoexInd_r16", -1);

         inDeviceCoexInd_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("inDeviceCoexInd_r16", -1);
      }

      // encode dl_DedicatedMessageSegmentation_r16

      if (dl_DedicatedMessageSegmentation_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("dl_DedicatedMessageSegmentation_r16", -1);

         dl_DedicatedMessageSegmentation_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("dl_DedicatedMessageSegmentation_r16", -1);
      }

      // encode nrdc_Parameters_v1610

      if (nrdc_Parameters_v1610 != null) {
         buffer.getContext().eventDispatcher.startElement("nrdc_Parameters_v1610", -1);

         nrdc_Parameters_v1610.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("nrdc_Parameters_v1610", -1);
      }

      // encode powSav_Parameters_r16

      if (powSav_Parameters_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("powSav_Parameters_r16", -1);

         powSav_Parameters_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("powSav_Parameters_r16", -1);
      }

      // encode fr1_Add_UE_NR_Capabilities_v1610

      if (fr1_Add_UE_NR_Capabilities_v1610 != null) {
         buffer.getContext().eventDispatcher.startElement("fr1_Add_UE_NR_Capabilities_v1610", -1);

         fr1_Add_UE_NR_Capabilities_v1610.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("fr1_Add_UE_NR_Capabilities_v1610", -1);
      }

      // encode fr2_Add_UE_NR_Capabilities_v1610

      if (fr2_Add_UE_NR_Capabilities_v1610 != null) {
         buffer.getContext().eventDispatcher.startElement("fr2_Add_UE_NR_Capabilities_v1610", -1);

         fr2_Add_UE_NR_Capabilities_v1610.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("fr2_Add_UE_NR_Capabilities_v1610", -1);
      }

      // encode bh_RLF_Indication_r16

      if (bh_RLF_Indication_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bh_RLF_Indication_r16", -1);

         bh_RLF_Indication_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("bh_RLF_Indication_r16", -1);
      }

      // encode directSN_AdditionFirstRRC_IAB_r16

      if (directSN_AdditionFirstRRC_IAB_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("directSN_AdditionFirstRRC_IAB_r16", -1);

         directSN_AdditionFirstRRC_IAB_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("directSN_AdditionFirstRRC_IAB_r16", -1);
      }

      // encode bap_Parameters_r16

      if (bap_Parameters_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bap_Parameters_r16", -1);

         bap_Parameters_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("bap_Parameters_r16", -1);
      }

      // encode referenceTimeProvision_r16

      if (referenceTimeProvision_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("referenceTimeProvision_r16", -1);

         referenceTimeProvision_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("referenceTimeProvision_r16", -1);
      }

      // encode sidelinkParameters_r16

      if (sidelinkParameters_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sidelinkParameters_r16", -1);

         sidelinkParameters_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("sidelinkParameters_r16", -1);
      }

      // encode highSpeedParameters_r16

      if (highSpeedParameters_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("highSpeedParameters_r16", -1);

         highSpeedParameters_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("highSpeedParameters_r16", -1);
      }

      // encode mac_Parameters_v1610

      if (mac_Parameters_v1610 != null) {
         buffer.getContext().eventDispatcher.startElement("mac_Parameters_v1610", -1);

         mac_Parameters_v1610.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("mac_Parameters_v1610", -1);
      }

      // encode mcgRLF_RecoveryViaSCG_r16

      if (mcgRLF_RecoveryViaSCG_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("mcgRLF_RecoveryViaSCG_r16", -1);

         mcgRLF_RecoveryViaSCG_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("mcgRLF_RecoveryViaSCG_r16", -1);
      }

      // encode resumeWithStoredMCG_SCells_r16

      if (resumeWithStoredMCG_SCells_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("resumeWithStoredMCG_SCells_r16", -1);

         resumeWithStoredMCG_SCells_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("resumeWithStoredMCG_SCells_r16", -1);
      }

      // encode resumeWithStoredSCG_r16

      if (resumeWithStoredSCG_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("resumeWithStoredSCG_r16", -1);

         resumeWithStoredSCG_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("resumeWithStoredSCG_r16", -1);
      }

      // encode resumeWithSCG_Config_r16

      if (resumeWithSCG_Config_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("resumeWithSCG_Config_r16", -1);

         resumeWithSCG_Config_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("resumeWithSCG_Config_r16", -1);
      }

      // encode ue_BasedPerfMeas_Parameters_r16

      if (ue_BasedPerfMeas_Parameters_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("ue_BasedPerfMeas_Parameters_r16", -1);

         ue_BasedPerfMeas_Parameters_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ue_BasedPerfMeas_Parameters_r16", -1);
      }

      // encode son_Parameters_r16

      if (son_Parameters_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("son_Parameters_r16", -1);

         son_Parameters_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("son_Parameters_r16", -1);
      }

      // encode onDemandSIB_Connected_r16

      if (onDemandSIB_Connected_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("onDemandSIB_Connected_r16", -1);

         onDemandSIB_Connected_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("onDemandSIB_Connected_r16", -1);
      }

      // encode nonCriticalExtension

      if (nonCriticalExtension != null) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (inDeviceCoexInd_r16 != null) inDeviceCoexInd_r16.print (_sb, "inDeviceCoexInd_r16", _level+1);
      if (dl_DedicatedMessageSegmentation_r16 != null) dl_DedicatedMessageSegmentation_r16.print (_sb, "dl_DedicatedMessageSegmentation_r16", _level+1);
      if (nrdc_Parameters_v1610 != null) nrdc_Parameters_v1610.print (_sb, "nrdc_Parameters_v1610", _level+1);
      if (powSav_Parameters_r16 != null) powSav_Parameters_r16.print (_sb, "powSav_Parameters_r16", _level+1);
      if (fr1_Add_UE_NR_Capabilities_v1610 != null) fr1_Add_UE_NR_Capabilities_v1610.print (_sb, "fr1_Add_UE_NR_Capabilities_v1610", _level+1);
      if (fr2_Add_UE_NR_Capabilities_v1610 != null) fr2_Add_UE_NR_Capabilities_v1610.print (_sb, "fr2_Add_UE_NR_Capabilities_v1610", _level+1);
      if (bh_RLF_Indication_r16 != null) bh_RLF_Indication_r16.print (_sb, "bh_RLF_Indication_r16", _level+1);
      if (directSN_AdditionFirstRRC_IAB_r16 != null) directSN_AdditionFirstRRC_IAB_r16.print (_sb, "directSN_AdditionFirstRRC_IAB_r16", _level+1);
      if (bap_Parameters_r16 != null) bap_Parameters_r16.print (_sb, "bap_Parameters_r16", _level+1);
      if (referenceTimeProvision_r16 != null) referenceTimeProvision_r16.print (_sb, "referenceTimeProvision_r16", _level+1);
      if (sidelinkParameters_r16 != null) sidelinkParameters_r16.print (_sb, "sidelinkParameters_r16", _level+1);
      if (highSpeedParameters_r16 != null) highSpeedParameters_r16.print (_sb, "highSpeedParameters_r16", _level+1);
      if (mac_Parameters_v1610 != null) mac_Parameters_v1610.print (_sb, "mac_Parameters_v1610", _level+1);
      if (mcgRLF_RecoveryViaSCG_r16 != null) mcgRLF_RecoveryViaSCG_r16.print (_sb, "mcgRLF_RecoveryViaSCG_r16", _level+1);
      if (resumeWithStoredMCG_SCells_r16 != null) resumeWithStoredMCG_SCells_r16.print (_sb, "resumeWithStoredMCG_SCells_r16", _level+1);
      if (resumeWithStoredSCG_r16 != null) resumeWithStoredSCG_r16.print (_sb, "resumeWithStoredSCG_r16", _level+1);
      if (resumeWithSCG_Config_r16 != null) resumeWithSCG_Config_r16.print (_sb, "resumeWithSCG_Config_r16", _level+1);
      if (ue_BasedPerfMeas_Parameters_r16 != null) ue_BasedPerfMeas_Parameters_r16.print (_sb, "ue_BasedPerfMeas_Parameters_r16", _level+1);
      if (son_Parameters_r16 != null) son_Parameters_r16.print (_sb, "son_Parameters_r16", _level+1);
      if (onDemandSIB_Connected_r16 != null) onDemandSIB_Connected_r16.print (_sb, "onDemandSIB_Connected_r16", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
