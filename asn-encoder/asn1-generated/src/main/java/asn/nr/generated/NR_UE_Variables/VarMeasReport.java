/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_UE_Variables;

import com.objsys.asn1j.runtime.*;
import asn.nr.generated.NR_RRC_Definitions.MeasId;
import asn.nr.generated.NR_RRC_Definitions.Tx_PoolMeasList_r16;

public class VarMeasReport extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_UE_VariablesRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "VarMeasReport";
   }

   public MeasId measId;
   public CellsTriggeredList cellsTriggeredList;  // optional
   public Asn1Integer numberOfReportsSent;
   public CLI_TriggeredList_r16 cli_TriggeredList_r16;  // optional
   public Tx_PoolMeasList_r16 tx_PoolMeasToAddModListNR_r16;  // optional

   public VarMeasReport () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public VarMeasReport (
      MeasId measId_,
      CellsTriggeredList cellsTriggeredList_,
      Asn1Integer numberOfReportsSent_,
      CLI_TriggeredList_r16 cli_TriggeredList_r16_,
      Tx_PoolMeasList_r16 tx_PoolMeasToAddModListNR_r16_
   ) {
      super();
      measId = measId_;
      cellsTriggeredList = cellsTriggeredList_;
      numberOfReportsSent = numberOfReportsSent_;
      cli_TriggeredList_r16 = cli_TriggeredList_r16_;
      tx_PoolMeasToAddModListNR_r16 = tx_PoolMeasToAddModListNR_r16_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public VarMeasReport (
      MeasId measId_,
      Asn1Integer numberOfReportsSent_
   ) {
      super();
      measId = measId_;
      numberOfReportsSent = numberOfReportsSent_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public VarMeasReport (long measId_,
      CellsTriggeredList cellsTriggeredList_,
      long numberOfReportsSent_,
      CLI_TriggeredList_r16 cli_TriggeredList_r16_,
      Tx_PoolMeasList_r16 tx_PoolMeasToAddModListNR_r16_
   ) {
      super();
      measId = new MeasId (measId_);
      cellsTriggeredList = cellsTriggeredList_;
      numberOfReportsSent = new Asn1Integer (numberOfReportsSent_);
      cli_TriggeredList_r16 = cli_TriggeredList_r16_;
      tx_PoolMeasToAddModListNR_r16 = tx_PoolMeasToAddModListNR_r16_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public VarMeasReport (
      long measId_,
      long numberOfReportsSent_
   ) {
      super();
      measId = new MeasId (measId_);
      numberOfReportsSent = new Asn1Integer (numberOfReportsSent_);
   }

   public void init () {
      measId = null;
      cellsTriggeredList = null;
      numberOfReportsSent = null;
      cli_TriggeredList_r16 = null;
      tx_PoolMeasToAddModListNR_r16 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return measId;
         case 1: return cellsTriggeredList;
         case 2: return numberOfReportsSent;
         case 3: return cli_TriggeredList_r16;
         case 4: return tx_PoolMeasToAddModListNR_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "measId";
         case 1: return "cellsTriggeredList";
         case 2: return "numberOfReportsSent";
         case 3: return "cli-TriggeredList-r16";
         case 4: return "tx-PoolMeasToAddModListNR-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean cellsTriggeredListPresent = buffer.decodeBit ("cellsTriggeredListPresent");
      boolean cli_TriggeredList_r16Present = buffer.decodeBit ("cli_TriggeredList_r16Present");
      boolean tx_PoolMeasToAddModListNR_r16Present = buffer.decodeBit ("tx_PoolMeasToAddModListNR_r16Present");

      // decode measId

      buffer.getContext().eventDispatcher.startElement("measId", -1);

      measId = new MeasId();
      measId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("measId", -1);

      // decode cellsTriggeredList

      if (cellsTriggeredListPresent) {
         buffer.getContext().eventDispatcher.startElement("cellsTriggeredList", -1);

         cellsTriggeredList = new CellsTriggeredList();
         cellsTriggeredList.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cellsTriggeredList", -1);
      }
      else {
         cellsTriggeredList = null;
      }

      // decode numberOfReportsSent

      buffer.getContext().eventDispatcher.startElement("numberOfReportsSent", -1);

      numberOfReportsSent = new Asn1Integer();
      numberOfReportsSent.decode (buffer);

      buffer.invokeCharacters(numberOfReportsSent.toString());
      buffer.getContext().eventDispatcher.endElement("numberOfReportsSent", -1);

      // decode cli_TriggeredList_r16

      if (cli_TriggeredList_r16Present) {
         buffer.getContext().eventDispatcher.startElement("cli_TriggeredList_r16", -1);

         cli_TriggeredList_r16 = new CLI_TriggeredList_r16();
         cli_TriggeredList_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cli_TriggeredList_r16", -1);
      }
      else {
         cli_TriggeredList_r16 = null;
      }

      // decode tx_PoolMeasToAddModListNR_r16

      if (tx_PoolMeasToAddModListNR_r16Present) {
         buffer.getContext().eventDispatcher.startElement("tx_PoolMeasToAddModListNR_r16", -1);

         tx_PoolMeasToAddModListNR_r16 = new Tx_PoolMeasList_r16();
         tx_PoolMeasToAddModListNR_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tx_PoolMeasToAddModListNR_r16", -1);
      }
      else {
         tx_PoolMeasToAddModListNR_r16 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((cellsTriggeredList != null), null);
      buffer.encodeBit ((cli_TriggeredList_r16 != null), null);
      buffer.encodeBit ((tx_PoolMeasToAddModListNR_r16 != null), null);

      // encode measId

      if (measId != null) {
         buffer.getContext().eventDispatcher.startElement("measId", -1);

         measId.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("measId", -1);
      }
      else throw new Asn1MissingRequiredException ("measId");

      // encode cellsTriggeredList

      if (cellsTriggeredList != null) {
         buffer.getContext().eventDispatcher.startElement("cellsTriggeredList", -1);

         cellsTriggeredList.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("cellsTriggeredList", -1);
      }

      // encode numberOfReportsSent

      if (numberOfReportsSent != null) {
         buffer.getContext().eventDispatcher.startElement("numberOfReportsSent", -1);

         numberOfReportsSent.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("numberOfReportsSent", -1);
      }
      else throw new Asn1MissingRequiredException ("numberOfReportsSent");

      // encode cli_TriggeredList_r16

      if (cli_TriggeredList_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("cli_TriggeredList_r16", -1);

         cli_TriggeredList_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("cli_TriggeredList_r16", -1);
      }

      // encode tx_PoolMeasToAddModListNR_r16

      if (tx_PoolMeasToAddModListNR_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("tx_PoolMeasToAddModListNR_r16", -1);

         tx_PoolMeasToAddModListNR_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("tx_PoolMeasToAddModListNR_r16", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (measId != null) measId.print (_sb, "measId", _level+1);
      if (cellsTriggeredList != null) cellsTriggeredList.print (_sb, "cellsTriggeredList", _level+1);
      if (numberOfReportsSent != null) numberOfReportsSent.print (_sb, "numberOfReportsSent", _level+1);
      if (cli_TriggeredList_r16 != null) cli_TriggeredList_r16.print (_sb, "cli_TriggeredList_r16", _level+1);
      if (tx_PoolMeasToAddModListNR_r16 != null) tx_PoolMeasToAddModListNR_r16.print (_sb, "tx_PoolMeasToAddModListNR_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
