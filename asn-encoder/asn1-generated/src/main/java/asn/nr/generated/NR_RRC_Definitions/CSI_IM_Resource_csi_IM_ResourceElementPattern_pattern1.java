/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_subcarrierLocation_p1 subcarrierLocation_p1 = null;
   public Asn1Integer symbolLocation_p1;

   public CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1 (
      CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_subcarrierLocation_p1 subcarrierLocation_p1_,
      Asn1Integer symbolLocation_p1_
   ) {
      super();
      subcarrierLocation_p1 = subcarrierLocation_p1_;
      symbolLocation_p1 = symbolLocation_p1_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1 (CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_subcarrierLocation_p1 subcarrierLocation_p1_,
      long symbolLocation_p1_
   ) {
      super();
      subcarrierLocation_p1 = subcarrierLocation_p1_;
      symbolLocation_p1 = new Asn1Integer (symbolLocation_p1_);
   }

   public void init () {
      subcarrierLocation_p1 = null;
      symbolLocation_p1 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return subcarrierLocation_p1;
         case 1: return symbolLocation_p1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "subcarrierLocation-p1";
         case 1: return "symbolLocation-p1";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode subcarrierLocation_p1

      buffer.getContext().eventDispatcher.startElement("subcarrierLocation_p1", -1);

      {
         int tval = CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_subcarrierLocation_p1.decodeEnumValue (buffer);
         subcarrierLocation_p1 = CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_subcarrierLocation_p1.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("subcarrierLocation_p1", -1);

      // decode symbolLocation_p1

      buffer.getContext().eventDispatcher.startElement("symbolLocation_p1", -1);

      symbolLocation_p1 = new Asn1Integer();
      symbolLocation_p1.decode (buffer, 0, 13);

      buffer.invokeCharacters(symbolLocation_p1.toString());
      buffer.getContext().eventDispatcher.endElement("symbolLocation_p1", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode subcarrierLocation_p1

      if (subcarrierLocation_p1 != null) {
         buffer.getContext().eventDispatcher.startElement("subcarrierLocation_p1", -1);

         subcarrierLocation_p1.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("subcarrierLocation_p1", -1);
      }
      else throw new Asn1MissingRequiredException ("subcarrierLocation_p1");

      // encode symbolLocation_p1

      if (symbolLocation_p1 != null) {
         buffer.getContext().eventDispatcher.startElement("symbolLocation_p1", -1);

         symbolLocation_p1.encode (buffer, 0, 13);

         buffer.getContext().eventDispatcher.endElement("symbolLocation_p1", -1);
      }
      else throw new Asn1MissingRequiredException ("symbolLocation_p1");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (subcarrierLocation_p1 != null) subcarrierLocation_p1.print (_sb, "subcarrierLocation_p1", _level+1);
      if (symbolLocation_p1 != null) symbolLocation_p1.print (_sb, "symbolLocation_p1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
