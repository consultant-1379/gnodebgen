/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer resourceSet;
   public CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info qcl_info;  // optional

   public CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS (
      Asn1Integer resourceSet_,
      CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info qcl_info_
   ) {
      super();
      resourceSet = resourceSet_;
      qcl_info = qcl_info_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS (
      Asn1Integer resourceSet_
   ) {
      super();
      resourceSet = resourceSet_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS (long resourceSet_,
      CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info qcl_info_
   ) {
      super();
      resourceSet = new Asn1Integer (resourceSet_);
      qcl_info = qcl_info_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS (
      long resourceSet_
   ) {
      super();
      resourceSet = new Asn1Integer (resourceSet_);
   }

   public void init () {
      resourceSet = null;
      qcl_info = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return resourceSet;
         case 1: return qcl_info;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "resourceSet";
         case 1: return "qcl-info";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean qcl_infoPresent = buffer.decodeBit ("qcl_infoPresent");

      // decode resourceSet

      buffer.getContext().eventDispatcher.startElement("resourceSet", -1);

      resourceSet = new Asn1Integer();
      resourceSet.decode (buffer, 1, 16);

      buffer.invokeCharacters(resourceSet.toString());
      buffer.getContext().eventDispatcher.endElement("resourceSet", -1);

      // decode qcl_info

      if (qcl_infoPresent) {
         buffer.getContext().eventDispatcher.startElement("qcl_info", -1);

         qcl_info = new CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info();
         qcl_info.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("qcl_info", -1);
      }
      else {
         qcl_info = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((qcl_info != null), null);

      // encode resourceSet

      if (resourceSet != null) {
         buffer.getContext().eventDispatcher.startElement("resourceSet", -1);

         resourceSet.encode (buffer, 1, 16);

         buffer.getContext().eventDispatcher.endElement("resourceSet", -1);
      }
      else throw new Asn1MissingRequiredException ("resourceSet");

      // encode qcl_info

      if (qcl_info != null) {
         buffer.getContext().eventDispatcher.startElement("qcl_info", -1);

         qcl_info.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("qcl_info", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (resourceSet != null) resourceSet.print (_sb, "resourceSet", _level+1);
      if (qcl_info != null) qcl_info.print (_sb, "qcl_info", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
