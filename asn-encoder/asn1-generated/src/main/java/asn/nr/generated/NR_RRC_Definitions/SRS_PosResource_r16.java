/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SRS_PosResource_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SRS-PosResource-r16";
   }

   public SRS_PosResourceId_r16 srs_PosResourceId_r16;
   public SRS_PosResource_r16_transmissionComb_r16 transmissionComb_r16;
   public SRS_PosResource_r16_resourceMapping_r16 resourceMapping_r16;
   public Asn1Integer freqDomainShift_r16;
   public SRS_PosResource_r16_freqHopping_r16 freqHopping_r16;
   public SRS_PosResource_r16_groupOrSequenceHopping_r16 groupOrSequenceHopping_r16 = null;
   public SRS_PosResource_r16_resourceType_r16 resourceType_r16;
   public Asn1Integer sequenceId_r16;
   public SRS_SpatialRelationInfoPos_r16 spatialRelationInfoPos_r16;  // optional
   public Asn1OpenExt extElem1;

   public SRS_PosResource_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SRS_PosResource_r16 (
      SRS_PosResourceId_r16 srs_PosResourceId_r16_,
      SRS_PosResource_r16_transmissionComb_r16 transmissionComb_r16_,
      SRS_PosResource_r16_resourceMapping_r16 resourceMapping_r16_,
      Asn1Integer freqDomainShift_r16_,
      SRS_PosResource_r16_freqHopping_r16 freqHopping_r16_,
      SRS_PosResource_r16_groupOrSequenceHopping_r16 groupOrSequenceHopping_r16_,
      SRS_PosResource_r16_resourceType_r16 resourceType_r16_,
      Asn1Integer sequenceId_r16_,
      SRS_SpatialRelationInfoPos_r16 spatialRelationInfoPos_r16_
   ) {
      super();
      srs_PosResourceId_r16 = srs_PosResourceId_r16_;
      transmissionComb_r16 = transmissionComb_r16_;
      resourceMapping_r16 = resourceMapping_r16_;
      freqDomainShift_r16 = freqDomainShift_r16_;
      freqHopping_r16 = freqHopping_r16_;
      groupOrSequenceHopping_r16 = groupOrSequenceHopping_r16_;
      resourceType_r16 = resourceType_r16_;
      sequenceId_r16 = sequenceId_r16_;
      spatialRelationInfoPos_r16 = spatialRelationInfoPos_r16_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SRS_PosResource_r16 (
      SRS_PosResourceId_r16 srs_PosResourceId_r16_,
      SRS_PosResource_r16_transmissionComb_r16 transmissionComb_r16_,
      SRS_PosResource_r16_resourceMapping_r16 resourceMapping_r16_,
      Asn1Integer freqDomainShift_r16_,
      SRS_PosResource_r16_freqHopping_r16 freqHopping_r16_,
      SRS_PosResource_r16_groupOrSequenceHopping_r16 groupOrSequenceHopping_r16_,
      SRS_PosResource_r16_resourceType_r16 resourceType_r16_,
      Asn1Integer sequenceId_r16_
   ) {
      super();
      srs_PosResourceId_r16 = srs_PosResourceId_r16_;
      transmissionComb_r16 = transmissionComb_r16_;
      resourceMapping_r16 = resourceMapping_r16_;
      freqDomainShift_r16 = freqDomainShift_r16_;
      freqHopping_r16 = freqHopping_r16_;
      groupOrSequenceHopping_r16 = groupOrSequenceHopping_r16_;
      resourceType_r16 = resourceType_r16_;
      sequenceId_r16 = sequenceId_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SRS_PosResource_r16 (long srs_PosResourceId_r16_,
      SRS_PosResource_r16_transmissionComb_r16 transmissionComb_r16_,
      SRS_PosResource_r16_resourceMapping_r16 resourceMapping_r16_,
      long freqDomainShift_r16_,
      SRS_PosResource_r16_freqHopping_r16 freqHopping_r16_,
      SRS_PosResource_r16_groupOrSequenceHopping_r16 groupOrSequenceHopping_r16_,
      SRS_PosResource_r16_resourceType_r16 resourceType_r16_,
      long sequenceId_r16_,
      SRS_SpatialRelationInfoPos_r16 spatialRelationInfoPos_r16_
   ) {
      super();
      srs_PosResourceId_r16 = new SRS_PosResourceId_r16 (srs_PosResourceId_r16_);
      transmissionComb_r16 = transmissionComb_r16_;
      resourceMapping_r16 = resourceMapping_r16_;
      freqDomainShift_r16 = new Asn1Integer (freqDomainShift_r16_);
      freqHopping_r16 = freqHopping_r16_;
      groupOrSequenceHopping_r16 = groupOrSequenceHopping_r16_;
      resourceType_r16 = resourceType_r16_;
      sequenceId_r16 = new Asn1Integer (sequenceId_r16_);
      spatialRelationInfoPos_r16 = spatialRelationInfoPos_r16_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public SRS_PosResource_r16 (
      long srs_PosResourceId_r16_,
      SRS_PosResource_r16_transmissionComb_r16 transmissionComb_r16_,
      SRS_PosResource_r16_resourceMapping_r16 resourceMapping_r16_,
      long freqDomainShift_r16_,
      SRS_PosResource_r16_freqHopping_r16 freqHopping_r16_,
      SRS_PosResource_r16_groupOrSequenceHopping_r16 groupOrSequenceHopping_r16_,
      SRS_PosResource_r16_resourceType_r16 resourceType_r16_,
      long sequenceId_r16_
   ) {
      super();
      srs_PosResourceId_r16 = new SRS_PosResourceId_r16 (srs_PosResourceId_r16_);
      transmissionComb_r16 = transmissionComb_r16_;
      resourceMapping_r16 = resourceMapping_r16_;
      freqDomainShift_r16 = new Asn1Integer (freqDomainShift_r16_);
      freqHopping_r16 = freqHopping_r16_;
      groupOrSequenceHopping_r16 = groupOrSequenceHopping_r16_;
      resourceType_r16 = resourceType_r16_;
      sequenceId_r16 = new Asn1Integer (sequenceId_r16_);
   }

   public void init () {
      srs_PosResourceId_r16 = null;
      transmissionComb_r16 = null;
      resourceMapping_r16 = null;
      freqDomainShift_r16 = null;
      freqHopping_r16 = null;
      groupOrSequenceHopping_r16 = null;
      resourceType_r16 = null;
      sequenceId_r16 = null;
      spatialRelationInfoPos_r16 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 10; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return srs_PosResourceId_r16;
         case 1: return transmissionComb_r16;
         case 2: return resourceMapping_r16;
         case 3: return freqDomainShift_r16;
         case 4: return freqHopping_r16;
         case 5: return groupOrSequenceHopping_r16;
         case 6: return resourceType_r16;
         case 7: return sequenceId_r16;
         case 8: return spatialRelationInfoPos_r16;
         case 9: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "srs-PosResourceId-r16";
         case 1: return "transmissionComb-r16";
         case 2: return "resourceMapping-r16";
         case 3: return "freqDomainShift-r16";
         case 4: return "freqHopping-r16";
         case 5: return "groupOrSequenceHopping-r16";
         case 6: return "resourceType-r16";
         case 7: return "sequenceId-r16";
         case 8: return "spatialRelationInfoPos-r16";
         case 9: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean spatialRelationInfoPos_r16Present = buffer.decodeBit ("spatialRelationInfoPos_r16Present");

      // decode srs_PosResourceId_r16

      buffer.getContext().eventDispatcher.startElement("srs_PosResourceId_r16", -1);

      srs_PosResourceId_r16 = new SRS_PosResourceId_r16();
      srs_PosResourceId_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("srs_PosResourceId_r16", -1);

      // decode transmissionComb_r16

      buffer.getContext().eventDispatcher.startElement("transmissionComb_r16", -1);

      transmissionComb_r16 = new SRS_PosResource_r16_transmissionComb_r16();
      transmissionComb_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("transmissionComb_r16", -1);

      // decode resourceMapping_r16

      buffer.getContext().eventDispatcher.startElement("resourceMapping_r16", -1);

      resourceMapping_r16 = new SRS_PosResource_r16_resourceMapping_r16();
      resourceMapping_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("resourceMapping_r16", -1);

      // decode freqDomainShift_r16

      buffer.getContext().eventDispatcher.startElement("freqDomainShift_r16", -1);

      freqDomainShift_r16 = new Asn1Integer();
      freqDomainShift_r16.decode (buffer, 0, 268);

      buffer.invokeCharacters(freqDomainShift_r16.toString());
      buffer.getContext().eventDispatcher.endElement("freqDomainShift_r16", -1);

      // decode freqHopping_r16

      buffer.getContext().eventDispatcher.startElement("freqHopping_r16", -1);

      freqHopping_r16 = new SRS_PosResource_r16_freqHopping_r16();
      freqHopping_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("freqHopping_r16", -1);

      // decode groupOrSequenceHopping_r16

      buffer.getContext().eventDispatcher.startElement("groupOrSequenceHopping_r16", -1);

      {
         int tval = SRS_PosResource_r16_groupOrSequenceHopping_r16.decodeEnumValue (buffer);
         groupOrSequenceHopping_r16 = SRS_PosResource_r16_groupOrSequenceHopping_r16.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("groupOrSequenceHopping_r16", -1);

      // decode resourceType_r16

      buffer.getContext().eventDispatcher.startElement("resourceType_r16", -1);

      resourceType_r16 = new SRS_PosResource_r16_resourceType_r16();
      resourceType_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("resourceType_r16", -1);

      // decode sequenceId_r16

      buffer.getContext().eventDispatcher.startElement("sequenceId_r16", -1);

      sequenceId_r16 = new Asn1Integer();
      sequenceId_r16.decode (buffer, 0, 65535);

      buffer.invokeCharacters(sequenceId_r16.toString());
      buffer.getContext().eventDispatcher.endElement("sequenceId_r16", -1);

      // decode spatialRelationInfoPos_r16

      if (spatialRelationInfoPos_r16Present) {
         buffer.getContext().eventDispatcher.startElement("spatialRelationInfoPos_r16", -1);

         spatialRelationInfoPos_r16 = new SRS_SpatialRelationInfoPos_r16();
         spatialRelationInfoPos_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("spatialRelationInfoPos_r16", -1);
      }
      else {
         spatialRelationInfoPos_r16 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = (((extElem1 != null) && (!extElem1.value.isEmpty()))
      );

      buffer.encodeBit (extbit, "extbit");

      // encode optional elements bit mask

      buffer.encodeBit ((spatialRelationInfoPos_r16 != null), null);

      // encode srs_PosResourceId_r16

      if (srs_PosResourceId_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("srs_PosResourceId_r16", -1);

         srs_PosResourceId_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("srs_PosResourceId_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("srs_PosResourceId_r16");

      // encode transmissionComb_r16

      if (transmissionComb_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("transmissionComb_r16", -1);

         transmissionComb_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("transmissionComb_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("transmissionComb_r16");

      // encode resourceMapping_r16

      if (resourceMapping_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("resourceMapping_r16", -1);

         resourceMapping_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("resourceMapping_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("resourceMapping_r16");

      // encode freqDomainShift_r16

      if (freqDomainShift_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("freqDomainShift_r16", -1);

         freqDomainShift_r16.encode (buffer, 0, 268);

         buffer.getContext().eventDispatcher.endElement("freqDomainShift_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("freqDomainShift_r16");

      // encode freqHopping_r16

      if (freqHopping_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("freqHopping_r16", -1);

         freqHopping_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("freqHopping_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("freqHopping_r16");

      // encode groupOrSequenceHopping_r16

      if (groupOrSequenceHopping_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("groupOrSequenceHopping_r16", -1);

         groupOrSequenceHopping_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("groupOrSequenceHopping_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("groupOrSequenceHopping_r16");

      // encode resourceType_r16

      if (resourceType_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("resourceType_r16", -1);

         resourceType_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("resourceType_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("resourceType_r16");

      // encode sequenceId_r16

      if (sequenceId_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sequenceId_r16", -1);

         sequenceId_r16.encode (buffer, 0, 65535);

         buffer.getContext().eventDispatcher.endElement("sequenceId_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("sequenceId_r16");

      // encode spatialRelationInfoPos_r16

      if (spatialRelationInfoPos_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("spatialRelationInfoPos_r16", -1);

         spatialRelationInfoPos_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("spatialRelationInfoPos_r16", -1);
      }

      if (extbit) {

         // encode extension optional bits length

         int bitcnt = 0;
         if (extElem1 != null) bitcnt += extElem1.value.size();
         buffer.encodeSmallLength (bitcnt);

         // encode optional bits

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encodeExtBits (buffer);
         }

         // encode extension elements

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encode (buffer);
         }
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (srs_PosResourceId_r16 != null) srs_PosResourceId_r16.print (_sb, "srs_PosResourceId_r16", _level+1);
      if (transmissionComb_r16 != null) transmissionComb_r16.print (_sb, "transmissionComb_r16", _level+1);
      if (resourceMapping_r16 != null) resourceMapping_r16.print (_sb, "resourceMapping_r16", _level+1);
      if (freqDomainShift_r16 != null) freqDomainShift_r16.print (_sb, "freqDomainShift_r16", _level+1);
      if (freqHopping_r16 != null) freqHopping_r16.print (_sb, "freqHopping_r16", _level+1);
      if (groupOrSequenceHopping_r16 != null) groupOrSequenceHopping_r16.print (_sb, "groupOrSequenceHopping_r16", _level+1);
      if (resourceType_r16 != null) resourceType_r16.print (_sb, "resourceType_r16", _level+1);
      if (sequenceId_r16 != null) sequenceId_r16.print (_sb, "sequenceId_r16", _level+1);
      if (spatialRelationInfoPos_r16 != null) spatialRelationInfoPos_r16.print (_sb, "spatialRelationInfoPos_r16", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
