/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_SelectionWindowConfig_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SL-SelectionWindowConfig-r16";
   }

   public Asn1Integer sl_Priority_r16;
   public SL_SelectionWindowConfig_r16_sl_SelectionWindow_r16 sl_SelectionWindow_r16 = null;

   public SL_SelectionWindowConfig_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_SelectionWindowConfig_r16 (
      Asn1Integer sl_Priority_r16_,
      SL_SelectionWindowConfig_r16_sl_SelectionWindow_r16 sl_SelectionWindow_r16_
   ) {
      super();
      sl_Priority_r16 = sl_Priority_r16_;
      sl_SelectionWindow_r16 = sl_SelectionWindow_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SL_SelectionWindowConfig_r16 (long sl_Priority_r16_,
      SL_SelectionWindowConfig_r16_sl_SelectionWindow_r16 sl_SelectionWindow_r16_
   ) {
      super();
      sl_Priority_r16 = new Asn1Integer (sl_Priority_r16_);
      sl_SelectionWindow_r16 = sl_SelectionWindow_r16_;
   }

   public void init () {
      sl_Priority_r16 = null;
      sl_SelectionWindow_r16 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return sl_Priority_r16;
         case 1: return sl_SelectionWindow_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "sl-Priority-r16";
         case 1: return "sl-SelectionWindow-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode sl_Priority_r16

      buffer.getContext().eventDispatcher.startElement("sl_Priority_r16", -1);

      sl_Priority_r16 = new Asn1Integer();
      sl_Priority_r16.decode (buffer, 1, 8);

      buffer.invokeCharacters(sl_Priority_r16.toString());
      buffer.getContext().eventDispatcher.endElement("sl_Priority_r16", -1);

      // decode sl_SelectionWindow_r16

      buffer.getContext().eventDispatcher.startElement("sl_SelectionWindow_r16", -1);

      {
         int tval = SL_SelectionWindowConfig_r16_sl_SelectionWindow_r16.decodeEnumValue (buffer);
         sl_SelectionWindow_r16 = SL_SelectionWindowConfig_r16_sl_SelectionWindow_r16.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("sl_SelectionWindow_r16", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode sl_Priority_r16

      if (sl_Priority_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sl_Priority_r16", -1);

         sl_Priority_r16.encode (buffer, 1, 8);

         buffer.getContext().eventDispatcher.endElement("sl_Priority_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("sl_Priority_r16");

      // encode sl_SelectionWindow_r16

      if (sl_SelectionWindow_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sl_SelectionWindow_r16", -1);

         sl_SelectionWindow_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("sl_SelectionWindow_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("sl_SelectionWindow_r16");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (sl_Priority_r16 != null) sl_Priority_r16.print (_sb, "sl_Priority_r16", _level+1);
      if (sl_SelectionWindow_r16 != null) sl_SelectionWindow_r16.print (_sb, "sl_SelectionWindow_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
