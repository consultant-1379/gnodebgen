/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MIMO_ParametersPerBand_tci_StatePDSCH extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public MIMO_ParametersPerBand_tci_StatePDSCH_maxNumberConfiguredTCIstatesPerCC maxNumberConfiguredTCIstatesPerCC = null;  // optional
   public MIMO_ParametersPerBand_tci_StatePDSCH_maxNumberActiveTCI_PerBWP maxNumberActiveTCI_PerBWP = null;  // optional

   public MIMO_ParametersPerBand_tci_StatePDSCH () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MIMO_ParametersPerBand_tci_StatePDSCH (
      MIMO_ParametersPerBand_tci_StatePDSCH_maxNumberConfiguredTCIstatesPerCC maxNumberConfiguredTCIstatesPerCC_,
      MIMO_ParametersPerBand_tci_StatePDSCH_maxNumberActiveTCI_PerBWP maxNumberActiveTCI_PerBWP_
   ) {
      super();
      maxNumberConfiguredTCIstatesPerCC = maxNumberConfiguredTCIstatesPerCC_;
      maxNumberActiveTCI_PerBWP = maxNumberActiveTCI_PerBWP_;
   }

   public void init () {
      maxNumberConfiguredTCIstatesPerCC = null;
      maxNumberActiveTCI_PerBWP = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return maxNumberConfiguredTCIstatesPerCC;
         case 1: return maxNumberActiveTCI_PerBWP;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "maxNumberConfiguredTCIstatesPerCC";
         case 1: return "maxNumberActiveTCI-PerBWP";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean maxNumberConfiguredTCIstatesPerCCPresent = buffer.decodeBit ("maxNumberConfiguredTCIstatesPerCCPresent");
      boolean maxNumberActiveTCI_PerBWPPresent = buffer.decodeBit ("maxNumberActiveTCI_PerBWPPresent");

      // decode maxNumberConfiguredTCIstatesPerCC

      if (maxNumberConfiguredTCIstatesPerCCPresent) {
         buffer.getContext().eventDispatcher.startElement("maxNumberConfiguredTCIstatesPerCC", -1);

         int tval = MIMO_ParametersPerBand_tci_StatePDSCH_maxNumberConfiguredTCIstatesPerCC.decodeEnumValue (buffer);
         maxNumberConfiguredTCIstatesPerCC = MIMO_ParametersPerBand_tci_StatePDSCH_maxNumberConfiguredTCIstatesPerCC.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("maxNumberConfiguredTCIstatesPerCC", -1);
      }
      else {
         maxNumberConfiguredTCIstatesPerCC = null;
      }

      // decode maxNumberActiveTCI_PerBWP

      if (maxNumberActiveTCI_PerBWPPresent) {
         buffer.getContext().eventDispatcher.startElement("maxNumberActiveTCI_PerBWP", -1);

         int tval = MIMO_ParametersPerBand_tci_StatePDSCH_maxNumberActiveTCI_PerBWP.decodeEnumValue (buffer);
         maxNumberActiveTCI_PerBWP = MIMO_ParametersPerBand_tci_StatePDSCH_maxNumberActiveTCI_PerBWP.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("maxNumberActiveTCI_PerBWP", -1);
      }
      else {
         maxNumberActiveTCI_PerBWP = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((maxNumberConfiguredTCIstatesPerCC != null), null);
      buffer.encodeBit ((maxNumberActiveTCI_PerBWP != null), null);

      // encode maxNumberConfiguredTCIstatesPerCC

      if (maxNumberConfiguredTCIstatesPerCC != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberConfiguredTCIstatesPerCC", -1);

         maxNumberConfiguredTCIstatesPerCC.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("maxNumberConfiguredTCIstatesPerCC", -1);
      }

      // encode maxNumberActiveTCI_PerBWP

      if (maxNumberActiveTCI_PerBWP != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberActiveTCI_PerBWP", -1);

         maxNumberActiveTCI_PerBWP.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("maxNumberActiveTCI_PerBWP", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (maxNumberConfiguredTCIstatesPerCC != null) maxNumberConfiguredTCIstatesPerCC.print (_sb, "maxNumberConfiguredTCIstatesPerCC", _level+1);
      if (maxNumberActiveTCI_PerBWP != null) maxNumberActiveTCI_PerBWP.print (_sb, "maxNumberActiveTCI_PerBWP", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
