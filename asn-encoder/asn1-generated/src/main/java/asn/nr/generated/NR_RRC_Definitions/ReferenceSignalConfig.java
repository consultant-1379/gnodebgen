/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class ReferenceSignalConfig extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ReferenceSignalConfig";
   }

   public SSB_ConfigMobility ssb_ConfigMobility;  // optional
   public ReferenceSignalConfig_csi_rs_ResourceConfigMobility csi_rs_ResourceConfigMobility;  // optional

   public ReferenceSignalConfig () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public ReferenceSignalConfig (
      SSB_ConfigMobility ssb_ConfigMobility_,
      ReferenceSignalConfig_csi_rs_ResourceConfigMobility csi_rs_ResourceConfigMobility_
   ) {
      super();
      ssb_ConfigMobility = ssb_ConfigMobility_;
      csi_rs_ResourceConfigMobility = csi_rs_ResourceConfigMobility_;
   }

   public void init () {
      ssb_ConfigMobility = null;
      csi_rs_ResourceConfigMobility = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ssb_ConfigMobility;
         case 1: return csi_rs_ResourceConfigMobility;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ssb-ConfigMobility";
         case 1: return "csi-rs-ResourceConfigMobility";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean ssb_ConfigMobilityPresent = buffer.decodeBit ("ssb_ConfigMobilityPresent");
      boolean csi_rs_ResourceConfigMobilityPresent = buffer.decodeBit ("csi_rs_ResourceConfigMobilityPresent");

      // decode ssb_ConfigMobility

      if (ssb_ConfigMobilityPresent) {
         buffer.getContext().eventDispatcher.startElement("ssb_ConfigMobility", -1);

         ssb_ConfigMobility = new SSB_ConfigMobility();
         ssb_ConfigMobility.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ssb_ConfigMobility", -1);
      }
      else {
         ssb_ConfigMobility = null;
      }

      // decode csi_rs_ResourceConfigMobility

      if (csi_rs_ResourceConfigMobilityPresent) {
         buffer.getContext().eventDispatcher.startElement("csi_rs_ResourceConfigMobility", -1);

         csi_rs_ResourceConfigMobility = new ReferenceSignalConfig_csi_rs_ResourceConfigMobility();
         csi_rs_ResourceConfigMobility.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("csi_rs_ResourceConfigMobility", -1);
      }
      else {
         csi_rs_ResourceConfigMobility = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((ssb_ConfigMobility != null), null);
      buffer.encodeBit ((csi_rs_ResourceConfigMobility != null), null);

      // encode ssb_ConfigMobility

      if (ssb_ConfigMobility != null) {
         buffer.getContext().eventDispatcher.startElement("ssb_ConfigMobility", -1);

         ssb_ConfigMobility.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ssb_ConfigMobility", -1);
      }

      // encode csi_rs_ResourceConfigMobility

      if (csi_rs_ResourceConfigMobility != null) {
         buffer.getContext().eventDispatcher.startElement("csi_rs_ResourceConfigMobility", -1);

         csi_rs_ResourceConfigMobility.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("csi_rs_ResourceConfigMobility", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ssb_ConfigMobility != null) ssb_ConfigMobility.print (_sb, "ssb_ConfigMobility", _level+1);
      if (csi_rs_ResourceConfigMobility != null) csi_rs_ResourceConfigMobility.print (_sb, "csi_rs_ResourceConfigMobility", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
