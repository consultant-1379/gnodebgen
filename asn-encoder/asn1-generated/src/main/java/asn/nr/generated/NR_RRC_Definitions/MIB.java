/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MIB extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MIB";
   }

   public Asn1BitString systemFrameNumber;
   public MIB_subCarrierSpacingCommon subCarrierSpacingCommon = null;
   public Asn1Integer ssb_SubcarrierOffset;
   public MIB_dmrs_TypeA_Position dmrs_TypeA_Position = null;
   public PDCCH_ConfigSIB1 pdcch_ConfigSIB1;
   public MIB_cellBarred cellBarred = null;
   public MIB_intraFreqReselection intraFreqReselection = null;
   public Asn1BitString spare;

   public MIB () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MIB (
      Asn1BitString systemFrameNumber_,
      MIB_subCarrierSpacingCommon subCarrierSpacingCommon_,
      Asn1Integer ssb_SubcarrierOffset_,
      MIB_dmrs_TypeA_Position dmrs_TypeA_Position_,
      PDCCH_ConfigSIB1 pdcch_ConfigSIB1_,
      MIB_cellBarred cellBarred_,
      MIB_intraFreqReselection intraFreqReselection_,
      Asn1BitString spare_
   ) {
      super();
      systemFrameNumber = systemFrameNumber_;
      subCarrierSpacingCommon = subCarrierSpacingCommon_;
      ssb_SubcarrierOffset = ssb_SubcarrierOffset_;
      dmrs_TypeA_Position = dmrs_TypeA_Position_;
      pdcch_ConfigSIB1 = pdcch_ConfigSIB1_;
      cellBarred = cellBarred_;
      intraFreqReselection = intraFreqReselection_;
      spare = spare_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public MIB (Asn1BitString systemFrameNumber_,
      MIB_subCarrierSpacingCommon subCarrierSpacingCommon_,
      long ssb_SubcarrierOffset_,
      MIB_dmrs_TypeA_Position dmrs_TypeA_Position_,
      PDCCH_ConfigSIB1 pdcch_ConfigSIB1_,
      MIB_cellBarred cellBarred_,
      MIB_intraFreqReselection intraFreqReselection_,
      Asn1BitString spare_
   ) {
      super();
      systemFrameNumber = systemFrameNumber_;
      subCarrierSpacingCommon = subCarrierSpacingCommon_;
      ssb_SubcarrierOffset = new Asn1Integer (ssb_SubcarrierOffset_);
      dmrs_TypeA_Position = dmrs_TypeA_Position_;
      pdcch_ConfigSIB1 = pdcch_ConfigSIB1_;
      cellBarred = cellBarred_;
      intraFreqReselection = intraFreqReselection_;
      spare = spare_;
   }

   public void init () {
      systemFrameNumber = null;
      subCarrierSpacingCommon = null;
      ssb_SubcarrierOffset = null;
      dmrs_TypeA_Position = null;
      pdcch_ConfigSIB1 = null;
      cellBarred = null;
      intraFreqReselection = null;
      spare = null;
   }

   public int getElementCount() { return 8; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return systemFrameNumber;
         case 1: return subCarrierSpacingCommon;
         case 2: return ssb_SubcarrierOffset;
         case 3: return dmrs_TypeA_Position;
         case 4: return pdcch_ConfigSIB1;
         case 5: return cellBarred;
         case 6: return intraFreqReselection;
         case 7: return spare;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "systemFrameNumber";
         case 1: return "subCarrierSpacingCommon";
         case 2: return "ssb-SubcarrierOffset";
         case 3: return "dmrs-TypeA-Position";
         case 4: return "pdcch-ConfigSIB1";
         case 5: return "cellBarred";
         case 6: return "intraFreqReselection";
         case 7: return "spare";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode systemFrameNumber

      buffer.getContext().eventDispatcher.startElement("systemFrameNumber", -1);

      systemFrameNumber = new Asn1BitString();
      systemFrameNumber.decode (buffer, 6, 6);

      buffer.invokeCharacters(systemFrameNumber.toString());
      buffer.getContext().eventDispatcher.endElement("systemFrameNumber", -1);

      // decode subCarrierSpacingCommon

      buffer.getContext().eventDispatcher.startElement("subCarrierSpacingCommon", -1);

      {
         int tval = MIB_subCarrierSpacingCommon.decodeEnumValue (buffer);
         subCarrierSpacingCommon = MIB_subCarrierSpacingCommon.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("subCarrierSpacingCommon", -1);

      // decode ssb_SubcarrierOffset

      buffer.getContext().eventDispatcher.startElement("ssb_SubcarrierOffset", -1);

      ssb_SubcarrierOffset = new Asn1Integer();
      ssb_SubcarrierOffset.decode (buffer, 0, 15);

      buffer.invokeCharacters(ssb_SubcarrierOffset.toString());
      buffer.getContext().eventDispatcher.endElement("ssb_SubcarrierOffset", -1);

      // decode dmrs_TypeA_Position

      buffer.getContext().eventDispatcher.startElement("dmrs_TypeA_Position", -1);

      {
         int tval = MIB_dmrs_TypeA_Position.decodeEnumValue (buffer);
         dmrs_TypeA_Position = MIB_dmrs_TypeA_Position.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("dmrs_TypeA_Position", -1);

      // decode pdcch_ConfigSIB1

      buffer.getContext().eventDispatcher.startElement("pdcch_ConfigSIB1", -1);

      pdcch_ConfigSIB1 = new PDCCH_ConfigSIB1();
      pdcch_ConfigSIB1.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("pdcch_ConfigSIB1", -1);

      // decode cellBarred

      buffer.getContext().eventDispatcher.startElement("cellBarred", -1);

      {
         int tval = MIB_cellBarred.decodeEnumValue (buffer);
         cellBarred = MIB_cellBarred.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("cellBarred", -1);

      // decode intraFreqReselection

      buffer.getContext().eventDispatcher.startElement("intraFreqReselection", -1);

      {
         int tval = MIB_intraFreqReselection.decodeEnumValue (buffer);
         intraFreqReselection = MIB_intraFreqReselection.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("intraFreqReselection", -1);

      // decode spare

      buffer.getContext().eventDispatcher.startElement("spare", -1);

      spare = new Asn1BitString();
      spare.decode (buffer, 1, 1);

      buffer.invokeCharacters(spare.toString());
      buffer.getContext().eventDispatcher.endElement("spare", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode systemFrameNumber

      if (systemFrameNumber != null) {
         buffer.getContext().eventDispatcher.startElement("systemFrameNumber", -1);

         systemFrameNumber.encode (buffer, 6, 6);

         buffer.getContext().eventDispatcher.endElement("systemFrameNumber", -1);
      }
      else throw new Asn1MissingRequiredException ("systemFrameNumber");

      // encode subCarrierSpacingCommon

      if (subCarrierSpacingCommon != null) {
         buffer.getContext().eventDispatcher.startElement("subCarrierSpacingCommon", -1);

         subCarrierSpacingCommon.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("subCarrierSpacingCommon", -1);
      }
      else throw new Asn1MissingRequiredException ("subCarrierSpacingCommon");

      // encode ssb_SubcarrierOffset

      if (ssb_SubcarrierOffset != null) {
         buffer.getContext().eventDispatcher.startElement("ssb_SubcarrierOffset", -1);

         ssb_SubcarrierOffset.encode (buffer, 0, 15);

         buffer.getContext().eventDispatcher.endElement("ssb_SubcarrierOffset", -1);
      }
      else throw new Asn1MissingRequiredException ("ssb_SubcarrierOffset");

      // encode dmrs_TypeA_Position

      if (dmrs_TypeA_Position != null) {
         buffer.getContext().eventDispatcher.startElement("dmrs_TypeA_Position", -1);

         dmrs_TypeA_Position.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("dmrs_TypeA_Position", -1);
      }
      else throw new Asn1MissingRequiredException ("dmrs_TypeA_Position");

      // encode pdcch_ConfigSIB1

      if (pdcch_ConfigSIB1 != null) {
         buffer.getContext().eventDispatcher.startElement("pdcch_ConfigSIB1", -1);

         pdcch_ConfigSIB1.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("pdcch_ConfigSIB1", -1);
      }
      else throw new Asn1MissingRequiredException ("pdcch_ConfigSIB1");

      // encode cellBarred

      if (cellBarred != null) {
         buffer.getContext().eventDispatcher.startElement("cellBarred", -1);

         cellBarred.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("cellBarred", -1);
      }
      else throw new Asn1MissingRequiredException ("cellBarred");

      // encode intraFreqReselection

      if (intraFreqReselection != null) {
         buffer.getContext().eventDispatcher.startElement("intraFreqReselection", -1);

         intraFreqReselection.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("intraFreqReselection", -1);
      }
      else throw new Asn1MissingRequiredException ("intraFreqReselection");

      // encode spare

      if (spare != null) {
         buffer.getContext().eventDispatcher.startElement("spare", -1);

         spare.encode (buffer, 1, 1);

         buffer.getContext().eventDispatcher.endElement("spare", -1);
      }
      else throw new Asn1MissingRequiredException ("spare");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (systemFrameNumber != null) systemFrameNumber.print (_sb, "systemFrameNumber", _level+1);
      if (subCarrierSpacingCommon != null) subCarrierSpacingCommon.print (_sb, "subCarrierSpacingCommon", _level+1);
      if (ssb_SubcarrierOffset != null) ssb_SubcarrierOffset.print (_sb, "ssb_SubcarrierOffset", _level+1);
      if (dmrs_TypeA_Position != null) dmrs_TypeA_Position.print (_sb, "dmrs_TypeA_Position", _level+1);
      if (pdcch_ConfigSIB1 != null) pdcch_ConfigSIB1.print (_sb, "pdcch_ConfigSIB1", _level+1);
      if (cellBarred != null) cellBarred.print (_sb, "cellBarred", _level+1);
      if (intraFreqReselection != null) intraFreqReselection.print (_sb, "intraFreqReselection", _level+1);
      if (spare != null) spare.print (_sb, "spare", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
