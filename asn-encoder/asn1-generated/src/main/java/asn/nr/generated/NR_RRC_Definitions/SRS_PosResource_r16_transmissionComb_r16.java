/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SRS_PosResource_r16_transmissionComb_r16 extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _N2_R16 = 1;
   public final static byte _N4_R16 = 2;
   public final static byte _N8_R16 = 3;
   public final static byte _EXTELEM1 = 4;

   public SRS_PosResource_r16_transmissionComb_r16 () {
      super();
   }

   public SRS_PosResource_r16_transmissionComb_r16 (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _N2_R16: return "n2_r16";
      case _N4_R16: return "n4_r16";
      case _N8_R16: return "n8_r16";
      case _EXTELEM1: return "...";
      default: return "UNDEFINED";
      }
   }

   public void set_n2_r16 (SRS_PosResource_r16_transmissionComb_r16_n2_r16 value) {
      setElement (_N2_R16, value);
   }

   public void set_n4_r16 (SRS_PosResource_r16_transmissionComb_r16_n4_r16 value) {
      setElement (_N4_R16, value);
   }

   public void set_n8_r16 (SRS_PosResource_r16_transmissionComb_r16_n8_r16 value) {
      setElement (_N8_R16, value);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      Asn1PerDecodeBuffer savedBuffer = null;
      boolean extbit = buffer.decodeBit ("extbit");

      if (!extbit) {
         int idx = (int) buffer.decodeConsWholeNumber (3, "index");
         choiceID = idx + 1;
         buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

         switch (idx) {
            // n2_r16
            case 0: { 
               SRS_PosResource_r16_transmissionComb_r16_n2_r16 n2_r16;
               element = n2_r16 = new SRS_PosResource_r16_transmissionComb_r16_n2_r16();
               n2_r16.decode (buffer);
               break;
            }

            // n4_r16
            case 1: { 
               SRS_PosResource_r16_transmissionComb_r16_n4_r16 n4_r16;
               element = n4_r16 = new SRS_PosResource_r16_transmissionComb_r16_n4_r16();
               n4_r16.decode (buffer);
               break;
            }

            // n8_r16
            case 2: { 
               SRS_PosResource_r16_transmissionComb_r16_n8_r16 n8_r16;
               element = n8_r16 = new SRS_PosResource_r16_transmissionComb_r16_n8_r16();
               n8_r16.decode (buffer);
               break;
            }

            default:
            throw new Asn1InvalidChoiceOptionException (buffer, idx);
         }
      }
      else {
         int idx = (int) buffer.decodeSmallNonNegWholeNumber ();
         choiceID = idx + 4;
         buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

         buffer.byteAlign();

         Asn1OpenType openType = new Asn1OpenType ();
         openType.decode (buffer);

         setElement (_EXTELEM1, openType);
         buffer.invokeCharacters (openType.toString());
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);

      if (savedBuffer != null) {
         buffer = savedBuffer;
      }
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = (choiceID > 3);
      buffer.encodeBit (extbit, "extbit");

      if (!extbit) {

         // Encode choice index value

         buffer.encodeConsWholeNumber (choiceID - 1, 3, "index");

         buffer.getContext().eventDispatcher.startElement("getElemName()", -1);

         switch (choiceID) {
            // n2_r16
            case _N2_R16:
               SRS_PosResource_r16_transmissionComb_r16_n2_r16 n2_r16 = (SRS_PosResource_r16_transmissionComb_r16_n2_r16) element;
               n2_r16.encode (buffer);
               break;

            // n4_r16
            case _N4_R16:
               SRS_PosResource_r16_transmissionComb_r16_n4_r16 n4_r16 = (SRS_PosResource_r16_transmissionComb_r16_n4_r16) element;
               n4_r16.encode (buffer);
               break;

            // n8_r16
            case _N8_R16:
               SRS_PosResource_r16_transmissionComb_r16_n8_r16 n8_r16 = (SRS_PosResource_r16_transmissionComb_r16_n8_r16) element;
               n8_r16.encode (buffer);
               break;

            default:
            throw new Asn1InvalidChoiceOptionException();
         }
      }
      else {
         // Encode extension choice index value

         buffer.encodeSmallNonNegWholeNumber (choiceID - 4);

         // Encode extension element data value

         buffer.getContext().eventDispatcher.startElement("getElemName()", -1);

         Asn1OpenType openType = (Asn1OpenType) element;
         buffer.byteAlign();
         openType.encode (buffer);
      }

      buffer.getContext().eventDispatcher.endElement("getElemName()", -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
