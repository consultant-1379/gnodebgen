/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_UE_Variables;

import com.objsys.asn1j.runtime.*;

public class VarMeasIdleConfig_r16_measIdleDuration_r16 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_UE_VariablesRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _SEC10 = 0;
   public static final int _SEC30 = 1;
   public static final int _SEC60 = 2;
   public static final int _SEC120 = 3;
   public static final int _SEC180 = 4;
   public static final int _SEC240 = 5;
   public static final int _SEC300 = 6;
   public static final int _SPARE = 7;

   // Singleton instances of VarMeasIdleConfig_r16_measIdleDuration_r16
   protected static final VarMeasIdleConfig_r16_measIdleDuration_r16 _sec10 = new VarMeasIdleConfig_r16_measIdleDuration_r16(0);
   protected static final VarMeasIdleConfig_r16_measIdleDuration_r16 _sec30 = new VarMeasIdleConfig_r16_measIdleDuration_r16(1);
   protected static final VarMeasIdleConfig_r16_measIdleDuration_r16 _sec60 = new VarMeasIdleConfig_r16_measIdleDuration_r16(2);
   protected static final VarMeasIdleConfig_r16_measIdleDuration_r16 _sec120 = new VarMeasIdleConfig_r16_measIdleDuration_r16(3);
   protected static final VarMeasIdleConfig_r16_measIdleDuration_r16 _sec180 = new VarMeasIdleConfig_r16_measIdleDuration_r16(4);
   protected static final VarMeasIdleConfig_r16_measIdleDuration_r16 _sec240 = new VarMeasIdleConfig_r16_measIdleDuration_r16(5);
   protected static final VarMeasIdleConfig_r16_measIdleDuration_r16 _sec300 = new VarMeasIdleConfig_r16_measIdleDuration_r16(6);
   protected static final VarMeasIdleConfig_r16_measIdleDuration_r16 _spare = new VarMeasIdleConfig_r16_measIdleDuration_r16(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected VarMeasIdleConfig_r16_measIdleDuration_r16 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for sec10.
    */
   public static VarMeasIdleConfig_r16_measIdleDuration_r16 sec10() {
      return _sec10;
   }

   /**
    * Singleton accessor method for sec30.
    */
   public static VarMeasIdleConfig_r16_measIdleDuration_r16 sec30() {
      return _sec30;
   }

   /**
    * Singleton accessor method for sec60.
    */
   public static VarMeasIdleConfig_r16_measIdleDuration_r16 sec60() {
      return _sec60;
   }

   /**
    * Singleton accessor method for sec120.
    */
   public static VarMeasIdleConfig_r16_measIdleDuration_r16 sec120() {
      return _sec120;
   }

   /**
    * Singleton accessor method for sec180.
    */
   public static VarMeasIdleConfig_r16_measIdleDuration_r16 sec180() {
      return _sec180;
   }

   /**
    * Singleton accessor method for sec240.
    */
   public static VarMeasIdleConfig_r16_measIdleDuration_r16 sec240() {
      return _sec240;
   }

   /**
    * Singleton accessor method for sec300.
    */
   public static VarMeasIdleConfig_r16_measIdleDuration_r16 sec300() {
      return _sec300;
   }

   /**
    * Singleton accessor method for spare.
    */
   public static VarMeasIdleConfig_r16_measIdleDuration_r16 spare() {
      return _spare;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return VarMeasIdleConfig_r16_measIdleDuration_r16.valueOf( VarMeasIdleConfig_r16_measIdleDuration_r16.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static VarMeasIdleConfig_r16_measIdleDuration_r16 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return sec10();
         case 1: return sec30();
         case 2: return sec60();
         case 3: return sec120();
         case 4: return sec180();
         case 5: return sec240();
         case 6: return sec300();
         case 7: return spare();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (VarMeasIdleConfig_r16_measIdleDuration_r16.valueOf(ret).toString());

      return ret;
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      switch ((int)value) {
         case 0: ui = 0; /* sec10 */break;
         case 1: ui = 1; /* sec30 */break;
         case 2: ui = 2; /* sec60 */break;
         case 3: ui = 3; /* sec120 */break;
         case 4: ui = 4; /* sec180 */break;
         case 5: ui = 5; /* sec240 */break;
         case 6: ui = 6; /* sec300 */break;
         case 7: ui = 7; /* spare */break;
         default:
            throw new Asn1InvalidEnumException (value);
      }

      buffer.encodeConsWholeNumber (ui, 8);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("sec10");
         case 1: return ("sec30");
         case 2: return ("sec60");
         case 3: return ("sec120");
         case 4: return ("sec180");
         case 5: return ("sec240");
         case 6: return ("sec300");
         case 7: return ("spare");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
