/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_ConfiguredGrantConfig_r16_rrc_ConfiguredSidelinkGrant_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer sl_TimeResourceCG_Type1_r16;  // optional
   public Asn1Integer sl_StartSubchannelCG_Type1_r16;  // optional
   public Asn1Integer sl_FreqResourceCG_Type1_r16;  // optional
   public Asn1Integer sl_TimeOffsetCG_Type1_r16;  // optional
   public PUCCH_ResourceId sl_N1PUCCH_AN_r16;  // optional
   public Asn1Integer sl_PSFCH_ToPUCCH_CG_Type1_r16;  // optional
   public SL_ResourcePoolID_r16 sl_ResourcePoolID_r16;  // optional
   public SL_ConfiguredGrantConfig_r16_rrc_ConfiguredSidelinkGrant_r16_sl_TimeReferenceSFN_Type1_r16 sl_TimeReferenceSFN_Type1_r16 = null;  // optional

   public SL_ConfiguredGrantConfig_r16_rrc_ConfiguredSidelinkGrant_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_ConfiguredGrantConfig_r16_rrc_ConfiguredSidelinkGrant_r16 (
      Asn1Integer sl_TimeResourceCG_Type1_r16_,
      Asn1Integer sl_StartSubchannelCG_Type1_r16_,
      Asn1Integer sl_FreqResourceCG_Type1_r16_,
      Asn1Integer sl_TimeOffsetCG_Type1_r16_,
      PUCCH_ResourceId sl_N1PUCCH_AN_r16_,
      Asn1Integer sl_PSFCH_ToPUCCH_CG_Type1_r16_,
      SL_ResourcePoolID_r16 sl_ResourcePoolID_r16_,
      SL_ConfiguredGrantConfig_r16_rrc_ConfiguredSidelinkGrant_r16_sl_TimeReferenceSFN_Type1_r16 sl_TimeReferenceSFN_Type1_r16_
   ) {
      super();
      sl_TimeResourceCG_Type1_r16 = sl_TimeResourceCG_Type1_r16_;
      sl_StartSubchannelCG_Type1_r16 = sl_StartSubchannelCG_Type1_r16_;
      sl_FreqResourceCG_Type1_r16 = sl_FreqResourceCG_Type1_r16_;
      sl_TimeOffsetCG_Type1_r16 = sl_TimeOffsetCG_Type1_r16_;
      sl_N1PUCCH_AN_r16 = sl_N1PUCCH_AN_r16_;
      sl_PSFCH_ToPUCCH_CG_Type1_r16 = sl_PSFCH_ToPUCCH_CG_Type1_r16_;
      sl_ResourcePoolID_r16 = sl_ResourcePoolID_r16_;
      sl_TimeReferenceSFN_Type1_r16 = sl_TimeReferenceSFN_Type1_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SL_ConfiguredGrantConfig_r16_rrc_ConfiguredSidelinkGrant_r16 (long sl_TimeResourceCG_Type1_r16_,
      long sl_StartSubchannelCG_Type1_r16_,
      long sl_FreqResourceCG_Type1_r16_,
      long sl_TimeOffsetCG_Type1_r16_,
      long sl_N1PUCCH_AN_r16_,
      long sl_PSFCH_ToPUCCH_CG_Type1_r16_,
      long sl_ResourcePoolID_r16_,
      SL_ConfiguredGrantConfig_r16_rrc_ConfiguredSidelinkGrant_r16_sl_TimeReferenceSFN_Type1_r16 sl_TimeReferenceSFN_Type1_r16_
   ) {
      super();
      sl_TimeResourceCG_Type1_r16 = new Asn1Integer (sl_TimeResourceCG_Type1_r16_);
      sl_StartSubchannelCG_Type1_r16 = new Asn1Integer (sl_StartSubchannelCG_Type1_r16_);
      sl_FreqResourceCG_Type1_r16 = new Asn1Integer (sl_FreqResourceCG_Type1_r16_);
      sl_TimeOffsetCG_Type1_r16 = new Asn1Integer (sl_TimeOffsetCG_Type1_r16_);
      sl_N1PUCCH_AN_r16 = new PUCCH_ResourceId (sl_N1PUCCH_AN_r16_);
      sl_PSFCH_ToPUCCH_CG_Type1_r16 = new Asn1Integer (sl_PSFCH_ToPUCCH_CG_Type1_r16_);
      sl_ResourcePoolID_r16 = new SL_ResourcePoolID_r16 (sl_ResourcePoolID_r16_);
      sl_TimeReferenceSFN_Type1_r16 = sl_TimeReferenceSFN_Type1_r16_;
   }

   public void init () {
      sl_TimeResourceCG_Type1_r16 = null;
      sl_StartSubchannelCG_Type1_r16 = null;
      sl_FreqResourceCG_Type1_r16 = null;
      sl_TimeOffsetCG_Type1_r16 = null;
      sl_N1PUCCH_AN_r16 = null;
      sl_PSFCH_ToPUCCH_CG_Type1_r16 = null;
      sl_ResourcePoolID_r16 = null;
      sl_TimeReferenceSFN_Type1_r16 = null;
   }

   public int getElementCount() { return 8; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return sl_TimeResourceCG_Type1_r16;
         case 1: return sl_StartSubchannelCG_Type1_r16;
         case 2: return sl_FreqResourceCG_Type1_r16;
         case 3: return sl_TimeOffsetCG_Type1_r16;
         case 4: return sl_N1PUCCH_AN_r16;
         case 5: return sl_PSFCH_ToPUCCH_CG_Type1_r16;
         case 6: return sl_ResourcePoolID_r16;
         case 7: return sl_TimeReferenceSFN_Type1_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "sl-TimeResourceCG-Type1-r16";
         case 1: return "sl-StartSubchannelCG-Type1-r16";
         case 2: return "sl-FreqResourceCG-Type1-r16";
         case 3: return "sl-TimeOffsetCG-Type1-r16";
         case 4: return "sl-N1PUCCH-AN-r16";
         case 5: return "sl-PSFCH-ToPUCCH-CG-Type1-r16";
         case 6: return "sl-ResourcePoolID-r16";
         case 7: return "sl-TimeReferenceSFN-Type1-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean sl_TimeResourceCG_Type1_r16Present = buffer.decodeBit ("sl_TimeResourceCG_Type1_r16Present");
      boolean sl_StartSubchannelCG_Type1_r16Present = buffer.decodeBit ("sl_StartSubchannelCG_Type1_r16Present");
      boolean sl_FreqResourceCG_Type1_r16Present = buffer.decodeBit ("sl_FreqResourceCG_Type1_r16Present");
      boolean sl_TimeOffsetCG_Type1_r16Present = buffer.decodeBit ("sl_TimeOffsetCG_Type1_r16Present");
      boolean sl_N1PUCCH_AN_r16Present = buffer.decodeBit ("sl_N1PUCCH_AN_r16Present");
      boolean sl_PSFCH_ToPUCCH_CG_Type1_r16Present = buffer.decodeBit ("sl_PSFCH_ToPUCCH_CG_Type1_r16Present");
      boolean sl_ResourcePoolID_r16Present = buffer.decodeBit ("sl_ResourcePoolID_r16Present");
      boolean sl_TimeReferenceSFN_Type1_r16Present = buffer.decodeBit ("sl_TimeReferenceSFN_Type1_r16Present");

      // decode sl_TimeResourceCG_Type1_r16

      if (sl_TimeResourceCG_Type1_r16Present) {
         buffer.getContext().eventDispatcher.startElement("sl_TimeResourceCG_Type1_r16", -1);

         sl_TimeResourceCG_Type1_r16 = new Asn1Integer();
         sl_TimeResourceCG_Type1_r16.decode (buffer, 0, 496);

         buffer.invokeCharacters(sl_TimeResourceCG_Type1_r16.toString());
         buffer.getContext().eventDispatcher.endElement("sl_TimeResourceCG_Type1_r16", -1);
      }
      else {
         sl_TimeResourceCG_Type1_r16 = null;
      }

      // decode sl_StartSubchannelCG_Type1_r16

      if (sl_StartSubchannelCG_Type1_r16Present) {
         buffer.getContext().eventDispatcher.startElement("sl_StartSubchannelCG_Type1_r16", -1);

         sl_StartSubchannelCG_Type1_r16 = new Asn1Integer();
         sl_StartSubchannelCG_Type1_r16.decode (buffer, 0, 26);

         buffer.invokeCharacters(sl_StartSubchannelCG_Type1_r16.toString());
         buffer.getContext().eventDispatcher.endElement("sl_StartSubchannelCG_Type1_r16", -1);
      }
      else {
         sl_StartSubchannelCG_Type1_r16 = null;
      }

      // decode sl_FreqResourceCG_Type1_r16

      if (sl_FreqResourceCG_Type1_r16Present) {
         buffer.getContext().eventDispatcher.startElement("sl_FreqResourceCG_Type1_r16", -1);

         sl_FreqResourceCG_Type1_r16 = new Asn1Integer();
         sl_FreqResourceCG_Type1_r16.decode (buffer, 0, 6929);

         buffer.invokeCharacters(sl_FreqResourceCG_Type1_r16.toString());
         buffer.getContext().eventDispatcher.endElement("sl_FreqResourceCG_Type1_r16", -1);
      }
      else {
         sl_FreqResourceCG_Type1_r16 = null;
      }

      // decode sl_TimeOffsetCG_Type1_r16

      if (sl_TimeOffsetCG_Type1_r16Present) {
         buffer.getContext().eventDispatcher.startElement("sl_TimeOffsetCG_Type1_r16", -1);

         sl_TimeOffsetCG_Type1_r16 = new Asn1Integer();
         sl_TimeOffsetCG_Type1_r16.decode (buffer, 0, 7999);

         buffer.invokeCharacters(sl_TimeOffsetCG_Type1_r16.toString());
         buffer.getContext().eventDispatcher.endElement("sl_TimeOffsetCG_Type1_r16", -1);
      }
      else {
         sl_TimeOffsetCG_Type1_r16 = null;
      }

      // decode sl_N1PUCCH_AN_r16

      if (sl_N1PUCCH_AN_r16Present) {
         buffer.getContext().eventDispatcher.startElement("sl_N1PUCCH_AN_r16", -1);

         sl_N1PUCCH_AN_r16 = new PUCCH_ResourceId();
         sl_N1PUCCH_AN_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sl_N1PUCCH_AN_r16", -1);
      }
      else {
         sl_N1PUCCH_AN_r16 = null;
      }

      // decode sl_PSFCH_ToPUCCH_CG_Type1_r16

      if (sl_PSFCH_ToPUCCH_CG_Type1_r16Present) {
         buffer.getContext().eventDispatcher.startElement("sl_PSFCH_ToPUCCH_CG_Type1_r16", -1);

         sl_PSFCH_ToPUCCH_CG_Type1_r16 = new Asn1Integer();
         sl_PSFCH_ToPUCCH_CG_Type1_r16.decode (buffer, 0, 15);

         buffer.invokeCharacters(sl_PSFCH_ToPUCCH_CG_Type1_r16.toString());
         buffer.getContext().eventDispatcher.endElement("sl_PSFCH_ToPUCCH_CG_Type1_r16", -1);
      }
      else {
         sl_PSFCH_ToPUCCH_CG_Type1_r16 = null;
      }

      // decode sl_ResourcePoolID_r16

      if (sl_ResourcePoolID_r16Present) {
         buffer.getContext().eventDispatcher.startElement("sl_ResourcePoolID_r16", -1);

         sl_ResourcePoolID_r16 = new SL_ResourcePoolID_r16();
         sl_ResourcePoolID_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sl_ResourcePoolID_r16", -1);
      }
      else {
         sl_ResourcePoolID_r16 = null;
      }

      // decode sl_TimeReferenceSFN_Type1_r16

      if (sl_TimeReferenceSFN_Type1_r16Present) {
         buffer.getContext().eventDispatcher.startElement("sl_TimeReferenceSFN_Type1_r16", -1);

         int tval = SL_ConfiguredGrantConfig_r16_rrc_ConfiguredSidelinkGrant_r16_sl_TimeReferenceSFN_Type1_r16.decodeEnumValue (buffer);
         sl_TimeReferenceSFN_Type1_r16 = SL_ConfiguredGrantConfig_r16_rrc_ConfiguredSidelinkGrant_r16_sl_TimeReferenceSFN_Type1_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("sl_TimeReferenceSFN_Type1_r16", -1);
      }
      else {
         sl_TimeReferenceSFN_Type1_r16 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((sl_TimeResourceCG_Type1_r16 != null), null);
      buffer.encodeBit ((sl_StartSubchannelCG_Type1_r16 != null), null);
      buffer.encodeBit ((sl_FreqResourceCG_Type1_r16 != null), null);
      buffer.encodeBit ((sl_TimeOffsetCG_Type1_r16 != null), null);
      buffer.encodeBit ((sl_N1PUCCH_AN_r16 != null), null);
      buffer.encodeBit ((sl_PSFCH_ToPUCCH_CG_Type1_r16 != null), null);
      buffer.encodeBit ((sl_ResourcePoolID_r16 != null), null);
      buffer.encodeBit ((sl_TimeReferenceSFN_Type1_r16 != null), null);

      // encode sl_TimeResourceCG_Type1_r16

      if (sl_TimeResourceCG_Type1_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sl_TimeResourceCG_Type1_r16", -1);

         sl_TimeResourceCG_Type1_r16.encode (buffer, 0, 496);

         buffer.getContext().eventDispatcher.endElement("sl_TimeResourceCG_Type1_r16", -1);
      }

      // encode sl_StartSubchannelCG_Type1_r16

      if (sl_StartSubchannelCG_Type1_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sl_StartSubchannelCG_Type1_r16", -1);

         sl_StartSubchannelCG_Type1_r16.encode (buffer, 0, 26);

         buffer.getContext().eventDispatcher.endElement("sl_StartSubchannelCG_Type1_r16", -1);
      }

      // encode sl_FreqResourceCG_Type1_r16

      if (sl_FreqResourceCG_Type1_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sl_FreqResourceCG_Type1_r16", -1);

         sl_FreqResourceCG_Type1_r16.encode (buffer, 0, 6929);

         buffer.getContext().eventDispatcher.endElement("sl_FreqResourceCG_Type1_r16", -1);
      }

      // encode sl_TimeOffsetCG_Type1_r16

      if (sl_TimeOffsetCG_Type1_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sl_TimeOffsetCG_Type1_r16", -1);

         sl_TimeOffsetCG_Type1_r16.encode (buffer, 0, 7999);

         buffer.getContext().eventDispatcher.endElement("sl_TimeOffsetCG_Type1_r16", -1);
      }

      // encode sl_N1PUCCH_AN_r16

      if (sl_N1PUCCH_AN_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sl_N1PUCCH_AN_r16", -1);

         sl_N1PUCCH_AN_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("sl_N1PUCCH_AN_r16", -1);
      }

      // encode sl_PSFCH_ToPUCCH_CG_Type1_r16

      if (sl_PSFCH_ToPUCCH_CG_Type1_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sl_PSFCH_ToPUCCH_CG_Type1_r16", -1);

         sl_PSFCH_ToPUCCH_CG_Type1_r16.encode (buffer, 0, 15);

         buffer.getContext().eventDispatcher.endElement("sl_PSFCH_ToPUCCH_CG_Type1_r16", -1);
      }

      // encode sl_ResourcePoolID_r16

      if (sl_ResourcePoolID_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sl_ResourcePoolID_r16", -1);

         sl_ResourcePoolID_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("sl_ResourcePoolID_r16", -1);
      }

      // encode sl_TimeReferenceSFN_Type1_r16

      if (sl_TimeReferenceSFN_Type1_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("sl_TimeReferenceSFN_Type1_r16", -1);

         sl_TimeReferenceSFN_Type1_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("sl_TimeReferenceSFN_Type1_r16", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (sl_TimeResourceCG_Type1_r16 != null) sl_TimeResourceCG_Type1_r16.print (_sb, "sl_TimeResourceCG_Type1_r16", _level+1);
      if (sl_StartSubchannelCG_Type1_r16 != null) sl_StartSubchannelCG_Type1_r16.print (_sb, "sl_StartSubchannelCG_Type1_r16", _level+1);
      if (sl_FreqResourceCG_Type1_r16 != null) sl_FreqResourceCG_Type1_r16.print (_sb, "sl_FreqResourceCG_Type1_r16", _level+1);
      if (sl_TimeOffsetCG_Type1_r16 != null) sl_TimeOffsetCG_Type1_r16.print (_sb, "sl_TimeOffsetCG_Type1_r16", _level+1);
      if (sl_N1PUCCH_AN_r16 != null) sl_N1PUCCH_AN_r16.print (_sb, "sl_N1PUCCH_AN_r16", _level+1);
      if (sl_PSFCH_ToPUCCH_CG_Type1_r16 != null) sl_PSFCH_ToPUCCH_CG_Type1_r16.print (_sb, "sl_PSFCH_ToPUCCH_CG_Type1_r16", _level+1);
      if (sl_ResourcePoolID_r16 != null) sl_ResourcePoolID_r16.print (_sb, "sl_ResourcePoolID_r16", _level+1);
      if (sl_TimeReferenceSFN_Type1_r16 != null) sl_TimeReferenceSFN_Type1_r16.print (_sb, "sl_TimeReferenceSFN_Type1_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
