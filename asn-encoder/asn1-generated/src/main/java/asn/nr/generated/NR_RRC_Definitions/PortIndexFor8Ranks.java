/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PortIndexFor8Ranks extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PortIndexFor8Ranks";
   }

   // Choice element identifier constants
   public final static byte _PORTINDEX8 = 1;
   public final static byte _PORTINDEX4 = 2;
   public final static byte _PORTINDEX2 = 3;
   public final static byte _PORTINDEX1 = 4;

   public PortIndexFor8Ranks () {
      super();
   }

   public PortIndexFor8Ranks (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _PORTINDEX8: return "portIndex8";
      case _PORTINDEX4: return "portIndex4";
      case _PORTINDEX2: return "portIndex2";
      case _PORTINDEX1: return "portIndex1";
      default: return "UNDEFINED";
      }
   }

   public void set_portIndex8 (PortIndexFor8Ranks_portIndex8 value) {
      setElement (_PORTINDEX8, value);
   }

   public void set_portIndex4 (PortIndexFor8Ranks_portIndex4 value) {
      setElement (_PORTINDEX4, value);
   }

   public void set_portIndex2 (PortIndexFor8Ranks_portIndex2 value) {
      setElement (_PORTINDEX2, value);
   }

   public void set_portIndex1 () {
      setElement (_PORTINDEX1, Asn1Null.NULL_VALUE);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (4, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // portIndex8
         case 0: { 
            PortIndexFor8Ranks_portIndex8 portIndex8;
            element = portIndex8 = new PortIndexFor8Ranks_portIndex8();
            portIndex8.decode (buffer);
            break;
         }

         // portIndex4
         case 1: { 
            PortIndexFor8Ranks_portIndex4 portIndex4;
            element = portIndex4 = new PortIndexFor8Ranks_portIndex4();
            portIndex4.decode (buffer);
            break;
         }

         // portIndex2
         case 2: { 
            PortIndexFor8Ranks_portIndex2 portIndex2;
            element = portIndex2 = new PortIndexFor8Ranks_portIndex2();
            portIndex2.decode (buffer);
            break;
         }

         // portIndex1
         case 3: { 
            Asn1Null portIndex1;
            element = portIndex1 = Asn1Null.NULL_VALUE;
            portIndex1.decode (buffer);

            buffer.invokeCharacters(portIndex1.toString());
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // Encode choice index value

      buffer.encodeConsWholeNumber (choiceID - 1, 4, "index");

      buffer.getContext().eventDispatcher.startElement("getElemName()", -1);

      switch (choiceID) {
         // portIndex8
         case _PORTINDEX8:
            PortIndexFor8Ranks_portIndex8 portIndex8 = (PortIndexFor8Ranks_portIndex8) element;
            portIndex8.encode (buffer);
            break;

         // portIndex4
         case _PORTINDEX4:
            PortIndexFor8Ranks_portIndex4 portIndex4 = (PortIndexFor8Ranks_portIndex4) element;
            portIndex4.encode (buffer);
            break;

         // portIndex2
         case _PORTINDEX2:
            PortIndexFor8Ranks_portIndex2 portIndex2 = (PortIndexFor8Ranks_portIndex2) element;
            portIndex2.encode (buffer);
            break;

         // portIndex1
         case _PORTINDEX1:
            Asn1Null portIndex1 = (Asn1Null) element;
            portIndex1.encode (buffer);
            break;

         default:
         throw new Asn1InvalidChoiceOptionException();
      }

      buffer.getContext().eventDispatcher.endElement("getElemName()", -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
