/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;
import asn.nr.generated.NR_RRC_Definitions.SubcarrierSpacing;
import asn.nr.generated.NR_RRC_Definitions.CSI_RS_CellMobility;
import asn.nr.generated.NR_RRC_Definitions.ARFCN_ValueNR;

public class MeasurementTimingConfiguration_v1610_IEs_csi_RS_Config_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public SubcarrierSpacing csi_RS_SubcarrierSpacing_r16 = null;
   public CSI_RS_CellMobility csi_RS_CellMobility_r16;
   public ARFCN_ValueNR refSSBFreq_r16;

   public MeasurementTimingConfiguration_v1610_IEs_csi_RS_Config_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasurementTimingConfiguration_v1610_IEs_csi_RS_Config_r16 (
      SubcarrierSpacing csi_RS_SubcarrierSpacing_r16_,
      CSI_RS_CellMobility csi_RS_CellMobility_r16_,
      ARFCN_ValueNR refSSBFreq_r16_
   ) {
      super();
      csi_RS_SubcarrierSpacing_r16 = csi_RS_SubcarrierSpacing_r16_;
      csi_RS_CellMobility_r16 = csi_RS_CellMobility_r16_;
      refSSBFreq_r16 = refSSBFreq_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public MeasurementTimingConfiguration_v1610_IEs_csi_RS_Config_r16 (SubcarrierSpacing csi_RS_SubcarrierSpacing_r16_,
      CSI_RS_CellMobility csi_RS_CellMobility_r16_,
      long refSSBFreq_r16_
   ) {
      super();
      csi_RS_SubcarrierSpacing_r16 = csi_RS_SubcarrierSpacing_r16_;
      csi_RS_CellMobility_r16 = csi_RS_CellMobility_r16_;
      refSSBFreq_r16 = new ARFCN_ValueNR (refSSBFreq_r16_);
   }

   public void init () {
      csi_RS_SubcarrierSpacing_r16 = null;
      csi_RS_CellMobility_r16 = null;
      refSSBFreq_r16 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return csi_RS_SubcarrierSpacing_r16;
         case 1: return csi_RS_CellMobility_r16;
         case 2: return refSSBFreq_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "csi-RS-SubcarrierSpacing-r16";
         case 1: return "csi-RS-CellMobility-r16";
         case 2: return "refSSBFreq-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode csi_RS_SubcarrierSpacing_r16

      buffer.getContext().eventDispatcher.startElement("csi_RS_SubcarrierSpacing_r16", -1);

      {
         int tval = SubcarrierSpacing.decodeEnumValue (buffer);
         csi_RS_SubcarrierSpacing_r16 = SubcarrierSpacing.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("csi_RS_SubcarrierSpacing_r16", -1);

      // decode csi_RS_CellMobility_r16

      buffer.getContext().eventDispatcher.startElement("csi_RS_CellMobility_r16", -1);

      csi_RS_CellMobility_r16 = new CSI_RS_CellMobility();
      csi_RS_CellMobility_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("csi_RS_CellMobility_r16", -1);

      // decode refSSBFreq_r16

      buffer.getContext().eventDispatcher.startElement("refSSBFreq_r16", -1);

      refSSBFreq_r16 = new ARFCN_ValueNR();
      refSSBFreq_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("refSSBFreq_r16", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode csi_RS_SubcarrierSpacing_r16

      if (csi_RS_SubcarrierSpacing_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("csi_RS_SubcarrierSpacing_r16", -1);

         csi_RS_SubcarrierSpacing_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("csi_RS_SubcarrierSpacing_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("csi_RS_SubcarrierSpacing_r16");

      // encode csi_RS_CellMobility_r16

      if (csi_RS_CellMobility_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("csi_RS_CellMobility_r16", -1);

         csi_RS_CellMobility_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("csi_RS_CellMobility_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("csi_RS_CellMobility_r16");

      // encode refSSBFreq_r16

      if (refSSBFreq_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("refSSBFreq_r16", -1);

         refSSBFreq_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("refSSBFreq_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("refSSBFreq_r16");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (csi_RS_SubcarrierSpacing_r16 != null) csi_RS_SubcarrierSpacing_r16.print (_sb, "csi_RS_SubcarrierSpacing_r16", _level+1);
      if (csi_RS_CellMobility_r16 != null) csi_RS_CellMobility_r16.print (_sb, "csi_RS_CellMobility_r16", _level+1);
      if (refSSBFreq_r16 != null) refSSBFreq_r16.print (_sb, "refSSBFreq_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
