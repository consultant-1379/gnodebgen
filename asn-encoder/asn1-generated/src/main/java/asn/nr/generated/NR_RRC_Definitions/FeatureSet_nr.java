/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class FeatureSet_nr extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public FeatureSetDownlinkId downlinkSetNR;
   public FeatureSetUplinkId uplinkSetNR;

   public FeatureSet_nr () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public FeatureSet_nr (
      FeatureSetDownlinkId downlinkSetNR_,
      FeatureSetUplinkId uplinkSetNR_
   ) {
      super();
      downlinkSetNR = downlinkSetNR_;
      uplinkSetNR = uplinkSetNR_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public FeatureSet_nr (long downlinkSetNR_,
      long uplinkSetNR_
   ) {
      super();
      downlinkSetNR = new FeatureSetDownlinkId (downlinkSetNR_);
      uplinkSetNR = new FeatureSetUplinkId (uplinkSetNR_);
   }

   public void init () {
      downlinkSetNR = null;
      uplinkSetNR = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return downlinkSetNR;
         case 1: return uplinkSetNR;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "downlinkSetNR";
         case 1: return "uplinkSetNR";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode downlinkSetNR

      buffer.getContext().eventDispatcher.startElement("downlinkSetNR", -1);

      downlinkSetNR = new FeatureSetDownlinkId();
      downlinkSetNR.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("downlinkSetNR", -1);

      // decode uplinkSetNR

      buffer.getContext().eventDispatcher.startElement("uplinkSetNR", -1);

      uplinkSetNR = new FeatureSetUplinkId();
      uplinkSetNR.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("uplinkSetNR", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode downlinkSetNR

      if (downlinkSetNR != null) {
         buffer.getContext().eventDispatcher.startElement("downlinkSetNR", -1);

         downlinkSetNR.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("downlinkSetNR", -1);
      }
      else throw new Asn1MissingRequiredException ("downlinkSetNR");

      // encode uplinkSetNR

      if (uplinkSetNR != null) {
         buffer.getContext().eventDispatcher.startElement("uplinkSetNR", -1);

         uplinkSetNR.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("uplinkSetNR", -1);
      }
      else throw new Asn1MissingRequiredException ("uplinkSetNR");

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (downlinkSetNR != null) downlinkSetNR.print (_sb, "downlinkSetNR", _level+1);
      if (uplinkSetNR != null) uplinkSetNR.print (_sb, "uplinkSetNR", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
