/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.nr.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CA_ParametersNRDC_v1610 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CA-ParametersNRDC-v1610";
   }

   public CA_ParametersNRDC_v1610_intraFR_NR_DC_PwrSharingMode1_r16 intraFR_NR_DC_PwrSharingMode1_r16 = null;  // optional
   public CA_ParametersNRDC_v1610_intraFR_NR_DC_PwrSharingMode2_r16 intraFR_NR_DC_PwrSharingMode2_r16 = null;  // optional
   public CA_ParametersNRDC_v1610_intraFR_NR_DC_DynamicPwrSharing_r16 intraFR_NR_DC_DynamicPwrSharing_r16 = null;  // optional
   public CA_ParametersNRDC_v1610_asyncNRDC_r16 asyncNRDC_r16 = null;  // optional

   public CA_ParametersNRDC_v1610 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CA_ParametersNRDC_v1610 (
      CA_ParametersNRDC_v1610_intraFR_NR_DC_PwrSharingMode1_r16 intraFR_NR_DC_PwrSharingMode1_r16_,
      CA_ParametersNRDC_v1610_intraFR_NR_DC_PwrSharingMode2_r16 intraFR_NR_DC_PwrSharingMode2_r16_,
      CA_ParametersNRDC_v1610_intraFR_NR_DC_DynamicPwrSharing_r16 intraFR_NR_DC_DynamicPwrSharing_r16_,
      CA_ParametersNRDC_v1610_asyncNRDC_r16 asyncNRDC_r16_
   ) {
      super();
      intraFR_NR_DC_PwrSharingMode1_r16 = intraFR_NR_DC_PwrSharingMode1_r16_;
      intraFR_NR_DC_PwrSharingMode2_r16 = intraFR_NR_DC_PwrSharingMode2_r16_;
      intraFR_NR_DC_DynamicPwrSharing_r16 = intraFR_NR_DC_DynamicPwrSharing_r16_;
      asyncNRDC_r16 = asyncNRDC_r16_;
   }

   public void init () {
      intraFR_NR_DC_PwrSharingMode1_r16 = null;
      intraFR_NR_DC_PwrSharingMode2_r16 = null;
      intraFR_NR_DC_DynamicPwrSharing_r16 = null;
      asyncNRDC_r16 = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return intraFR_NR_DC_PwrSharingMode1_r16;
         case 1: return intraFR_NR_DC_PwrSharingMode2_r16;
         case 2: return intraFR_NR_DC_DynamicPwrSharing_r16;
         case 3: return asyncNRDC_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "intraFR-NR-DC-PwrSharingMode1-r16";
         case 1: return "intraFR-NR-DC-PwrSharingMode2-r16";
         case 2: return "intraFR-NR-DC-DynamicPwrSharing-r16";
         case 3: return "asyncNRDC-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean intraFR_NR_DC_PwrSharingMode1_r16Present = buffer.decodeBit ("intraFR_NR_DC_PwrSharingMode1_r16Present");
      boolean intraFR_NR_DC_PwrSharingMode2_r16Present = buffer.decodeBit ("intraFR_NR_DC_PwrSharingMode2_r16Present");
      boolean intraFR_NR_DC_DynamicPwrSharing_r16Present = buffer.decodeBit ("intraFR_NR_DC_DynamicPwrSharing_r16Present");
      boolean asyncNRDC_r16Present = buffer.decodeBit ("asyncNRDC_r16Present");

      // decode intraFR_NR_DC_PwrSharingMode1_r16

      if (intraFR_NR_DC_PwrSharingMode1_r16Present) {
         buffer.getContext().eventDispatcher.startElement("intraFR_NR_DC_PwrSharingMode1_r16", -1);

         int tval = CA_ParametersNRDC_v1610_intraFR_NR_DC_PwrSharingMode1_r16.decodeEnumValue (buffer);
         intraFR_NR_DC_PwrSharingMode1_r16 = CA_ParametersNRDC_v1610_intraFR_NR_DC_PwrSharingMode1_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("intraFR_NR_DC_PwrSharingMode1_r16", -1);
      }
      else {
         intraFR_NR_DC_PwrSharingMode1_r16 = null;
      }

      // decode intraFR_NR_DC_PwrSharingMode2_r16

      if (intraFR_NR_DC_PwrSharingMode2_r16Present) {
         buffer.getContext().eventDispatcher.startElement("intraFR_NR_DC_PwrSharingMode2_r16", -1);

         int tval = CA_ParametersNRDC_v1610_intraFR_NR_DC_PwrSharingMode2_r16.decodeEnumValue (buffer);
         intraFR_NR_DC_PwrSharingMode2_r16 = CA_ParametersNRDC_v1610_intraFR_NR_DC_PwrSharingMode2_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("intraFR_NR_DC_PwrSharingMode2_r16", -1);
      }
      else {
         intraFR_NR_DC_PwrSharingMode2_r16 = null;
      }

      // decode intraFR_NR_DC_DynamicPwrSharing_r16

      if (intraFR_NR_DC_DynamicPwrSharing_r16Present) {
         buffer.getContext().eventDispatcher.startElement("intraFR_NR_DC_DynamicPwrSharing_r16", -1);

         int tval = CA_ParametersNRDC_v1610_intraFR_NR_DC_DynamicPwrSharing_r16.decodeEnumValue (buffer);
         intraFR_NR_DC_DynamicPwrSharing_r16 = CA_ParametersNRDC_v1610_intraFR_NR_DC_DynamicPwrSharing_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("intraFR_NR_DC_DynamicPwrSharing_r16", -1);
      }
      else {
         intraFR_NR_DC_DynamicPwrSharing_r16 = null;
      }

      // decode asyncNRDC_r16

      if (asyncNRDC_r16Present) {
         buffer.getContext().eventDispatcher.startElement("asyncNRDC_r16", -1);

         int tval = CA_ParametersNRDC_v1610_asyncNRDC_r16.decodeEnumValue (buffer);
         asyncNRDC_r16 = CA_ParametersNRDC_v1610_asyncNRDC_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("asyncNRDC_r16", -1);
      }
      else {
         asyncNRDC_r16 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((intraFR_NR_DC_PwrSharingMode1_r16 != null), null);
      buffer.encodeBit ((intraFR_NR_DC_PwrSharingMode2_r16 != null), null);
      buffer.encodeBit ((intraFR_NR_DC_DynamicPwrSharing_r16 != null), null);
      buffer.encodeBit ((asyncNRDC_r16 != null), null);

      // encode intraFR_NR_DC_PwrSharingMode1_r16

      if (intraFR_NR_DC_PwrSharingMode1_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("intraFR_NR_DC_PwrSharingMode1_r16", -1);

         intraFR_NR_DC_PwrSharingMode1_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("intraFR_NR_DC_PwrSharingMode1_r16", -1);
      }

      // encode intraFR_NR_DC_PwrSharingMode2_r16

      if (intraFR_NR_DC_PwrSharingMode2_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("intraFR_NR_DC_PwrSharingMode2_r16", -1);

         intraFR_NR_DC_PwrSharingMode2_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("intraFR_NR_DC_PwrSharingMode2_r16", -1);
      }

      // encode intraFR_NR_DC_DynamicPwrSharing_r16

      if (intraFR_NR_DC_DynamicPwrSharing_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("intraFR_NR_DC_DynamicPwrSharing_r16", -1);

         intraFR_NR_DC_DynamicPwrSharing_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("intraFR_NR_DC_DynamicPwrSharing_r16", -1);
      }

      // encode asyncNRDC_r16

      if (asyncNRDC_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("asyncNRDC_r16", -1);

         asyncNRDC_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("asyncNRDC_r16", -1);
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (intraFR_NR_DC_PwrSharingMode1_r16 != null) intraFR_NR_DC_PwrSharingMode1_r16.print (_sb, "intraFR_NR_DC_PwrSharingMode1_r16", _level+1);
      if (intraFR_NR_DC_PwrSharingMode2_r16 != null) intraFR_NR_DC_PwrSharingMode2_r16.print (_sb, "intraFR_NR_DC_PwrSharingMode2_r16", _level+1);
      if (intraFR_NR_DC_DynamicPwrSharing_r16 != null) intraFR_NR_DC_DynamicPwrSharing_r16.print (_sb, "intraFR_NR_DC_DynamicPwrSharing_r16", _level+1);
      if (asyncNRDC_r16 != null) asyncNRDC_r16.print (_sb, "asyncNRDC_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
