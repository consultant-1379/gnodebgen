/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_AllowedCarrierFreqList_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SL-AllowedCarrierFreqList-r15";
   }

   public SL_AllowedCarrierFreqList_r15_allowedCarrierFreqSet1 allowedCarrierFreqSet1;
   public SL_AllowedCarrierFreqList_r15_allowedCarrierFreqSet2 allowedCarrierFreqSet2;

   public SL_AllowedCarrierFreqList_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_AllowedCarrierFreqList_r15 (
      SL_AllowedCarrierFreqList_r15_allowedCarrierFreqSet1 allowedCarrierFreqSet1_,
      SL_AllowedCarrierFreqList_r15_allowedCarrierFreqSet2 allowedCarrierFreqSet2_
   ) {
      super();
      allowedCarrierFreqSet1 = allowedCarrierFreqSet1_;
      allowedCarrierFreqSet2 = allowedCarrierFreqSet2_;
   }

   public void init () {
      allowedCarrierFreqSet1 = null;
      allowedCarrierFreqSet2 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return allowedCarrierFreqSet1;
         case 1: return allowedCarrierFreqSet2;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "allowedCarrierFreqSet1";
         case 1: return "allowedCarrierFreqSet2";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode allowedCarrierFreqSet1

      buffer.getContext().eventDispatcher.startElement("allowedCarrierFreqSet1", -1);

      allowedCarrierFreqSet1 = new SL_AllowedCarrierFreqList_r15_allowedCarrierFreqSet1();
      allowedCarrierFreqSet1.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("allowedCarrierFreqSet1", -1);

      // decode allowedCarrierFreqSet2

      buffer.getContext().eventDispatcher.startElement("allowedCarrierFreqSet2", -1);

      allowedCarrierFreqSet2 = new SL_AllowedCarrierFreqList_r15_allowedCarrierFreqSet2();
      allowedCarrierFreqSet2.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("allowedCarrierFreqSet2", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (allowedCarrierFreqSet1 != null) allowedCarrierFreqSet1.print (_sb, "allowedCarrierFreqSet1", _level+1);
      if (allowedCarrierFreqSet2 != null) allowedCarrierFreqSet2.print (_sb, "allowedCarrierFreqSet2", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
