/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UAC_BarringPerPLMN_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UAC-BarringPerPLMN-r15";
   }

   public Asn1Integer plmn_IdentityIndex_r15;
   public UAC_BarringPerPLMN_r15_uac_AC_BarringListType_r15 uac_AC_BarringListType_r15;  // optional

   public UAC_BarringPerPLMN_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UAC_BarringPerPLMN_r15 (
      Asn1Integer plmn_IdentityIndex_r15_,
      UAC_BarringPerPLMN_r15_uac_AC_BarringListType_r15 uac_AC_BarringListType_r15_
   ) {
      super();
      plmn_IdentityIndex_r15 = plmn_IdentityIndex_r15_;
      uac_AC_BarringListType_r15 = uac_AC_BarringListType_r15_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public UAC_BarringPerPLMN_r15 (
      Asn1Integer plmn_IdentityIndex_r15_
   ) {
      super();
      plmn_IdentityIndex_r15 = plmn_IdentityIndex_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public UAC_BarringPerPLMN_r15 (long plmn_IdentityIndex_r15_,
      UAC_BarringPerPLMN_r15_uac_AC_BarringListType_r15 uac_AC_BarringListType_r15_
   ) {
      super();
      plmn_IdentityIndex_r15 = new Asn1Integer (plmn_IdentityIndex_r15_);
      uac_AC_BarringListType_r15 = uac_AC_BarringListType_r15_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public UAC_BarringPerPLMN_r15 (
      long plmn_IdentityIndex_r15_
   ) {
      super();
      plmn_IdentityIndex_r15 = new Asn1Integer (plmn_IdentityIndex_r15_);
   }

   public void init () {
      plmn_IdentityIndex_r15 = null;
      uac_AC_BarringListType_r15 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return plmn_IdentityIndex_r15;
         case 1: return uac_AC_BarringListType_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "plmn-IdentityIndex-r15";
         case 1: return "uac-AC-BarringListType-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean uac_AC_BarringListType_r15Present = buffer.decodeBit ("uac_AC_BarringListType_r15Present");

      // decode plmn_IdentityIndex_r15

      buffer.getContext().eventDispatcher.startElement("plmn_IdentityIndex_r15", -1);

      plmn_IdentityIndex_r15 = new Asn1Integer();
      plmn_IdentityIndex_r15.decode (buffer, 1, 6);

      buffer.invokeCharacters(plmn_IdentityIndex_r15.toString());
      buffer.getContext().eventDispatcher.endElement("plmn_IdentityIndex_r15", -1);

      // decode uac_AC_BarringListType_r15

      if (uac_AC_BarringListType_r15Present) {
         buffer.getContext().eventDispatcher.startElement("uac_AC_BarringListType_r15", -1);

         uac_AC_BarringListType_r15 = new UAC_BarringPerPLMN_r15_uac_AC_BarringListType_r15();
         uac_AC_BarringListType_r15.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("uac_AC_BarringListType_r15", -1);
      }
      else {
         uac_AC_BarringListType_r15 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (plmn_IdentityIndex_r15 != null) plmn_IdentityIndex_r15.print (_sb, "plmn_IdentityIndex_r15", _level+1);
      if (uac_AC_BarringListType_r15 != null) uac_AC_BarringListType_r15.print (_sb, "uac_AC_BarringListType_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
