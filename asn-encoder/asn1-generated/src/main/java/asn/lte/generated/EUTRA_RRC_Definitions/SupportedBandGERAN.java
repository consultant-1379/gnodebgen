/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SupportedBandGERAN extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SupportedBandGERAN";
   }

   // Integer constants for switch-case
   public static final int _GSM450 = 0;
   public static final int _GSM480 = 1;
   public static final int _GSM710 = 2;
   public static final int _GSM750 = 3;
   public static final int _GSM810 = 4;
   public static final int _GSM850 = 5;
   public static final int _GSM900P = 6;
   public static final int _GSM900E = 7;
   public static final int _GSM900R = 8;
   public static final int _GSM1800 = 9;
   public static final int _GSM1900 = 10;
   public static final int _SPARE5 = 11;
   public static final int _SPARE4 = 12;
   public static final int _SPARE3 = 13;
   public static final int _SPARE2 = 14;
   public static final int _SPARE1 = 15;

   // Singleton instances of SupportedBandGERAN
   protected static final SupportedBandGERAN _gsm450 = new SupportedBandGERAN(0);
   protected static final SupportedBandGERAN _gsm480 = new SupportedBandGERAN(1);
   protected static final SupportedBandGERAN _gsm710 = new SupportedBandGERAN(2);
   protected static final SupportedBandGERAN _gsm750 = new SupportedBandGERAN(3);
   protected static final SupportedBandGERAN _gsm810 = new SupportedBandGERAN(4);
   protected static final SupportedBandGERAN _gsm850 = new SupportedBandGERAN(5);
   protected static final SupportedBandGERAN _gsm900P = new SupportedBandGERAN(6);
   protected static final SupportedBandGERAN _gsm900E = new SupportedBandGERAN(7);
   protected static final SupportedBandGERAN _gsm900R = new SupportedBandGERAN(8);
   protected static final SupportedBandGERAN _gsm1800 = new SupportedBandGERAN(9);
   protected static final SupportedBandGERAN _gsm1900 = new SupportedBandGERAN(10);
   protected static final SupportedBandGERAN _spare5 = new SupportedBandGERAN(11);
   protected static final SupportedBandGERAN _spare4 = new SupportedBandGERAN(12);
   protected static final SupportedBandGERAN _spare3 = new SupportedBandGERAN(13);
   protected static final SupportedBandGERAN _spare2 = new SupportedBandGERAN(14);
   protected static final SupportedBandGERAN _spare1 = new SupportedBandGERAN(15);
   private static SupportedBandGERAN __undefined = new SupportedBandGERAN(-999);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    */
   protected SupportedBandGERAN (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for gsm450.
    */
   public static SupportedBandGERAN gsm450() {
      return _gsm450;
   }

   /**
    * Singleton accessor method for gsm480.
    */
   public static SupportedBandGERAN gsm480() {
      return _gsm480;
   }

   /**
    * Singleton accessor method for gsm710.
    */
   public static SupportedBandGERAN gsm710() {
      return _gsm710;
   }

   /**
    * Singleton accessor method for gsm750.
    */
   public static SupportedBandGERAN gsm750() {
      return _gsm750;
   }

   /**
    * Singleton accessor method for gsm810.
    */
   public static SupportedBandGERAN gsm810() {
      return _gsm810;
   }

   /**
    * Singleton accessor method for gsm850.
    */
   public static SupportedBandGERAN gsm850() {
      return _gsm850;
   }

   /**
    * Singleton accessor method for gsm900P.
    */
   public static SupportedBandGERAN gsm900P() {
      return _gsm900P;
   }

   /**
    * Singleton accessor method for gsm900E.
    */
   public static SupportedBandGERAN gsm900E() {
      return _gsm900E;
   }

   /**
    * Singleton accessor method for gsm900R.
    */
   public static SupportedBandGERAN gsm900R() {
      return _gsm900R;
   }

   /**
    * Singleton accessor method for gsm1800.
    */
   public static SupportedBandGERAN gsm1800() {
      return _gsm1800;
   }

   /**
    * Singleton accessor method for gsm1900.
    */
   public static SupportedBandGERAN gsm1900() {
      return _gsm1900;
   }

   /**
    * Singleton accessor method for spare5.
    */
   public static SupportedBandGERAN spare5() {
      return _spare5;
   }

   /**
    * Singleton accessor method for spare4.
    */
   public static SupportedBandGERAN spare4() {
      return _spare4;
   }

   /**
    * Singleton accessor method for spare3.
    */
   public static SupportedBandGERAN spare3() {
      return _spare3;
   }

   /**
    * Singleton accessor method for spare2.
    */
   public static SupportedBandGERAN spare2() {
      return _spare2;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static SupportedBandGERAN spare1() {
      return _spare1;
   }

   /** Undefined value. */
   protected static SupportedBandGERAN __undefined_() { return __undefined; }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return SupportedBandGERAN.valueOf( SupportedBandGERAN.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static SupportedBandGERAN valueOf (int _value)
   {
      switch ((int)_value) {
         case 0: return gsm450();
         case 1: return gsm480();
         case 2: return gsm710();
         case 3: return gsm750();
         case 4: return gsm810();
         case 5: return gsm850();
         case 6: return gsm900P();
         case 7: return gsm900E();
         case 8: return gsm900R();
         case 9: return gsm1800();
         case 10: return gsm1900();
         case 11: return spare5();
         case 12: return spare4();
         case 13: return spare3();
         case 14: return spare2();
         case 15: return spare1();
         default: return __undefined_();
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      boolean extbit = buffer.decodeBit ("extbit");

      if (extbit) {
         ui = buffer.decodeSmallNonNegWholeNumber ();

         return 0x7fffffff;
      }
      else {
         ui = (int) buffer.decodeConsWholeNumber (16);

         switch (ui) {
            case 0: ret =  0; break;
            case 1: ret =  1; break;
            case 2: ret =  2; break;
            case 3: ret =  3; break;
            case 4: ret =  4; break;
            case 5: ret =  5; break;
            case 6: ret =  6; break;
            case 7: ret =  7; break;
            case 8: ret =  8; break;
            case 9: ret =  9; break;
            case 10: ret =  10; break;
            case 11: ret =  11; break;
            case 12: ret =  12; break;
            case 13: ret =  13; break;
            case 14: ret =  14; break;
            case 15: ret =  15; break;
            default: throw new Asn1InvalidEnumException (ui);
         }
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (SupportedBandGERAN.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("gsm450");
         case 1: return ("gsm480");
         case 2: return ("gsm710");
         case 3: return ("gsm750");
         case 4: return ("gsm810");
         case 5: return ("gsm850");
         case 6: return ("gsm900P");
         case 7: return ("gsm900E");
         case 8: return ("gsm900R");
         case 9: return ("gsm1800");
         case 10: return ("gsm1900");
         case 11: return ("spare5");
         case 12: return ("spare4");
         case 13: return ("spare3");
         case 14: return ("spare2");
         case 15: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
