/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class VictimSystemType_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "VictimSystemType-r16";
   }

   public VictimSystemType_r16_gps_r16 gps_r16 = null;  // optional
   public VictimSystemType_r16_glonass_r16 glonass_r16 = null;  // optional
   public VictimSystemType_r16_bds_r16 bds_r16 = null;  // optional
   public VictimSystemType_r16_galileo_r16 galileo_r16 = null;  // optional
   public VictimSystemType_r16_navIC_r16 navIC_r16 = null;  // optional
   public VictimSystemType_r16_wlan_r16 wlan_r16 = null;  // optional
   public VictimSystemType_r16_bluetooth_r16 bluetooth_r16 = null;  // optional
   public Asn1OpenExt extElem1;

   public VictimSystemType_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public VictimSystemType_r16 (
      VictimSystemType_r16_gps_r16 gps_r16_,
      VictimSystemType_r16_glonass_r16 glonass_r16_,
      VictimSystemType_r16_bds_r16 bds_r16_,
      VictimSystemType_r16_galileo_r16 galileo_r16_,
      VictimSystemType_r16_navIC_r16 navIC_r16_,
      VictimSystemType_r16_wlan_r16 wlan_r16_,
      VictimSystemType_r16_bluetooth_r16 bluetooth_r16_
   ) {
      super();
      gps_r16 = gps_r16_;
      glonass_r16 = glonass_r16_;
      bds_r16 = bds_r16_;
      galileo_r16 = galileo_r16_;
      navIC_r16 = navIC_r16_;
      wlan_r16 = wlan_r16_;
      bluetooth_r16 = bluetooth_r16_;
   }

   public void init () {
      gps_r16 = null;
      glonass_r16 = null;
      bds_r16 = null;
      galileo_r16 = null;
      navIC_r16 = null;
      wlan_r16 = null;
      bluetooth_r16 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 8; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return gps_r16;
         case 1: return glonass_r16;
         case 2: return bds_r16;
         case 3: return galileo_r16;
         case 4: return navIC_r16;
         case 5: return wlan_r16;
         case 6: return bluetooth_r16;
         case 7: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "gps-r16";
         case 1: return "glonass-r16";
         case 2: return "bds-r16";
         case 3: return "galileo-r16";
         case 4: return "navIC-r16";
         case 5: return "wlan-r16";
         case 6: return "bluetooth-r16";
         case 7: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean gps_r16Present = buffer.decodeBit ("gps_r16Present");
      boolean glonass_r16Present = buffer.decodeBit ("glonass_r16Present");
      boolean bds_r16Present = buffer.decodeBit ("bds_r16Present");
      boolean galileo_r16Present = buffer.decodeBit ("galileo_r16Present");
      boolean navIC_r16Present = buffer.decodeBit ("navIC_r16Present");
      boolean wlan_r16Present = buffer.decodeBit ("wlan_r16Present");
      boolean bluetooth_r16Present = buffer.decodeBit ("bluetooth_r16Present");

      // decode gps_r16

      if (gps_r16Present) {
         buffer.getContext().eventDispatcher.startElement("gps_r16", -1);

         int tval = VictimSystemType_r16_gps_r16.decodeEnumValue (buffer);
         gps_r16 = VictimSystemType_r16_gps_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("gps_r16", -1);
      }
      else {
         gps_r16 = null;
      }

      // decode glonass_r16

      if (glonass_r16Present) {
         buffer.getContext().eventDispatcher.startElement("glonass_r16", -1);

         int tval = VictimSystemType_r16_glonass_r16.decodeEnumValue (buffer);
         glonass_r16 = VictimSystemType_r16_glonass_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("glonass_r16", -1);
      }
      else {
         glonass_r16 = null;
      }

      // decode bds_r16

      if (bds_r16Present) {
         buffer.getContext().eventDispatcher.startElement("bds_r16", -1);

         int tval = VictimSystemType_r16_bds_r16.decodeEnumValue (buffer);
         bds_r16 = VictimSystemType_r16_bds_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("bds_r16", -1);
      }
      else {
         bds_r16 = null;
      }

      // decode galileo_r16

      if (galileo_r16Present) {
         buffer.getContext().eventDispatcher.startElement("galileo_r16", -1);

         int tval = VictimSystemType_r16_galileo_r16.decodeEnumValue (buffer);
         galileo_r16 = VictimSystemType_r16_galileo_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("galileo_r16", -1);
      }
      else {
         galileo_r16 = null;
      }

      // decode navIC_r16

      if (navIC_r16Present) {
         buffer.getContext().eventDispatcher.startElement("navIC_r16", -1);

         int tval = VictimSystemType_r16_navIC_r16.decodeEnumValue (buffer);
         navIC_r16 = VictimSystemType_r16_navIC_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("navIC_r16", -1);
      }
      else {
         navIC_r16 = null;
      }

      // decode wlan_r16

      if (wlan_r16Present) {
         buffer.getContext().eventDispatcher.startElement("wlan_r16", -1);

         int tval = VictimSystemType_r16_wlan_r16.decodeEnumValue (buffer);
         wlan_r16 = VictimSystemType_r16_wlan_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("wlan_r16", -1);
      }
      else {
         wlan_r16 = null;
      }

      // decode bluetooth_r16

      if (bluetooth_r16Present) {
         buffer.getContext().eventDispatcher.startElement("bluetooth_r16", -1);

         int tval = VictimSystemType_r16_bluetooth_r16.decodeEnumValue (buffer);
         bluetooth_r16 = VictimSystemType_r16_bluetooth_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("bluetooth_r16", -1);
      }
      else {
         bluetooth_r16 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (gps_r16 != null) gps_r16.print (_sb, "gps_r16", _level+1);
      if (glonass_r16 != null) glonass_r16.print (_sb, "glonass_r16", _level+1);
      if (bds_r16 != null) bds_r16.print (_sb, "bds_r16", _level+1);
      if (galileo_r16 != null) galileo_r16.print (_sb, "galileo_r16", _level+1);
      if (navIC_r16 != null) navIC_r16.print (_sb, "navIC_r16", _level+1);
      if (wlan_r16 != null) wlan_r16.print (_sb, "wlan_r16", _level+1);
      if (bluetooth_r16 != null) bluetooth_r16.print (_sb, "bluetooth_r16", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
