/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_TF_ResourceConfig_r12 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SL-TF-ResourceConfig-r12";
   }

   public Asn1Integer prb_Num_r12;
   public Asn1Integer prb_Start_r12;
   public Asn1Integer prb_End_r12;
   public SL_OffsetIndicator_r12 offsetIndicator_r12;
   public SubframeBitmapSL_r12 subframeBitmap_r12;

   public SL_TF_ResourceConfig_r12 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_TF_ResourceConfig_r12 (
      Asn1Integer prb_Num_r12_,
      Asn1Integer prb_Start_r12_,
      Asn1Integer prb_End_r12_,
      SL_OffsetIndicator_r12 offsetIndicator_r12_,
      SubframeBitmapSL_r12 subframeBitmap_r12_
   ) {
      super();
      prb_Num_r12 = prb_Num_r12_;
      prb_Start_r12 = prb_Start_r12_;
      prb_End_r12 = prb_End_r12_;
      offsetIndicator_r12 = offsetIndicator_r12_;
      subframeBitmap_r12 = subframeBitmap_r12_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SL_TF_ResourceConfig_r12 (long prb_Num_r12_,
      long prb_Start_r12_,
      long prb_End_r12_,
      SL_OffsetIndicator_r12 offsetIndicator_r12_,
      SubframeBitmapSL_r12 subframeBitmap_r12_
   ) {
      super();
      prb_Num_r12 = new Asn1Integer (prb_Num_r12_);
      prb_Start_r12 = new Asn1Integer (prb_Start_r12_);
      prb_End_r12 = new Asn1Integer (prb_End_r12_);
      offsetIndicator_r12 = offsetIndicator_r12_;
      subframeBitmap_r12 = subframeBitmap_r12_;
   }

   public void init () {
      prb_Num_r12 = null;
      prb_Start_r12 = null;
      prb_End_r12 = null;
      offsetIndicator_r12 = null;
      subframeBitmap_r12 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return prb_Num_r12;
         case 1: return prb_Start_r12;
         case 2: return prb_End_r12;
         case 3: return offsetIndicator_r12;
         case 4: return subframeBitmap_r12;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "prb-Num-r12";
         case 1: return "prb-Start-r12";
         case 2: return "prb-End-r12";
         case 3: return "offsetIndicator-r12";
         case 4: return "subframeBitmap-r12";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode prb_Num_r12

      buffer.getContext().eventDispatcher.startElement("prb_Num_r12", -1);

      prb_Num_r12 = new Asn1Integer();
      prb_Num_r12.decode (buffer, 1, 100);

      buffer.invokeCharacters(prb_Num_r12.toString());
      buffer.getContext().eventDispatcher.endElement("prb_Num_r12", -1);

      // decode prb_Start_r12

      buffer.getContext().eventDispatcher.startElement("prb_Start_r12", -1);

      prb_Start_r12 = new Asn1Integer();
      prb_Start_r12.decode (buffer, 0, 99);

      buffer.invokeCharacters(prb_Start_r12.toString());
      buffer.getContext().eventDispatcher.endElement("prb_Start_r12", -1);

      // decode prb_End_r12

      buffer.getContext().eventDispatcher.startElement("prb_End_r12", -1);

      prb_End_r12 = new Asn1Integer();
      prb_End_r12.decode (buffer, 0, 99);

      buffer.invokeCharacters(prb_End_r12.toString());
      buffer.getContext().eventDispatcher.endElement("prb_End_r12", -1);

      // decode offsetIndicator_r12

      buffer.getContext().eventDispatcher.startElement("offsetIndicator_r12", -1);

      offsetIndicator_r12 = new SL_OffsetIndicator_r12();
      offsetIndicator_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("offsetIndicator_r12", -1);

      // decode subframeBitmap_r12

      buffer.getContext().eventDispatcher.startElement("subframeBitmap_r12", -1);

      subframeBitmap_r12 = new SubframeBitmapSL_r12();
      subframeBitmap_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("subframeBitmap_r12", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (prb_Num_r12 != null) prb_Num_r12.print (_sb, "prb_Num_r12", _level+1);
      if (prb_Start_r12 != null) prb_Start_r12.print (_sb, "prb_Start_r12", _level+1);
      if (prb_End_r12 != null) prb_End_r12.print (_sb, "prb_End_r12", _level+1);
      if (offsetIndicator_r12 != null) offsetIndicator_r12.print (_sb, "offsetIndicator_r12", _level+1);
      if (subframeBitmap_r12 != null) subframeBitmap_r12.print (_sb, "subframeBitmap_r12", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
