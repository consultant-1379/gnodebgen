/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _SF20 = 0;
   public static final int _SF30 = 1;
   public static final int _SF40 = 2;
   public static final int _SF60 = 3;
   public static final int _SF80 = 4;
   public static final int _SF100 = 5;
   public static final int _SPARE2 = 6;
   public static final int _SPARE1 = 7;

   // Singleton instances of TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11
   protected static final TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 _sf20 = new TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11(0);
   protected static final TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 _sf30 = new TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11(1);
   protected static final TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 _sf40 = new TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11(2);
   protected static final TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 _sf60 = new TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11(3);
   protected static final TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 _sf80 = new TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11(4);
   protected static final TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 _sf100 = new TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11(5);
   protected static final TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 _spare2 = new TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11(6);
   protected static final TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 _spare1 = new TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for sf20.
    */
   public static TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 sf20() {
      return _sf20;
   }

   /**
    * Singleton accessor method for sf30.
    */
   public static TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 sf30() {
      return _sf30;
   }

   /**
    * Singleton accessor method for sf40.
    */
   public static TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 sf40() {
      return _sf40;
   }

   /**
    * Singleton accessor method for sf60.
    */
   public static TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 sf60() {
      return _sf60;
   }

   /**
    * Singleton accessor method for sf80.
    */
   public static TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 sf80() {
      return _sf80;
   }

   /**
    * Singleton accessor method for sf100.
    */
   public static TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 sf100() {
      return _sf100;
   }

   /**
    * Singleton accessor method for spare2.
    */
   public static TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 spare2() {
      return _spare2;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 spare1() {
      return _spare1;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11.valueOf( TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return sf20();
         case 1: return sf30();
         case 2: return sf40();
         case 3: return sf60();
         case 4: return sf80();
         case 5: return sf100();
         case 6: return spare2();
         case 7: return spare1();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("sf20");
         case 1: return ("sf30");
         case 2: return ("sf40");
         case 3: return ("sf60");
         case 4: return ("sf80");
         case 5: return ("sf100");
         case 6: return ("spare2");
         case 7: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
