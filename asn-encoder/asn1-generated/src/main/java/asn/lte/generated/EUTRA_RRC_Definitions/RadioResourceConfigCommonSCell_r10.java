/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RadioResourceConfigCommonSCell_r10 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RadioResourceConfigCommonSCell-r10";
   }

   public RadioResourceConfigCommonSCell_r10_nonUL_Configuration_r10 nonUL_Configuration_r10;
   public RadioResourceConfigCommonSCell_r10_ul_Configuration_r10 ul_Configuration_r10;  // optional
   public boolean mV2ExtPresent;
   public ARFCN_ValueEUTRA_v9e0 ul_CarrierFreq_v1090;  // optional
   public boolean mV3ExtPresent;
   public RACH_ConfigCommonSCell_r11 rach_ConfigCommonSCell_r11;  // optional
   public PRACH_Config prach_ConfigSCell_r11;  // optional
   public TDD_Config_v1130 tdd_Config_v1130;  // optional
   public UplinkPowerControlCommonSCell_v1130 uplinkPowerControlCommonSCell_v1130;  // optional
   public boolean mV4ExtPresent;
   public PUSCH_ConfigCommon_v1270 pusch_ConfigCommon_v1270;  // optional
   public boolean mV5ExtPresent;
   public PUCCH_ConfigCommon pucch_ConfigCommon_r13;  // optional
   public UplinkPowerControlCommonSCell_v1310 uplinkPowerControlCommonSCell_v1310;  // optional
   public boolean mV6ExtPresent;
   public HighSpeedConfigSCell_r14 highSpeedConfigSCell_r14;  // optional
   public PRACH_Config_v1430 prach_Config_v1430;  // optional
   public RadioResourceConfigCommonSCell_r10_ul_Configuration_r14 ul_Configuration_r14;  // optional
   public RadioResourceConfigCommonSCell_r10_harq_ReferenceConfig_r14 harq_ReferenceConfig_r14 = null;  // optional
   public RadioResourceConfigCommonSCell_r10_soundingRS_FlexibleTiming_r14 soundingRS_FlexibleTiming_r14 = null;  // optional
   public boolean mV7ExtPresent;
   public MBSFN_SubframeConfigList_v1430 mbsfn_SubframeConfigList_v1430;  // optional
   public boolean mV8ExtPresent;
   public UplinkPowerControlCommon_v1530 uplinkPowerControlCommonSCell_v1530;  // optional
   public Asn1OpenExt extElem1;

   public RadioResourceConfigCommonSCell_r10 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RadioResourceConfigCommonSCell_r10 (
      RadioResourceConfigCommonSCell_r10_nonUL_Configuration_r10 nonUL_Configuration_r10_,
      RadioResourceConfigCommonSCell_r10_ul_Configuration_r10 ul_Configuration_r10_,
      ARFCN_ValueEUTRA_v9e0 ul_CarrierFreq_v1090_,
      RACH_ConfigCommonSCell_r11 rach_ConfigCommonSCell_r11_,
      PRACH_Config prach_ConfigSCell_r11_,
      TDD_Config_v1130 tdd_Config_v1130_,
      UplinkPowerControlCommonSCell_v1130 uplinkPowerControlCommonSCell_v1130_,
      PUSCH_ConfigCommon_v1270 pusch_ConfigCommon_v1270_,
      PUCCH_ConfigCommon pucch_ConfigCommon_r13_,
      UplinkPowerControlCommonSCell_v1310 uplinkPowerControlCommonSCell_v1310_,
      HighSpeedConfigSCell_r14 highSpeedConfigSCell_r14_,
      PRACH_Config_v1430 prach_Config_v1430_,
      RadioResourceConfigCommonSCell_r10_ul_Configuration_r14 ul_Configuration_r14_,
      RadioResourceConfigCommonSCell_r10_harq_ReferenceConfig_r14 harq_ReferenceConfig_r14_,
      RadioResourceConfigCommonSCell_r10_soundingRS_FlexibleTiming_r14 soundingRS_FlexibleTiming_r14_,
      MBSFN_SubframeConfigList_v1430 mbsfn_SubframeConfigList_v1430_,
      UplinkPowerControlCommon_v1530 uplinkPowerControlCommonSCell_v1530_
   ) {
      super();
      nonUL_Configuration_r10 = nonUL_Configuration_r10_;
      ul_Configuration_r10 = ul_Configuration_r10_;
      ul_CarrierFreq_v1090 = ul_CarrierFreq_v1090_;
      rach_ConfigCommonSCell_r11 = rach_ConfigCommonSCell_r11_;
      prach_ConfigSCell_r11 = prach_ConfigSCell_r11_;
      tdd_Config_v1130 = tdd_Config_v1130_;
      uplinkPowerControlCommonSCell_v1130 = uplinkPowerControlCommonSCell_v1130_;
      pusch_ConfigCommon_v1270 = pusch_ConfigCommon_v1270_;
      pucch_ConfigCommon_r13 = pucch_ConfigCommon_r13_;
      uplinkPowerControlCommonSCell_v1310 = uplinkPowerControlCommonSCell_v1310_;
      highSpeedConfigSCell_r14 = highSpeedConfigSCell_r14_;
      prach_Config_v1430 = prach_Config_v1430_;
      ul_Configuration_r14 = ul_Configuration_r14_;
      harq_ReferenceConfig_r14 = harq_ReferenceConfig_r14_;
      soundingRS_FlexibleTiming_r14 = soundingRS_FlexibleTiming_r14_;
      mbsfn_SubframeConfigList_v1430 = mbsfn_SubframeConfigList_v1430_;
      uplinkPowerControlCommonSCell_v1530 = uplinkPowerControlCommonSCell_v1530_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public RadioResourceConfigCommonSCell_r10 (
      RadioResourceConfigCommonSCell_r10_nonUL_Configuration_r10 nonUL_Configuration_r10_
   ) {
      super();
      nonUL_Configuration_r10 = nonUL_Configuration_r10_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public RadioResourceConfigCommonSCell_r10 (RadioResourceConfigCommonSCell_r10_nonUL_Configuration_r10 nonUL_Configuration_r10_,
      RadioResourceConfigCommonSCell_r10_ul_Configuration_r10 ul_Configuration_r10_,
      long ul_CarrierFreq_v1090_,
      RACH_ConfigCommonSCell_r11 rach_ConfigCommonSCell_r11_,
      PRACH_Config prach_ConfigSCell_r11_,
      TDD_Config_v1130 tdd_Config_v1130_,
      UplinkPowerControlCommonSCell_v1130 uplinkPowerControlCommonSCell_v1130_,
      PUSCH_ConfigCommon_v1270 pusch_ConfigCommon_v1270_,
      PUCCH_ConfigCommon pucch_ConfigCommon_r13_,
      UplinkPowerControlCommonSCell_v1310 uplinkPowerControlCommonSCell_v1310_,
      HighSpeedConfigSCell_r14 highSpeedConfigSCell_r14_,
      PRACH_Config_v1430 prach_Config_v1430_,
      RadioResourceConfigCommonSCell_r10_ul_Configuration_r14 ul_Configuration_r14_,
      RadioResourceConfigCommonSCell_r10_harq_ReferenceConfig_r14 harq_ReferenceConfig_r14_,
      RadioResourceConfigCommonSCell_r10_soundingRS_FlexibleTiming_r14 soundingRS_FlexibleTiming_r14_,
      MBSFN_SubframeConfigList_v1430 mbsfn_SubframeConfigList_v1430_,
      UplinkPowerControlCommon_v1530 uplinkPowerControlCommonSCell_v1530_
   ) {
      super();
      nonUL_Configuration_r10 = nonUL_Configuration_r10_;
      ul_Configuration_r10 = ul_Configuration_r10_;
      ul_CarrierFreq_v1090 = new ARFCN_ValueEUTRA_v9e0 (ul_CarrierFreq_v1090_);
      rach_ConfigCommonSCell_r11 = rach_ConfigCommonSCell_r11_;
      prach_ConfigSCell_r11 = prach_ConfigSCell_r11_;
      tdd_Config_v1130 = tdd_Config_v1130_;
      uplinkPowerControlCommonSCell_v1130 = uplinkPowerControlCommonSCell_v1130_;
      pusch_ConfigCommon_v1270 = pusch_ConfigCommon_v1270_;
      pucch_ConfigCommon_r13 = pucch_ConfigCommon_r13_;
      uplinkPowerControlCommonSCell_v1310 = uplinkPowerControlCommonSCell_v1310_;
      highSpeedConfigSCell_r14 = highSpeedConfigSCell_r14_;
      prach_Config_v1430 = prach_Config_v1430_;
      ul_Configuration_r14 = ul_Configuration_r14_;
      harq_ReferenceConfig_r14 = harq_ReferenceConfig_r14_;
      soundingRS_FlexibleTiming_r14 = soundingRS_FlexibleTiming_r14_;
      mbsfn_SubframeConfigList_v1430 = mbsfn_SubframeConfigList_v1430_;
      uplinkPowerControlCommonSCell_v1530 = uplinkPowerControlCommonSCell_v1530_;
   }

   public void init () {
      nonUL_Configuration_r10 = null;
      ul_Configuration_r10 = null;
      ul_CarrierFreq_v1090 = null;
      rach_ConfigCommonSCell_r11 = null;
      prach_ConfigSCell_r11 = null;
      tdd_Config_v1130 = null;
      uplinkPowerControlCommonSCell_v1130 = null;
      pusch_ConfigCommon_v1270 = null;
      pucch_ConfigCommon_r13 = null;
      uplinkPowerControlCommonSCell_v1310 = null;
      highSpeedConfigSCell_r14 = null;
      prach_Config_v1430 = null;
      ul_Configuration_r14 = null;
      harq_ReferenceConfig_r14 = null;
      soundingRS_FlexibleTiming_r14 = null;
      mbsfn_SubframeConfigList_v1430 = null;
      uplinkPowerControlCommonSCell_v1530 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 18; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return nonUL_Configuration_r10;
         case 1: return ul_Configuration_r10;
         case 2: return ul_CarrierFreq_v1090;
         case 3: return rach_ConfigCommonSCell_r11;
         case 4: return prach_ConfigSCell_r11;
         case 5: return tdd_Config_v1130;
         case 6: return uplinkPowerControlCommonSCell_v1130;
         case 7: return pusch_ConfigCommon_v1270;
         case 8: return pucch_ConfigCommon_r13;
         case 9: return uplinkPowerControlCommonSCell_v1310;
         case 10: return highSpeedConfigSCell_r14;
         case 11: return prach_Config_v1430;
         case 12: return ul_Configuration_r14;
         case 13: return harq_ReferenceConfig_r14;
         case 14: return soundingRS_FlexibleTiming_r14;
         case 15: return mbsfn_SubframeConfigList_v1430;
         case 16: return uplinkPowerControlCommonSCell_v1530;
         case 17: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "nonUL-Configuration-r10";
         case 1: return "ul-Configuration-r10";
         case 2: return "ul-CarrierFreq-v1090";
         case 3: return "rach-ConfigCommonSCell-r11";
         case 4: return "prach-ConfigSCell-r11";
         case 5: return "tdd-Config-v1130";
         case 6: return "uplinkPowerControlCommonSCell-v1130";
         case 7: return "pusch-ConfigCommon-v1270";
         case 8: return "pucch-ConfigCommon-r13";
         case 9: return "uplinkPowerControlCommonSCell-v1310";
         case 10: return "highSpeedConfigSCell-r14";
         case 11: return "prach-Config-v1430";
         case 12: return "ul-Configuration-r14";
         case 13: return "harq-ReferenceConfig-r14";
         case 14: return "soundingRS-FlexibleTiming-r14";
         case 15: return "mbsfn-SubframeConfigList-v1430";
         case 16: return "uplinkPowerControlCommonSCell-v1530";
         case 17: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean ul_Configuration_r10Present = buffer.decodeBit ("ul_Configuration_r10Present");

      // decode nonUL_Configuration_r10

      buffer.getContext().eventDispatcher.startElement("nonUL_Configuration_r10", -1);

      nonUL_Configuration_r10 = new RadioResourceConfigCommonSCell_r10_nonUL_Configuration_r10();
      nonUL_Configuration_r10.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("nonUL_Configuration_r10", -1);

      // decode ul_Configuration_r10

      if (ul_Configuration_r10Present) {
         buffer.getContext().eventDispatcher.startElement("ul_Configuration_r10", -1);

         ul_Configuration_r10 = new RadioResourceConfigCommonSCell_r10_ul_Configuration_r10();
         ul_Configuration_r10.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ul_Configuration_r10", -1);
      }
      else {
         ul_Configuration_r10 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV3ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV4ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV5ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV6ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV7ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV8ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean ul_CarrierFreq_v1090Present = buffer.decodeBit ("ul_CarrierFreq_v1090Present");

            // decode ul_CarrierFreq_v1090

            if (ul_CarrierFreq_v1090Present) {
               buffer.getContext().eventDispatcher.startElement("ul_CarrierFreq_v1090", -1);

               ul_CarrierFreq_v1090 = new ARFCN_ValueEUTRA_v9e0();
               ul_CarrierFreq_v1090.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("ul_CarrierFreq_v1090", -1);
            }
            else {
               ul_CarrierFreq_v1090 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV3ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean rach_ConfigCommonSCell_r11Present = buffer.decodeBit ("rach_ConfigCommonSCell_r11Present");

            boolean prach_ConfigSCell_r11Present = buffer.decodeBit ("prach_ConfigSCell_r11Present");

            boolean tdd_Config_v1130Present = buffer.decodeBit ("tdd_Config_v1130Present");

            boolean uplinkPowerControlCommonSCell_v1130Present = buffer.decodeBit ("uplinkPowerControlCommonSCell_v1130Present");

            // decode rach_ConfigCommonSCell_r11

            if (rach_ConfigCommonSCell_r11Present) {
               buffer.getContext().eventDispatcher.startElement("rach_ConfigCommonSCell_r11", -1);

               rach_ConfigCommonSCell_r11 = new RACH_ConfigCommonSCell_r11();
               rach_ConfigCommonSCell_r11.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("rach_ConfigCommonSCell_r11", -1);
            }
            else {
               rach_ConfigCommonSCell_r11 = null;
            }

            // decode prach_ConfigSCell_r11

            if (prach_ConfigSCell_r11Present) {
               buffer.getContext().eventDispatcher.startElement("prach_ConfigSCell_r11", -1);

               prach_ConfigSCell_r11 = new PRACH_Config();
               prach_ConfigSCell_r11.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("prach_ConfigSCell_r11", -1);
            }
            else {
               prach_ConfigSCell_r11 = null;
            }

            // decode tdd_Config_v1130

            if (tdd_Config_v1130Present) {
               buffer.getContext().eventDispatcher.startElement("tdd_Config_v1130", -1);

               tdd_Config_v1130 = new TDD_Config_v1130();
               tdd_Config_v1130.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("tdd_Config_v1130", -1);
            }
            else {
               tdd_Config_v1130 = null;
            }

            // decode uplinkPowerControlCommonSCell_v1130

            if (uplinkPowerControlCommonSCell_v1130Present) {
               buffer.getContext().eventDispatcher.startElement("uplinkPowerControlCommonSCell_v1130", -1);

               uplinkPowerControlCommonSCell_v1130 = new UplinkPowerControlCommonSCell_v1130();
               uplinkPowerControlCommonSCell_v1130.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("uplinkPowerControlCommonSCell_v1130", -1);
            }
            else {
               uplinkPowerControlCommonSCell_v1130 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV4ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean pusch_ConfigCommon_v1270Present = buffer.decodeBit ("pusch_ConfigCommon_v1270Present");

            // decode pusch_ConfigCommon_v1270

            if (pusch_ConfigCommon_v1270Present) {
               buffer.getContext().eventDispatcher.startElement("pusch_ConfigCommon_v1270", -1);

               pusch_ConfigCommon_v1270 = new PUSCH_ConfigCommon_v1270();
               pusch_ConfigCommon_v1270.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("pusch_ConfigCommon_v1270", -1);
            }
            else {
               pusch_ConfigCommon_v1270 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV5ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean pucch_ConfigCommon_r13Present = buffer.decodeBit ("pucch_ConfigCommon_r13Present");

            boolean uplinkPowerControlCommonSCell_v1310Present = buffer.decodeBit ("uplinkPowerControlCommonSCell_v1310Present");

            // decode pucch_ConfigCommon_r13

            if (pucch_ConfigCommon_r13Present) {
               buffer.getContext().eventDispatcher.startElement("pucch_ConfigCommon_r13", -1);

               pucch_ConfigCommon_r13 = new PUCCH_ConfigCommon();
               pucch_ConfigCommon_r13.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("pucch_ConfigCommon_r13", -1);
            }
            else {
               pucch_ConfigCommon_r13 = null;
            }

            // decode uplinkPowerControlCommonSCell_v1310

            if (uplinkPowerControlCommonSCell_v1310Present) {
               buffer.getContext().eventDispatcher.startElement("uplinkPowerControlCommonSCell_v1310", -1);

               uplinkPowerControlCommonSCell_v1310 = new UplinkPowerControlCommonSCell_v1310();
               uplinkPowerControlCommonSCell_v1310.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("uplinkPowerControlCommonSCell_v1310", -1);
            }
            else {
               uplinkPowerControlCommonSCell_v1310 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV6ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean highSpeedConfigSCell_r14Present = buffer.decodeBit ("highSpeedConfigSCell_r14Present");

            boolean prach_Config_v1430Present = buffer.decodeBit ("prach_Config_v1430Present");

            boolean ul_Configuration_r14Present = buffer.decodeBit ("ul_Configuration_r14Present");

            boolean harq_ReferenceConfig_r14Present = buffer.decodeBit ("harq_ReferenceConfig_r14Present");

            boolean soundingRS_FlexibleTiming_r14Present = buffer.decodeBit ("soundingRS_FlexibleTiming_r14Present");

            // decode highSpeedConfigSCell_r14

            if (highSpeedConfigSCell_r14Present) {
               buffer.getContext().eventDispatcher.startElement("highSpeedConfigSCell_r14", -1);

               highSpeedConfigSCell_r14 = new HighSpeedConfigSCell_r14();
               highSpeedConfigSCell_r14.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("highSpeedConfigSCell_r14", -1);
            }
            else {
               highSpeedConfigSCell_r14 = null;
            }

            // decode prach_Config_v1430

            if (prach_Config_v1430Present) {
               buffer.getContext().eventDispatcher.startElement("prach_Config_v1430", -1);

               prach_Config_v1430 = new PRACH_Config_v1430();
               prach_Config_v1430.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("prach_Config_v1430", -1);
            }
            else {
               prach_Config_v1430 = null;
            }

            // decode ul_Configuration_r14

            if (ul_Configuration_r14Present) {
               buffer.getContext().eventDispatcher.startElement("ul_Configuration_r14", -1);

               ul_Configuration_r14 = new RadioResourceConfigCommonSCell_r10_ul_Configuration_r14();
               ul_Configuration_r14.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("ul_Configuration_r14", -1);
            }
            else {
               ul_Configuration_r14 = null;
            }

            // decode harq_ReferenceConfig_r14

            if (harq_ReferenceConfig_r14Present) {
               buffer.getContext().eventDispatcher.startElement("harq_ReferenceConfig_r14", -1);

               int tval = RadioResourceConfigCommonSCell_r10_harq_ReferenceConfig_r14.decodeEnumValue (buffer);
               harq_ReferenceConfig_r14 = RadioResourceConfigCommonSCell_r10_harq_ReferenceConfig_r14.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("harq_ReferenceConfig_r14", -1);
            }
            else {
               harq_ReferenceConfig_r14 = null;
            }

            // decode soundingRS_FlexibleTiming_r14

            if (soundingRS_FlexibleTiming_r14Present) {
               buffer.getContext().eventDispatcher.startElement("soundingRS_FlexibleTiming_r14", -1);

               int tval = RadioResourceConfigCommonSCell_r10_soundingRS_FlexibleTiming_r14.decodeEnumValue (buffer);
               soundingRS_FlexibleTiming_r14 = RadioResourceConfigCommonSCell_r10_soundingRS_FlexibleTiming_r14.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("soundingRS_FlexibleTiming_r14", -1);
            }
            else {
               soundingRS_FlexibleTiming_r14 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV7ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean mbsfn_SubframeConfigList_v1430Present = buffer.decodeBit ("mbsfn_SubframeConfigList_v1430Present");

            // decode mbsfn_SubframeConfigList_v1430

            if (mbsfn_SubframeConfigList_v1430Present) {
               buffer.getContext().eventDispatcher.startElement("mbsfn_SubframeConfigList_v1430", -1);

               mbsfn_SubframeConfigList_v1430 = new MBSFN_SubframeConfigList_v1430();
               mbsfn_SubframeConfigList_v1430.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("mbsfn_SubframeConfigList_v1430", -1);
            }
            else {
               mbsfn_SubframeConfigList_v1430 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV8ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean uplinkPowerControlCommonSCell_v1530Present = buffer.decodeBit ("uplinkPowerControlCommonSCell_v1530Present");

            // decode uplinkPowerControlCommonSCell_v1530

            if (uplinkPowerControlCommonSCell_v1530Present) {
               buffer.getContext().eventDispatcher.startElement("uplinkPowerControlCommonSCell_v1530", -1);

               uplinkPowerControlCommonSCell_v1530 = new UplinkPowerControlCommon_v1530();
               uplinkPowerControlCommonSCell_v1530.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("uplinkPowerControlCommonSCell_v1530", -1);
            }
            else {
               uplinkPowerControlCommonSCell_v1530 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (nonUL_Configuration_r10 != null) nonUL_Configuration_r10.print (_sb, "nonUL_Configuration_r10", _level+1);
      if (ul_Configuration_r10 != null) ul_Configuration_r10.print (_sb, "ul_Configuration_r10", _level+1);
      if (ul_CarrierFreq_v1090 != null) ul_CarrierFreq_v1090.print (_sb, "ul_CarrierFreq_v1090", _level+1);
      if (rach_ConfigCommonSCell_r11 != null) rach_ConfigCommonSCell_r11.print (_sb, "rach_ConfigCommonSCell_r11", _level+1);
      if (prach_ConfigSCell_r11 != null) prach_ConfigSCell_r11.print (_sb, "prach_ConfigSCell_r11", _level+1);
      if (tdd_Config_v1130 != null) tdd_Config_v1130.print (_sb, "tdd_Config_v1130", _level+1);
      if (uplinkPowerControlCommonSCell_v1130 != null) uplinkPowerControlCommonSCell_v1130.print (_sb, "uplinkPowerControlCommonSCell_v1130", _level+1);
      if (pusch_ConfigCommon_v1270 != null) pusch_ConfigCommon_v1270.print (_sb, "pusch_ConfigCommon_v1270", _level+1);
      if (pucch_ConfigCommon_r13 != null) pucch_ConfigCommon_r13.print (_sb, "pucch_ConfigCommon_r13", _level+1);
      if (uplinkPowerControlCommonSCell_v1310 != null) uplinkPowerControlCommonSCell_v1310.print (_sb, "uplinkPowerControlCommonSCell_v1310", _level+1);
      if (highSpeedConfigSCell_r14 != null) highSpeedConfigSCell_r14.print (_sb, "highSpeedConfigSCell_r14", _level+1);
      if (prach_Config_v1430 != null) prach_Config_v1430.print (_sb, "prach_Config_v1430", _level+1);
      if (ul_Configuration_r14 != null) ul_Configuration_r14.print (_sb, "ul_Configuration_r14", _level+1);
      if (harq_ReferenceConfig_r14 != null) harq_ReferenceConfig_r14.print (_sb, "harq_ReferenceConfig_r14", _level+1);
      if (soundingRS_FlexibleTiming_r14 != null) soundingRS_FlexibleTiming_r14.print (_sb, "soundingRS_FlexibleTiming_r14", _level+1);
      if (mbsfn_SubframeConfigList_v1430 != null) mbsfn_SubframeConfigList_v1430.print (_sb, "mbsfn_SubframeConfigList_v1430", _level+1);
      if (uplinkPowerControlCommonSCell_v1530 != null) uplinkPowerControlCommonSCell_v1530.print (_sb, "uplinkPowerControlCommonSCell_v1530", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
