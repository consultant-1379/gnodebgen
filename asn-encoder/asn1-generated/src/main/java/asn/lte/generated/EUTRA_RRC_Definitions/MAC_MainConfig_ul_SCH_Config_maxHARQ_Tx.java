/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _N1 = 0;
   public static final int _N2 = 1;
   public static final int _N3 = 2;
   public static final int _N4 = 3;
   public static final int _N5 = 4;
   public static final int _N6 = 5;
   public static final int _N7 = 6;
   public static final int _N8 = 7;
   public static final int _N10 = 8;
   public static final int _N12 = 9;
   public static final int _N16 = 10;
   public static final int _N20 = 11;
   public static final int _N24 = 12;
   public static final int _N28 = 13;
   public static final int _SPARE2 = 14;
   public static final int _SPARE1 = 15;

   // Singleton instances of MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n1 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(0);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n2 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(1);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n3 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(2);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n4 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(3);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n5 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(4);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n6 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(5);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n7 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(6);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n8 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(7);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n10 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(8);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n12 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(9);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n16 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(10);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n20 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(11);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n24 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(12);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _n28 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(13);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _spare2 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(14);
   protected static final MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx _spare1 = new MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx(15);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    */
   protected MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for n1.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n1() {
      return _n1;
   }

   /**
    * Singleton accessor method for n2.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n2() {
      return _n2;
   }

   /**
    * Singleton accessor method for n3.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n3() {
      return _n3;
   }

   /**
    * Singleton accessor method for n4.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n4() {
      return _n4;
   }

   /**
    * Singleton accessor method for n5.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n5() {
      return _n5;
   }

   /**
    * Singleton accessor method for n6.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n6() {
      return _n6;
   }

   /**
    * Singleton accessor method for n7.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n7() {
      return _n7;
   }

   /**
    * Singleton accessor method for n8.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n8() {
      return _n8;
   }

   /**
    * Singleton accessor method for n10.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n10() {
      return _n10;
   }

   /**
    * Singleton accessor method for n12.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n12() {
      return _n12;
   }

   /**
    * Singleton accessor method for n16.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n16() {
      return _n16;
   }

   /**
    * Singleton accessor method for n20.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n20() {
      return _n20;
   }

   /**
    * Singleton accessor method for n24.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n24() {
      return _n24;
   }

   /**
    * Singleton accessor method for n28.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx n28() {
      return _n28;
   }

   /**
    * Singleton accessor method for spare2.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx spare2() {
      return _spare2;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx spare1() {
      return _spare1;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx.valueOf( MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return n1();
         case 1: return n2();
         case 2: return n3();
         case 3: return n4();
         case 4: return n5();
         case 5: return n6();
         case 6: return n7();
         case 7: return n8();
         case 8: return n10();
         case 9: return n12();
         case 10: return n16();
         case 11: return n20();
         case 12: return n24();
         case 13: return n28();
         case 14: return spare2();
         case 15: return spare1();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (16);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("n1");
         case 1: return ("n2");
         case 2: return ("n3");
         case 3: return ("n4");
         case 4: return ("n5");
         case 5: return ("n6");
         case 6: return ("n7");
         case 7: return ("n8");
         case 8: return ("n10");
         case 9: return ("n12");
         case 10: return ("n16");
         case 11: return ("n20");
         case 12: return ("n24");
         case 13: return ("n28");
         case 14: return ("spare2");
         case 15: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
