/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CrossCarrierSchedulingConfig_schedulingCellInfo_other extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public ServCellIndex schedulingCellId;
   public Asn1Integer cif_InSchedulingCell;

   public CrossCarrierSchedulingConfig_schedulingCellInfo_other () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CrossCarrierSchedulingConfig_schedulingCellInfo_other (
      ServCellIndex schedulingCellId_,
      Asn1Integer cif_InSchedulingCell_
   ) {
      super();
      schedulingCellId = schedulingCellId_;
      cif_InSchedulingCell = cif_InSchedulingCell_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CrossCarrierSchedulingConfig_schedulingCellInfo_other (long schedulingCellId_,
      long cif_InSchedulingCell_
   ) {
      super();
      schedulingCellId = new ServCellIndex (schedulingCellId_);
      cif_InSchedulingCell = new Asn1Integer (cif_InSchedulingCell_);
   }

   public void init () {
      schedulingCellId = null;
      cif_InSchedulingCell = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return schedulingCellId;
         case 1: return cif_InSchedulingCell;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "schedulingCellId";
         case 1: return "cif-InSchedulingCell";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode schedulingCellId

      buffer.getContext().eventDispatcher.startElement("schedulingCellId", -1);

      schedulingCellId = new ServCellIndex();
      schedulingCellId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("schedulingCellId", -1);

      // decode cif_InSchedulingCell

      buffer.getContext().eventDispatcher.startElement("cif_InSchedulingCell", -1);

      cif_InSchedulingCell = new Asn1Integer();
      cif_InSchedulingCell.decode (buffer, 1, 7);

      buffer.invokeCharacters(cif_InSchedulingCell.toString());
      buffer.getContext().eventDispatcher.endElement("cif_InSchedulingCell", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (schedulingCellId != null) schedulingCellId.print (_sb, "schedulingCellId", _level+1);
      if (cif_InSchedulingCell != null) cif_InSchedulingCell.print (_sb, "cif_InSchedulingCell", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
