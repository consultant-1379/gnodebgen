/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MeasAndMobParametersMRDC_Common_v1610 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MeasAndMobParametersMRDC-Common-v1610";
   }

   public MeasAndMobParametersMRDC_Common_v1610_condPSCellChangeParametersCommon_r16 condPSCellChangeParametersCommon_r16;  // optional
   public MeasAndMobParametersMRDC_Common_v1610_pscellT312_r16 pscellT312_r16 = null;  // optional

   public MeasAndMobParametersMRDC_Common_v1610 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasAndMobParametersMRDC_Common_v1610 (
      MeasAndMobParametersMRDC_Common_v1610_condPSCellChangeParametersCommon_r16 condPSCellChangeParametersCommon_r16_,
      MeasAndMobParametersMRDC_Common_v1610_pscellT312_r16 pscellT312_r16_
   ) {
      super();
      condPSCellChangeParametersCommon_r16 = condPSCellChangeParametersCommon_r16_;
      pscellT312_r16 = pscellT312_r16_;
   }

   public void init () {
      condPSCellChangeParametersCommon_r16 = null;
      pscellT312_r16 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return condPSCellChangeParametersCommon_r16;
         case 1: return pscellT312_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "condPSCellChangeParametersCommon-r16";
         case 1: return "pscellT312-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean condPSCellChangeParametersCommon_r16Present = buffer.decodeBit ("condPSCellChangeParametersCommon_r16Present");
      boolean pscellT312_r16Present = buffer.decodeBit ("pscellT312_r16Present");

      // decode condPSCellChangeParametersCommon_r16

      if (condPSCellChangeParametersCommon_r16Present) {
         buffer.getContext().eventDispatcher.startElement("condPSCellChangeParametersCommon_r16", -1);

         condPSCellChangeParametersCommon_r16 = new MeasAndMobParametersMRDC_Common_v1610_condPSCellChangeParametersCommon_r16();
         condPSCellChangeParametersCommon_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("condPSCellChangeParametersCommon_r16", -1);
      }
      else {
         condPSCellChangeParametersCommon_r16 = null;
      }

      // decode pscellT312_r16

      if (pscellT312_r16Present) {
         buffer.getContext().eventDispatcher.startElement("pscellT312_r16", -1);

         int tval = MeasAndMobParametersMRDC_Common_v1610_pscellT312_r16.decodeEnumValue (buffer);
         pscellT312_r16 = MeasAndMobParametersMRDC_Common_v1610_pscellT312_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("pscellT312_r16", -1);
      }
      else {
         pscellT312_r16 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (condPSCellChangeParametersCommon_r16 != null) condPSCellChangeParametersCommon_r16.print (_sb, "condPSCellChangeParametersCommon_r16", _level+1);
      if (pscellT312_r16 != null) pscellT312_r16.print (_sb, "pscellT312_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
