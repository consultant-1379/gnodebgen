/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UE_EUTRA_Capability_v1380_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UE-EUTRA-Capability-v1380-IEs";
   }

   public RF_Parameters_v1380 rf_Parameters_v1380;  // optional
   public CE_Parameters_v1380 ce_Parameters_v1380;
   public UE_EUTRA_CapabilityAddXDD_Mode_v1380 fdd_Add_UE_EUTRA_Capabilities_v1380;
   public UE_EUTRA_CapabilityAddXDD_Mode_v1380 tdd_Add_UE_EUTRA_Capabilities_v1380;
   public UE_EUTRA_Capability_v1390_IEs nonCriticalExtension;  // optional

   public UE_EUTRA_Capability_v1380_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UE_EUTRA_Capability_v1380_IEs (
      RF_Parameters_v1380 rf_Parameters_v1380_,
      CE_Parameters_v1380 ce_Parameters_v1380_,
      UE_EUTRA_CapabilityAddXDD_Mode_v1380 fdd_Add_UE_EUTRA_Capabilities_v1380_,
      UE_EUTRA_CapabilityAddXDD_Mode_v1380 tdd_Add_UE_EUTRA_Capabilities_v1380_,
      UE_EUTRA_Capability_v1390_IEs nonCriticalExtension_
   ) {
      super();
      rf_Parameters_v1380 = rf_Parameters_v1380_;
      ce_Parameters_v1380 = ce_Parameters_v1380_;
      fdd_Add_UE_EUTRA_Capabilities_v1380 = fdd_Add_UE_EUTRA_Capabilities_v1380_;
      tdd_Add_UE_EUTRA_Capabilities_v1380 = tdd_Add_UE_EUTRA_Capabilities_v1380_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public UE_EUTRA_Capability_v1380_IEs (
      CE_Parameters_v1380 ce_Parameters_v1380_,
      UE_EUTRA_CapabilityAddXDD_Mode_v1380 fdd_Add_UE_EUTRA_Capabilities_v1380_,
      UE_EUTRA_CapabilityAddXDD_Mode_v1380 tdd_Add_UE_EUTRA_Capabilities_v1380_
   ) {
      super();
      ce_Parameters_v1380 = ce_Parameters_v1380_;
      fdd_Add_UE_EUTRA_Capabilities_v1380 = fdd_Add_UE_EUTRA_Capabilities_v1380_;
      tdd_Add_UE_EUTRA_Capabilities_v1380 = tdd_Add_UE_EUTRA_Capabilities_v1380_;
   }

   public void init () {
      rf_Parameters_v1380 = null;
      ce_Parameters_v1380 = null;
      fdd_Add_UE_EUTRA_Capabilities_v1380 = null;
      tdd_Add_UE_EUTRA_Capabilities_v1380 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return rf_Parameters_v1380;
         case 1: return ce_Parameters_v1380;
         case 2: return fdd_Add_UE_EUTRA_Capabilities_v1380;
         case 3: return tdd_Add_UE_EUTRA_Capabilities_v1380;
         case 4: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "rf-Parameters-v1380";
         case 1: return "ce-Parameters-v1380";
         case 2: return "fdd-Add-UE-EUTRA-Capabilities-v1380";
         case 3: return "tdd-Add-UE-EUTRA-Capabilities-v1380";
         case 4: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean rf_Parameters_v1380Present = buffer.decodeBit ("rf_Parameters_v1380Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode rf_Parameters_v1380

      if (rf_Parameters_v1380Present) {
         buffer.getContext().eventDispatcher.startElement("rf_Parameters_v1380", -1);

         rf_Parameters_v1380 = new RF_Parameters_v1380();
         rf_Parameters_v1380.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("rf_Parameters_v1380", -1);
      }
      else {
         rf_Parameters_v1380 = null;
      }

      // decode ce_Parameters_v1380

      buffer.getContext().eventDispatcher.startElement("ce_Parameters_v1380", -1);

      ce_Parameters_v1380 = new CE_Parameters_v1380();
      ce_Parameters_v1380.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ce_Parameters_v1380", -1);

      // decode fdd_Add_UE_EUTRA_Capabilities_v1380

      buffer.getContext().eventDispatcher.startElement("fdd_Add_UE_EUTRA_Capabilities_v1380", -1);

      fdd_Add_UE_EUTRA_Capabilities_v1380 = new UE_EUTRA_CapabilityAddXDD_Mode_v1380();
      fdd_Add_UE_EUTRA_Capabilities_v1380.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("fdd_Add_UE_EUTRA_Capabilities_v1380", -1);

      // decode tdd_Add_UE_EUTRA_Capabilities_v1380

      buffer.getContext().eventDispatcher.startElement("tdd_Add_UE_EUTRA_Capabilities_v1380", -1);

      tdd_Add_UE_EUTRA_Capabilities_v1380 = new UE_EUTRA_CapabilityAddXDD_Mode_v1380();
      tdd_Add_UE_EUTRA_Capabilities_v1380.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("tdd_Add_UE_EUTRA_Capabilities_v1380", -1);

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new UE_EUTRA_Capability_v1390_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (rf_Parameters_v1380 != null) rf_Parameters_v1380.print (_sb, "rf_Parameters_v1380", _level+1);
      if (ce_Parameters_v1380 != null) ce_Parameters_v1380.print (_sb, "ce_Parameters_v1380", _level+1);
      if (fdd_Add_UE_EUTRA_Capabilities_v1380 != null) fdd_Add_UE_EUTRA_Capabilities_v1380.print (_sb, "fdd_Add_UE_EUTRA_Capabilities_v1380", _level+1);
      if (tdd_Add_UE_EUTRA_Capabilities_v1380 != null) tdd_Add_UE_EUTRA_Capabilities_v1380.print (_sb, "tdd_Add_UE_EUTRA_Capabilities_v1380", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
