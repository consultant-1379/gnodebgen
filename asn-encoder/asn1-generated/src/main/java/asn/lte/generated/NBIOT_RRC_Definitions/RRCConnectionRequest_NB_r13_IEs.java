/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.InitialUE_Identity;

public class RRCConnectionRequest_NB_r13_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RRCConnectionRequest-NB-r13-IEs";
   }

   public InitialUE_Identity ue_Identity_r13;
   public EstablishmentCause_NB_r13 establishmentCause_r13 = null;
   public RRCConnectionRequest_NB_r13_IEs_multiToneSupport_r13 multiToneSupport_r13 = null;  // optional
   public RRCConnectionRequest_NB_r13_IEs_multiCarrierSupport_r13 multiCarrierSupport_r13 = null;  // optional
   public Asn1Boolean earlyContentionResolution_r14;
   public CQI_NPDCCH_NB_r14 cqi_NPDCCH_r14 = null;
   public Asn1BitString spare;

   public RRCConnectionRequest_NB_r13_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RRCConnectionRequest_NB_r13_IEs (
      InitialUE_Identity ue_Identity_r13_,
      EstablishmentCause_NB_r13 establishmentCause_r13_,
      RRCConnectionRequest_NB_r13_IEs_multiToneSupport_r13 multiToneSupport_r13_,
      RRCConnectionRequest_NB_r13_IEs_multiCarrierSupport_r13 multiCarrierSupport_r13_,
      Asn1Boolean earlyContentionResolution_r14_,
      CQI_NPDCCH_NB_r14 cqi_NPDCCH_r14_,
      Asn1BitString spare_
   ) {
      super();
      ue_Identity_r13 = ue_Identity_r13_;
      establishmentCause_r13 = establishmentCause_r13_;
      multiToneSupport_r13 = multiToneSupport_r13_;
      multiCarrierSupport_r13 = multiCarrierSupport_r13_;
      earlyContentionResolution_r14 = earlyContentionResolution_r14_;
      cqi_NPDCCH_r14 = cqi_NPDCCH_r14_;
      spare = spare_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public RRCConnectionRequest_NB_r13_IEs (
      InitialUE_Identity ue_Identity_r13_,
      EstablishmentCause_NB_r13 establishmentCause_r13_,
      Asn1Boolean earlyContentionResolution_r14_,
      CQI_NPDCCH_NB_r14 cqi_NPDCCH_r14_,
      Asn1BitString spare_
   ) {
      super();
      ue_Identity_r13 = ue_Identity_r13_;
      establishmentCause_r13 = establishmentCause_r13_;
      earlyContentionResolution_r14 = earlyContentionResolution_r14_;
      cqi_NPDCCH_r14 = cqi_NPDCCH_r14_;
      spare = spare_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public RRCConnectionRequest_NB_r13_IEs (InitialUE_Identity ue_Identity_r13_,
      EstablishmentCause_NB_r13 establishmentCause_r13_,
      RRCConnectionRequest_NB_r13_IEs_multiToneSupport_r13 multiToneSupport_r13_,
      RRCConnectionRequest_NB_r13_IEs_multiCarrierSupport_r13 multiCarrierSupport_r13_,
      boolean earlyContentionResolution_r14_,
      CQI_NPDCCH_NB_r14 cqi_NPDCCH_r14_,
      Asn1BitString spare_
   ) {
      super();
      ue_Identity_r13 = ue_Identity_r13_;
      establishmentCause_r13 = establishmentCause_r13_;
      multiToneSupport_r13 = multiToneSupport_r13_;
      multiCarrierSupport_r13 = multiCarrierSupport_r13_;
      earlyContentionResolution_r14 = new Asn1Boolean (earlyContentionResolution_r14_);
      cqi_NPDCCH_r14 = cqi_NPDCCH_r14_;
      spare = spare_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public RRCConnectionRequest_NB_r13_IEs (
      InitialUE_Identity ue_Identity_r13_,
      EstablishmentCause_NB_r13 establishmentCause_r13_,
      boolean earlyContentionResolution_r14_,
      CQI_NPDCCH_NB_r14 cqi_NPDCCH_r14_,
      Asn1BitString spare_
   ) {
      super();
      ue_Identity_r13 = ue_Identity_r13_;
      establishmentCause_r13 = establishmentCause_r13_;
      earlyContentionResolution_r14 = new Asn1Boolean (earlyContentionResolution_r14_);
      cqi_NPDCCH_r14 = cqi_NPDCCH_r14_;
      spare = spare_;
   }

   public void init () {
      ue_Identity_r13 = null;
      establishmentCause_r13 = null;
      multiToneSupport_r13 = null;
      multiCarrierSupport_r13 = null;
      earlyContentionResolution_r14 = null;
      cqi_NPDCCH_r14 = null;
      spare = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ue_Identity_r13;
         case 1: return establishmentCause_r13;
         case 2: return multiToneSupport_r13;
         case 3: return multiCarrierSupport_r13;
         case 4: return earlyContentionResolution_r14;
         case 5: return cqi_NPDCCH_r14;
         case 6: return spare;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ue-Identity-r13";
         case 1: return "establishmentCause-r13";
         case 2: return "multiToneSupport-r13";
         case 3: return "multiCarrierSupport-r13";
         case 4: return "earlyContentionResolution-r14";
         case 5: return "cqi-NPDCCH-r14";
         case 6: return "spare";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean multiToneSupport_r13Present = buffer.decodeBit ("multiToneSupport_r13Present");
      boolean multiCarrierSupport_r13Present = buffer.decodeBit ("multiCarrierSupport_r13Present");

      // decode ue_Identity_r13

      buffer.getContext().eventDispatcher.startElement("ue_Identity_r13", -1);

      ue_Identity_r13 = new InitialUE_Identity();
      ue_Identity_r13.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ue_Identity_r13", -1);

      // decode establishmentCause_r13

      buffer.getContext().eventDispatcher.startElement("establishmentCause_r13", -1);

      {
         int tval = EstablishmentCause_NB_r13.decodeEnumValue (buffer);
         establishmentCause_r13 = EstablishmentCause_NB_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("establishmentCause_r13", -1);

      // decode multiToneSupport_r13

      if (multiToneSupport_r13Present) {
         buffer.getContext().eventDispatcher.startElement("multiToneSupport_r13", -1);

         int tval = RRCConnectionRequest_NB_r13_IEs_multiToneSupport_r13.decodeEnumValue (buffer);
         multiToneSupport_r13 = RRCConnectionRequest_NB_r13_IEs_multiToneSupport_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("multiToneSupport_r13", -1);
      }
      else {
         multiToneSupport_r13 = null;
      }

      // decode multiCarrierSupport_r13

      if (multiCarrierSupport_r13Present) {
         buffer.getContext().eventDispatcher.startElement("multiCarrierSupport_r13", -1);

         int tval = RRCConnectionRequest_NB_r13_IEs_multiCarrierSupport_r13.decodeEnumValue (buffer);
         multiCarrierSupport_r13 = RRCConnectionRequest_NB_r13_IEs_multiCarrierSupport_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("multiCarrierSupport_r13", -1);
      }
      else {
         multiCarrierSupport_r13 = null;
      }

      // decode earlyContentionResolution_r14

      buffer.getContext().eventDispatcher.startElement("earlyContentionResolution_r14", -1);

      earlyContentionResolution_r14 = new Asn1Boolean();
      earlyContentionResolution_r14.decode (buffer);

      buffer.invokeCharacters(earlyContentionResolution_r14.toString());
      buffer.getContext().eventDispatcher.endElement("earlyContentionResolution_r14", -1);

      // decode cqi_NPDCCH_r14

      buffer.getContext().eventDispatcher.startElement("cqi_NPDCCH_r14", -1);

      {
         int tval = CQI_NPDCCH_NB_r14.decodeEnumValue (buffer);
         cqi_NPDCCH_r14 = CQI_NPDCCH_NB_r14.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("cqi_NPDCCH_r14", -1);

      // decode spare

      buffer.getContext().eventDispatcher.startElement("spare", -1);

      spare = new Asn1BitString();
      spare.decode (buffer, 17, 17);

      buffer.invokeCharacters(spare.toString());
      buffer.getContext().eventDispatcher.endElement("spare", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ue_Identity_r13 != null) ue_Identity_r13.print (_sb, "ue_Identity_r13", _level+1);
      if (establishmentCause_r13 != null) establishmentCause_r13.print (_sb, "establishmentCause_r13", _level+1);
      if (multiToneSupport_r13 != null) multiToneSupport_r13.print (_sb, "multiToneSupport_r13", _level+1);
      if (multiCarrierSupport_r13 != null) multiCarrierSupport_r13.print (_sb, "multiCarrierSupport_r13", _level+1);
      if (earlyContentionResolution_r14 != null) earlyContentionResolution_r14.print (_sb, "earlyContentionResolution_r14", _level+1);
      if (cqi_NPDCCH_r14 != null) cqi_NPDCCH_r14.print (_sb, "cqi_NPDCCH_r14", _level+1);
      if (spare != null) spare.print (_sb, "spare", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
