/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SIB1_v1610_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SIB1-v1610-IEs";
   }

   public SIB1_v1610_IEs_idleModeMeasurementsEUTRA_r16 idleModeMeasurementsEUTRA_r16 = null;  // optional
   public SIB1_v1610_IEs_idleModeMeasurementsNR_r16 idleModeMeasurementsNR_r16 = null;  // optional
   public PosSI_SchedulingInfo_r16 posSI_SchedulingInfo_r16;  // optional
   public SIB1_v1630_IEs nonCriticalExtension;  // optional

   public SIB1_v1610_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SIB1_v1610_IEs (
      SIB1_v1610_IEs_idleModeMeasurementsEUTRA_r16 idleModeMeasurementsEUTRA_r16_,
      SIB1_v1610_IEs_idleModeMeasurementsNR_r16 idleModeMeasurementsNR_r16_,
      PosSI_SchedulingInfo_r16 posSI_SchedulingInfo_r16_,
      SIB1_v1630_IEs nonCriticalExtension_
   ) {
      super();
      idleModeMeasurementsEUTRA_r16 = idleModeMeasurementsEUTRA_r16_;
      idleModeMeasurementsNR_r16 = idleModeMeasurementsNR_r16_;
      posSI_SchedulingInfo_r16 = posSI_SchedulingInfo_r16_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      idleModeMeasurementsEUTRA_r16 = null;
      idleModeMeasurementsNR_r16 = null;
      posSI_SchedulingInfo_r16 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return idleModeMeasurementsEUTRA_r16;
         case 1: return idleModeMeasurementsNR_r16;
         case 2: return posSI_SchedulingInfo_r16;
         case 3: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "idleModeMeasurementsEUTRA-r16";
         case 1: return "idleModeMeasurementsNR-r16";
         case 2: return "posSI-SchedulingInfo-r16";
         case 3: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean idleModeMeasurementsEUTRA_r16Present = buffer.decodeBit ("idleModeMeasurementsEUTRA_r16Present");
      boolean idleModeMeasurementsNR_r16Present = buffer.decodeBit ("idleModeMeasurementsNR_r16Present");
      boolean posSI_SchedulingInfo_r16Present = buffer.decodeBit ("posSI_SchedulingInfo_r16Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode idleModeMeasurementsEUTRA_r16

      if (idleModeMeasurementsEUTRA_r16Present) {
         buffer.getContext().eventDispatcher.startElement("idleModeMeasurementsEUTRA_r16", -1);

         int tval = SIB1_v1610_IEs_idleModeMeasurementsEUTRA_r16.decodeEnumValue (buffer);
         idleModeMeasurementsEUTRA_r16 = SIB1_v1610_IEs_idleModeMeasurementsEUTRA_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("idleModeMeasurementsEUTRA_r16", -1);
      }
      else {
         idleModeMeasurementsEUTRA_r16 = null;
      }

      // decode idleModeMeasurementsNR_r16

      if (idleModeMeasurementsNR_r16Present) {
         buffer.getContext().eventDispatcher.startElement("idleModeMeasurementsNR_r16", -1);

         int tval = SIB1_v1610_IEs_idleModeMeasurementsNR_r16.decodeEnumValue (buffer);
         idleModeMeasurementsNR_r16 = SIB1_v1610_IEs_idleModeMeasurementsNR_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("idleModeMeasurementsNR_r16", -1);
      }
      else {
         idleModeMeasurementsNR_r16 = null;
      }

      // decode posSI_SchedulingInfo_r16

      if (posSI_SchedulingInfo_r16Present) {
         buffer.getContext().eventDispatcher.startElement("posSI_SchedulingInfo_r16", -1);

         posSI_SchedulingInfo_r16 = new PosSI_SchedulingInfo_r16();
         posSI_SchedulingInfo_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("posSI_SchedulingInfo_r16", -1);
      }
      else {
         posSI_SchedulingInfo_r16 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new SIB1_v1630_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (idleModeMeasurementsEUTRA_r16 != null) idleModeMeasurementsEUTRA_r16.print (_sb, "idleModeMeasurementsEUTRA_r16", _level+1);
      if (idleModeMeasurementsNR_r16 != null) idleModeMeasurementsNR_r16.print (_sb, "idleModeMeasurementsNR_r16", _level+1);
      if (posSI_SchedulingInfo_r16 != null) posSI_SchedulingInfo_r16.print (_sb, "posSI_SchedulingInfo_r16", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
