/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _PP0 = 0;
   public static final int _PP1 = 1;
   public static final int _PP2 = 2;
   public static final int _PP4 = 3;
   public static final int _PP6 = 4;
   public static final int _PP8 = 5;
   public static final int _PP16 = 6;
   public static final int _PP24 = 7;
   public static final int _PP33 = 8;
   public static final int _PP40 = 9;
   public static final int _PP64 = 10;
   public static final int _PP80 = 11;
   public static final int _PP96 = 12;
   public static final int _PP112 = 13;
   public static final int _PP128 = 14;
   public static final int _PP160 = 15;
   public static final int _PP320 = 16;

   // Singleton instances of DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp0 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(0);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp1 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(1);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp2 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(2);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp4 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(3);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp6 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(4);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp8 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(5);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp16 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(6);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp24 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(7);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp33 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(8);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp40 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(9);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp64 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(10);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp80 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(11);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp96 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(12);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp112 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(13);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp128 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(14);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp160 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(15);
   protected static final DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 _pp320 = new DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13(16);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    *   16
    */
   protected DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for pp0.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp0() {
      return _pp0;
   }

   /**
    * Singleton accessor method for pp1.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp1() {
      return _pp1;
   }

   /**
    * Singleton accessor method for pp2.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp2() {
      return _pp2;
   }

   /**
    * Singleton accessor method for pp4.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp4() {
      return _pp4;
   }

   /**
    * Singleton accessor method for pp6.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp6() {
      return _pp6;
   }

   /**
    * Singleton accessor method for pp8.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp8() {
      return _pp8;
   }

   /**
    * Singleton accessor method for pp16.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp16() {
      return _pp16;
   }

   /**
    * Singleton accessor method for pp24.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp24() {
      return _pp24;
   }

   /**
    * Singleton accessor method for pp33.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp33() {
      return _pp33;
   }

   /**
    * Singleton accessor method for pp40.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp40() {
      return _pp40;
   }

   /**
    * Singleton accessor method for pp64.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp64() {
      return _pp64;
   }

   /**
    * Singleton accessor method for pp80.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp80() {
      return _pp80;
   }

   /**
    * Singleton accessor method for pp96.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp96() {
      return _pp96;
   }

   /**
    * Singleton accessor method for pp112.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp112() {
      return _pp112;
   }

   /**
    * Singleton accessor method for pp128.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp128() {
      return _pp128;
   }

   /**
    * Singleton accessor method for pp160.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp160() {
      return _pp160;
   }

   /**
    * Singleton accessor method for pp320.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 pp320() {
      return _pp320;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13.valueOf( DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return pp0();
         case 1: return pp1();
         case 2: return pp2();
         case 3: return pp4();
         case 4: return pp6();
         case 5: return pp8();
         case 6: return pp16();
         case 7: return pp24();
         case 8: return pp33();
         case 9: return pp40();
         case 10: return pp64();
         case 11: return pp80();
         case 12: return pp96();
         case 13: return pp112();
         case 14: return pp128();
         case 15: return pp160();
         case 16: return pp320();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (17);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         case 16: ret =  16; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("pp0");
         case 1: return ("pp1");
         case 2: return ("pp2");
         case 3: return ("pp4");
         case 4: return ("pp6");
         case 5: return ("pp8");
         case 6: return ("pp16");
         case 7: return ("pp24");
         case 8: return ("pp33");
         case 9: return ("pp40");
         case 10: return ("pp64");
         case 11: return ("pp80");
         case 12: return ("pp96");
         case 13: return ("pp112");
         case 14: return ("pp128");
         case 15: return ("pp160");
         case 16: return ("pp320");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
