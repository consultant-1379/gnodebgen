/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_SyncConfigNFreq_r13_asyncParameters_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public SL_CP_Len_r12 syncCP_Len_r13 = null;
   public SL_OffsetIndicatorSync_r12 syncOffsetIndicator_r13;
   public SLSSID_r12 slssid_r13;

   public SL_SyncConfigNFreq_r13_asyncParameters_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_SyncConfigNFreq_r13_asyncParameters_r13 (
      SL_CP_Len_r12 syncCP_Len_r13_,
      SL_OffsetIndicatorSync_r12 syncOffsetIndicator_r13_,
      SLSSID_r12 slssid_r13_
   ) {
      super();
      syncCP_Len_r13 = syncCP_Len_r13_;
      syncOffsetIndicator_r13 = syncOffsetIndicator_r13_;
      slssid_r13 = slssid_r13_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SL_SyncConfigNFreq_r13_asyncParameters_r13 (SL_CP_Len_r12 syncCP_Len_r13_,
      long syncOffsetIndicator_r13_,
      long slssid_r13_
   ) {
      super();
      syncCP_Len_r13 = syncCP_Len_r13_;
      syncOffsetIndicator_r13 = new SL_OffsetIndicatorSync_r12 (syncOffsetIndicator_r13_);
      slssid_r13 = new SLSSID_r12 (slssid_r13_);
   }

   public void init () {
      syncCP_Len_r13 = null;
      syncOffsetIndicator_r13 = null;
      slssid_r13 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return syncCP_Len_r13;
         case 1: return syncOffsetIndicator_r13;
         case 2: return slssid_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "syncCP-Len-r13";
         case 1: return "syncOffsetIndicator-r13";
         case 2: return "slssid-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode syncCP_Len_r13

      buffer.getContext().eventDispatcher.startElement("syncCP_Len_r13", -1);

      {
         int tval = SL_CP_Len_r12.decodeEnumValue (buffer);
         syncCP_Len_r13 = SL_CP_Len_r12.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("syncCP_Len_r13", -1);

      // decode syncOffsetIndicator_r13

      buffer.getContext().eventDispatcher.startElement("syncOffsetIndicator_r13", -1);

      syncOffsetIndicator_r13 = new SL_OffsetIndicatorSync_r12();
      syncOffsetIndicator_r13.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("syncOffsetIndicator_r13", -1);

      // decode slssid_r13

      buffer.getContext().eventDispatcher.startElement("slssid_r13", -1);

      slssid_r13 = new SLSSID_r12();
      slssid_r13.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("slssid_r13", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (syncCP_Len_r13 != null) syncCP_Len_r13.print (_sb, "syncCP_Len_r13", _level+1);
      if (syncOffsetIndicator_r13 != null) syncOffsetIndicator_r13.print (_sb, "syncOffsetIndicator_r13", _level+1);
      if (slssid_r13 != null) slssid_r13.print (_sb, "slssid_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
