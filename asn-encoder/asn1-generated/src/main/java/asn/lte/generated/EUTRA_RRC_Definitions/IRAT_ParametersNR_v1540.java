/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class IRAT_ParametersNR_v1540 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "IRAT-ParametersNR-v1540";
   }

   public IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_FDD_FR1_r15 eutra_5GC_HO_ToNR_FDD_FR1_r15 = null;  // optional
   public IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_TDD_FR1_r15 eutra_5GC_HO_ToNR_TDD_FR1_r15 = null;  // optional
   public IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_FDD_FR2_r15 eutra_5GC_HO_ToNR_FDD_FR2_r15 = null;  // optional
   public IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_TDD_FR2_r15 eutra_5GC_HO_ToNR_TDD_FR2_r15 = null;  // optional
   public IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_FDD_FR1_r15 eutra_EPC_HO_ToNR_FDD_FR1_r15 = null;  // optional
   public IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_TDD_FR1_r15 eutra_EPC_HO_ToNR_TDD_FR1_r15 = null;  // optional
   public IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_FDD_FR2_r15 eutra_EPC_HO_ToNR_FDD_FR2_r15 = null;  // optional
   public IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_TDD_FR2_r15 eutra_EPC_HO_ToNR_TDD_FR2_r15 = null;  // optional
   public IRAT_ParametersNR_v1540_ims_VoiceOverNR_FR1_r15 ims_VoiceOverNR_FR1_r15 = null;  // optional
   public IRAT_ParametersNR_v1540_ims_VoiceOverNR_FR2_r15 ims_VoiceOverNR_FR2_r15 = null;  // optional
   public IRAT_ParametersNR_v1540_sa_NR_r15 sa_NR_r15 = null;  // optional
   public SupportedBandListNR_r15 supportedBandListNR_SA_r15;  // optional

   public IRAT_ParametersNR_v1540 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public IRAT_ParametersNR_v1540 (
      IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_FDD_FR1_r15 eutra_5GC_HO_ToNR_FDD_FR1_r15_,
      IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_TDD_FR1_r15 eutra_5GC_HO_ToNR_TDD_FR1_r15_,
      IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_FDD_FR2_r15 eutra_5GC_HO_ToNR_FDD_FR2_r15_,
      IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_TDD_FR2_r15 eutra_5GC_HO_ToNR_TDD_FR2_r15_,
      IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_FDD_FR1_r15 eutra_EPC_HO_ToNR_FDD_FR1_r15_,
      IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_TDD_FR1_r15 eutra_EPC_HO_ToNR_TDD_FR1_r15_,
      IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_FDD_FR2_r15 eutra_EPC_HO_ToNR_FDD_FR2_r15_,
      IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_TDD_FR2_r15 eutra_EPC_HO_ToNR_TDD_FR2_r15_,
      IRAT_ParametersNR_v1540_ims_VoiceOverNR_FR1_r15 ims_VoiceOverNR_FR1_r15_,
      IRAT_ParametersNR_v1540_ims_VoiceOverNR_FR2_r15 ims_VoiceOverNR_FR2_r15_,
      IRAT_ParametersNR_v1540_sa_NR_r15 sa_NR_r15_,
      SupportedBandListNR_r15 supportedBandListNR_SA_r15_
   ) {
      super();
      eutra_5GC_HO_ToNR_FDD_FR1_r15 = eutra_5GC_HO_ToNR_FDD_FR1_r15_;
      eutra_5GC_HO_ToNR_TDD_FR1_r15 = eutra_5GC_HO_ToNR_TDD_FR1_r15_;
      eutra_5GC_HO_ToNR_FDD_FR2_r15 = eutra_5GC_HO_ToNR_FDD_FR2_r15_;
      eutra_5GC_HO_ToNR_TDD_FR2_r15 = eutra_5GC_HO_ToNR_TDD_FR2_r15_;
      eutra_EPC_HO_ToNR_FDD_FR1_r15 = eutra_EPC_HO_ToNR_FDD_FR1_r15_;
      eutra_EPC_HO_ToNR_TDD_FR1_r15 = eutra_EPC_HO_ToNR_TDD_FR1_r15_;
      eutra_EPC_HO_ToNR_FDD_FR2_r15 = eutra_EPC_HO_ToNR_FDD_FR2_r15_;
      eutra_EPC_HO_ToNR_TDD_FR2_r15 = eutra_EPC_HO_ToNR_TDD_FR2_r15_;
      ims_VoiceOverNR_FR1_r15 = ims_VoiceOverNR_FR1_r15_;
      ims_VoiceOverNR_FR2_r15 = ims_VoiceOverNR_FR2_r15_;
      sa_NR_r15 = sa_NR_r15_;
      supportedBandListNR_SA_r15 = supportedBandListNR_SA_r15_;
   }

   public void init () {
      eutra_5GC_HO_ToNR_FDD_FR1_r15 = null;
      eutra_5GC_HO_ToNR_TDD_FR1_r15 = null;
      eutra_5GC_HO_ToNR_FDD_FR2_r15 = null;
      eutra_5GC_HO_ToNR_TDD_FR2_r15 = null;
      eutra_EPC_HO_ToNR_FDD_FR1_r15 = null;
      eutra_EPC_HO_ToNR_TDD_FR1_r15 = null;
      eutra_EPC_HO_ToNR_FDD_FR2_r15 = null;
      eutra_EPC_HO_ToNR_TDD_FR2_r15 = null;
      ims_VoiceOverNR_FR1_r15 = null;
      ims_VoiceOverNR_FR2_r15 = null;
      sa_NR_r15 = null;
      supportedBandListNR_SA_r15 = null;
   }

   public int getElementCount() { return 12; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return eutra_5GC_HO_ToNR_FDD_FR1_r15;
         case 1: return eutra_5GC_HO_ToNR_TDD_FR1_r15;
         case 2: return eutra_5GC_HO_ToNR_FDD_FR2_r15;
         case 3: return eutra_5GC_HO_ToNR_TDD_FR2_r15;
         case 4: return eutra_EPC_HO_ToNR_FDD_FR1_r15;
         case 5: return eutra_EPC_HO_ToNR_TDD_FR1_r15;
         case 6: return eutra_EPC_HO_ToNR_FDD_FR2_r15;
         case 7: return eutra_EPC_HO_ToNR_TDD_FR2_r15;
         case 8: return ims_VoiceOverNR_FR1_r15;
         case 9: return ims_VoiceOverNR_FR2_r15;
         case 10: return sa_NR_r15;
         case 11: return supportedBandListNR_SA_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "eutra-5GC-HO-ToNR-FDD-FR1-r15";
         case 1: return "eutra-5GC-HO-ToNR-TDD-FR1-r15";
         case 2: return "eutra-5GC-HO-ToNR-FDD-FR2-r15";
         case 3: return "eutra-5GC-HO-ToNR-TDD-FR2-r15";
         case 4: return "eutra-EPC-HO-ToNR-FDD-FR1-r15";
         case 5: return "eutra-EPC-HO-ToNR-TDD-FR1-r15";
         case 6: return "eutra-EPC-HO-ToNR-FDD-FR2-r15";
         case 7: return "eutra-EPC-HO-ToNR-TDD-FR2-r15";
         case 8: return "ims-VoiceOverNR-FR1-r15";
         case 9: return "ims-VoiceOverNR-FR2-r15";
         case 10: return "sa-NR-r15";
         case 11: return "supportedBandListNR-SA-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean eutra_5GC_HO_ToNR_FDD_FR1_r15Present = buffer.decodeBit ("eutra_5GC_HO_ToNR_FDD_FR1_r15Present");
      boolean eutra_5GC_HO_ToNR_TDD_FR1_r15Present = buffer.decodeBit ("eutra_5GC_HO_ToNR_TDD_FR1_r15Present");
      boolean eutra_5GC_HO_ToNR_FDD_FR2_r15Present = buffer.decodeBit ("eutra_5GC_HO_ToNR_FDD_FR2_r15Present");
      boolean eutra_5GC_HO_ToNR_TDD_FR2_r15Present = buffer.decodeBit ("eutra_5GC_HO_ToNR_TDD_FR2_r15Present");
      boolean eutra_EPC_HO_ToNR_FDD_FR1_r15Present = buffer.decodeBit ("eutra_EPC_HO_ToNR_FDD_FR1_r15Present");
      boolean eutra_EPC_HO_ToNR_TDD_FR1_r15Present = buffer.decodeBit ("eutra_EPC_HO_ToNR_TDD_FR1_r15Present");
      boolean eutra_EPC_HO_ToNR_FDD_FR2_r15Present = buffer.decodeBit ("eutra_EPC_HO_ToNR_FDD_FR2_r15Present");
      boolean eutra_EPC_HO_ToNR_TDD_FR2_r15Present = buffer.decodeBit ("eutra_EPC_HO_ToNR_TDD_FR2_r15Present");
      boolean ims_VoiceOverNR_FR1_r15Present = buffer.decodeBit ("ims_VoiceOverNR_FR1_r15Present");
      boolean ims_VoiceOverNR_FR2_r15Present = buffer.decodeBit ("ims_VoiceOverNR_FR2_r15Present");
      boolean sa_NR_r15Present = buffer.decodeBit ("sa_NR_r15Present");
      boolean supportedBandListNR_SA_r15Present = buffer.decodeBit ("supportedBandListNR_SA_r15Present");

      // decode eutra_5GC_HO_ToNR_FDD_FR1_r15

      if (eutra_5GC_HO_ToNR_FDD_FR1_r15Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_5GC_HO_ToNR_FDD_FR1_r15", -1);

         int tval = IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_FDD_FR1_r15.decodeEnumValue (buffer);
         eutra_5GC_HO_ToNR_FDD_FR1_r15 = IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_FDD_FR1_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_5GC_HO_ToNR_FDD_FR1_r15", -1);
      }
      else {
         eutra_5GC_HO_ToNR_FDD_FR1_r15 = null;
      }

      // decode eutra_5GC_HO_ToNR_TDD_FR1_r15

      if (eutra_5GC_HO_ToNR_TDD_FR1_r15Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_5GC_HO_ToNR_TDD_FR1_r15", -1);

         int tval = IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_TDD_FR1_r15.decodeEnumValue (buffer);
         eutra_5GC_HO_ToNR_TDD_FR1_r15 = IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_TDD_FR1_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_5GC_HO_ToNR_TDD_FR1_r15", -1);
      }
      else {
         eutra_5GC_HO_ToNR_TDD_FR1_r15 = null;
      }

      // decode eutra_5GC_HO_ToNR_FDD_FR2_r15

      if (eutra_5GC_HO_ToNR_FDD_FR2_r15Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_5GC_HO_ToNR_FDD_FR2_r15", -1);

         int tval = IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_FDD_FR2_r15.decodeEnumValue (buffer);
         eutra_5GC_HO_ToNR_FDD_FR2_r15 = IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_FDD_FR2_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_5GC_HO_ToNR_FDD_FR2_r15", -1);
      }
      else {
         eutra_5GC_HO_ToNR_FDD_FR2_r15 = null;
      }

      // decode eutra_5GC_HO_ToNR_TDD_FR2_r15

      if (eutra_5GC_HO_ToNR_TDD_FR2_r15Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_5GC_HO_ToNR_TDD_FR2_r15", -1);

         int tval = IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_TDD_FR2_r15.decodeEnumValue (buffer);
         eutra_5GC_HO_ToNR_TDD_FR2_r15 = IRAT_ParametersNR_v1540_eutra_5GC_HO_ToNR_TDD_FR2_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_5GC_HO_ToNR_TDD_FR2_r15", -1);
      }
      else {
         eutra_5GC_HO_ToNR_TDD_FR2_r15 = null;
      }

      // decode eutra_EPC_HO_ToNR_FDD_FR1_r15

      if (eutra_EPC_HO_ToNR_FDD_FR1_r15Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_EPC_HO_ToNR_FDD_FR1_r15", -1);

         int tval = IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_FDD_FR1_r15.decodeEnumValue (buffer);
         eutra_EPC_HO_ToNR_FDD_FR1_r15 = IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_FDD_FR1_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_EPC_HO_ToNR_FDD_FR1_r15", -1);
      }
      else {
         eutra_EPC_HO_ToNR_FDD_FR1_r15 = null;
      }

      // decode eutra_EPC_HO_ToNR_TDD_FR1_r15

      if (eutra_EPC_HO_ToNR_TDD_FR1_r15Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_EPC_HO_ToNR_TDD_FR1_r15", -1);

         int tval = IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_TDD_FR1_r15.decodeEnumValue (buffer);
         eutra_EPC_HO_ToNR_TDD_FR1_r15 = IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_TDD_FR1_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_EPC_HO_ToNR_TDD_FR1_r15", -1);
      }
      else {
         eutra_EPC_HO_ToNR_TDD_FR1_r15 = null;
      }

      // decode eutra_EPC_HO_ToNR_FDD_FR2_r15

      if (eutra_EPC_HO_ToNR_FDD_FR2_r15Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_EPC_HO_ToNR_FDD_FR2_r15", -1);

         int tval = IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_FDD_FR2_r15.decodeEnumValue (buffer);
         eutra_EPC_HO_ToNR_FDD_FR2_r15 = IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_FDD_FR2_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_EPC_HO_ToNR_FDD_FR2_r15", -1);
      }
      else {
         eutra_EPC_HO_ToNR_FDD_FR2_r15 = null;
      }

      // decode eutra_EPC_HO_ToNR_TDD_FR2_r15

      if (eutra_EPC_HO_ToNR_TDD_FR2_r15Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_EPC_HO_ToNR_TDD_FR2_r15", -1);

         int tval = IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_TDD_FR2_r15.decodeEnumValue (buffer);
         eutra_EPC_HO_ToNR_TDD_FR2_r15 = IRAT_ParametersNR_v1540_eutra_EPC_HO_ToNR_TDD_FR2_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_EPC_HO_ToNR_TDD_FR2_r15", -1);
      }
      else {
         eutra_EPC_HO_ToNR_TDD_FR2_r15 = null;
      }

      // decode ims_VoiceOverNR_FR1_r15

      if (ims_VoiceOverNR_FR1_r15Present) {
         buffer.getContext().eventDispatcher.startElement("ims_VoiceOverNR_FR1_r15", -1);

         int tval = IRAT_ParametersNR_v1540_ims_VoiceOverNR_FR1_r15.decodeEnumValue (buffer);
         ims_VoiceOverNR_FR1_r15 = IRAT_ParametersNR_v1540_ims_VoiceOverNR_FR1_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ims_VoiceOverNR_FR1_r15", -1);
      }
      else {
         ims_VoiceOverNR_FR1_r15 = null;
      }

      // decode ims_VoiceOverNR_FR2_r15

      if (ims_VoiceOverNR_FR2_r15Present) {
         buffer.getContext().eventDispatcher.startElement("ims_VoiceOverNR_FR2_r15", -1);

         int tval = IRAT_ParametersNR_v1540_ims_VoiceOverNR_FR2_r15.decodeEnumValue (buffer);
         ims_VoiceOverNR_FR2_r15 = IRAT_ParametersNR_v1540_ims_VoiceOverNR_FR2_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ims_VoiceOverNR_FR2_r15", -1);
      }
      else {
         ims_VoiceOverNR_FR2_r15 = null;
      }

      // decode sa_NR_r15

      if (sa_NR_r15Present) {
         buffer.getContext().eventDispatcher.startElement("sa_NR_r15", -1);

         int tval = IRAT_ParametersNR_v1540_sa_NR_r15.decodeEnumValue (buffer);
         sa_NR_r15 = IRAT_ParametersNR_v1540_sa_NR_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("sa_NR_r15", -1);
      }
      else {
         sa_NR_r15 = null;
      }

      // decode supportedBandListNR_SA_r15

      if (supportedBandListNR_SA_r15Present) {
         buffer.getContext().eventDispatcher.startElement("supportedBandListNR_SA_r15", -1);

         supportedBandListNR_SA_r15 = new SupportedBandListNR_r15();
         supportedBandListNR_SA_r15.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("supportedBandListNR_SA_r15", -1);
      }
      else {
         supportedBandListNR_SA_r15 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (eutra_5GC_HO_ToNR_FDD_FR1_r15 != null) eutra_5GC_HO_ToNR_FDD_FR1_r15.print (_sb, "eutra_5GC_HO_ToNR_FDD_FR1_r15", _level+1);
      if (eutra_5GC_HO_ToNR_TDD_FR1_r15 != null) eutra_5GC_HO_ToNR_TDD_FR1_r15.print (_sb, "eutra_5GC_HO_ToNR_TDD_FR1_r15", _level+1);
      if (eutra_5GC_HO_ToNR_FDD_FR2_r15 != null) eutra_5GC_HO_ToNR_FDD_FR2_r15.print (_sb, "eutra_5GC_HO_ToNR_FDD_FR2_r15", _level+1);
      if (eutra_5GC_HO_ToNR_TDD_FR2_r15 != null) eutra_5GC_HO_ToNR_TDD_FR2_r15.print (_sb, "eutra_5GC_HO_ToNR_TDD_FR2_r15", _level+1);
      if (eutra_EPC_HO_ToNR_FDD_FR1_r15 != null) eutra_EPC_HO_ToNR_FDD_FR1_r15.print (_sb, "eutra_EPC_HO_ToNR_FDD_FR1_r15", _level+1);
      if (eutra_EPC_HO_ToNR_TDD_FR1_r15 != null) eutra_EPC_HO_ToNR_TDD_FR1_r15.print (_sb, "eutra_EPC_HO_ToNR_TDD_FR1_r15", _level+1);
      if (eutra_EPC_HO_ToNR_FDD_FR2_r15 != null) eutra_EPC_HO_ToNR_FDD_FR2_r15.print (_sb, "eutra_EPC_HO_ToNR_FDD_FR2_r15", _level+1);
      if (eutra_EPC_HO_ToNR_TDD_FR2_r15 != null) eutra_EPC_HO_ToNR_TDD_FR2_r15.print (_sb, "eutra_EPC_HO_ToNR_TDD_FR2_r15", _level+1);
      if (ims_VoiceOverNR_FR1_r15 != null) ims_VoiceOverNR_FR1_r15.print (_sb, "ims_VoiceOverNR_FR1_r15", _level+1);
      if (ims_VoiceOverNR_FR2_r15 != null) ims_VoiceOverNR_FR2_r15.print (_sb, "ims_VoiceOverNR_FR2_r15", _level+1);
      if (sa_NR_r15 != null) sa_NR_r15.print (_sb, "sa_NR_r15", _level+1);
      if (supportedBandListNR_SA_r15 != null) supportedBandListNR_SA_r15.print (_sb, "supportedBandListNR_SA_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
