/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class DL_AM_RLC_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "DL-AM-RLC-r15";
   }

   public T_Reordering t_Reordering_r15 = null;
   public T_StatusProhibit t_StatusProhibit_r15 = null;
   public Asn1Boolean extended_RLC_LI_Field_r15;

   public DL_AM_RLC_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public DL_AM_RLC_r15 (
      T_Reordering t_Reordering_r15_,
      T_StatusProhibit t_StatusProhibit_r15_,
      Asn1Boolean extended_RLC_LI_Field_r15_
   ) {
      super();
      t_Reordering_r15 = t_Reordering_r15_;
      t_StatusProhibit_r15 = t_StatusProhibit_r15_;
      extended_RLC_LI_Field_r15 = extended_RLC_LI_Field_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public DL_AM_RLC_r15 (T_Reordering t_Reordering_r15_,
      T_StatusProhibit t_StatusProhibit_r15_,
      boolean extended_RLC_LI_Field_r15_
   ) {
      super();
      t_Reordering_r15 = t_Reordering_r15_;
      t_StatusProhibit_r15 = t_StatusProhibit_r15_;
      extended_RLC_LI_Field_r15 = new Asn1Boolean (extended_RLC_LI_Field_r15_);
   }

   public void init () {
      t_Reordering_r15 = null;
      t_StatusProhibit_r15 = null;
      extended_RLC_LI_Field_r15 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return t_Reordering_r15;
         case 1: return t_StatusProhibit_r15;
         case 2: return extended_RLC_LI_Field_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "t-Reordering-r15";
         case 1: return "t-StatusProhibit-r15";
         case 2: return "extended-RLC-LI-Field-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode t_Reordering_r15

      buffer.getContext().eventDispatcher.startElement("t_Reordering_r15", -1);

      {
         int tval = T_Reordering.decodeEnumValue (buffer);
         t_Reordering_r15 = T_Reordering.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("t_Reordering_r15", -1);

      // decode t_StatusProhibit_r15

      buffer.getContext().eventDispatcher.startElement("t_StatusProhibit_r15", -1);

      {
         int tval = T_StatusProhibit.decodeEnumValue (buffer);
         t_StatusProhibit_r15 = T_StatusProhibit.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("t_StatusProhibit_r15", -1);

      // decode extended_RLC_LI_Field_r15

      buffer.getContext().eventDispatcher.startElement("extended_RLC_LI_Field_r15", -1);

      extended_RLC_LI_Field_r15 = new Asn1Boolean();
      extended_RLC_LI_Field_r15.decode (buffer);

      buffer.invokeCharacters(extended_RLC_LI_Field_r15.toString());
      buffer.getContext().eventDispatcher.endElement("extended_RLC_LI_Field_r15", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (t_Reordering_r15 != null) t_Reordering_r15.print (_sb, "t_Reordering_r15", _level+1);
      if (t_StatusProhibit_r15 != null) t_StatusProhibit_r15.print (_sb, "t_StatusProhibit_r15", _level+1);
      if (extended_RLC_LI_Field_r15 != null) extended_RLC_LI_Field_r15.print (_sb, "extended_RLC_LI_Field_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
