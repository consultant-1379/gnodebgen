/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_WindowLength_BR_r13 si_WindowLength_BR_r13 = null;
   public SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_RepetitionPattern_r13 si_RepetitionPattern_r13 = null;
   public SchedulingInfoList_BR_r13 schedulingInfoList_BR_r13;  // optional
   public SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_fdd_DownlinkOrTddSubframeBitmapBR_r13 fdd_DownlinkOrTddSubframeBitmapBR_r13;  // optional
   public Asn1BitString fdd_UplinkSubframeBitmapBR_r13;  // optional
   public Asn1Integer startSymbolBR_r13;
   public SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_HoppingConfigCommon_r13 si_HoppingConfigCommon_r13 = null;
   public SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_ValidityTime_r13 si_ValidityTime_r13 = null;  // optional
   public SystemInfoValueTagList_r13 systemInfoValueTagList_r13;  // optional

   public SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13 (
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_WindowLength_BR_r13 si_WindowLength_BR_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_RepetitionPattern_r13 si_RepetitionPattern_r13_,
      SchedulingInfoList_BR_r13 schedulingInfoList_BR_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_fdd_DownlinkOrTddSubframeBitmapBR_r13 fdd_DownlinkOrTddSubframeBitmapBR_r13_,
      Asn1BitString fdd_UplinkSubframeBitmapBR_r13_,
      Asn1Integer startSymbolBR_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_HoppingConfigCommon_r13 si_HoppingConfigCommon_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_ValidityTime_r13 si_ValidityTime_r13_,
      SystemInfoValueTagList_r13 systemInfoValueTagList_r13_
   ) {
      super();
      si_WindowLength_BR_r13 = si_WindowLength_BR_r13_;
      si_RepetitionPattern_r13 = si_RepetitionPattern_r13_;
      schedulingInfoList_BR_r13 = schedulingInfoList_BR_r13_;
      fdd_DownlinkOrTddSubframeBitmapBR_r13 = fdd_DownlinkOrTddSubframeBitmapBR_r13_;
      fdd_UplinkSubframeBitmapBR_r13 = fdd_UplinkSubframeBitmapBR_r13_;
      startSymbolBR_r13 = startSymbolBR_r13_;
      si_HoppingConfigCommon_r13 = si_HoppingConfigCommon_r13_;
      si_ValidityTime_r13 = si_ValidityTime_r13_;
      systemInfoValueTagList_r13 = systemInfoValueTagList_r13_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13 (
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_WindowLength_BR_r13 si_WindowLength_BR_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_RepetitionPattern_r13 si_RepetitionPattern_r13_,
      Asn1Integer startSymbolBR_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_HoppingConfigCommon_r13 si_HoppingConfigCommon_r13_
   ) {
      super();
      si_WindowLength_BR_r13 = si_WindowLength_BR_r13_;
      si_RepetitionPattern_r13 = si_RepetitionPattern_r13_;
      startSymbolBR_r13 = startSymbolBR_r13_;
      si_HoppingConfigCommon_r13 = si_HoppingConfigCommon_r13_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13 (SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_WindowLength_BR_r13 si_WindowLength_BR_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_RepetitionPattern_r13 si_RepetitionPattern_r13_,
      SchedulingInfoList_BR_r13 schedulingInfoList_BR_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_fdd_DownlinkOrTddSubframeBitmapBR_r13 fdd_DownlinkOrTddSubframeBitmapBR_r13_,
      Asn1BitString fdd_UplinkSubframeBitmapBR_r13_,
      long startSymbolBR_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_HoppingConfigCommon_r13 si_HoppingConfigCommon_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_ValidityTime_r13 si_ValidityTime_r13_,
      SystemInfoValueTagList_r13 systemInfoValueTagList_r13_
   ) {
      super();
      si_WindowLength_BR_r13 = si_WindowLength_BR_r13_;
      si_RepetitionPattern_r13 = si_RepetitionPattern_r13_;
      schedulingInfoList_BR_r13 = schedulingInfoList_BR_r13_;
      fdd_DownlinkOrTddSubframeBitmapBR_r13 = fdd_DownlinkOrTddSubframeBitmapBR_r13_;
      fdd_UplinkSubframeBitmapBR_r13 = fdd_UplinkSubframeBitmapBR_r13_;
      startSymbolBR_r13 = new Asn1Integer (startSymbolBR_r13_);
      si_HoppingConfigCommon_r13 = si_HoppingConfigCommon_r13_;
      si_ValidityTime_r13 = si_ValidityTime_r13_;
      systemInfoValueTagList_r13 = systemInfoValueTagList_r13_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13 (
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_WindowLength_BR_r13 si_WindowLength_BR_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_RepetitionPattern_r13 si_RepetitionPattern_r13_,
      long startSymbolBR_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_HoppingConfigCommon_r13 si_HoppingConfigCommon_r13_
   ) {
      super();
      si_WindowLength_BR_r13 = si_WindowLength_BR_r13_;
      si_RepetitionPattern_r13 = si_RepetitionPattern_r13_;
      startSymbolBR_r13 = new Asn1Integer (startSymbolBR_r13_);
      si_HoppingConfigCommon_r13 = si_HoppingConfigCommon_r13_;
   }

   public void init () {
      si_WindowLength_BR_r13 = null;
      si_RepetitionPattern_r13 = null;
      schedulingInfoList_BR_r13 = null;
      fdd_DownlinkOrTddSubframeBitmapBR_r13 = null;
      fdd_UplinkSubframeBitmapBR_r13 = null;
      startSymbolBR_r13 = null;
      si_HoppingConfigCommon_r13 = null;
      si_ValidityTime_r13 = null;
      systemInfoValueTagList_r13 = null;
   }

   public int getElementCount() { return 9; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return si_WindowLength_BR_r13;
         case 1: return si_RepetitionPattern_r13;
         case 2: return schedulingInfoList_BR_r13;
         case 3: return fdd_DownlinkOrTddSubframeBitmapBR_r13;
         case 4: return fdd_UplinkSubframeBitmapBR_r13;
         case 5: return startSymbolBR_r13;
         case 6: return si_HoppingConfigCommon_r13;
         case 7: return si_ValidityTime_r13;
         case 8: return systemInfoValueTagList_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "si-WindowLength-BR-r13";
         case 1: return "si-RepetitionPattern-r13";
         case 2: return "schedulingInfoList-BR-r13";
         case 3: return "fdd-DownlinkOrTddSubframeBitmapBR-r13";
         case 4: return "fdd-UplinkSubframeBitmapBR-r13";
         case 5: return "startSymbolBR-r13";
         case 6: return "si-HoppingConfigCommon-r13";
         case 7: return "si-ValidityTime-r13";
         case 8: return "systemInfoValueTagList-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean schedulingInfoList_BR_r13Present = buffer.decodeBit ("schedulingInfoList_BR_r13Present");
      boolean fdd_DownlinkOrTddSubframeBitmapBR_r13Present = buffer.decodeBit ("fdd_DownlinkOrTddSubframeBitmapBR_r13Present");
      boolean fdd_UplinkSubframeBitmapBR_r13Present = buffer.decodeBit ("fdd_UplinkSubframeBitmapBR_r13Present");
      boolean si_ValidityTime_r13Present = buffer.decodeBit ("si_ValidityTime_r13Present");
      boolean systemInfoValueTagList_r13Present = buffer.decodeBit ("systemInfoValueTagList_r13Present");

      // decode si_WindowLength_BR_r13

      buffer.getContext().eventDispatcher.startElement("si_WindowLength_BR_r13", -1);

      {
         int tval = SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_WindowLength_BR_r13.decodeEnumValue (buffer);
         si_WindowLength_BR_r13 = SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_WindowLength_BR_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("si_WindowLength_BR_r13", -1);

      // decode si_RepetitionPattern_r13

      buffer.getContext().eventDispatcher.startElement("si_RepetitionPattern_r13", -1);

      {
         int tval = SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_RepetitionPattern_r13.decodeEnumValue (buffer);
         si_RepetitionPattern_r13 = SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_RepetitionPattern_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("si_RepetitionPattern_r13", -1);

      // decode schedulingInfoList_BR_r13

      if (schedulingInfoList_BR_r13Present) {
         buffer.getContext().eventDispatcher.startElement("schedulingInfoList_BR_r13", -1);

         schedulingInfoList_BR_r13 = new SchedulingInfoList_BR_r13();
         schedulingInfoList_BR_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("schedulingInfoList_BR_r13", -1);
      }
      else {
         schedulingInfoList_BR_r13 = null;
      }

      // decode fdd_DownlinkOrTddSubframeBitmapBR_r13

      if (fdd_DownlinkOrTddSubframeBitmapBR_r13Present) {
         buffer.getContext().eventDispatcher.startElement("fdd_DownlinkOrTddSubframeBitmapBR_r13", -1);

         fdd_DownlinkOrTddSubframeBitmapBR_r13 = new SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_fdd_DownlinkOrTddSubframeBitmapBR_r13();
         fdd_DownlinkOrTddSubframeBitmapBR_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("fdd_DownlinkOrTddSubframeBitmapBR_r13", -1);
      }
      else {
         fdd_DownlinkOrTddSubframeBitmapBR_r13 = null;
      }

      // decode fdd_UplinkSubframeBitmapBR_r13

      if (fdd_UplinkSubframeBitmapBR_r13Present) {
         buffer.getContext().eventDispatcher.startElement("fdd_UplinkSubframeBitmapBR_r13", -1);

         fdd_UplinkSubframeBitmapBR_r13 = new Asn1BitString();
         fdd_UplinkSubframeBitmapBR_r13.decode (buffer, 10, 10);

         buffer.invokeCharacters(fdd_UplinkSubframeBitmapBR_r13.toString());
         buffer.getContext().eventDispatcher.endElement("fdd_UplinkSubframeBitmapBR_r13", -1);
      }
      else {
         fdd_UplinkSubframeBitmapBR_r13 = null;
      }

      // decode startSymbolBR_r13

      buffer.getContext().eventDispatcher.startElement("startSymbolBR_r13", -1);

      startSymbolBR_r13 = new Asn1Integer();
      startSymbolBR_r13.decode (buffer, 1, 4);

      buffer.invokeCharacters(startSymbolBR_r13.toString());
      buffer.getContext().eventDispatcher.endElement("startSymbolBR_r13", -1);

      // decode si_HoppingConfigCommon_r13

      buffer.getContext().eventDispatcher.startElement("si_HoppingConfigCommon_r13", -1);

      {
         int tval = SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_HoppingConfigCommon_r13.decodeEnumValue (buffer);
         si_HoppingConfigCommon_r13 = SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_HoppingConfigCommon_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("si_HoppingConfigCommon_r13", -1);

      // decode si_ValidityTime_r13

      if (si_ValidityTime_r13Present) {
         buffer.getContext().eventDispatcher.startElement("si_ValidityTime_r13", -1);

         int tval = SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_ValidityTime_r13.decodeEnumValue (buffer);
         si_ValidityTime_r13 = SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13_si_ValidityTime_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("si_ValidityTime_r13", -1);
      }
      else {
         si_ValidityTime_r13 = null;
      }

      // decode systemInfoValueTagList_r13

      if (systemInfoValueTagList_r13Present) {
         buffer.getContext().eventDispatcher.startElement("systemInfoValueTagList_r13", -1);

         systemInfoValueTagList_r13 = new SystemInfoValueTagList_r13();
         systemInfoValueTagList_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("systemInfoValueTagList_r13", -1);
      }
      else {
         systemInfoValueTagList_r13 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (si_WindowLength_BR_r13 != null) si_WindowLength_BR_r13.print (_sb, "si_WindowLength_BR_r13", _level+1);
      if (si_RepetitionPattern_r13 != null) si_RepetitionPattern_r13.print (_sb, "si_RepetitionPattern_r13", _level+1);
      if (schedulingInfoList_BR_r13 != null) schedulingInfoList_BR_r13.print (_sb, "schedulingInfoList_BR_r13", _level+1);
      if (fdd_DownlinkOrTddSubframeBitmapBR_r13 != null) fdd_DownlinkOrTddSubframeBitmapBR_r13.print (_sb, "fdd_DownlinkOrTddSubframeBitmapBR_r13", _level+1);
      if (fdd_UplinkSubframeBitmapBR_r13 != null) fdd_UplinkSubframeBitmapBR_r13.print (_sb, "fdd_UplinkSubframeBitmapBR_r13", _level+1);
      if (startSymbolBR_r13 != null) startSymbolBR_r13.print (_sb, "startSymbolBR_r13", _level+1);
      if (si_HoppingConfigCommon_r13 != null) si_HoppingConfigCommon_r13.print (_sb, "si_HoppingConfigCommon_r13", _level+1);
      if (si_ValidityTime_r13 != null) si_ValidityTime_r13.print (_sb, "si_ValidityTime_r13", _level+1);
      if (systemInfoValueTagList_r13 != null) systemInfoValueTagList_r13.print (_sb, "systemInfoValueTagList_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
