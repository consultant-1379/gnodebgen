/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SRS_PosResourceSet_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SRS-PosResourceSet-r16";
   }

   public SRS_PosResourceSetId_r16 srs_PosResourceSetId_r16;
   public SRS_PosResourceSet_r16_srs_PosResourceIdList_r16 srs_PosResourceIdList_r16;  // optional
   public SRS_PosResourceSet_r16_resourceType_r16 resourceType_r16;
   public Alpha alpha_r16 = null;  // optional
   public Asn1Integer p0_r16;  // optional
   public SRS_PosResourceSet_r16_pathlossReferenceRS_Pos_r16 pathlossReferenceRS_Pos_r16;  // optional
   public Asn1OpenExt extElem1;

   public SRS_PosResourceSet_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SRS_PosResourceSet_r16 (
      SRS_PosResourceSetId_r16 srs_PosResourceSetId_r16_,
      SRS_PosResourceSet_r16_srs_PosResourceIdList_r16 srs_PosResourceIdList_r16_,
      SRS_PosResourceSet_r16_resourceType_r16 resourceType_r16_,
      Alpha alpha_r16_,
      Asn1Integer p0_r16_,
      SRS_PosResourceSet_r16_pathlossReferenceRS_Pos_r16 pathlossReferenceRS_Pos_r16_
   ) {
      super();
      srs_PosResourceSetId_r16 = srs_PosResourceSetId_r16_;
      srs_PosResourceIdList_r16 = srs_PosResourceIdList_r16_;
      resourceType_r16 = resourceType_r16_;
      alpha_r16 = alpha_r16_;
      p0_r16 = p0_r16_;
      pathlossReferenceRS_Pos_r16 = pathlossReferenceRS_Pos_r16_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SRS_PosResourceSet_r16 (
      SRS_PosResourceSetId_r16 srs_PosResourceSetId_r16_,
      SRS_PosResourceSet_r16_resourceType_r16 resourceType_r16_
   ) {
      super();
      srs_PosResourceSetId_r16 = srs_PosResourceSetId_r16_;
      resourceType_r16 = resourceType_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SRS_PosResourceSet_r16 (long srs_PosResourceSetId_r16_,
      SRS_PosResourceSet_r16_srs_PosResourceIdList_r16 srs_PosResourceIdList_r16_,
      SRS_PosResourceSet_r16_resourceType_r16 resourceType_r16_,
      Alpha alpha_r16_,
      long p0_r16_,
      SRS_PosResourceSet_r16_pathlossReferenceRS_Pos_r16 pathlossReferenceRS_Pos_r16_
   ) {
      super();
      srs_PosResourceSetId_r16 = new SRS_PosResourceSetId_r16 (srs_PosResourceSetId_r16_);
      srs_PosResourceIdList_r16 = srs_PosResourceIdList_r16_;
      resourceType_r16 = resourceType_r16_;
      alpha_r16 = alpha_r16_;
      p0_r16 = new Asn1Integer (p0_r16_);
      pathlossReferenceRS_Pos_r16 = pathlossReferenceRS_Pos_r16_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public SRS_PosResourceSet_r16 (
      long srs_PosResourceSetId_r16_,
      SRS_PosResourceSet_r16_resourceType_r16 resourceType_r16_
   ) {
      super();
      srs_PosResourceSetId_r16 = new SRS_PosResourceSetId_r16 (srs_PosResourceSetId_r16_);
      resourceType_r16 = resourceType_r16_;
   }

   public void init () {
      srs_PosResourceSetId_r16 = null;
      srs_PosResourceIdList_r16 = null;
      resourceType_r16 = null;
      alpha_r16 = null;
      p0_r16 = null;
      pathlossReferenceRS_Pos_r16 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return srs_PosResourceSetId_r16;
         case 1: return srs_PosResourceIdList_r16;
         case 2: return resourceType_r16;
         case 3: return alpha_r16;
         case 4: return p0_r16;
         case 5: return pathlossReferenceRS_Pos_r16;
         case 6: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "srs-PosResourceSetId-r16";
         case 1: return "srs-PosResourceIdList-r16";
         case 2: return "resourceType-r16";
         case 3: return "alpha-r16";
         case 4: return "p0-r16";
         case 5: return "pathlossReferenceRS-Pos-r16";
         case 6: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean srs_PosResourceIdList_r16Present = buffer.decodeBit ("srs_PosResourceIdList_r16Present");
      boolean alpha_r16Present = buffer.decodeBit ("alpha_r16Present");
      boolean p0_r16Present = buffer.decodeBit ("p0_r16Present");
      boolean pathlossReferenceRS_Pos_r16Present = buffer.decodeBit ("pathlossReferenceRS_Pos_r16Present");

      // decode srs_PosResourceSetId_r16

      buffer.getContext().eventDispatcher.startElement("srs_PosResourceSetId_r16", -1);

      srs_PosResourceSetId_r16 = new SRS_PosResourceSetId_r16();
      srs_PosResourceSetId_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("srs_PosResourceSetId_r16", -1);

      // decode srs_PosResourceIdList_r16

      if (srs_PosResourceIdList_r16Present) {
         buffer.getContext().eventDispatcher.startElement("srs_PosResourceIdList_r16", -1);

         srs_PosResourceIdList_r16 = new SRS_PosResourceSet_r16_srs_PosResourceIdList_r16();
         srs_PosResourceIdList_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("srs_PosResourceIdList_r16", -1);
      }
      else {
         srs_PosResourceIdList_r16 = null;
      }

      // decode resourceType_r16

      buffer.getContext().eventDispatcher.startElement("resourceType_r16", -1);

      resourceType_r16 = new SRS_PosResourceSet_r16_resourceType_r16();
      resourceType_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("resourceType_r16", -1);

      // decode alpha_r16

      if (alpha_r16Present) {
         buffer.getContext().eventDispatcher.startElement("alpha_r16", -1);

         int tval = Alpha.decodeEnumValue (buffer);
         alpha_r16 = Alpha.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("alpha_r16", -1);
      }
      else {
         alpha_r16 = null;
      }

      // decode p0_r16

      if (p0_r16Present) {
         buffer.getContext().eventDispatcher.startElement("p0_r16", -1);

         p0_r16 = new Asn1Integer();
         p0_r16.decode (buffer, -202, 24);

         buffer.invokeCharacters(p0_r16.toString());
         buffer.getContext().eventDispatcher.endElement("p0_r16", -1);
      }
      else {
         p0_r16 = null;
      }

      // decode pathlossReferenceRS_Pos_r16

      if (pathlossReferenceRS_Pos_r16Present) {
         buffer.getContext().eventDispatcher.startElement("pathlossReferenceRS_Pos_r16", -1);

         pathlossReferenceRS_Pos_r16 = new SRS_PosResourceSet_r16_pathlossReferenceRS_Pos_r16();
         pathlossReferenceRS_Pos_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("pathlossReferenceRS_Pos_r16", -1);
      }
      else {
         pathlossReferenceRS_Pos_r16 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (srs_PosResourceSetId_r16 != null) srs_PosResourceSetId_r16.print (_sb, "srs_PosResourceSetId_r16", _level+1);
      if (srs_PosResourceIdList_r16 != null) srs_PosResourceIdList_r16.print (_sb, "srs_PosResourceIdList_r16", _level+1);
      if (resourceType_r16 != null) resourceType_r16.print (_sb, "resourceType_r16", _level+1);
      if (alpha_r16 != null) alpha_r16.print (_sb, "alpha_r16", _level+1);
      if (p0_r16 != null) p0_r16.print (_sb, "p0_r16", _level+1);
      if (pathlossReferenceRS_Pos_r16 != null) pathlossReferenceRS_Pos_r16.print (_sb, "pathlossReferenceRS_Pos_r16", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
