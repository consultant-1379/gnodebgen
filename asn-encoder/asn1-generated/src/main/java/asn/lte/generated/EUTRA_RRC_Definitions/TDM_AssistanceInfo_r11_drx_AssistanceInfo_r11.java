/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_CycleLength_r11 drx_CycleLength_r11 = null;
   public Asn1Integer drx_Offset_r11;  // optional
   public TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 drx_ActiveTime_r11 = null;

   public TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11 (
      TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_CycleLength_r11 drx_CycleLength_r11_,
      Asn1Integer drx_Offset_r11_,
      TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 drx_ActiveTime_r11_
   ) {
      super();
      drx_CycleLength_r11 = drx_CycleLength_r11_;
      drx_Offset_r11 = drx_Offset_r11_;
      drx_ActiveTime_r11 = drx_ActiveTime_r11_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11 (
      TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_CycleLength_r11 drx_CycleLength_r11_,
      TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 drx_ActiveTime_r11_
   ) {
      super();
      drx_CycleLength_r11 = drx_CycleLength_r11_;
      drx_ActiveTime_r11 = drx_ActiveTime_r11_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11 (TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_CycleLength_r11 drx_CycleLength_r11_,
      long drx_Offset_r11_,
      TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11 drx_ActiveTime_r11_
   ) {
      super();
      drx_CycleLength_r11 = drx_CycleLength_r11_;
      drx_Offset_r11 = new Asn1Integer (drx_Offset_r11_);
      drx_ActiveTime_r11 = drx_ActiveTime_r11_;
   }

   public void init () {
      drx_CycleLength_r11 = null;
      drx_Offset_r11 = null;
      drx_ActiveTime_r11 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return drx_CycleLength_r11;
         case 1: return drx_Offset_r11;
         case 2: return drx_ActiveTime_r11;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "drx-CycleLength-r11";
         case 1: return "drx-Offset-r11";
         case 2: return "drx-ActiveTime-r11";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean drx_Offset_r11Present = buffer.decodeBit ("drx_Offset_r11Present");

      // decode drx_CycleLength_r11

      buffer.getContext().eventDispatcher.startElement("drx_CycleLength_r11", -1);

      {
         int tval = TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_CycleLength_r11.decodeEnumValue (buffer);
         drx_CycleLength_r11 = TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_CycleLength_r11.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("drx_CycleLength_r11", -1);

      // decode drx_Offset_r11

      if (drx_Offset_r11Present) {
         buffer.getContext().eventDispatcher.startElement("drx_Offset_r11", -1);

         drx_Offset_r11 = new Asn1Integer();
         drx_Offset_r11.decode (buffer, 0, 255);

         buffer.invokeCharacters(drx_Offset_r11.toString());
         buffer.getContext().eventDispatcher.endElement("drx_Offset_r11", -1);
      }
      else {
         drx_Offset_r11 = null;
      }

      // decode drx_ActiveTime_r11

      buffer.getContext().eventDispatcher.startElement("drx_ActiveTime_r11", -1);

      {
         int tval = TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11.decodeEnumValue (buffer);
         drx_ActiveTime_r11 = TDM_AssistanceInfo_r11_drx_AssistanceInfo_r11_drx_ActiveTime_r11.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("drx_ActiveTime_r11", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (drx_CycleLength_r11 != null) drx_CycleLength_r11.print (_sb, "drx_CycleLength_r11", _level+1);
      if (drx_Offset_r11 != null) drx_Offset_r11.print (_sb, "drx_Offset_r11", _level+1);
      if (drx_ActiveTime_r11 != null) drx_ActiveTime_r11.print (_sb, "drx_ActiveTime_r11", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
