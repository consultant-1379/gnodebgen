/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.S_TMSI;

public class ReestabUE_Identity_CP_NB_r14 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ReestabUE-Identity-CP-NB-r14";
   }

   public S_TMSI s_TMSI_r14;
   public Asn1BitString ul_NAS_MAC_r14;
   public Asn1BitString ul_NAS_Count_r14;

   public ReestabUE_Identity_CP_NB_r14 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public ReestabUE_Identity_CP_NB_r14 (
      S_TMSI s_TMSI_r14_,
      Asn1BitString ul_NAS_MAC_r14_,
      Asn1BitString ul_NAS_Count_r14_
   ) {
      super();
      s_TMSI_r14 = s_TMSI_r14_;
      ul_NAS_MAC_r14 = ul_NAS_MAC_r14_;
      ul_NAS_Count_r14 = ul_NAS_Count_r14_;
   }

   public void init () {
      s_TMSI_r14 = null;
      ul_NAS_MAC_r14 = null;
      ul_NAS_Count_r14 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return s_TMSI_r14;
         case 1: return ul_NAS_MAC_r14;
         case 2: return ul_NAS_Count_r14;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "s-TMSI-r14";
         case 1: return "ul-NAS-MAC-r14";
         case 2: return "ul-NAS-Count-r14";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode s_TMSI_r14

      buffer.getContext().eventDispatcher.startElement("s_TMSI_r14", -1);

      s_TMSI_r14 = new S_TMSI();
      s_TMSI_r14.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("s_TMSI_r14", -1);

      // decode ul_NAS_MAC_r14

      buffer.getContext().eventDispatcher.startElement("ul_NAS_MAC_r14", -1);

      ul_NAS_MAC_r14 = new Asn1BitString();
      ul_NAS_MAC_r14.decode (buffer, 16, 16);

      buffer.invokeCharacters(ul_NAS_MAC_r14.toString());
      buffer.getContext().eventDispatcher.endElement("ul_NAS_MAC_r14", -1);

      // decode ul_NAS_Count_r14

      buffer.getContext().eventDispatcher.startElement("ul_NAS_Count_r14", -1);

      ul_NAS_Count_r14 = new Asn1BitString();
      ul_NAS_Count_r14.decode (buffer, 5, 5);

      buffer.invokeCharacters(ul_NAS_Count_r14.toString());
      buffer.getContext().eventDispatcher.endElement("ul_NAS_Count_r14", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (s_TMSI_r14 != null) s_TMSI_r14.print (_sb, "s_TMSI_r14", _level+1);
      if (ul_NAS_MAC_r14 != null) ul_NAS_MAC_r14.print (_sb, "ul_NAS_MAC_r14", _level+1);
      if (ul_NAS_Count_r14 != null) ul_NAS_Count_r14.print (_sb, "ul_NAS_Count_r14", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
