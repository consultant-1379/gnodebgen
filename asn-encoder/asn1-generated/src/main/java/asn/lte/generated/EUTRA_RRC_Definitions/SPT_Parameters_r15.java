/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SPT_Parameters_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SPT-Parameters-r15";
   }

   public Asn1BitString frameStructureType_SPT_r15;  // optional
   public Asn1Integer maxNumberCCs_SPT_r15;  // optional

   public SPT_Parameters_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SPT_Parameters_r15 (
      Asn1BitString frameStructureType_SPT_r15_,
      Asn1Integer maxNumberCCs_SPT_r15_
   ) {
      super();
      frameStructureType_SPT_r15 = frameStructureType_SPT_r15_;
      maxNumberCCs_SPT_r15 = maxNumberCCs_SPT_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SPT_Parameters_r15 (Asn1BitString frameStructureType_SPT_r15_,
      long maxNumberCCs_SPT_r15_
   ) {
      super();
      frameStructureType_SPT_r15 = frameStructureType_SPT_r15_;
      maxNumberCCs_SPT_r15 = new Asn1Integer (maxNumberCCs_SPT_r15_);
   }

   public void init () {
      frameStructureType_SPT_r15 = null;
      maxNumberCCs_SPT_r15 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return frameStructureType_SPT_r15;
         case 1: return maxNumberCCs_SPT_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "frameStructureType-SPT-r15";
         case 1: return "maxNumberCCs-SPT-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean frameStructureType_SPT_r15Present = buffer.decodeBit ("frameStructureType_SPT_r15Present");
      boolean maxNumberCCs_SPT_r15Present = buffer.decodeBit ("maxNumberCCs_SPT_r15Present");

      // decode frameStructureType_SPT_r15

      if (frameStructureType_SPT_r15Present) {
         buffer.getContext().eventDispatcher.startElement("frameStructureType_SPT_r15", -1);

         frameStructureType_SPT_r15 = new Asn1BitString();
         frameStructureType_SPT_r15.decode (buffer, 3, 3);

         buffer.invokeCharacters(frameStructureType_SPT_r15.toString());
         buffer.getContext().eventDispatcher.endElement("frameStructureType_SPT_r15", -1);
      }
      else {
         frameStructureType_SPT_r15 = null;
      }

      // decode maxNumberCCs_SPT_r15

      if (maxNumberCCs_SPT_r15Present) {
         buffer.getContext().eventDispatcher.startElement("maxNumberCCs_SPT_r15", -1);

         maxNumberCCs_SPT_r15 = new Asn1Integer();
         maxNumberCCs_SPT_r15.decode (buffer, 1, 32);

         buffer.invokeCharacters(maxNumberCCs_SPT_r15.toString());
         buffer.getContext().eventDispatcher.endElement("maxNumberCCs_SPT_r15", -1);
      }
      else {
         maxNumberCCs_SPT_r15 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (frameStructureType_SPT_r15 != null) frameStructureType_SPT_r15.print (_sb, "frameStructureType_SPT_r15", _level+1);
      if (maxNumberCCs_SPT_r15 != null) maxNumberCCs_SPT_r15.print (_sb, "maxNumberCCs_SPT_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
