/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PDSCH_ConfigCommon extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PDSCH-ConfigCommon";
   }

   public Asn1Integer referenceSignalPower;
   public Asn1Integer p_b;

   public PDSCH_ConfigCommon () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PDSCH_ConfigCommon (
      Asn1Integer referenceSignalPower_,
      Asn1Integer p_b_
   ) {
      super();
      referenceSignalPower = referenceSignalPower_;
      p_b = p_b_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PDSCH_ConfigCommon (long referenceSignalPower_,
      long p_b_
   ) {
      super();
      referenceSignalPower = new Asn1Integer (referenceSignalPower_);
      p_b = new Asn1Integer (p_b_);
   }

   public void init () {
      referenceSignalPower = null;
      p_b = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return referenceSignalPower;
         case 1: return p_b;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "referenceSignalPower";
         case 1: return "p-b";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode referenceSignalPower

      buffer.getContext().eventDispatcher.startElement("referenceSignalPower", -1);

      referenceSignalPower = new Asn1Integer();
      referenceSignalPower.decode (buffer, -60, 50);

      buffer.invokeCharacters(referenceSignalPower.toString());
      buffer.getContext().eventDispatcher.endElement("referenceSignalPower", -1);

      // decode p_b

      buffer.getContext().eventDispatcher.startElement("p_b", -1);

      p_b = new Asn1Integer();
      p_b.decode (buffer, 0, 3);

      buffer.invokeCharacters(p_b.toString());
      buffer.getContext().eventDispatcher.endElement("p_b", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (referenceSignalPower != null) referenceSignalPower.print (_sb, "referenceSignalPower", _level+1);
      if (p_b != null) p_b.print (_sb, "p_b", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
