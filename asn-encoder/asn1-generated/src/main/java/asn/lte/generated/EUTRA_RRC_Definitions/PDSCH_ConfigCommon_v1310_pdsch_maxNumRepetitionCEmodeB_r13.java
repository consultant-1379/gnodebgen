/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _R192 = 0;
   public static final int _R256 = 1;
   public static final int _R384 = 2;
   public static final int _R512 = 3;
   public static final int _R768 = 4;
   public static final int _R1024 = 5;
   public static final int _R1536 = 6;
   public static final int _R2048 = 7;

   // Singleton instances of PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13
   protected static final PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 _r192 = new PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13(0);
   protected static final PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 _r256 = new PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13(1);
   protected static final PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 _r384 = new PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13(2);
   protected static final PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 _r512 = new PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13(3);
   protected static final PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 _r768 = new PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13(4);
   protected static final PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 _r1024 = new PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13(5);
   protected static final PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 _r1536 = new PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13(6);
   protected static final PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 _r2048 = new PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for r192.
    */
   public static PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 r192() {
      return _r192;
   }

   /**
    * Singleton accessor method for r256.
    */
   public static PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 r256() {
      return _r256;
   }

   /**
    * Singleton accessor method for r384.
    */
   public static PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 r384() {
      return _r384;
   }

   /**
    * Singleton accessor method for r512.
    */
   public static PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 r512() {
      return _r512;
   }

   /**
    * Singleton accessor method for r768.
    */
   public static PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 r768() {
      return _r768;
   }

   /**
    * Singleton accessor method for r1024.
    */
   public static PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 r1024() {
      return _r1024;
   }

   /**
    * Singleton accessor method for r1536.
    */
   public static PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 r1536() {
      return _r1536;
   }

   /**
    * Singleton accessor method for r2048.
    */
   public static PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 r2048() {
      return _r2048;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13.valueOf( PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return r192();
         case 1: return r256();
         case 2: return r384();
         case 3: return r512();
         case 4: return r768();
         case 5: return r1024();
         case 6: return r1536();
         case 7: return r2048();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (PDSCH_ConfigCommon_v1310_pdsch_maxNumRepetitionCEmodeB_r13.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("r192");
         case 1: return ("r256");
         case 2: return ("r384");
         case 3: return ("r512");
         case 4: return ("r768");
         case 5: return ("r1024");
         case 6: return ("r1536");
         case 7: return ("r2048");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
