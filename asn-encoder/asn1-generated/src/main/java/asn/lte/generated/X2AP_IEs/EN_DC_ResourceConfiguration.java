/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.X2AP_IEs;

import com.objsys.asn1j.runtime.*;

public class EN_DC_ResourceConfiguration extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_X2AP_IEsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "EN-DC-ResourceConfiguration";
   }

   public EN_DC_ResourceConfiguration_pDCPatSgNB pDCPatSgNB = null;
   public EN_DC_ResourceConfiguration_mCGresources mCGresources = null;
   public EN_DC_ResourceConfiguration_sCGresources sCGresources = null;
   public EN_DC_ResourceConfiguration_iE_Extensions iE_Extensions;  // optional
   public Asn1OpenExt extElem1;

   public EN_DC_ResourceConfiguration () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public EN_DC_ResourceConfiguration (
      EN_DC_ResourceConfiguration_pDCPatSgNB pDCPatSgNB_,
      EN_DC_ResourceConfiguration_mCGresources mCGresources_,
      EN_DC_ResourceConfiguration_sCGresources sCGresources_,
      EN_DC_ResourceConfiguration_iE_Extensions iE_Extensions_
   ) {
      super();
      pDCPatSgNB = pDCPatSgNB_;
      mCGresources = mCGresources_;
      sCGresources = sCGresources_;
      iE_Extensions = iE_Extensions_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public EN_DC_ResourceConfiguration (
      EN_DC_ResourceConfiguration_pDCPatSgNB pDCPatSgNB_,
      EN_DC_ResourceConfiguration_mCGresources mCGresources_,
      EN_DC_ResourceConfiguration_sCGresources sCGresources_
   ) {
      super();
      pDCPatSgNB = pDCPatSgNB_;
      mCGresources = mCGresources_;
      sCGresources = sCGresources_;
   }

   public void init () {
      pDCPatSgNB = null;
      mCGresources = null;
      sCGresources = null;
      iE_Extensions = null;
      extElem1 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return pDCPatSgNB;
         case 1: return mCGresources;
         case 2: return sCGresources;
         case 3: return iE_Extensions;
         case 4: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "pDCPatSgNB";
         case 1: return "mCGresources";
         case 2: return "sCGresources";
         case 3: return "iE-Extensions";
         case 4: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean iE_ExtensionsPresent = buffer.decodeBit ("iE_ExtensionsPresent");

      // decode pDCPatSgNB

      buffer.getContext().eventDispatcher.startElement("pDCPatSgNB", -1);

      {
         int tval = EN_DC_ResourceConfiguration_pDCPatSgNB.decodeEnumValue (buffer);
         pDCPatSgNB = EN_DC_ResourceConfiguration_pDCPatSgNB.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("pDCPatSgNB", -1);

      // decode mCGresources

      buffer.getContext().eventDispatcher.startElement("mCGresources", -1);

      {
         int tval = EN_DC_ResourceConfiguration_mCGresources.decodeEnumValue (buffer);
         mCGresources = EN_DC_ResourceConfiguration_mCGresources.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("mCGresources", -1);

      // decode sCGresources

      buffer.getContext().eventDispatcher.startElement("sCGresources", -1);

      {
         int tval = EN_DC_ResourceConfiguration_sCGresources.decodeEnumValue (buffer);
         sCGresources = EN_DC_ResourceConfiguration_sCGresources.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("sCGresources", -1);

      // decode iE_Extensions

      if (iE_ExtensionsPresent) {
         buffer.getContext().eventDispatcher.startElement("iE_Extensions", -1);

         iE_Extensions = new EN_DC_ResourceConfiguration_iE_Extensions();
         iE_Extensions.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("iE_Extensions", -1);
      }
      else {
         iE_Extensions = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (pDCPatSgNB != null) pDCPatSgNB.print (_sb, "pDCPatSgNB", _level+1);
      if (mCGresources != null) mCGresources.print (_sb, "mCGresources", _level+1);
      if (sCGresources != null) sCGresources.print (_sb, "sCGresources", _level+1);
      if (iE_Extensions != null) iE_Extensions.print (_sb, "iE_Extensions", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
