/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UEAssistanceInformation_v1430_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UEAssistanceInformation-v1430-IEs";
   }

   public BW_Preference_r14 bw_Preference_r14;  // optional
   public UEAssistanceInformation_v1430_IEs_sps_AssistanceInformation_r14 sps_AssistanceInformation_r14;  // optional
   public UEAssistanceInformation_v1430_IEs_rlm_Report_r14 rlm_Report_r14;  // optional
   public DelayBudgetReport_r14 delayBudgetReport_r14;  // optional
   public UEAssistanceInformation_v1450_IEs nonCriticalExtension;  // optional

   public UEAssistanceInformation_v1430_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UEAssistanceInformation_v1430_IEs (
      BW_Preference_r14 bw_Preference_r14_,
      UEAssistanceInformation_v1430_IEs_sps_AssistanceInformation_r14 sps_AssistanceInformation_r14_,
      UEAssistanceInformation_v1430_IEs_rlm_Report_r14 rlm_Report_r14_,
      DelayBudgetReport_r14 delayBudgetReport_r14_,
      UEAssistanceInformation_v1450_IEs nonCriticalExtension_
   ) {
      super();
      bw_Preference_r14 = bw_Preference_r14_;
      sps_AssistanceInformation_r14 = sps_AssistanceInformation_r14_;
      rlm_Report_r14 = rlm_Report_r14_;
      delayBudgetReport_r14 = delayBudgetReport_r14_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      bw_Preference_r14 = null;
      sps_AssistanceInformation_r14 = null;
      rlm_Report_r14 = null;
      delayBudgetReport_r14 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return bw_Preference_r14;
         case 1: return sps_AssistanceInformation_r14;
         case 2: return rlm_Report_r14;
         case 3: return delayBudgetReport_r14;
         case 4: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "bw-Preference-r14";
         case 1: return "sps-AssistanceInformation-r14";
         case 2: return "rlm-Report-r14";
         case 3: return "delayBudgetReport-r14";
         case 4: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean bw_Preference_r14Present = buffer.decodeBit ("bw_Preference_r14Present");
      boolean sps_AssistanceInformation_r14Present = buffer.decodeBit ("sps_AssistanceInformation_r14Present");
      boolean rlm_Report_r14Present = buffer.decodeBit ("rlm_Report_r14Present");
      boolean delayBudgetReport_r14Present = buffer.decodeBit ("delayBudgetReport_r14Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode bw_Preference_r14

      if (bw_Preference_r14Present) {
         buffer.getContext().eventDispatcher.startElement("bw_Preference_r14", -1);

         bw_Preference_r14 = new BW_Preference_r14();
         bw_Preference_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bw_Preference_r14", -1);
      }
      else {
         bw_Preference_r14 = null;
      }

      // decode sps_AssistanceInformation_r14

      if (sps_AssistanceInformation_r14Present) {
         buffer.getContext().eventDispatcher.startElement("sps_AssistanceInformation_r14", -1);

         sps_AssistanceInformation_r14 = new UEAssistanceInformation_v1430_IEs_sps_AssistanceInformation_r14();
         sps_AssistanceInformation_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sps_AssistanceInformation_r14", -1);
      }
      else {
         sps_AssistanceInformation_r14 = null;
      }

      // decode rlm_Report_r14

      if (rlm_Report_r14Present) {
         buffer.getContext().eventDispatcher.startElement("rlm_Report_r14", -1);

         rlm_Report_r14 = new UEAssistanceInformation_v1430_IEs_rlm_Report_r14();
         rlm_Report_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("rlm_Report_r14", -1);
      }
      else {
         rlm_Report_r14 = null;
      }

      // decode delayBudgetReport_r14

      if (delayBudgetReport_r14Present) {
         buffer.getContext().eventDispatcher.startElement("delayBudgetReport_r14", -1);

         delayBudgetReport_r14 = new DelayBudgetReport_r14();
         delayBudgetReport_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("delayBudgetReport_r14", -1);
      }
      else {
         delayBudgetReport_r14 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new UEAssistanceInformation_v1450_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (bw_Preference_r14 != null) bw_Preference_r14.print (_sb, "bw_Preference_r14", _level+1);
      if (sps_AssistanceInformation_r14 != null) sps_AssistanceInformation_r14.print (_sb, "sps_AssistanceInformation_r14", _level+1);
      if (rlm_Report_r14 != null) rlm_Report_r14.print (_sb, "rlm_Report_r14", _level+1);
      if (delayBudgetReport_r14 != null) delayBudgetReport_r14.print (_sb, "delayBudgetReport_r14", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
