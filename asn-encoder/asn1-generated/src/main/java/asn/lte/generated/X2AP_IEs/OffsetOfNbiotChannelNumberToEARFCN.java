/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.X2AP_IEs;

import com.objsys.asn1j.runtime.*;

public class OffsetOfNbiotChannelNumberToEARFCN extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_X2AP_IEsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "OffsetOfNbiotChannelNumberToEARFCN";
   }

   // Integer constants for switch-case
   public static final int _MINUSTEN = 0;
   public static final int _MINUSNINE = 1;
   public static final int _MINUSEIGHT = 2;
   public static final int _MINUSSEVEN = 3;
   public static final int _MINUSSIX = 4;
   public static final int _MINUSFIVE = 5;
   public static final int _MINUSFOUR = 6;
   public static final int _MINUSTHREE = 7;
   public static final int _MINUSTWO = 8;
   public static final int _MINUSONE = 9;
   public static final int _MINUSZERODOTFIVE = 10;
   public static final int _ZERO = 11;
   public static final int _ONE = 12;
   public static final int _TWO = 13;
   public static final int _THREE = 14;
   public static final int _FOUR = 15;
   public static final int _FIVE = 16;
   public static final int _SIX = 17;
   public static final int _SEVEN = 18;
   public static final int _EIGHT = 19;
   public static final int _NINE = 20;
   public static final int _MINUSEIGHTDOTFIVE = 21;
   public static final int _MINUSFOURDOTFIVE = 22;
   public static final int _THREEDOTFIVE = 23;
   public static final int _SEVENDOTFIVE = 24;

   // Singleton instances of OffsetOfNbiotChannelNumberToEARFCN
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusTen = new OffsetOfNbiotChannelNumberToEARFCN(0);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusNine = new OffsetOfNbiotChannelNumberToEARFCN(1);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusEight = new OffsetOfNbiotChannelNumberToEARFCN(2);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusSeven = new OffsetOfNbiotChannelNumberToEARFCN(3);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusSix = new OffsetOfNbiotChannelNumberToEARFCN(4);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusFive = new OffsetOfNbiotChannelNumberToEARFCN(5);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusFour = new OffsetOfNbiotChannelNumberToEARFCN(6);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusThree = new OffsetOfNbiotChannelNumberToEARFCN(7);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusTwo = new OffsetOfNbiotChannelNumberToEARFCN(8);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusOne = new OffsetOfNbiotChannelNumberToEARFCN(9);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusZeroDotFive = new OffsetOfNbiotChannelNumberToEARFCN(10);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _zero = new OffsetOfNbiotChannelNumberToEARFCN(11);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _one = new OffsetOfNbiotChannelNumberToEARFCN(12);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _two = new OffsetOfNbiotChannelNumberToEARFCN(13);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _three = new OffsetOfNbiotChannelNumberToEARFCN(14);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _four = new OffsetOfNbiotChannelNumberToEARFCN(15);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _five = new OffsetOfNbiotChannelNumberToEARFCN(16);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _six = new OffsetOfNbiotChannelNumberToEARFCN(17);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _seven = new OffsetOfNbiotChannelNumberToEARFCN(18);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _eight = new OffsetOfNbiotChannelNumberToEARFCN(19);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _nine = new OffsetOfNbiotChannelNumberToEARFCN(20);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusEightDotFive = new OffsetOfNbiotChannelNumberToEARFCN(21);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _minusFourDotFive = new OffsetOfNbiotChannelNumberToEARFCN(22);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _threeDotFive = new OffsetOfNbiotChannelNumberToEARFCN(23);
   protected static final OffsetOfNbiotChannelNumberToEARFCN _sevenDotFive = new OffsetOfNbiotChannelNumberToEARFCN(24);
   private static OffsetOfNbiotChannelNumberToEARFCN __undefined = new OffsetOfNbiotChannelNumberToEARFCN(-999);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    *   16
    *   17
    *   18
    *   19
    *   20
    *   21
    *   22
    *   23
    *   24
    */
   protected OffsetOfNbiotChannelNumberToEARFCN (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for minusTen.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusTen() {
      return _minusTen;
   }

   /**
    * Singleton accessor method for minusNine.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusNine() {
      return _minusNine;
   }

   /**
    * Singleton accessor method for minusEight.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusEight() {
      return _minusEight;
   }

   /**
    * Singleton accessor method for minusSeven.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusSeven() {
      return _minusSeven;
   }

   /**
    * Singleton accessor method for minusSix.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusSix() {
      return _minusSix;
   }

   /**
    * Singleton accessor method for minusFive.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusFive() {
      return _minusFive;
   }

   /**
    * Singleton accessor method for minusFour.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusFour() {
      return _minusFour;
   }

   /**
    * Singleton accessor method for minusThree.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusThree() {
      return _minusThree;
   }

   /**
    * Singleton accessor method for minusTwo.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusTwo() {
      return _minusTwo;
   }

   /**
    * Singleton accessor method for minusOne.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusOne() {
      return _minusOne;
   }

   /**
    * Singleton accessor method for minusZeroDotFive.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusZeroDotFive() {
      return _minusZeroDotFive;
   }

   /**
    * Singleton accessor method for zero.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN zero() {
      return _zero;
   }

   /**
    * Singleton accessor method for one.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN one() {
      return _one;
   }

   /**
    * Singleton accessor method for two.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN two() {
      return _two;
   }

   /**
    * Singleton accessor method for three.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN three() {
      return _three;
   }

   /**
    * Singleton accessor method for four.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN four() {
      return _four;
   }

   /**
    * Singleton accessor method for five.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN five() {
      return _five;
   }

   /**
    * Singleton accessor method for six.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN six() {
      return _six;
   }

   /**
    * Singleton accessor method for seven.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN seven() {
      return _seven;
   }

   /**
    * Singleton accessor method for eight.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN eight() {
      return _eight;
   }

   /**
    * Singleton accessor method for nine.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN nine() {
      return _nine;
   }

   /**
    * Singleton accessor method for minusEightDotFive.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusEightDotFive() {
      return _minusEightDotFive;
   }

   /**
    * Singleton accessor method for minusFourDotFive.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN minusFourDotFive() {
      return _minusFourDotFive;
   }

   /**
    * Singleton accessor method for threeDotFive.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN threeDotFive() {
      return _threeDotFive;
   }

   /**
    * Singleton accessor method for sevenDotFive.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN sevenDotFive() {
      return _sevenDotFive;
   }

   /** Undefined value. */
   protected static OffsetOfNbiotChannelNumberToEARFCN __undefined_() { return __undefined; }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return OffsetOfNbiotChannelNumberToEARFCN.valueOf( OffsetOfNbiotChannelNumberToEARFCN.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static OffsetOfNbiotChannelNumberToEARFCN valueOf (int _value)
   {
      switch ((int)_value) {
         case 0: return minusTen();
         case 1: return minusNine();
         case 2: return minusEight();
         case 3: return minusSeven();
         case 4: return minusSix();
         case 5: return minusFive();
         case 6: return minusFour();
         case 7: return minusThree();
         case 8: return minusTwo();
         case 9: return minusOne();
         case 10: return minusZeroDotFive();
         case 11: return zero();
         case 12: return one();
         case 13: return two();
         case 14: return three();
         case 15: return four();
         case 16: return five();
         case 17: return six();
         case 18: return seven();
         case 19: return eight();
         case 20: return nine();
         case 21: return minusEightDotFive();
         case 22: return minusFourDotFive();
         case 23: return threeDotFive();
         case 24: return sevenDotFive();
         default: return __undefined_();
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      boolean extbit = buffer.decodeBit ("extbit");

      if (extbit) {
         ui = buffer.decodeSmallNonNegWholeNumber ();

         switch (ui) {
            case 0: ret = 21; break;
            case 1: ret = 22; break;
            case 2: ret = 23; break;
            case 3: ret = 24; break;
            default: ret = 0x7fffffff; break;
         }
      }
      else {
         ui = (int) buffer.decodeConsWholeNumber (21);

         switch (ui) {
            case 0: ret =  0; break;
            case 1: ret =  1; break;
            case 2: ret =  2; break;
            case 3: ret =  3; break;
            case 4: ret =  4; break;
            case 5: ret =  5; break;
            case 6: ret =  6; break;
            case 7: ret =  7; break;
            case 8: ret =  8; break;
            case 9: ret =  9; break;
            case 10: ret =  10; break;
            case 11: ret =  11; break;
            case 12: ret =  12; break;
            case 13: ret =  13; break;
            case 14: ret =  14; break;
            case 15: ret =  15; break;
            case 16: ret =  16; break;
            case 17: ret =  17; break;
            case 18: ret =  18; break;
            case 19: ret =  19; break;
            case 20: ret =  20; break;
            default: throw new Asn1InvalidEnumException (ui);
         }
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (OffsetOfNbiotChannelNumberToEARFCN.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("minusTen");
         case 1: return ("minusNine");
         case 2: return ("minusEight");
         case 3: return ("minusSeven");
         case 4: return ("minusSix");
         case 5: return ("minusFive");
         case 6: return ("minusFour");
         case 7: return ("minusThree");
         case 8: return ("minusTwo");
         case 9: return ("minusOne");
         case 10: return ("minusZeroDotFive");
         case 11: return ("zero");
         case 12: return ("one");
         case 13: return ("two");
         case 14: return ("three");
         case 15: return ("four");
         case 16: return ("five");
         case 17: return ("six");
         case 18: return ("seven");
         case 19: return ("eight");
         case 20: return ("nine");
         case 21: return ("minusEightDotFive");
         case 22: return ("minusFourDotFive");
         case 23: return ("threeDotFive");
         case 24: return ("sevenDotFive");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
