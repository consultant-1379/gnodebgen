/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UL_AM_RLC extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UL-AM-RLC";
   }

   public SN_FieldLengthAM sn_FieldLength = null;  // optional
   public T_PollRetransmit t_PollRetransmit = null;
   public PollPDU pollPDU = null;
   public PollByte pollByte = null;
   public UL_AM_RLC_maxRetxThreshold maxRetxThreshold = null;

   public UL_AM_RLC () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UL_AM_RLC (
      SN_FieldLengthAM sn_FieldLength_,
      T_PollRetransmit t_PollRetransmit_,
      PollPDU pollPDU_,
      PollByte pollByte_,
      UL_AM_RLC_maxRetxThreshold maxRetxThreshold_
   ) {
      super();
      sn_FieldLength = sn_FieldLength_;
      t_PollRetransmit = t_PollRetransmit_;
      pollPDU = pollPDU_;
      pollByte = pollByte_;
      maxRetxThreshold = maxRetxThreshold_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public UL_AM_RLC (
      T_PollRetransmit t_PollRetransmit_,
      PollPDU pollPDU_,
      PollByte pollByte_,
      UL_AM_RLC_maxRetxThreshold maxRetxThreshold_
   ) {
      super();
      t_PollRetransmit = t_PollRetransmit_;
      pollPDU = pollPDU_;
      pollByte = pollByte_;
      maxRetxThreshold = maxRetxThreshold_;
   }

   public void init () {
      sn_FieldLength = null;
      t_PollRetransmit = null;
      pollPDU = null;
      pollByte = null;
      maxRetxThreshold = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return sn_FieldLength;
         case 1: return t_PollRetransmit;
         case 2: return pollPDU;
         case 3: return pollByte;
         case 4: return maxRetxThreshold;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "sn-FieldLength";
         case 1: return "t-PollRetransmit";
         case 2: return "pollPDU";
         case 3: return "pollByte";
         case 4: return "maxRetxThreshold";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean sn_FieldLengthPresent = buffer.decodeBit ("sn_FieldLengthPresent");

      // decode sn_FieldLength

      if (sn_FieldLengthPresent) {
         buffer.getContext().eventDispatcher.startElement("sn_FieldLength", -1);

         int tval = SN_FieldLengthAM.decodeEnumValue (buffer);
         sn_FieldLength = SN_FieldLengthAM.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("sn_FieldLength", -1);
      }
      else {
         sn_FieldLength = null;
      }

      // decode t_PollRetransmit

      buffer.getContext().eventDispatcher.startElement("t_PollRetransmit", -1);

      {
         int tval = T_PollRetransmit.decodeEnumValue (buffer);
         t_PollRetransmit = T_PollRetransmit.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("t_PollRetransmit", -1);

      // decode pollPDU

      buffer.getContext().eventDispatcher.startElement("pollPDU", -1);

      {
         int tval = PollPDU.decodeEnumValue (buffer);
         pollPDU = PollPDU.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("pollPDU", -1);

      // decode pollByte

      buffer.getContext().eventDispatcher.startElement("pollByte", -1);

      {
         int tval = PollByte.decodeEnumValue (buffer);
         pollByte = PollByte.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("pollByte", -1);

      // decode maxRetxThreshold

      buffer.getContext().eventDispatcher.startElement("maxRetxThreshold", -1);

      {
         int tval = UL_AM_RLC_maxRetxThreshold.decodeEnumValue (buffer);
         maxRetxThreshold = UL_AM_RLC_maxRetxThreshold.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("maxRetxThreshold", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (sn_FieldLength != null) sn_FieldLength.print (_sb, "sn_FieldLength", _level+1);
      if (t_PollRetransmit != null) t_PollRetransmit.print (_sb, "t_PollRetransmit", _level+1);
      if (pollPDU != null) pollPDU.print (_sb, "pollPDU", _level+1);
      if (pollByte != null) pollByte.print (_sb, "pollByte", _level+1);
      if (maxRetxThreshold != null) maxRetxThreshold.print (_sb, "maxRetxThreshold", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
