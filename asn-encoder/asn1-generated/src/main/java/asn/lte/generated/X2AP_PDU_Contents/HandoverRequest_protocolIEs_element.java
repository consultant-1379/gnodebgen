/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.X2AP_PDU_Contents;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID;
import asn.lte.generated.X2AP_CommonDataTypes.Criticality;

public class HandoverRequest_protocolIEs_element extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_X2AP_PDU_ContentsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public ProtocolIE_ID id;
   public Criticality criticality = null;

   /**
    * id: id-Old-eNB-UE-X2AP-ID
    * criticality: Criticality.reject
    * presence: Presence.mandatory
    * ASN.1 type: UE-X2AP-ID
    * Java type: UE_X2AP_ID
    *
    * id: id-Cause
    * criticality: Criticality.ignore
    * presence: Presence.mandatory
    * ASN.1 type: Cause
    * Java type: Cause
    *
    * id: id-TargetCell-ID
    * criticality: Criticality.reject
    * presence: Presence.mandatory
    * ASN.1 type: ECGI
    * Java type: ECGI
    *
    * id: id-GUMMEI-ID
    * criticality: Criticality.reject
    * presence: Presence.mandatory
    * ASN.1 type: GUMMEI
    * Java type: GUMMEI
    *
    * id: id-UE-ContextInformation
    * criticality: Criticality.reject
    * presence: Presence.mandatory
    * ASN.1 type: UE-ContextInformation
    * Java type: UE_ContextInformation
    *
    * id: id-UE-HistoryInformation
    * criticality: Criticality.ignore
    * presence: Presence.mandatory
    * ASN.1 type: UE-HistoryInformation
    * Java type: UE_HistoryInformation
    *
    * id: id-TraceActivation
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: TraceActivation
    * Java type: TraceActivation
    *
    * id: id-SRVCCOperationPossible
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: SRVCCOperationPossible
    * Java type: SRVCCOperationPossible
    *
    * id: id-CSGMembershipStatus
    * criticality: Criticality.reject
    * presence: Presence.optional
    * ASN.1 type: CSGMembershipStatus
    * Java type: CSGMembershipStatus
    *
    * id: id-MobilityInformation
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: MobilityInformation
    * Java type: MobilityInformation
    *
    * id: id-Masked-IMEISV
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: Masked-IMEISV
    * Java type: Masked_IMEISV
    *
    * id: id-UE-HistoryInformationFromTheUE
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: UE-HistoryInformationFromTheUE
    * Java type: UE_HistoryInformationFromTheUE
    *
    * id: id-ExpectedUEBehaviour
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: ExpectedUEBehaviour
    * Java type: ExpectedUEBehaviour
    *
    * id: id-ProSeAuthorized
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: ProSeAuthorized
    * Java type: ProSeAuthorized
    *
    * id: id-UE-ContextReferenceAtSeNB
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: UE-ContextReferenceAtSeNB
    * Java type: UE_ContextReferenceAtSeNB
    *
    * id: id-Old-eNB-UE-X2AP-ID-Extension
    * criticality: Criticality.reject
    * presence: Presence.optional
    * ASN.1 type: UE-X2AP-ID-Extension
    * Java type: UE_X2AP_ID_Extension
    *
    * id: id-V2XServicesAuthorized
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: V2XServicesAuthorized
    * Java type: V2XServicesAuthorized
    *
    * id: id-UE-ContextReferenceAtWT
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: UE-ContextReferenceAtWT
    * Java type: UE_ContextReferenceAtWT
    *
    * id: id-NRUESecurityCapabilities
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: NRUESecurityCapabilities
    * Java type: NRUESecurityCapabilities
    *
    * id: id-UE-ContextReferenceAtSgNB
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: UE-ContextReferenceAtSgNB
    * Java type: UE_ContextReferenceAtSgNB
    *
    * id: id-AerialUEsubscriptionInformation
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: AerialUEsubscriptionInformation
    * Java type: AerialUEsubscriptionInformation
    *
    * id: id-Subscription-Based-UE-DifferentiationInfo
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: Subscription-Based-UE-DifferentiationInfo
    * Java type: Subscription_Based_UE_DifferentiationInfo
    *
    * id: id-Ericsson-ExtConveyor
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: EAB-HandoverRequest-ExtConveyor
    * Java type: EAB_HandoverRequest_ExtConveyor
    */
   public Asn1Type value;

   public HandoverRequest_protocolIEs_element () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public HandoverRequest_protocolIEs_element (
      ProtocolIE_ID id_,
      Criticality criticality_,
      Asn1Type value_
   ) {
      super();
      id = id_;
      criticality = criticality_;
      value = value_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public HandoverRequest_protocolIEs_element (long id_,
      Criticality criticality_,
      Asn1Type value_
   ) {
      super();
      id = new ProtocolIE_ID (id_);
      criticality = criticality_;
      value = value_;
   }

   public void init () {
      id = null;
      criticality = null;
      value = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return id;
         case 1: return criticality;
         case 2: return value;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "id";
         case 1: return "criticality";
         case 2: return "value";
         default: return null;
      }
   }


   /**
    * Assign fields according to information object having key id-Old-eNB-UE-X2AP-ID
    */
   public void setUsing_id_Old_eNB_UE_X2AP_ID(asn.lte.generated.X2AP_IEs.UE_X2AP_ID value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_Old_eNB_UE_X2AP_ID);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-Cause
    */
   public void setUsing_id_Cause(asn.lte.generated.X2AP_IEs.Cause value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_Cause);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-TargetCell-ID
    */
   public void setUsing_id_TargetCell_ID(asn.lte.generated.X2AP_IEs.ECGI value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_TargetCell_ID);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-GUMMEI-ID
    */
   public void setUsing_id_GUMMEI_ID(asn.lte.generated.X2AP_IEs.GUMMEI value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_GUMMEI_ID);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-UE-ContextInformation
    */
   public void setUsing_id_UE_ContextInformation(UE_ContextInformation value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_UE_ContextInformation);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-UE-HistoryInformation
    */
   public void setUsing_id_UE_HistoryInformation(asn.lte.generated.X2AP_IEs.UE_HistoryInformation value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_UE_HistoryInformation);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-TraceActivation
    */
   public void setUsing_id_TraceActivation(asn.lte.generated.X2AP_IEs.TraceActivation value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_TraceActivation);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-SRVCCOperationPossible
    */
   public void setUsing_id_SRVCCOperationPossible(asn.lte.generated.X2AP_IEs.SRVCCOperationPossible value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_SRVCCOperationPossible);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-CSGMembershipStatus
    */
   public void setUsing_id_CSGMembershipStatus(asn.lte.generated.X2AP_IEs.CSGMembershipStatus value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_CSGMembershipStatus);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-MobilityInformation
    */
   public void setUsing_id_MobilityInformation(MobilityInformation value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_MobilityInformation);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-Masked-IMEISV
    */
   public void setUsing_id_Masked_IMEISV(asn.lte.generated.X2AP_IEs.Masked_IMEISV value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_Masked_IMEISV);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-UE-HistoryInformationFromTheUE
    */
   public void setUsing_id_UE_HistoryInformationFromTheUE(asn.lte.generated.X2AP_IEs.UE_HistoryInformationFromTheUE value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_UE_HistoryInformationFromTheUE);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-ExpectedUEBehaviour
    */
   public void setUsing_id_ExpectedUEBehaviour(asn.lte.generated.X2AP_IEs.ExpectedUEBehaviour value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_ExpectedUEBehaviour);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-ProSeAuthorized
    */
   public void setUsing_id_ProSeAuthorized(asn.lte.generated.X2AP_IEs.ProSeAuthorized value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_ProSeAuthorized);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-UE-ContextReferenceAtSeNB
    */
   public void setUsing_id_UE_ContextReferenceAtSeNB(UE_ContextReferenceAtSeNB value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_UE_ContextReferenceAtSeNB);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-Old-eNB-UE-X2AP-ID-Extension
    */
   public void setUsing_id_Old_eNB_UE_X2AP_ID_Extension(asn.lte.generated.X2AP_IEs.UE_X2AP_ID_Extension value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_Old_eNB_UE_X2AP_ID_Extension);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-V2XServicesAuthorized
    */
   public void setUsing_id_V2XServicesAuthorized(asn.lte.generated.X2AP_IEs.V2XServicesAuthorized value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_V2XServicesAuthorized);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-UE-ContextReferenceAtWT
    */
   public void setUsing_id_UE_ContextReferenceAtWT(UE_ContextReferenceAtWT value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_UE_ContextReferenceAtWT);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-NRUESecurityCapabilities
    */
   public void setUsing_id_NRUESecurityCapabilities(asn.lte.generated.X2AP_IEs.NRUESecurityCapabilities value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_NRUESecurityCapabilities);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-UE-ContextReferenceAtSgNB
    */
   public void setUsing_id_UE_ContextReferenceAtSgNB(UE_ContextReferenceAtSgNB value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_UE_ContextReferenceAtSgNB);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-AerialUEsubscriptionInformation
    */
   public void setUsing_id_AerialUEsubscriptionInformation(asn.lte.generated.X2AP_IEs.AerialUEsubscriptionInformation value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_AerialUEsubscriptionInformation);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-Subscription-Based-UE-DifferentiationInfo
    */
   public void setUsing_id_Subscription_Based_UE_DifferentiationInfo(asn.lte.generated.X2AP_IEs.Subscription_Based_UE_DifferentiationInfo value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_Subscription_Based_UE_DifferentiationInfo);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-Ericsson-ExtConveyor
    */
   public void setUsing_id_Ericsson_ExtConveyor(asn.lte.generated.X2AP_Ericsson_IEs.EAB_HandoverRequest_ExtConveyor value) {
      this.id = new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Ericsson_Conveyor._X2AP_Ericsson_ConveyorValues.id_Ericsson_ExtConveyor);
      this.criticality = asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Get value of value with type set according to information object having key id-Old-eNB-UE-X2AP-ID
    */
   public asn.lte.generated.X2AP_IEs.UE_X2AP_ID getValueFor_id_Old_eNB_UE_X2AP_ID() {
      return (asn.lte.generated.X2AP_IEs.UE_X2AP_ID) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-Cause
    */
   public asn.lte.generated.X2AP_IEs.Cause getValueFor_id_Cause() {
      return (asn.lte.generated.X2AP_IEs.Cause) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-TargetCell-ID
    */
   public asn.lte.generated.X2AP_IEs.ECGI getValueFor_id_TargetCell_ID() {
      return (asn.lte.generated.X2AP_IEs.ECGI) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-GUMMEI-ID
    */
   public asn.lte.generated.X2AP_IEs.GUMMEI getValueFor_id_GUMMEI_ID() {
      return (asn.lte.generated.X2AP_IEs.GUMMEI) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-UE-ContextInformation
    */
   public UE_ContextInformation getValueFor_id_UE_ContextInformation() {
      return (UE_ContextInformation) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-UE-HistoryInformation
    */
   public asn.lte.generated.X2AP_IEs.UE_HistoryInformation getValueFor_id_UE_HistoryInformation() {
      return (asn.lte.generated.X2AP_IEs.UE_HistoryInformation) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-TraceActivation
    */
   public asn.lte.generated.X2AP_IEs.TraceActivation getValueFor_id_TraceActivation() {
      return (asn.lte.generated.X2AP_IEs.TraceActivation) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-SRVCCOperationPossible
    */
   public asn.lte.generated.X2AP_IEs.SRVCCOperationPossible getValueFor_id_SRVCCOperationPossible() {
      return (asn.lte.generated.X2AP_IEs.SRVCCOperationPossible) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-CSGMembershipStatus
    */
   public asn.lte.generated.X2AP_IEs.CSGMembershipStatus getValueFor_id_CSGMembershipStatus() {
      return (asn.lte.generated.X2AP_IEs.CSGMembershipStatus) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-MobilityInformation
    */
   public MobilityInformation getValueFor_id_MobilityInformation() {
      return (MobilityInformation) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-Masked-IMEISV
    */
   public asn.lte.generated.X2AP_IEs.Masked_IMEISV getValueFor_id_Masked_IMEISV() {
      return (asn.lte.generated.X2AP_IEs.Masked_IMEISV) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-UE-HistoryInformationFromTheUE
    */
   public asn.lte.generated.X2AP_IEs.UE_HistoryInformationFromTheUE getValueFor_id_UE_HistoryInformationFromTheUE() {
      return (asn.lte.generated.X2AP_IEs.UE_HistoryInformationFromTheUE) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-ExpectedUEBehaviour
    */
   public asn.lte.generated.X2AP_IEs.ExpectedUEBehaviour getValueFor_id_ExpectedUEBehaviour() {
      return (asn.lte.generated.X2AP_IEs.ExpectedUEBehaviour) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-ProSeAuthorized
    */
   public asn.lte.generated.X2AP_IEs.ProSeAuthorized getValueFor_id_ProSeAuthorized() {
      return (asn.lte.generated.X2AP_IEs.ProSeAuthorized) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-UE-ContextReferenceAtSeNB
    */
   public UE_ContextReferenceAtSeNB getValueFor_id_UE_ContextReferenceAtSeNB() {
      return (UE_ContextReferenceAtSeNB) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-Old-eNB-UE-X2AP-ID-Extension
    */
   public asn.lte.generated.X2AP_IEs.UE_X2AP_ID_Extension getValueFor_id_Old_eNB_UE_X2AP_ID_Extension() {
      return (asn.lte.generated.X2AP_IEs.UE_X2AP_ID_Extension) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-V2XServicesAuthorized
    */
   public asn.lte.generated.X2AP_IEs.V2XServicesAuthorized getValueFor_id_V2XServicesAuthorized() {
      return (asn.lte.generated.X2AP_IEs.V2XServicesAuthorized) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-UE-ContextReferenceAtWT
    */
   public UE_ContextReferenceAtWT getValueFor_id_UE_ContextReferenceAtWT() {
      return (UE_ContextReferenceAtWT) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-NRUESecurityCapabilities
    */
   public asn.lte.generated.X2AP_IEs.NRUESecurityCapabilities getValueFor_id_NRUESecurityCapabilities() {
      return (asn.lte.generated.X2AP_IEs.NRUESecurityCapabilities) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-UE-ContextReferenceAtSgNB
    */
   public UE_ContextReferenceAtSgNB getValueFor_id_UE_ContextReferenceAtSgNB() {
      return (UE_ContextReferenceAtSgNB) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-AerialUEsubscriptionInformation
    */
   public asn.lte.generated.X2AP_IEs.AerialUEsubscriptionInformation getValueFor_id_AerialUEsubscriptionInformation() {
      return (asn.lte.generated.X2AP_IEs.AerialUEsubscriptionInformation) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-Subscription-Based-UE-DifferentiationInfo
    */
   public asn.lte.generated.X2AP_IEs.Subscription_Based_UE_DifferentiationInfo getValueFor_id_Subscription_Based_UE_DifferentiationInfo() {
      return (asn.lte.generated.X2AP_IEs.Subscription_Based_UE_DifferentiationInfo) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-Ericsson-ExtConveyor
    */
   public asn.lte.generated.X2AP_Ericsson_IEs.EAB_HandoverRequest_ExtConveyor getValueFor_id_Ericsson_ExtConveyor() {
      return (asn.lte.generated.X2AP_Ericsson_IEs.EAB_HandoverRequest_ExtConveyor) this.value;
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode id

      buffer.getContext().eventDispatcher.startElement("id", -1);

      id = new ProtocolIE_ID();
      id.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("id", -1);

      // decode criticality

      buffer.getContext().eventDispatcher.startElement("criticality", -1);

      {
         int tval = Criticality.decodeEnumValue (buffer);
         criticality = Criticality.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("criticality", -1);

      // decode value

      buffer.getContext().eventDispatcher.startElement("value", -1);

      value = new Asn1OpenType();
      value.decode (buffer);

      buffer.invokeCharacters(value.toString());
      buffer.getContext().eventDispatcher.endElement("value", -1);

      checkTC (true, buffer.getLazyOpenTypeDecode() ? 0 : 2, buffer.isAligned(), buffer.getContext().eventDispatcher);
   }

   public void checkTC(boolean decode, int decodeOpenTypeFlag, boolean aligned, Asn1NamedEventDispatcher eventDispatcher)
      throws Asn1Exception
   {
      /* check id */
      asn.lte.generated.X2AP_Containers.X2AP_PROTOCOL_IES _index = null;
      for(int i=0; i < _X2AP_PDU_ContentsValues.HandoverRequest_IEs.length; i++) {
         if(_X2AP_PDU_ContentsValues.HandoverRequest_IEs[i].id.equals(id)) {
            _index = _X2AP_PDU_ContentsValues.HandoverRequest_IEs[i];
            break;
         }
      }
      if (null == _index) {
         return;
      }

      /* check value */
      if( decode && decodeOpenTypeFlag >=1 ) {
         try {
            Asn1PerDecodeBuffer buffer = new Asn1PerDecodeBuffer(((Asn1OpenType)value).value, aligned);
            buffer.setLazyOpenTypeDecode(decodeOpenTypeFlag == 1);
            if (eventDispatcher != null)buffer.getContext().eventDispatcher = eventDispatcher;
            buffer.getContext().eventDispatcher.startElement("value", -1);

            String className = _index.Value.actualType.getName();
            if (className.lastIndexOf('.') > 0) {
               className = className.substring (className.lastIndexOf (".")+1);
            }
            buffer.getContext().eventDispatcher.startElement(className, -1);

            value = Asn1Type.decode(buffer, _index.Value);

            buffer.getContext().eventDispatcher.endElement(className, -1);

            buffer.getContext().eventDispatcher.endElement("value", -1);
         }
         catch (java.io.IOException e) {
            throw new Asn1Exception(e.toString());
         }
      }

      /* use -strict option to validate the "criticality" element */
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (id.value == 10) {
         indent (_sb, _level+1);
         _sb.append("id = id-Old-eNB-UE-X2AP-ID\n");
      }
      else if (id.value == 5) {
         indent (_sb, _level+1);
         _sb.append("id = id-Cause\n");
      }
      else if (id.value == 11) {
         indent (_sb, _level+1);
         _sb.append("id = id-TargetCell-ID\n");
      }
      else if (id.value == 23) {
         indent (_sb, _level+1);
         _sb.append("id = id-GUMMEI-ID\n");
      }
      else if (id.value == 14) {
         indent (_sb, _level+1);
         _sb.append("id = id-UE-ContextInformation\n");
      }
      else if (id.value == 15) {
         indent (_sb, _level+1);
         _sb.append("id = id-UE-HistoryInformation\n");
      }
      else if (id.value == 13) {
         indent (_sb, _level+1);
         _sb.append("id = id-TraceActivation\n");
      }
      else if (id.value == 36) {
         indent (_sb, _level+1);
         _sb.append("id = id-SRVCCOperationPossible\n");
      }
      else if (id.value == 71) {
         indent (_sb, _level+1);
         _sb.append("id = id-CSGMembershipStatus\n");
      }
      else if (id.value == 82) {
         indent (_sb, _level+1);
         _sb.append("id = id-MobilityInformation\n");
      }
      else if (id.value == 98) {
         indent (_sb, _level+1);
         _sb.append("id = id-Masked-IMEISV\n");
      }
      else if (id.value == 105) {
         indent (_sb, _level+1);
         _sb.append("id = id-UE-HistoryInformationFromTheUE\n");
      }
      else if (id.value == 104) {
         indent (_sb, _level+1);
         _sb.append("id = id-ExpectedUEBehaviour\n");
      }
      else if (id.value == 103) {
         indent (_sb, _level+1);
         _sb.append("id = id-ProSeAuthorized\n");
      }
      else if (id.value == 153) {
         indent (_sb, _level+1);
         _sb.append("id = id-UE-ContextReferenceAtSeNB\n");
      }
      else if (id.value == 156) {
         indent (_sb, _level+1);
         _sb.append("id = id-Old-eNB-UE-X2AP-ID-Extension\n");
      }
      else if (id.value == 176) {
         indent (_sb, _level+1);
         _sb.append("id = id-V2XServicesAuthorized\n");
      }
      else if (id.value == 182) {
         indent (_sb, _level+1);
         _sb.append("id = id-UE-ContextReferenceAtWT\n");
      }
      else if (id.value == 248) {
         indent (_sb, _level+1);
         _sb.append("id = id-NRUESecurityCapabilities\n");
      }
      else if (id.value == 254) {
         indent (_sb, _level+1);
         _sb.append("id = id-UE-ContextReferenceAtSgNB\n");
      }
      else if (id.value == 277) {
         indent (_sb, _level+1);
         _sb.append("id = id-AerialUEsubscriptionInformation\n");
      }
      else if (id.value == 309) {
         indent (_sb, _level+1);
         _sb.append("id = id-Subscription-Based-UE-DifferentiationInfo\n");
      }
      else if (id.value == 43229) {
         indent (_sb, _level+1);
         _sb.append("id = id-Ericsson-ExtConveyor\n");
      }

      if (criticality != null) {
         criticality.print (_sb, "criticality", _level+1);
      }
      if (value != null) {
         String tmpName = value.getAsn1TypeName();
         if (tmpName != null && tmpName != "")  {
            tmpName = "value" + " (" + tmpName + ")";
         }
         else  {
            tmpName = "value";
         }
         value.print (_sb, tmpName, _level+1);
      }
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
