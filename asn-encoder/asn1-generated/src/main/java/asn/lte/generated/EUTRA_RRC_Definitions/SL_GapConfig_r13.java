/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_GapConfig_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SL-GapConfig-r13";
   }

   public SL_GapPatternList_r13 gapPatternList_r13;

   public SL_GapConfig_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_GapConfig_r13 (
      SL_GapPatternList_r13 gapPatternList_r13_
   ) {
      super();
      gapPatternList_r13 = gapPatternList_r13_;
   }

   public void init () {
      gapPatternList_r13 = null;
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return gapPatternList_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "gapPatternList-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode gapPatternList_r13

      buffer.getContext().eventDispatcher.startElement("gapPatternList_r13", -1);

      gapPatternList_r13 = new SL_GapPatternList_r13();
      gapPatternList_r13.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("gapPatternList_r13", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (gapPatternList_r13 != null) gapPatternList_r13.print (_sb, "gapPatternList_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
