/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class AC_BarringConfig extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "AC-BarringConfig";
   }

   public AC_BarringConfig_ac_BarringFactor ac_BarringFactor = null;
   public AC_BarringConfig_ac_BarringTime ac_BarringTime = null;
   public Asn1BitString ac_BarringForSpecialAC;

   public AC_BarringConfig () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public AC_BarringConfig (
      AC_BarringConfig_ac_BarringFactor ac_BarringFactor_,
      AC_BarringConfig_ac_BarringTime ac_BarringTime_,
      Asn1BitString ac_BarringForSpecialAC_
   ) {
      super();
      ac_BarringFactor = ac_BarringFactor_;
      ac_BarringTime = ac_BarringTime_;
      ac_BarringForSpecialAC = ac_BarringForSpecialAC_;
   }

   public void init () {
      ac_BarringFactor = null;
      ac_BarringTime = null;
      ac_BarringForSpecialAC = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ac_BarringFactor;
         case 1: return ac_BarringTime;
         case 2: return ac_BarringForSpecialAC;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ac-BarringFactor";
         case 1: return "ac-BarringTime";
         case 2: return "ac-BarringForSpecialAC";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode ac_BarringFactor

      buffer.getContext().eventDispatcher.startElement("ac_BarringFactor", -1);

      {
         int tval = AC_BarringConfig_ac_BarringFactor.decodeEnumValue (buffer);
         ac_BarringFactor = AC_BarringConfig_ac_BarringFactor.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("ac_BarringFactor", -1);

      // decode ac_BarringTime

      buffer.getContext().eventDispatcher.startElement("ac_BarringTime", -1);

      {
         int tval = AC_BarringConfig_ac_BarringTime.decodeEnumValue (buffer);
         ac_BarringTime = AC_BarringConfig_ac_BarringTime.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("ac_BarringTime", -1);

      // decode ac_BarringForSpecialAC

      buffer.getContext().eventDispatcher.startElement("ac_BarringForSpecialAC", -1);

      ac_BarringForSpecialAC = new Asn1BitString();
      ac_BarringForSpecialAC.decode (buffer, 5, 5);

      buffer.invokeCharacters(ac_BarringForSpecialAC.toString());
      buffer.getContext().eventDispatcher.endElement("ac_BarringForSpecialAC", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ac_BarringFactor != null) ac_BarringFactor.print (_sb, "ac_BarringFactor", _level+1);
      if (ac_BarringTime != null) ac_BarringTime.print (_sb, "ac_BarringTime", _level+1);
      if (ac_BarringForSpecialAC != null) ac_BarringForSpecialAC.print (_sb, "ac_BarringForSpecialAC", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
