/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CRS_AssistanceInfo_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CRS-AssistanceInfo-r15";
   }

   public PhysCellId physCellId_r15;
   public CRS_AssistanceInfo_r15_crs_IntfMitigEnabled_15 crs_IntfMitigEnabled_15 = null;  // optional

   public CRS_AssistanceInfo_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CRS_AssistanceInfo_r15 (
      PhysCellId physCellId_r15_,
      CRS_AssistanceInfo_r15_crs_IntfMitigEnabled_15 crs_IntfMitigEnabled_15_
   ) {
      super();
      physCellId_r15 = physCellId_r15_;
      crs_IntfMitigEnabled_15 = crs_IntfMitigEnabled_15_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public CRS_AssistanceInfo_r15 (
      PhysCellId physCellId_r15_
   ) {
      super();
      physCellId_r15 = physCellId_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CRS_AssistanceInfo_r15 (long physCellId_r15_,
      CRS_AssistanceInfo_r15_crs_IntfMitigEnabled_15 crs_IntfMitigEnabled_15_
   ) {
      super();
      physCellId_r15 = new PhysCellId (physCellId_r15_);
      crs_IntfMitigEnabled_15 = crs_IntfMitigEnabled_15_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public CRS_AssistanceInfo_r15 (
      long physCellId_r15_
   ) {
      super();
      physCellId_r15 = new PhysCellId (physCellId_r15_);
   }

   public void init () {
      physCellId_r15 = null;
      crs_IntfMitigEnabled_15 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return physCellId_r15;
         case 1: return crs_IntfMitigEnabled_15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "physCellId-r15";
         case 1: return "crs-IntfMitigEnabled-15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean crs_IntfMitigEnabled_15Present = buffer.decodeBit ("crs_IntfMitigEnabled_15Present");

      // decode physCellId_r15

      buffer.getContext().eventDispatcher.startElement("physCellId_r15", -1);

      physCellId_r15 = new PhysCellId();
      physCellId_r15.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("physCellId_r15", -1);

      // decode crs_IntfMitigEnabled_15

      if (crs_IntfMitigEnabled_15Present) {
         buffer.getContext().eventDispatcher.startElement("crs_IntfMitigEnabled_15", -1);

         int tval = CRS_AssistanceInfo_r15_crs_IntfMitigEnabled_15.decodeEnumValue (buffer);
         crs_IntfMitigEnabled_15 = CRS_AssistanceInfo_r15_crs_IntfMitigEnabled_15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("crs_IntfMitigEnabled_15", -1);
      }
      else {
         crs_IntfMitigEnabled_15 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (physCellId_r15 != null) physCellId_r15.print (_sb, "physCellId_r15", _level+1);
      if (crs_IntfMitigEnabled_15 != null) crs_IntfMitigEnabled_15.print (_sb, "crs_IntfMitigEnabled_15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
