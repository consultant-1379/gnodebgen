/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CQI_ReportPeriodic_r10_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer cqi_PUCCH_ResourceIndex_r10;
   public Asn1Integer cqi_PUCCH_ResourceIndexP1_r10;  // optional
   public Asn1Integer cqi_pmi_ConfigIndex;
   public CQI_ReportPeriodic_r10_setup_cqi_FormatIndicatorPeriodic_r10 cqi_FormatIndicatorPeriodic_r10;
   public Asn1Integer ri_ConfigIndex;  // optional
   public Asn1Boolean simultaneousAckNackAndCQI;
   public CQI_ReportPeriodic_r10_setup_cqi_Mask_r9 cqi_Mask_r9 = null;  // optional
   public CQI_ReportPeriodic_r10_setup_csi_ConfigIndex_r10 csi_ConfigIndex_r10;  // optional

   public CQI_ReportPeriodic_r10_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CQI_ReportPeriodic_r10_setup (
      Asn1Integer cqi_PUCCH_ResourceIndex_r10_,
      Asn1Integer cqi_PUCCH_ResourceIndexP1_r10_,
      Asn1Integer cqi_pmi_ConfigIndex_,
      CQI_ReportPeriodic_r10_setup_cqi_FormatIndicatorPeriodic_r10 cqi_FormatIndicatorPeriodic_r10_,
      Asn1Integer ri_ConfigIndex_,
      Asn1Boolean simultaneousAckNackAndCQI_,
      CQI_ReportPeriodic_r10_setup_cqi_Mask_r9 cqi_Mask_r9_,
      CQI_ReportPeriodic_r10_setup_csi_ConfigIndex_r10 csi_ConfigIndex_r10_
   ) {
      super();
      cqi_PUCCH_ResourceIndex_r10 = cqi_PUCCH_ResourceIndex_r10_;
      cqi_PUCCH_ResourceIndexP1_r10 = cqi_PUCCH_ResourceIndexP1_r10_;
      cqi_pmi_ConfigIndex = cqi_pmi_ConfigIndex_;
      cqi_FormatIndicatorPeriodic_r10 = cqi_FormatIndicatorPeriodic_r10_;
      ri_ConfigIndex = ri_ConfigIndex_;
      simultaneousAckNackAndCQI = simultaneousAckNackAndCQI_;
      cqi_Mask_r9 = cqi_Mask_r9_;
      csi_ConfigIndex_r10 = csi_ConfigIndex_r10_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public CQI_ReportPeriodic_r10_setup (
      Asn1Integer cqi_PUCCH_ResourceIndex_r10_,
      Asn1Integer cqi_pmi_ConfigIndex_,
      CQI_ReportPeriodic_r10_setup_cqi_FormatIndicatorPeriodic_r10 cqi_FormatIndicatorPeriodic_r10_,
      Asn1Boolean simultaneousAckNackAndCQI_
   ) {
      super();
      cqi_PUCCH_ResourceIndex_r10 = cqi_PUCCH_ResourceIndex_r10_;
      cqi_pmi_ConfigIndex = cqi_pmi_ConfigIndex_;
      cqi_FormatIndicatorPeriodic_r10 = cqi_FormatIndicatorPeriodic_r10_;
      simultaneousAckNackAndCQI = simultaneousAckNackAndCQI_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CQI_ReportPeriodic_r10_setup (long cqi_PUCCH_ResourceIndex_r10_,
      long cqi_PUCCH_ResourceIndexP1_r10_,
      long cqi_pmi_ConfigIndex_,
      CQI_ReportPeriodic_r10_setup_cqi_FormatIndicatorPeriodic_r10 cqi_FormatIndicatorPeriodic_r10_,
      long ri_ConfigIndex_,
      boolean simultaneousAckNackAndCQI_,
      CQI_ReportPeriodic_r10_setup_cqi_Mask_r9 cqi_Mask_r9_,
      CQI_ReportPeriodic_r10_setup_csi_ConfigIndex_r10 csi_ConfigIndex_r10_
   ) {
      super();
      cqi_PUCCH_ResourceIndex_r10 = new Asn1Integer (cqi_PUCCH_ResourceIndex_r10_);
      cqi_PUCCH_ResourceIndexP1_r10 = new Asn1Integer (cqi_PUCCH_ResourceIndexP1_r10_);
      cqi_pmi_ConfigIndex = new Asn1Integer (cqi_pmi_ConfigIndex_);
      cqi_FormatIndicatorPeriodic_r10 = cqi_FormatIndicatorPeriodic_r10_;
      ri_ConfigIndex = new Asn1Integer (ri_ConfigIndex_);
      simultaneousAckNackAndCQI = new Asn1Boolean (simultaneousAckNackAndCQI_);
      cqi_Mask_r9 = cqi_Mask_r9_;
      csi_ConfigIndex_r10 = csi_ConfigIndex_r10_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public CQI_ReportPeriodic_r10_setup (
      long cqi_PUCCH_ResourceIndex_r10_,
      long cqi_pmi_ConfigIndex_,
      CQI_ReportPeriodic_r10_setup_cqi_FormatIndicatorPeriodic_r10 cqi_FormatIndicatorPeriodic_r10_,
      boolean simultaneousAckNackAndCQI_
   ) {
      super();
      cqi_PUCCH_ResourceIndex_r10 = new Asn1Integer (cqi_PUCCH_ResourceIndex_r10_);
      cqi_pmi_ConfigIndex = new Asn1Integer (cqi_pmi_ConfigIndex_);
      cqi_FormatIndicatorPeriodic_r10 = cqi_FormatIndicatorPeriodic_r10_;
      simultaneousAckNackAndCQI = new Asn1Boolean (simultaneousAckNackAndCQI_);
   }

   public void init () {
      cqi_PUCCH_ResourceIndex_r10 = null;
      cqi_PUCCH_ResourceIndexP1_r10 = null;
      cqi_pmi_ConfigIndex = null;
      cqi_FormatIndicatorPeriodic_r10 = null;
      ri_ConfigIndex = null;
      simultaneousAckNackAndCQI = null;
      cqi_Mask_r9 = null;
      csi_ConfigIndex_r10 = null;
   }

   public int getElementCount() { return 8; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return cqi_PUCCH_ResourceIndex_r10;
         case 1: return cqi_PUCCH_ResourceIndexP1_r10;
         case 2: return cqi_pmi_ConfigIndex;
         case 3: return cqi_FormatIndicatorPeriodic_r10;
         case 4: return ri_ConfigIndex;
         case 5: return simultaneousAckNackAndCQI;
         case 6: return cqi_Mask_r9;
         case 7: return csi_ConfigIndex_r10;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "cqi-PUCCH-ResourceIndex-r10";
         case 1: return "cqi-PUCCH-ResourceIndexP1-r10";
         case 2: return "cqi-pmi-ConfigIndex";
         case 3: return "cqi-FormatIndicatorPeriodic-r10";
         case 4: return "ri-ConfigIndex";
         case 5: return "simultaneousAckNackAndCQI";
         case 6: return "cqi-Mask-r9";
         case 7: return "csi-ConfigIndex-r10";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean cqi_PUCCH_ResourceIndexP1_r10Present = buffer.decodeBit ("cqi_PUCCH_ResourceIndexP1_r10Present");
      boolean ri_ConfigIndexPresent = buffer.decodeBit ("ri_ConfigIndexPresent");
      boolean cqi_Mask_r9Present = buffer.decodeBit ("cqi_Mask_r9Present");
      boolean csi_ConfigIndex_r10Present = buffer.decodeBit ("csi_ConfigIndex_r10Present");

      // decode cqi_PUCCH_ResourceIndex_r10

      buffer.getContext().eventDispatcher.startElement("cqi_PUCCH_ResourceIndex_r10", -1);

      cqi_PUCCH_ResourceIndex_r10 = new Asn1Integer();
      cqi_PUCCH_ResourceIndex_r10.decode (buffer, 0, 1184);

      buffer.invokeCharacters(cqi_PUCCH_ResourceIndex_r10.toString());
      buffer.getContext().eventDispatcher.endElement("cqi_PUCCH_ResourceIndex_r10", -1);

      // decode cqi_PUCCH_ResourceIndexP1_r10

      if (cqi_PUCCH_ResourceIndexP1_r10Present) {
         buffer.getContext().eventDispatcher.startElement("cqi_PUCCH_ResourceIndexP1_r10", -1);

         cqi_PUCCH_ResourceIndexP1_r10 = new Asn1Integer();
         cqi_PUCCH_ResourceIndexP1_r10.decode (buffer, 0, 1184);

         buffer.invokeCharacters(cqi_PUCCH_ResourceIndexP1_r10.toString());
         buffer.getContext().eventDispatcher.endElement("cqi_PUCCH_ResourceIndexP1_r10", -1);
      }
      else {
         cqi_PUCCH_ResourceIndexP1_r10 = null;
      }

      // decode cqi_pmi_ConfigIndex

      buffer.getContext().eventDispatcher.startElement("cqi_pmi_ConfigIndex", -1);

      cqi_pmi_ConfigIndex = new Asn1Integer();
      cqi_pmi_ConfigIndex.decode (buffer, 0, 1023);

      buffer.invokeCharacters(cqi_pmi_ConfigIndex.toString());
      buffer.getContext().eventDispatcher.endElement("cqi_pmi_ConfigIndex", -1);

      // decode cqi_FormatIndicatorPeriodic_r10

      buffer.getContext().eventDispatcher.startElement("cqi_FormatIndicatorPeriodic_r10", -1);

      cqi_FormatIndicatorPeriodic_r10 = new CQI_ReportPeriodic_r10_setup_cqi_FormatIndicatorPeriodic_r10();
      cqi_FormatIndicatorPeriodic_r10.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("cqi_FormatIndicatorPeriodic_r10", -1);

      // decode ri_ConfigIndex

      if (ri_ConfigIndexPresent) {
         buffer.getContext().eventDispatcher.startElement("ri_ConfigIndex", -1);

         ri_ConfigIndex = new Asn1Integer();
         ri_ConfigIndex.decode (buffer, 0, 1023);

         buffer.invokeCharacters(ri_ConfigIndex.toString());
         buffer.getContext().eventDispatcher.endElement("ri_ConfigIndex", -1);
      }
      else {
         ri_ConfigIndex = null;
      }

      // decode simultaneousAckNackAndCQI

      buffer.getContext().eventDispatcher.startElement("simultaneousAckNackAndCQI", -1);

      simultaneousAckNackAndCQI = new Asn1Boolean();
      simultaneousAckNackAndCQI.decode (buffer);

      buffer.invokeCharacters(simultaneousAckNackAndCQI.toString());
      buffer.getContext().eventDispatcher.endElement("simultaneousAckNackAndCQI", -1);

      // decode cqi_Mask_r9

      if (cqi_Mask_r9Present) {
         buffer.getContext().eventDispatcher.startElement("cqi_Mask_r9", -1);

         int tval = CQI_ReportPeriodic_r10_setup_cqi_Mask_r9.decodeEnumValue (buffer);
         cqi_Mask_r9 = CQI_ReportPeriodic_r10_setup_cqi_Mask_r9.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("cqi_Mask_r9", -1);
      }
      else {
         cqi_Mask_r9 = null;
      }

      // decode csi_ConfigIndex_r10

      if (csi_ConfigIndex_r10Present) {
         buffer.getContext().eventDispatcher.startElement("csi_ConfigIndex_r10", -1);

         csi_ConfigIndex_r10 = new CQI_ReportPeriodic_r10_setup_csi_ConfigIndex_r10();
         csi_ConfigIndex_r10.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("csi_ConfigIndex_r10", -1);
      }
      else {
         csi_ConfigIndex_r10 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (cqi_PUCCH_ResourceIndex_r10 != null) cqi_PUCCH_ResourceIndex_r10.print (_sb, "cqi_PUCCH_ResourceIndex_r10", _level+1);
      if (cqi_PUCCH_ResourceIndexP1_r10 != null) cqi_PUCCH_ResourceIndexP1_r10.print (_sb, "cqi_PUCCH_ResourceIndexP1_r10", _level+1);
      if (cqi_pmi_ConfigIndex != null) cqi_pmi_ConfigIndex.print (_sb, "cqi_pmi_ConfigIndex", _level+1);
      if (cqi_FormatIndicatorPeriodic_r10 != null) cqi_FormatIndicatorPeriodic_r10.print (_sb, "cqi_FormatIndicatorPeriodic_r10", _level+1);
      if (ri_ConfigIndex != null) ri_ConfigIndex.print (_sb, "ri_ConfigIndex", _level+1);
      if (simultaneousAckNackAndCQI != null) simultaneousAckNackAndCQI.print (_sb, "simultaneousAckNackAndCQI", _level+1);
      if (cqi_Mask_r9 != null) cqi_Mask_r9.print (_sb, "cqi_Mask_r9", _level+1);
      if (csi_ConfigIndex_r10 != null) csi_ConfigIndex_r10.print (_sb, "csi_ConfigIndex_r10", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
