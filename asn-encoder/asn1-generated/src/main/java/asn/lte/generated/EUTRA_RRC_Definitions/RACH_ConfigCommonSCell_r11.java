/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RACH_ConfigCommonSCell_r11 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RACH-ConfigCommonSCell-r11";
   }

   public PowerRampingParameters powerRampingParameters_r11;
   public RACH_ConfigCommonSCell_r11_ra_SupervisionInfo_r11 ra_SupervisionInfo_r11;
   public Asn1OpenExt extElem1;

   public RACH_ConfigCommonSCell_r11 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RACH_ConfigCommonSCell_r11 (
      PowerRampingParameters powerRampingParameters_r11_,
      RACH_ConfigCommonSCell_r11_ra_SupervisionInfo_r11 ra_SupervisionInfo_r11_
   ) {
      super();
      powerRampingParameters_r11 = powerRampingParameters_r11_;
      ra_SupervisionInfo_r11 = ra_SupervisionInfo_r11_;
   }

   public void init () {
      powerRampingParameters_r11 = null;
      ra_SupervisionInfo_r11 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return powerRampingParameters_r11;
         case 1: return ra_SupervisionInfo_r11;
         case 2: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "powerRampingParameters-r11";
         case 1: return "ra-SupervisionInfo-r11";
         case 2: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // decode powerRampingParameters_r11

      buffer.getContext().eventDispatcher.startElement("powerRampingParameters_r11", -1);

      powerRampingParameters_r11 = new PowerRampingParameters();
      powerRampingParameters_r11.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("powerRampingParameters_r11", -1);

      // decode ra_SupervisionInfo_r11

      buffer.getContext().eventDispatcher.startElement("ra_SupervisionInfo_r11", -1);

      ra_SupervisionInfo_r11 = new RACH_ConfigCommonSCell_r11_ra_SupervisionInfo_r11();
      ra_SupervisionInfo_r11.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ra_SupervisionInfo_r11", -1);

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (powerRampingParameters_r11 != null) powerRampingParameters_r11.print (_sb, "powerRampingParameters_r11", _level+1);
      if (ra_SupervisionInfo_r11 != null) ra_SupervisionInfo_r11.print (_sb, "ra_SupervisionInfo_r11", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
