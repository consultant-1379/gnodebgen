/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class QuantityConfigRS extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "QuantityConfigRS";
   }

   public FilterConfig ssb_FilterConfig;
   public FilterConfig csi_RS_FilterConfig;

   public QuantityConfigRS () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public QuantityConfigRS (
      FilterConfig ssb_FilterConfig_,
      FilterConfig csi_RS_FilterConfig_
   ) {
      super();
      ssb_FilterConfig = ssb_FilterConfig_;
      csi_RS_FilterConfig = csi_RS_FilterConfig_;
   }

   public void init () {
      ssb_FilterConfig = null;
      csi_RS_FilterConfig = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ssb_FilterConfig;
         case 1: return csi_RS_FilterConfig;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ssb-FilterConfig";
         case 1: return "csi-RS-FilterConfig";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode ssb_FilterConfig

      buffer.getContext().eventDispatcher.startElement("ssb_FilterConfig", -1);

      ssb_FilterConfig = new FilterConfig();
      ssb_FilterConfig.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ssb_FilterConfig", -1);

      // decode csi_RS_FilterConfig

      buffer.getContext().eventDispatcher.startElement("csi_RS_FilterConfig", -1);

      csi_RS_FilterConfig = new FilterConfig();
      csi_RS_FilterConfig.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("csi_RS_FilterConfig", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ssb_FilterConfig != null) ssb_FilterConfig.print (_sb, "ssb_FilterConfig", _level+1);
      if (csi_RS_FilterConfig != null) csi_RS_FilterConfig.print (_sb, "csi_RS_FilterConfig", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
