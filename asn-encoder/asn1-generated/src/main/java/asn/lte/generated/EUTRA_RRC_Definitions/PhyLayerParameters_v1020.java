/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PhyLayerParameters_v1020 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PhyLayerParameters-v1020";
   }

   public PhyLayerParameters_v1020_twoAntennaPortsForPUCCH_r10 twoAntennaPortsForPUCCH_r10 = null;  // optional
   public PhyLayerParameters_v1020_tm9_With_8Tx_FDD_r10 tm9_With_8Tx_FDD_r10 = null;  // optional
   public PhyLayerParameters_v1020_pmi_Disabling_r10 pmi_Disabling_r10 = null;  // optional
   public PhyLayerParameters_v1020_crossCarrierScheduling_r10 crossCarrierScheduling_r10 = null;  // optional
   public PhyLayerParameters_v1020_simultaneousPUCCH_PUSCH_r10 simultaneousPUCCH_PUSCH_r10 = null;  // optional
   public PhyLayerParameters_v1020_multiClusterPUSCH_WithinCC_r10 multiClusterPUSCH_WithinCC_r10 = null;  // optional
   public NonContiguousUL_RA_WithinCC_List_r10 nonContiguousUL_RA_WithinCC_List_r10;  // optional

   public PhyLayerParameters_v1020 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PhyLayerParameters_v1020 (
      PhyLayerParameters_v1020_twoAntennaPortsForPUCCH_r10 twoAntennaPortsForPUCCH_r10_,
      PhyLayerParameters_v1020_tm9_With_8Tx_FDD_r10 tm9_With_8Tx_FDD_r10_,
      PhyLayerParameters_v1020_pmi_Disabling_r10 pmi_Disabling_r10_,
      PhyLayerParameters_v1020_crossCarrierScheduling_r10 crossCarrierScheduling_r10_,
      PhyLayerParameters_v1020_simultaneousPUCCH_PUSCH_r10 simultaneousPUCCH_PUSCH_r10_,
      PhyLayerParameters_v1020_multiClusterPUSCH_WithinCC_r10 multiClusterPUSCH_WithinCC_r10_,
      NonContiguousUL_RA_WithinCC_List_r10 nonContiguousUL_RA_WithinCC_List_r10_
   ) {
      super();
      twoAntennaPortsForPUCCH_r10 = twoAntennaPortsForPUCCH_r10_;
      tm9_With_8Tx_FDD_r10 = tm9_With_8Tx_FDD_r10_;
      pmi_Disabling_r10 = pmi_Disabling_r10_;
      crossCarrierScheduling_r10 = crossCarrierScheduling_r10_;
      simultaneousPUCCH_PUSCH_r10 = simultaneousPUCCH_PUSCH_r10_;
      multiClusterPUSCH_WithinCC_r10 = multiClusterPUSCH_WithinCC_r10_;
      nonContiguousUL_RA_WithinCC_List_r10 = nonContiguousUL_RA_WithinCC_List_r10_;
   }

   public void init () {
      twoAntennaPortsForPUCCH_r10 = null;
      tm9_With_8Tx_FDD_r10 = null;
      pmi_Disabling_r10 = null;
      crossCarrierScheduling_r10 = null;
      simultaneousPUCCH_PUSCH_r10 = null;
      multiClusterPUSCH_WithinCC_r10 = null;
      nonContiguousUL_RA_WithinCC_List_r10 = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return twoAntennaPortsForPUCCH_r10;
         case 1: return tm9_With_8Tx_FDD_r10;
         case 2: return pmi_Disabling_r10;
         case 3: return crossCarrierScheduling_r10;
         case 4: return simultaneousPUCCH_PUSCH_r10;
         case 5: return multiClusterPUSCH_WithinCC_r10;
         case 6: return nonContiguousUL_RA_WithinCC_List_r10;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "twoAntennaPortsForPUCCH-r10";
         case 1: return "tm9-With-8Tx-FDD-r10";
         case 2: return "pmi-Disabling-r10";
         case 3: return "crossCarrierScheduling-r10";
         case 4: return "simultaneousPUCCH-PUSCH-r10";
         case 5: return "multiClusterPUSCH-WithinCC-r10";
         case 6: return "nonContiguousUL-RA-WithinCC-List-r10";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean twoAntennaPortsForPUCCH_r10Present = buffer.decodeBit ("twoAntennaPortsForPUCCH_r10Present");
      boolean tm9_With_8Tx_FDD_r10Present = buffer.decodeBit ("tm9_With_8Tx_FDD_r10Present");
      boolean pmi_Disabling_r10Present = buffer.decodeBit ("pmi_Disabling_r10Present");
      boolean crossCarrierScheduling_r10Present = buffer.decodeBit ("crossCarrierScheduling_r10Present");
      boolean simultaneousPUCCH_PUSCH_r10Present = buffer.decodeBit ("simultaneousPUCCH_PUSCH_r10Present");
      boolean multiClusterPUSCH_WithinCC_r10Present = buffer.decodeBit ("multiClusterPUSCH_WithinCC_r10Present");
      boolean nonContiguousUL_RA_WithinCC_List_r10Present = buffer.decodeBit ("nonContiguousUL_RA_WithinCC_List_r10Present");

      // decode twoAntennaPortsForPUCCH_r10

      if (twoAntennaPortsForPUCCH_r10Present) {
         buffer.getContext().eventDispatcher.startElement("twoAntennaPortsForPUCCH_r10", -1);

         int tval = PhyLayerParameters_v1020_twoAntennaPortsForPUCCH_r10.decodeEnumValue (buffer);
         twoAntennaPortsForPUCCH_r10 = PhyLayerParameters_v1020_twoAntennaPortsForPUCCH_r10.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("twoAntennaPortsForPUCCH_r10", -1);
      }
      else {
         twoAntennaPortsForPUCCH_r10 = null;
      }

      // decode tm9_With_8Tx_FDD_r10

      if (tm9_With_8Tx_FDD_r10Present) {
         buffer.getContext().eventDispatcher.startElement("tm9_With_8Tx_FDD_r10", -1);

         int tval = PhyLayerParameters_v1020_tm9_With_8Tx_FDD_r10.decodeEnumValue (buffer);
         tm9_With_8Tx_FDD_r10 = PhyLayerParameters_v1020_tm9_With_8Tx_FDD_r10.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tm9_With_8Tx_FDD_r10", -1);
      }
      else {
         tm9_With_8Tx_FDD_r10 = null;
      }

      // decode pmi_Disabling_r10

      if (pmi_Disabling_r10Present) {
         buffer.getContext().eventDispatcher.startElement("pmi_Disabling_r10", -1);

         int tval = PhyLayerParameters_v1020_pmi_Disabling_r10.decodeEnumValue (buffer);
         pmi_Disabling_r10 = PhyLayerParameters_v1020_pmi_Disabling_r10.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("pmi_Disabling_r10", -1);
      }
      else {
         pmi_Disabling_r10 = null;
      }

      // decode crossCarrierScheduling_r10

      if (crossCarrierScheduling_r10Present) {
         buffer.getContext().eventDispatcher.startElement("crossCarrierScheduling_r10", -1);

         int tval = PhyLayerParameters_v1020_crossCarrierScheduling_r10.decodeEnumValue (buffer);
         crossCarrierScheduling_r10 = PhyLayerParameters_v1020_crossCarrierScheduling_r10.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("crossCarrierScheduling_r10", -1);
      }
      else {
         crossCarrierScheduling_r10 = null;
      }

      // decode simultaneousPUCCH_PUSCH_r10

      if (simultaneousPUCCH_PUSCH_r10Present) {
         buffer.getContext().eventDispatcher.startElement("simultaneousPUCCH_PUSCH_r10", -1);

         int tval = PhyLayerParameters_v1020_simultaneousPUCCH_PUSCH_r10.decodeEnumValue (buffer);
         simultaneousPUCCH_PUSCH_r10 = PhyLayerParameters_v1020_simultaneousPUCCH_PUSCH_r10.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("simultaneousPUCCH_PUSCH_r10", -1);
      }
      else {
         simultaneousPUCCH_PUSCH_r10 = null;
      }

      // decode multiClusterPUSCH_WithinCC_r10

      if (multiClusterPUSCH_WithinCC_r10Present) {
         buffer.getContext().eventDispatcher.startElement("multiClusterPUSCH_WithinCC_r10", -1);

         int tval = PhyLayerParameters_v1020_multiClusterPUSCH_WithinCC_r10.decodeEnumValue (buffer);
         multiClusterPUSCH_WithinCC_r10 = PhyLayerParameters_v1020_multiClusterPUSCH_WithinCC_r10.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("multiClusterPUSCH_WithinCC_r10", -1);
      }
      else {
         multiClusterPUSCH_WithinCC_r10 = null;
      }

      // decode nonContiguousUL_RA_WithinCC_List_r10

      if (nonContiguousUL_RA_WithinCC_List_r10Present) {
         buffer.getContext().eventDispatcher.startElement("nonContiguousUL_RA_WithinCC_List_r10", -1);

         nonContiguousUL_RA_WithinCC_List_r10 = new NonContiguousUL_RA_WithinCC_List_r10();
         nonContiguousUL_RA_WithinCC_List_r10.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonContiguousUL_RA_WithinCC_List_r10", -1);
      }
      else {
         nonContiguousUL_RA_WithinCC_List_r10 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (twoAntennaPortsForPUCCH_r10 != null) twoAntennaPortsForPUCCH_r10.print (_sb, "twoAntennaPortsForPUCCH_r10", _level+1);
      if (tm9_With_8Tx_FDD_r10 != null) tm9_With_8Tx_FDD_r10.print (_sb, "tm9_With_8Tx_FDD_r10", _level+1);
      if (pmi_Disabling_r10 != null) pmi_Disabling_r10.print (_sb, "pmi_Disabling_r10", _level+1);
      if (crossCarrierScheduling_r10 != null) crossCarrierScheduling_r10.print (_sb, "crossCarrierScheduling_r10", _level+1);
      if (simultaneousPUCCH_PUSCH_r10 != null) simultaneousPUCCH_PUSCH_r10.print (_sb, "simultaneousPUCCH_PUSCH_r10", _level+1);
      if (multiClusterPUSCH_WithinCC_r10 != null) multiClusterPUSCH_WithinCC_r10.print (_sb, "multiClusterPUSCH_WithinCC_r10", _level+1);
      if (nonContiguousUL_RA_WithinCC_List_r10 != null) nonContiguousUL_RA_WithinCC_List_r10.print (_sb, "nonContiguousUL_RA_WithinCC_List_r10", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
