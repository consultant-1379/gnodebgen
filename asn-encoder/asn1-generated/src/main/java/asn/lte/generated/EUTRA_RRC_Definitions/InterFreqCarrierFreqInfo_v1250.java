/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class InterFreqCarrierFreqInfo_v1250 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "InterFreqCarrierFreqInfo-v1250";
   }

   public InterFreqCarrierFreqInfo_v1250_reducedMeasPerformance_r12 reducedMeasPerformance_r12 = null;  // optional
   public Q_QualMin_r9 q_QualMinRSRQ_OnAllSymbols_r12;  // optional

   public InterFreqCarrierFreqInfo_v1250 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public InterFreqCarrierFreqInfo_v1250 (
      InterFreqCarrierFreqInfo_v1250_reducedMeasPerformance_r12 reducedMeasPerformance_r12_,
      Q_QualMin_r9 q_QualMinRSRQ_OnAllSymbols_r12_
   ) {
      super();
      reducedMeasPerformance_r12 = reducedMeasPerformance_r12_;
      q_QualMinRSRQ_OnAllSymbols_r12 = q_QualMinRSRQ_OnAllSymbols_r12_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public InterFreqCarrierFreqInfo_v1250 (InterFreqCarrierFreqInfo_v1250_reducedMeasPerformance_r12 reducedMeasPerformance_r12_,
      long q_QualMinRSRQ_OnAllSymbols_r12_
   ) {
      super();
      reducedMeasPerformance_r12 = reducedMeasPerformance_r12_;
      q_QualMinRSRQ_OnAllSymbols_r12 = new Q_QualMin_r9 (q_QualMinRSRQ_OnAllSymbols_r12_);
   }

   public void init () {
      reducedMeasPerformance_r12 = null;
      q_QualMinRSRQ_OnAllSymbols_r12 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return reducedMeasPerformance_r12;
         case 1: return q_QualMinRSRQ_OnAllSymbols_r12;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "reducedMeasPerformance-r12";
         case 1: return "q-QualMinRSRQ-OnAllSymbols-r12";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean reducedMeasPerformance_r12Present = buffer.decodeBit ("reducedMeasPerformance_r12Present");
      boolean q_QualMinRSRQ_OnAllSymbols_r12Present = buffer.decodeBit ("q_QualMinRSRQ_OnAllSymbols_r12Present");

      // decode reducedMeasPerformance_r12

      if (reducedMeasPerformance_r12Present) {
         buffer.getContext().eventDispatcher.startElement("reducedMeasPerformance_r12", -1);

         int tval = InterFreqCarrierFreqInfo_v1250_reducedMeasPerformance_r12.decodeEnumValue (buffer);
         reducedMeasPerformance_r12 = InterFreqCarrierFreqInfo_v1250_reducedMeasPerformance_r12.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("reducedMeasPerformance_r12", -1);
      }
      else {
         reducedMeasPerformance_r12 = null;
      }

      // decode q_QualMinRSRQ_OnAllSymbols_r12

      if (q_QualMinRSRQ_OnAllSymbols_r12Present) {
         buffer.getContext().eventDispatcher.startElement("q_QualMinRSRQ_OnAllSymbols_r12", -1);

         q_QualMinRSRQ_OnAllSymbols_r12 = new Q_QualMin_r9();
         q_QualMinRSRQ_OnAllSymbols_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("q_QualMinRSRQ_OnAllSymbols_r12", -1);
      }
      else {
         q_QualMinRSRQ_OnAllSymbols_r12 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (reducedMeasPerformance_r12 != null) reducedMeasPerformance_r12.print (_sb, "reducedMeasPerformance_r12", _level+1);
      if (q_QualMinRSRQ_OnAllSymbols_r12 != null) q_QualMinRSRQ_OnAllSymbols_r12.print (_sb, "q_QualMinRSRQ_OnAllSymbols_r12", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
