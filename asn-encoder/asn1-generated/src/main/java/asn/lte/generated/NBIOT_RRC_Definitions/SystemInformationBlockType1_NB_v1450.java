/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformationBlockType1_NB_v1450 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SystemInformationBlockType1-NB-v1450";
   }

   public SystemInformationBlockType1_NB_v1450_nrs_CRS_PowerOffset_v1450 nrs_CRS_PowerOffset_v1450 = null;  // optional
   public SystemInformationBlockType1_NB_v1530 nonCriticalExtension;  // optional

   public SystemInformationBlockType1_NB_v1450 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SystemInformationBlockType1_NB_v1450 (
      SystemInformationBlockType1_NB_v1450_nrs_CRS_PowerOffset_v1450 nrs_CRS_PowerOffset_v1450_,
      SystemInformationBlockType1_NB_v1530 nonCriticalExtension_
   ) {
      super();
      nrs_CRS_PowerOffset_v1450 = nrs_CRS_PowerOffset_v1450_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      nrs_CRS_PowerOffset_v1450 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return nrs_CRS_PowerOffset_v1450;
         case 1: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "nrs-CRS-PowerOffset-v1450";
         case 1: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean nrs_CRS_PowerOffset_v1450Present = buffer.decodeBit ("nrs_CRS_PowerOffset_v1450Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode nrs_CRS_PowerOffset_v1450

      if (nrs_CRS_PowerOffset_v1450Present) {
         buffer.getContext().eventDispatcher.startElement("nrs_CRS_PowerOffset_v1450", -1);

         int tval = SystemInformationBlockType1_NB_v1450_nrs_CRS_PowerOffset_v1450.decodeEnumValue (buffer);
         nrs_CRS_PowerOffset_v1450 = SystemInformationBlockType1_NB_v1450_nrs_CRS_PowerOffset_v1450.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("nrs_CRS_PowerOffset_v1450", -1);
      }
      else {
         nrs_CRS_PowerOffset_v1450 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new SystemInformationBlockType1_NB_v1530();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (nrs_CRS_PowerOffset_v1450 != null) nrs_CRS_PowerOffset_v1450.print (_sb, "nrs_CRS_PowerOffset_v1450", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
