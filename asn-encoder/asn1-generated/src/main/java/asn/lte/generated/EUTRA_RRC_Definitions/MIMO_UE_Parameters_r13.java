/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MIMO_UE_Parameters_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MIMO-UE-Parameters-r13";
   }

   public MIMO_UE_ParametersPerTM_r13 parametersTM9_r13;  // optional
   public MIMO_UE_ParametersPerTM_r13 parametersTM10_r13;  // optional
   public MIMO_UE_Parameters_r13_srs_EnhancementsTDD_r13 srs_EnhancementsTDD_r13 = null;  // optional
   public MIMO_UE_Parameters_r13_srs_Enhancements_r13 srs_Enhancements_r13 = null;  // optional
   public MIMO_UE_Parameters_r13_interferenceMeasRestriction_r13 interferenceMeasRestriction_r13 = null;  // optional

   public MIMO_UE_Parameters_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MIMO_UE_Parameters_r13 (
      MIMO_UE_ParametersPerTM_r13 parametersTM9_r13_,
      MIMO_UE_ParametersPerTM_r13 parametersTM10_r13_,
      MIMO_UE_Parameters_r13_srs_EnhancementsTDD_r13 srs_EnhancementsTDD_r13_,
      MIMO_UE_Parameters_r13_srs_Enhancements_r13 srs_Enhancements_r13_,
      MIMO_UE_Parameters_r13_interferenceMeasRestriction_r13 interferenceMeasRestriction_r13_
   ) {
      super();
      parametersTM9_r13 = parametersTM9_r13_;
      parametersTM10_r13 = parametersTM10_r13_;
      srs_EnhancementsTDD_r13 = srs_EnhancementsTDD_r13_;
      srs_Enhancements_r13 = srs_Enhancements_r13_;
      interferenceMeasRestriction_r13 = interferenceMeasRestriction_r13_;
   }

   public void init () {
      parametersTM9_r13 = null;
      parametersTM10_r13 = null;
      srs_EnhancementsTDD_r13 = null;
      srs_Enhancements_r13 = null;
      interferenceMeasRestriction_r13 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return parametersTM9_r13;
         case 1: return parametersTM10_r13;
         case 2: return srs_EnhancementsTDD_r13;
         case 3: return srs_Enhancements_r13;
         case 4: return interferenceMeasRestriction_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "parametersTM9-r13";
         case 1: return "parametersTM10-r13";
         case 2: return "srs-EnhancementsTDD-r13";
         case 3: return "srs-Enhancements-r13";
         case 4: return "interferenceMeasRestriction-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean parametersTM9_r13Present = buffer.decodeBit ("parametersTM9_r13Present");
      boolean parametersTM10_r13Present = buffer.decodeBit ("parametersTM10_r13Present");
      boolean srs_EnhancementsTDD_r13Present = buffer.decodeBit ("srs_EnhancementsTDD_r13Present");
      boolean srs_Enhancements_r13Present = buffer.decodeBit ("srs_Enhancements_r13Present");
      boolean interferenceMeasRestriction_r13Present = buffer.decodeBit ("interferenceMeasRestriction_r13Present");

      // decode parametersTM9_r13

      if (parametersTM9_r13Present) {
         buffer.getContext().eventDispatcher.startElement("parametersTM9_r13", -1);

         parametersTM9_r13 = new MIMO_UE_ParametersPerTM_r13();
         parametersTM9_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("parametersTM9_r13", -1);
      }
      else {
         parametersTM9_r13 = null;
      }

      // decode parametersTM10_r13

      if (parametersTM10_r13Present) {
         buffer.getContext().eventDispatcher.startElement("parametersTM10_r13", -1);

         parametersTM10_r13 = new MIMO_UE_ParametersPerTM_r13();
         parametersTM10_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("parametersTM10_r13", -1);
      }
      else {
         parametersTM10_r13 = null;
      }

      // decode srs_EnhancementsTDD_r13

      if (srs_EnhancementsTDD_r13Present) {
         buffer.getContext().eventDispatcher.startElement("srs_EnhancementsTDD_r13", -1);

         int tval = MIMO_UE_Parameters_r13_srs_EnhancementsTDD_r13.decodeEnumValue (buffer);
         srs_EnhancementsTDD_r13 = MIMO_UE_Parameters_r13_srs_EnhancementsTDD_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("srs_EnhancementsTDD_r13", -1);
      }
      else {
         srs_EnhancementsTDD_r13 = null;
      }

      // decode srs_Enhancements_r13

      if (srs_Enhancements_r13Present) {
         buffer.getContext().eventDispatcher.startElement("srs_Enhancements_r13", -1);

         int tval = MIMO_UE_Parameters_r13_srs_Enhancements_r13.decodeEnumValue (buffer);
         srs_Enhancements_r13 = MIMO_UE_Parameters_r13_srs_Enhancements_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("srs_Enhancements_r13", -1);
      }
      else {
         srs_Enhancements_r13 = null;
      }

      // decode interferenceMeasRestriction_r13

      if (interferenceMeasRestriction_r13Present) {
         buffer.getContext().eventDispatcher.startElement("interferenceMeasRestriction_r13", -1);

         int tval = MIMO_UE_Parameters_r13_interferenceMeasRestriction_r13.decodeEnumValue (buffer);
         interferenceMeasRestriction_r13 = MIMO_UE_Parameters_r13_interferenceMeasRestriction_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("interferenceMeasRestriction_r13", -1);
      }
      else {
         interferenceMeasRestriction_r13 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (parametersTM9_r13 != null) parametersTM9_r13.print (_sb, "parametersTM9_r13", _level+1);
      if (parametersTM10_r13 != null) parametersTM10_r13.print (_sb, "parametersTM10_r13", _level+1);
      if (srs_EnhancementsTDD_r13 != null) srs_EnhancementsTDD_r13.print (_sb, "srs_EnhancementsTDD_r13", _level+1);
      if (srs_Enhancements_r13 != null) srs_Enhancements_r13.print (_sb, "srs_Enhancements_r13", _level+1);
      if (interferenceMeasRestriction_r13 != null) interferenceMeasRestriction_r13.print (_sb, "interferenceMeasRestriction_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
