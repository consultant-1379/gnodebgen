/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SIB5 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SIB5";
   }

   public CarrierFreqListEUTRA carrierFreqListEUTRA;  // optional
   public T_Reselection t_ReselectionEUTRA;
   public SpeedStateScaleFactors t_ReselectionEUTRA_SF;  // optional
   public Asn1OctetString lateNonCriticalExtension;  // optional
   public boolean mV2ExtPresent;
   public CarrierFreqListEUTRA_v1610 carrierFreqListEUTRA_v1610;  // optional
   public Asn1OpenExt extElem1;

   public SIB5 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SIB5 (
      CarrierFreqListEUTRA carrierFreqListEUTRA_,
      T_Reselection t_ReselectionEUTRA_,
      SpeedStateScaleFactors t_ReselectionEUTRA_SF_,
      Asn1OctetString lateNonCriticalExtension_,
      CarrierFreqListEUTRA_v1610 carrierFreqListEUTRA_v1610_
   ) {
      super();
      carrierFreqListEUTRA = carrierFreqListEUTRA_;
      t_ReselectionEUTRA = t_ReselectionEUTRA_;
      t_ReselectionEUTRA_SF = t_ReselectionEUTRA_SF_;
      lateNonCriticalExtension = lateNonCriticalExtension_;
      carrierFreqListEUTRA_v1610 = carrierFreqListEUTRA_v1610_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SIB5 (
      T_Reselection t_ReselectionEUTRA_
   ) {
      super();
      t_ReselectionEUTRA = t_ReselectionEUTRA_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SIB5 (CarrierFreqListEUTRA carrierFreqListEUTRA_,
      long t_ReselectionEUTRA_,
      SpeedStateScaleFactors t_ReselectionEUTRA_SF_,
      byte[] lateNonCriticalExtension_,
      CarrierFreqListEUTRA_v1610 carrierFreqListEUTRA_v1610_
   ) {
      super();
      carrierFreqListEUTRA = carrierFreqListEUTRA_;
      t_ReselectionEUTRA = new T_Reselection (t_ReselectionEUTRA_);
      t_ReselectionEUTRA_SF = t_ReselectionEUTRA_SF_;
      lateNonCriticalExtension = new Asn1OctetString (lateNonCriticalExtension_);
      carrierFreqListEUTRA_v1610 = carrierFreqListEUTRA_v1610_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public SIB5 (
      long t_ReselectionEUTRA_
   ) {
      super();
      t_ReselectionEUTRA = new T_Reselection (t_ReselectionEUTRA_);
   }

   public void init () {
      carrierFreqListEUTRA = null;
      t_ReselectionEUTRA = null;
      t_ReselectionEUTRA_SF = null;
      lateNonCriticalExtension = null;
      carrierFreqListEUTRA_v1610 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return carrierFreqListEUTRA;
         case 1: return t_ReselectionEUTRA;
         case 2: return t_ReselectionEUTRA_SF;
         case 3: return lateNonCriticalExtension;
         case 4: return carrierFreqListEUTRA_v1610;
         case 5: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "carrierFreqListEUTRA";
         case 1: return "t-ReselectionEUTRA";
         case 2: return "t-ReselectionEUTRA-SF";
         case 3: return "lateNonCriticalExtension";
         case 4: return "carrierFreqListEUTRA-v1610";
         case 5: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean carrierFreqListEUTRAPresent = buffer.decodeBit ("carrierFreqListEUTRAPresent");
      boolean t_ReselectionEUTRA_SFPresent = buffer.decodeBit ("t_ReselectionEUTRA_SFPresent");
      boolean lateNonCriticalExtensionPresent = buffer.decodeBit ("lateNonCriticalExtensionPresent");

      // decode carrierFreqListEUTRA

      if (carrierFreqListEUTRAPresent) {
         buffer.getContext().eventDispatcher.startElement("carrierFreqListEUTRA", -1);

         carrierFreqListEUTRA = new CarrierFreqListEUTRA();
         carrierFreqListEUTRA.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("carrierFreqListEUTRA", -1);
      }
      else {
         carrierFreqListEUTRA = null;
      }

      // decode t_ReselectionEUTRA

      buffer.getContext().eventDispatcher.startElement("t_ReselectionEUTRA", -1);

      t_ReselectionEUTRA = new T_Reselection();
      t_ReselectionEUTRA.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("t_ReselectionEUTRA", -1);

      // decode t_ReselectionEUTRA_SF

      if (t_ReselectionEUTRA_SFPresent) {
         buffer.getContext().eventDispatcher.startElement("t_ReselectionEUTRA_SF", -1);

         t_ReselectionEUTRA_SF = new SpeedStateScaleFactors();
         t_ReselectionEUTRA_SF.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("t_ReselectionEUTRA_SF", -1);
      }
      else {
         t_ReselectionEUTRA_SF = null;
      }

      // decode lateNonCriticalExtension

      if (lateNonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("lateNonCriticalExtension", -1);

         lateNonCriticalExtension = new Asn1OctetString();
         lateNonCriticalExtension.decode (buffer);

         buffer.invokeCharacters(lateNonCriticalExtension.toString());
         buffer.getContext().eventDispatcher.endElement("lateNonCriticalExtension", -1);
      }
      else {
         lateNonCriticalExtension = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean carrierFreqListEUTRA_v1610Present = buffer.decodeBit ("carrierFreqListEUTRA_v1610Present");

            // decode carrierFreqListEUTRA_v1610

            if (carrierFreqListEUTRA_v1610Present) {
               buffer.getContext().eventDispatcher.startElement("carrierFreqListEUTRA_v1610", -1);

               carrierFreqListEUTRA_v1610 = new CarrierFreqListEUTRA_v1610();
               carrierFreqListEUTRA_v1610.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("carrierFreqListEUTRA_v1610", -1);
            }
            else {
               carrierFreqListEUTRA_v1610 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (carrierFreqListEUTRA != null) carrierFreqListEUTRA.print (_sb, "carrierFreqListEUTRA", _level+1);
      if (t_ReselectionEUTRA != null) t_ReselectionEUTRA.print (_sb, "t_ReselectionEUTRA", _level+1);
      if (t_ReselectionEUTRA_SF != null) t_ReselectionEUTRA_SF.print (_sb, "t_ReselectionEUTRA_SF", _level+1);
      if (lateNonCriticalExtension != null) lateNonCriticalExtension.print (_sb, "lateNonCriticalExtension", _level+1);
      if (carrierFreqListEUTRA_v1610 != null) carrierFreqListEUTRA_v1610.print (_sb, "carrierFreqListEUTRA_v1610", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
