/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UE_Capability_NB_Ext_r14_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UE-Capability-NB-Ext-r14-IEs";
   }

   public UE_Capability_NB_Ext_r14_IEs_ue_Category_NB_r14 ue_Category_NB_r14 = null;  // optional
   public MAC_Parameters_NB_r14 mac_Parameters_r14;  // optional
   public PhyLayerParameters_NB_v1430 phyLayerParameters_v1430;  // optional
   public RF_Parameters_NB_v1430 rf_Parameters_v1430;
   public UE_Capability_NB_v1440_IEs nonCriticalExtension;  // optional

   public UE_Capability_NB_Ext_r14_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UE_Capability_NB_Ext_r14_IEs (
      UE_Capability_NB_Ext_r14_IEs_ue_Category_NB_r14 ue_Category_NB_r14_,
      MAC_Parameters_NB_r14 mac_Parameters_r14_,
      PhyLayerParameters_NB_v1430 phyLayerParameters_v1430_,
      RF_Parameters_NB_v1430 rf_Parameters_v1430_,
      UE_Capability_NB_v1440_IEs nonCriticalExtension_
   ) {
      super();
      ue_Category_NB_r14 = ue_Category_NB_r14_;
      mac_Parameters_r14 = mac_Parameters_r14_;
      phyLayerParameters_v1430 = phyLayerParameters_v1430_;
      rf_Parameters_v1430 = rf_Parameters_v1430_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public UE_Capability_NB_Ext_r14_IEs (
      RF_Parameters_NB_v1430 rf_Parameters_v1430_
   ) {
      super();
      rf_Parameters_v1430 = rf_Parameters_v1430_;
   }

   public void init () {
      ue_Category_NB_r14 = null;
      mac_Parameters_r14 = null;
      phyLayerParameters_v1430 = null;
      rf_Parameters_v1430 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ue_Category_NB_r14;
         case 1: return mac_Parameters_r14;
         case 2: return phyLayerParameters_v1430;
         case 3: return rf_Parameters_v1430;
         case 4: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ue-Category-NB-r14";
         case 1: return "mac-Parameters-r14";
         case 2: return "phyLayerParameters-v1430";
         case 3: return "rf-Parameters-v1430";
         case 4: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean ue_Category_NB_r14Present = buffer.decodeBit ("ue_Category_NB_r14Present");
      boolean mac_Parameters_r14Present = buffer.decodeBit ("mac_Parameters_r14Present");
      boolean phyLayerParameters_v1430Present = buffer.decodeBit ("phyLayerParameters_v1430Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode ue_Category_NB_r14

      if (ue_Category_NB_r14Present) {
         buffer.getContext().eventDispatcher.startElement("ue_Category_NB_r14", -1);

         int tval = UE_Capability_NB_Ext_r14_IEs_ue_Category_NB_r14.decodeEnumValue (buffer);
         ue_Category_NB_r14 = UE_Capability_NB_Ext_r14_IEs_ue_Category_NB_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ue_Category_NB_r14", -1);
      }
      else {
         ue_Category_NB_r14 = null;
      }

      // decode mac_Parameters_r14

      if (mac_Parameters_r14Present) {
         buffer.getContext().eventDispatcher.startElement("mac_Parameters_r14", -1);

         mac_Parameters_r14 = new MAC_Parameters_NB_r14();
         mac_Parameters_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mac_Parameters_r14", -1);
      }
      else {
         mac_Parameters_r14 = null;
      }

      // decode phyLayerParameters_v1430

      if (phyLayerParameters_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("phyLayerParameters_v1430", -1);

         phyLayerParameters_v1430 = new PhyLayerParameters_NB_v1430();
         phyLayerParameters_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("phyLayerParameters_v1430", -1);
      }
      else {
         phyLayerParameters_v1430 = null;
      }

      // decode rf_Parameters_v1430

      buffer.getContext().eventDispatcher.startElement("rf_Parameters_v1430", -1);

      rf_Parameters_v1430 = new RF_Parameters_NB_v1430();
      rf_Parameters_v1430.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("rf_Parameters_v1430", -1);

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new UE_Capability_NB_v1440_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ue_Category_NB_r14 != null) ue_Category_NB_r14.print (_sb, "ue_Category_NB_r14", _level+1);
      if (mac_Parameters_r14 != null) mac_Parameters_r14.print (_sb, "mac_Parameters_r14", _level+1);
      if (phyLayerParameters_v1430 != null) phyLayerParameters_v1430.print (_sb, "phyLayerParameters_v1430", _level+1);
      if (rf_Parameters_v1430 != null) rf_Parameters_v1430.print (_sb, "rf_Parameters_v1430", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
