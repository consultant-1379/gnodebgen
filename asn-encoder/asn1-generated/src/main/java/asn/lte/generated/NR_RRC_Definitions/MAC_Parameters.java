/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MAC_Parameters extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MAC-Parameters";
   }

   public MAC_ParametersCommon mac_ParametersCommon;  // optional
   public MAC_ParametersXDD_Diff mac_ParametersXDD_Diff;  // optional

   public MAC_Parameters () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MAC_Parameters (
      MAC_ParametersCommon mac_ParametersCommon_,
      MAC_ParametersXDD_Diff mac_ParametersXDD_Diff_
   ) {
      super();
      mac_ParametersCommon = mac_ParametersCommon_;
      mac_ParametersXDD_Diff = mac_ParametersXDD_Diff_;
   }

   public void init () {
      mac_ParametersCommon = null;
      mac_ParametersXDD_Diff = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return mac_ParametersCommon;
         case 1: return mac_ParametersXDD_Diff;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "mac-ParametersCommon";
         case 1: return "mac-ParametersXDD-Diff";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean mac_ParametersCommonPresent = buffer.decodeBit ("mac_ParametersCommonPresent");
      boolean mac_ParametersXDD_DiffPresent = buffer.decodeBit ("mac_ParametersXDD_DiffPresent");

      // decode mac_ParametersCommon

      if (mac_ParametersCommonPresent) {
         buffer.getContext().eventDispatcher.startElement("mac_ParametersCommon", -1);

         mac_ParametersCommon = new MAC_ParametersCommon();
         mac_ParametersCommon.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mac_ParametersCommon", -1);
      }
      else {
         mac_ParametersCommon = null;
      }

      // decode mac_ParametersXDD_Diff

      if (mac_ParametersXDD_DiffPresent) {
         buffer.getContext().eventDispatcher.startElement("mac_ParametersXDD_Diff", -1);

         mac_ParametersXDD_Diff = new MAC_ParametersXDD_Diff();
         mac_ParametersXDD_Diff.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mac_ParametersXDD_Diff", -1);
      }
      else {
         mac_ParametersXDD_Diff = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (mac_ParametersCommon != null) mac_ParametersCommon.print (_sb, "mac_ParametersCommon", _level+1);
      if (mac_ParametersXDD_Diff != null) mac_ParametersXDD_Diff.print (_sb, "mac_ParametersXDD_Diff", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
