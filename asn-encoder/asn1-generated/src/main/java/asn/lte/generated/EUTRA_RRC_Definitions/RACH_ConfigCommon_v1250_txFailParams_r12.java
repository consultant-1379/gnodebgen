/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RACH_ConfigCommon_v1250_txFailParams_r12 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailCount_r12 connEstFailCount_r12 = null;
   public RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailOffsetValidity_r12 connEstFailOffsetValidity_r12 = null;
   public Asn1Integer connEstFailOffset_r12;  // optional

   public RACH_ConfigCommon_v1250_txFailParams_r12 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RACH_ConfigCommon_v1250_txFailParams_r12 (
      RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailCount_r12 connEstFailCount_r12_,
      RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailOffsetValidity_r12 connEstFailOffsetValidity_r12_,
      Asn1Integer connEstFailOffset_r12_
   ) {
      super();
      connEstFailCount_r12 = connEstFailCount_r12_;
      connEstFailOffsetValidity_r12 = connEstFailOffsetValidity_r12_;
      connEstFailOffset_r12 = connEstFailOffset_r12_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public RACH_ConfigCommon_v1250_txFailParams_r12 (
      RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailCount_r12 connEstFailCount_r12_,
      RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailOffsetValidity_r12 connEstFailOffsetValidity_r12_
   ) {
      super();
      connEstFailCount_r12 = connEstFailCount_r12_;
      connEstFailOffsetValidity_r12 = connEstFailOffsetValidity_r12_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public RACH_ConfigCommon_v1250_txFailParams_r12 (RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailCount_r12 connEstFailCount_r12_,
      RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailOffsetValidity_r12 connEstFailOffsetValidity_r12_,
      long connEstFailOffset_r12_
   ) {
      super();
      connEstFailCount_r12 = connEstFailCount_r12_;
      connEstFailOffsetValidity_r12 = connEstFailOffsetValidity_r12_;
      connEstFailOffset_r12 = new Asn1Integer (connEstFailOffset_r12_);
   }

   public void init () {
      connEstFailCount_r12 = null;
      connEstFailOffsetValidity_r12 = null;
      connEstFailOffset_r12 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return connEstFailCount_r12;
         case 1: return connEstFailOffsetValidity_r12;
         case 2: return connEstFailOffset_r12;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "connEstFailCount-r12";
         case 1: return "connEstFailOffsetValidity-r12";
         case 2: return "connEstFailOffset-r12";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean connEstFailOffset_r12Present = buffer.decodeBit ("connEstFailOffset_r12Present");

      // decode connEstFailCount_r12

      buffer.getContext().eventDispatcher.startElement("connEstFailCount_r12", -1);

      {
         int tval = RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailCount_r12.decodeEnumValue (buffer);
         connEstFailCount_r12 = RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailCount_r12.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("connEstFailCount_r12", -1);

      // decode connEstFailOffsetValidity_r12

      buffer.getContext().eventDispatcher.startElement("connEstFailOffsetValidity_r12", -1);

      {
         int tval = RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailOffsetValidity_r12.decodeEnumValue (buffer);
         connEstFailOffsetValidity_r12 = RACH_ConfigCommon_v1250_txFailParams_r12_connEstFailOffsetValidity_r12.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("connEstFailOffsetValidity_r12", -1);

      // decode connEstFailOffset_r12

      if (connEstFailOffset_r12Present) {
         buffer.getContext().eventDispatcher.startElement("connEstFailOffset_r12", -1);

         connEstFailOffset_r12 = new Asn1Integer();
         connEstFailOffset_r12.decode (buffer, 0, 15);

         buffer.invokeCharacters(connEstFailOffset_r12.toString());
         buffer.getContext().eventDispatcher.endElement("connEstFailOffset_r12", -1);
      }
      else {
         connEstFailOffset_r12 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (connEstFailCount_r12 != null) connEstFailCount_r12.print (_sb, "connEstFailCount_r12", _level+1);
      if (connEstFailOffsetValidity_r12 != null) connEstFailOffsetValidity_r12.print (_sb, "connEstFailOffsetValidity_r12", _level+1);
      if (connEstFailOffset_r12 != null) connEstFailOffset_r12.print (_sb, "connEstFailOffset_r12", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
