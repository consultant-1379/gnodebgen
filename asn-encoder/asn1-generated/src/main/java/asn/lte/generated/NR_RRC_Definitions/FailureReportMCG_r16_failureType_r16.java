/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class FailureReportMCG_r16_failureType_r16 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _T310_EXPIRY = 0;
   public static final int _RANDOMACCESSPROBLEM = 1;
   public static final int _RLC_MAXNUMRETX = 2;
   public static final int _T312_EXPIRY_R16 = 3;
   public static final int _LBT_FAILURE_R16 = 4;
   public static final int _BEAMFAILURERECOVERYFAILURE_R16 = 5;
   public static final int _BH_RLF_R16 = 6;
   public static final int _SPARE1 = 7;

   // Singleton instances of FailureReportMCG_r16_failureType_r16
   protected static final FailureReportMCG_r16_failureType_r16 _t310_Expiry = new FailureReportMCG_r16_failureType_r16(0);
   protected static final FailureReportMCG_r16_failureType_r16 _randomAccessProblem = new FailureReportMCG_r16_failureType_r16(1);
   protected static final FailureReportMCG_r16_failureType_r16 _rlc_MaxNumRetx = new FailureReportMCG_r16_failureType_r16(2);
   protected static final FailureReportMCG_r16_failureType_r16 _t312_Expiry_r16 = new FailureReportMCG_r16_failureType_r16(3);
   protected static final FailureReportMCG_r16_failureType_r16 _lbt_Failure_r16 = new FailureReportMCG_r16_failureType_r16(4);
   protected static final FailureReportMCG_r16_failureType_r16 _beamFailureRecoveryFailure_r16 = new FailureReportMCG_r16_failureType_r16(5);
   protected static final FailureReportMCG_r16_failureType_r16 _bh_RLF_r16 = new FailureReportMCG_r16_failureType_r16(6);
   protected static final FailureReportMCG_r16_failureType_r16 _spare1 = new FailureReportMCG_r16_failureType_r16(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected FailureReportMCG_r16_failureType_r16 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for t310_Expiry.
    */
   public static FailureReportMCG_r16_failureType_r16 t310_Expiry() {
      return _t310_Expiry;
   }

   /**
    * Singleton accessor method for randomAccessProblem.
    */
   public static FailureReportMCG_r16_failureType_r16 randomAccessProblem() {
      return _randomAccessProblem;
   }

   /**
    * Singleton accessor method for rlc_MaxNumRetx.
    */
   public static FailureReportMCG_r16_failureType_r16 rlc_MaxNumRetx() {
      return _rlc_MaxNumRetx;
   }

   /**
    * Singleton accessor method for t312_Expiry_r16.
    */
   public static FailureReportMCG_r16_failureType_r16 t312_Expiry_r16() {
      return _t312_Expiry_r16;
   }

   /**
    * Singleton accessor method for lbt_Failure_r16.
    */
   public static FailureReportMCG_r16_failureType_r16 lbt_Failure_r16() {
      return _lbt_Failure_r16;
   }

   /**
    * Singleton accessor method for beamFailureRecoveryFailure_r16.
    */
   public static FailureReportMCG_r16_failureType_r16 beamFailureRecoveryFailure_r16() {
      return _beamFailureRecoveryFailure_r16;
   }

   /**
    * Singleton accessor method for bh_RLF_r16.
    */
   public static FailureReportMCG_r16_failureType_r16 bh_RLF_r16() {
      return _bh_RLF_r16;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static FailureReportMCG_r16_failureType_r16 spare1() {
      return _spare1;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return FailureReportMCG_r16_failureType_r16.valueOf( FailureReportMCG_r16_failureType_r16.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static FailureReportMCG_r16_failureType_r16 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return t310_Expiry();
         case 1: return randomAccessProblem();
         case 2: return rlc_MaxNumRetx();
         case 3: return t312_Expiry_r16();
         case 4: return lbt_Failure_r16();
         case 5: return beamFailureRecoveryFailure_r16();
         case 6: return bh_RLF_r16();
         case 7: return spare1();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (FailureReportMCG_r16_failureType_r16.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("t310-Expiry");
         case 1: return ("randomAccessProblem");
         case 2: return ("rlc-MaxNumRetx");
         case 3: return ("t312-Expiry-r16");
         case 4: return ("lbt-Failure-r16");
         case 5: return ("beamFailureRecoveryFailure-r16");
         case 6: return ("bh-RLF-r16");
         case 7: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
