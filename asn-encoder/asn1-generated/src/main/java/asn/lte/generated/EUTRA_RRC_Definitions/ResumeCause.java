/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class ResumeCause extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ResumeCause";
   }

   // Integer constants for switch-case
   public static final int _EMERGENCY = 0;
   public static final int _HIGHPRIORITYACCESS = 1;
   public static final int _MT_ACCESS = 2;
   public static final int _MO_SIGNALLING = 3;
   public static final int _MO_DATA = 4;
   public static final int _DELAYTOLERANTACCESS_V1020 = 5;
   public static final int _MO_VOICECALL_V1280 = 6;
   public static final int _SPARE1 = 7;

   // Singleton instances of ResumeCause
   protected static final ResumeCause _emergency = new ResumeCause(0);
   protected static final ResumeCause _highPriorityAccess = new ResumeCause(1);
   protected static final ResumeCause _mt_Access = new ResumeCause(2);
   protected static final ResumeCause _mo_Signalling = new ResumeCause(3);
   protected static final ResumeCause _mo_Data = new ResumeCause(4);
   protected static final ResumeCause _delayTolerantAccess_v1020 = new ResumeCause(5);
   protected static final ResumeCause _mo_VoiceCall_v1280 = new ResumeCause(6);
   protected static final ResumeCause _spare1 = new ResumeCause(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected ResumeCause (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for emergency.
    */
   public static ResumeCause emergency() {
      return _emergency;
   }

   /**
    * Singleton accessor method for highPriorityAccess.
    */
   public static ResumeCause highPriorityAccess() {
      return _highPriorityAccess;
   }

   /**
    * Singleton accessor method for mt_Access.
    */
   public static ResumeCause mt_Access() {
      return _mt_Access;
   }

   /**
    * Singleton accessor method for mo_Signalling.
    */
   public static ResumeCause mo_Signalling() {
      return _mo_Signalling;
   }

   /**
    * Singleton accessor method for mo_Data.
    */
   public static ResumeCause mo_Data() {
      return _mo_Data;
   }

   /**
    * Singleton accessor method for delayTolerantAccess_v1020.
    */
   public static ResumeCause delayTolerantAccess_v1020() {
      return _delayTolerantAccess_v1020;
   }

   /**
    * Singleton accessor method for mo_VoiceCall_v1280.
    */
   public static ResumeCause mo_VoiceCall_v1280() {
      return _mo_VoiceCall_v1280;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static ResumeCause spare1() {
      return _spare1;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return ResumeCause.valueOf( ResumeCause.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static ResumeCause valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return emergency();
         case 1: return highPriorityAccess();
         case 2: return mt_Access();
         case 3: return mo_Signalling();
         case 4: return mo_Data();
         case 5: return delayTolerantAccess_v1020();
         case 6: return mo_VoiceCall_v1280();
         case 7: return spare1();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (ResumeCause.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("emergency");
         case 1: return ("highPriorityAccess");
         case 2: return ("mt-Access");
         case 3: return ("mo-Signalling");
         case 4: return ("mo-Data");
         case 5: return ("delayTolerantAccess-v1020");
         case 6: return ("mo-VoiceCall-v1280");
         case 7: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
