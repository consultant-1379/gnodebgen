/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SR_NPRACH_Resource_NB_r15_alpha_r15 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _AL0 = 0;
   public static final int _AL04 = 1;
   public static final int _AL05 = 2;
   public static final int _AL06 = 3;
   public static final int _AL07 = 4;
   public static final int _AL08 = 5;
   public static final int _AL09 = 6;
   public static final int _AL1 = 7;

   // Singleton instances of SR_NPRACH_Resource_NB_r15_alpha_r15
   protected static final SR_NPRACH_Resource_NB_r15_alpha_r15 _al0 = new SR_NPRACH_Resource_NB_r15_alpha_r15(0);
   protected static final SR_NPRACH_Resource_NB_r15_alpha_r15 _al04 = new SR_NPRACH_Resource_NB_r15_alpha_r15(1);
   protected static final SR_NPRACH_Resource_NB_r15_alpha_r15 _al05 = new SR_NPRACH_Resource_NB_r15_alpha_r15(2);
   protected static final SR_NPRACH_Resource_NB_r15_alpha_r15 _al06 = new SR_NPRACH_Resource_NB_r15_alpha_r15(3);
   protected static final SR_NPRACH_Resource_NB_r15_alpha_r15 _al07 = new SR_NPRACH_Resource_NB_r15_alpha_r15(4);
   protected static final SR_NPRACH_Resource_NB_r15_alpha_r15 _al08 = new SR_NPRACH_Resource_NB_r15_alpha_r15(5);
   protected static final SR_NPRACH_Resource_NB_r15_alpha_r15 _al09 = new SR_NPRACH_Resource_NB_r15_alpha_r15(6);
   protected static final SR_NPRACH_Resource_NB_r15_alpha_r15 _al1 = new SR_NPRACH_Resource_NB_r15_alpha_r15(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected SR_NPRACH_Resource_NB_r15_alpha_r15 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for al0.
    */
   public static SR_NPRACH_Resource_NB_r15_alpha_r15 al0() {
      return _al0;
   }

   /**
    * Singleton accessor method for al04.
    */
   public static SR_NPRACH_Resource_NB_r15_alpha_r15 al04() {
      return _al04;
   }

   /**
    * Singleton accessor method for al05.
    */
   public static SR_NPRACH_Resource_NB_r15_alpha_r15 al05() {
      return _al05;
   }

   /**
    * Singleton accessor method for al06.
    */
   public static SR_NPRACH_Resource_NB_r15_alpha_r15 al06() {
      return _al06;
   }

   /**
    * Singleton accessor method for al07.
    */
   public static SR_NPRACH_Resource_NB_r15_alpha_r15 al07() {
      return _al07;
   }

   /**
    * Singleton accessor method for al08.
    */
   public static SR_NPRACH_Resource_NB_r15_alpha_r15 al08() {
      return _al08;
   }

   /**
    * Singleton accessor method for al09.
    */
   public static SR_NPRACH_Resource_NB_r15_alpha_r15 al09() {
      return _al09;
   }

   /**
    * Singleton accessor method for al1.
    */
   public static SR_NPRACH_Resource_NB_r15_alpha_r15 al1() {
      return _al1;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return SR_NPRACH_Resource_NB_r15_alpha_r15.valueOf( SR_NPRACH_Resource_NB_r15_alpha_r15.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static SR_NPRACH_Resource_NB_r15_alpha_r15 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return al0();
         case 1: return al04();
         case 2: return al05();
         case 3: return al06();
         case 4: return al07();
         case 5: return al08();
         case 6: return al09();
         case 7: return al1();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (SR_NPRACH_Resource_NB_r15_alpha_r15.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("al0");
         case 1: return ("al04");
         case 2: return ("al05");
         case 3: return ("al06");
         case 4: return ("al07");
         case 5: return ("al08");
         case 6: return ("al09");
         case 7: return ("al1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
