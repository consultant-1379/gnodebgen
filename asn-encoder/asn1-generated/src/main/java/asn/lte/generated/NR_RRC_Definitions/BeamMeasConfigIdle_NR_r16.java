/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class BeamMeasConfigIdle_NR_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "BeamMeasConfigIdle-NR-r16";
   }

   public BeamMeasConfigIdle_NR_r16_reportQuantityRS_Indexes_r16 reportQuantityRS_Indexes_r16 = null;
   public Asn1Integer maxNrofRS_IndexesToReport_r16;
   public Asn1Boolean includeBeamMeasurements_r16;

   public BeamMeasConfigIdle_NR_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public BeamMeasConfigIdle_NR_r16 (
      BeamMeasConfigIdle_NR_r16_reportQuantityRS_Indexes_r16 reportQuantityRS_Indexes_r16_,
      Asn1Integer maxNrofRS_IndexesToReport_r16_,
      Asn1Boolean includeBeamMeasurements_r16_
   ) {
      super();
      reportQuantityRS_Indexes_r16 = reportQuantityRS_Indexes_r16_;
      maxNrofRS_IndexesToReport_r16 = maxNrofRS_IndexesToReport_r16_;
      includeBeamMeasurements_r16 = includeBeamMeasurements_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public BeamMeasConfigIdle_NR_r16 (BeamMeasConfigIdle_NR_r16_reportQuantityRS_Indexes_r16 reportQuantityRS_Indexes_r16_,
      long maxNrofRS_IndexesToReport_r16_,
      boolean includeBeamMeasurements_r16_
   ) {
      super();
      reportQuantityRS_Indexes_r16 = reportQuantityRS_Indexes_r16_;
      maxNrofRS_IndexesToReport_r16 = new Asn1Integer (maxNrofRS_IndexesToReport_r16_);
      includeBeamMeasurements_r16 = new Asn1Boolean (includeBeamMeasurements_r16_);
   }

   public void init () {
      reportQuantityRS_Indexes_r16 = null;
      maxNrofRS_IndexesToReport_r16 = null;
      includeBeamMeasurements_r16 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return reportQuantityRS_Indexes_r16;
         case 1: return maxNrofRS_IndexesToReport_r16;
         case 2: return includeBeamMeasurements_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "reportQuantityRS-Indexes-r16";
         case 1: return "maxNrofRS-IndexesToReport-r16";
         case 2: return "includeBeamMeasurements-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode reportQuantityRS_Indexes_r16

      buffer.getContext().eventDispatcher.startElement("reportQuantityRS_Indexes_r16", -1);

      {
         int tval = BeamMeasConfigIdle_NR_r16_reportQuantityRS_Indexes_r16.decodeEnumValue (buffer);
         reportQuantityRS_Indexes_r16 = BeamMeasConfigIdle_NR_r16_reportQuantityRS_Indexes_r16.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("reportQuantityRS_Indexes_r16", -1);

      // decode maxNrofRS_IndexesToReport_r16

      buffer.getContext().eventDispatcher.startElement("maxNrofRS_IndexesToReport_r16", -1);

      maxNrofRS_IndexesToReport_r16 = new Asn1Integer();
      maxNrofRS_IndexesToReport_r16.decode (buffer, 1, 32);

      buffer.invokeCharacters(maxNrofRS_IndexesToReport_r16.toString());
      buffer.getContext().eventDispatcher.endElement("maxNrofRS_IndexesToReport_r16", -1);

      // decode includeBeamMeasurements_r16

      buffer.getContext().eventDispatcher.startElement("includeBeamMeasurements_r16", -1);

      includeBeamMeasurements_r16 = new Asn1Boolean();
      includeBeamMeasurements_r16.decode (buffer);

      buffer.invokeCharacters(includeBeamMeasurements_r16.toString());
      buffer.getContext().eventDispatcher.endElement("includeBeamMeasurements_r16", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (reportQuantityRS_Indexes_r16 != null) reportQuantityRS_Indexes_r16.print (_sb, "reportQuantityRS_Indexes_r16", _level+1);
      if (maxNrofRS_IndexesToReport_r16 != null) maxNrofRS_IndexesToReport_r16.print (_sb, "maxNrofRS_IndexesToReport_r16", _level+1);
      if (includeBeamMeasurements_r16 != null) includeBeamMeasurements_r16.print (_sb, "includeBeamMeasurements_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
