/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _ZERO = 0;
   public static final int _ONESIXTEENTH = 1;
   public static final int _ONEFIFTEENTH = 2;
   public static final int _ONEFOURTEENTH = 3;
   public static final int _ONETHIRTEENTH = 4;
   public static final int _ONETWELFTH = 5;
   public static final int _ONEELEVENTH = 6;
   public static final int _ONETENTH = 7;
   public static final int _ONENINTH = 8;
   public static final int _ONEEIGHTH = 9;
   public static final int _ONESEVENTH = 10;
   public static final int _ONESIXTH = 11;
   public static final int _ONEFIFTH = 12;
   public static final int _ONEFOURTH = 13;
   public static final int _ONETHIRD = 14;
   public static final int _ONEHALF = 15;

   // Singleton instances of NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _zero = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(0);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneSixteenth = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(1);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneFifteenth = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(2);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneFourteenth = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(3);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneThirteenth = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(4);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneTwelfth = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(5);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneEleventh = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(6);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneTenth = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(7);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneNinth = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(8);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneEighth = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(9);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneSeventh = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(10);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneSixth = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(11);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneFifth = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(12);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneFourth = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(13);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneThird = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(14);
   protected static final NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 _oneHalf = new NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14(15);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    */
   protected NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for zero.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 zero() {
      return _zero;
   }

   /**
    * Singleton accessor method for oneSixteenth.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneSixteenth() {
      return _oneSixteenth;
   }

   /**
    * Singleton accessor method for oneFifteenth.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneFifteenth() {
      return _oneFifteenth;
   }

   /**
    * Singleton accessor method for oneFourteenth.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneFourteenth() {
      return _oneFourteenth;
   }

   /**
    * Singleton accessor method for oneThirteenth.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneThirteenth() {
      return _oneThirteenth;
   }

   /**
    * Singleton accessor method for oneTwelfth.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneTwelfth() {
      return _oneTwelfth;
   }

   /**
    * Singleton accessor method for oneEleventh.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneEleventh() {
      return _oneEleventh;
   }

   /**
    * Singleton accessor method for oneTenth.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneTenth() {
      return _oneTenth;
   }

   /**
    * Singleton accessor method for oneNinth.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneNinth() {
      return _oneNinth;
   }

   /**
    * Singleton accessor method for oneEighth.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneEighth() {
      return _oneEighth;
   }

   /**
    * Singleton accessor method for oneSeventh.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneSeventh() {
      return _oneSeventh;
   }

   /**
    * Singleton accessor method for oneSixth.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneSixth() {
      return _oneSixth;
   }

   /**
    * Singleton accessor method for oneFifth.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneFifth() {
      return _oneFifth;
   }

   /**
    * Singleton accessor method for oneFourth.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneFourth() {
      return _oneFourth;
   }

   /**
    * Singleton accessor method for oneThird.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneThird() {
      return _oneThird;
   }

   /**
    * Singleton accessor method for oneHalf.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 oneHalf() {
      return _oneHalf;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14.valueOf( NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return zero();
         case 1: return oneSixteenth();
         case 2: return oneFifteenth();
         case 3: return oneFourteenth();
         case 4: return oneThirteenth();
         case 5: return oneTwelfth();
         case 6: return oneEleventh();
         case 7: return oneTenth();
         case 8: return oneNinth();
         case 9: return oneEighth();
         case 10: return oneSeventh();
         case 11: return oneSixth();
         case 12: return oneFifth();
         case 13: return oneFourth();
         case 14: return oneThird();
         case 15: return oneHalf();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (16);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (NPRACH_ProbabilityAnchor_NB_r14_nprach_ProbabilityAnchor_r14.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("zero");
         case 1: return ("oneSixteenth");
         case 2: return ("oneFifteenth");
         case 3: return ("oneFourteenth");
         case 4: return ("oneThirteenth");
         case 5: return ("oneTwelfth");
         case 6: return ("oneEleventh");
         case 7: return ("oneTenth");
         case 8: return ("oneNinth");
         case 9: return ("oneEighth");
         case 10: return ("oneSeventh");
         case 11: return ("oneSixth");
         case 12: return ("oneFifth");
         case 13: return ("oneFourth");
         case 14: return ("oneThird");
         case 15: return ("oneHalf");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
