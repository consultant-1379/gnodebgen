/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SCG_ConfigPartSCG_r12 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SCG-ConfigPartSCG-r12";
   }

   public RadioResourceConfigDedicatedSCG_r12 radioResourceConfigDedicatedSCG_r12;  // optional
   public SCellToReleaseList_r10 sCellToReleaseListSCG_r12;  // optional
   public PSCellToAddMod_r12 pSCellToAddMod_r12;  // optional
   public SCellToAddModList_r10 sCellToAddModListSCG_r12;  // optional
   public MobilityControlInfoSCG_r12 mobilityControlInfoSCG_r12;  // optional
   public boolean mV2ExtPresent;
   public SCellToReleaseListExt_r13 sCellToReleaseListSCG_Ext_r13;  // optional
   public SCellToAddModListExt_r13 sCellToAddModListSCG_Ext_r13;  // optional
   public boolean mV3ExtPresent;
   public SCellToAddModListExt_v1370 sCellToAddModListSCG_Ext_v1370;  // optional
   public boolean mV4ExtPresent;
   public PSCellToAddMod_v1440 pSCellToAddMod_v1440;  // optional
   public boolean mV5ExtPresent;
   public SCellGroupToReleaseList_r15 sCellGroupToReleaseListSCG_r15;  // optional
   public SCellGroupToAddModList_r15 sCellGroupToAddModListSCG_r15;  // optional
   public Asn1OpenExt extElem1;

   public SCG_ConfigPartSCG_r12 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SCG_ConfigPartSCG_r12 (
      RadioResourceConfigDedicatedSCG_r12 radioResourceConfigDedicatedSCG_r12_,
      SCellToReleaseList_r10 sCellToReleaseListSCG_r12_,
      PSCellToAddMod_r12 pSCellToAddMod_r12_,
      SCellToAddModList_r10 sCellToAddModListSCG_r12_,
      MobilityControlInfoSCG_r12 mobilityControlInfoSCG_r12_,
      SCellToReleaseListExt_r13 sCellToReleaseListSCG_Ext_r13_,
      SCellToAddModListExt_r13 sCellToAddModListSCG_Ext_r13_,
      SCellToAddModListExt_v1370 sCellToAddModListSCG_Ext_v1370_,
      PSCellToAddMod_v1440 pSCellToAddMod_v1440_,
      SCellGroupToReleaseList_r15 sCellGroupToReleaseListSCG_r15_,
      SCellGroupToAddModList_r15 sCellGroupToAddModListSCG_r15_
   ) {
      super();
      radioResourceConfigDedicatedSCG_r12 = radioResourceConfigDedicatedSCG_r12_;
      sCellToReleaseListSCG_r12 = sCellToReleaseListSCG_r12_;
      pSCellToAddMod_r12 = pSCellToAddMod_r12_;
      sCellToAddModListSCG_r12 = sCellToAddModListSCG_r12_;
      mobilityControlInfoSCG_r12 = mobilityControlInfoSCG_r12_;
      sCellToReleaseListSCG_Ext_r13 = sCellToReleaseListSCG_Ext_r13_;
      sCellToAddModListSCG_Ext_r13 = sCellToAddModListSCG_Ext_r13_;
      sCellToAddModListSCG_Ext_v1370 = sCellToAddModListSCG_Ext_v1370_;
      pSCellToAddMod_v1440 = pSCellToAddMod_v1440_;
      sCellGroupToReleaseListSCG_r15 = sCellGroupToReleaseListSCG_r15_;
      sCellGroupToAddModListSCG_r15 = sCellGroupToAddModListSCG_r15_;
   }

   public void init () {
      radioResourceConfigDedicatedSCG_r12 = null;
      sCellToReleaseListSCG_r12 = null;
      pSCellToAddMod_r12 = null;
      sCellToAddModListSCG_r12 = null;
      mobilityControlInfoSCG_r12 = null;
      sCellToReleaseListSCG_Ext_r13 = null;
      sCellToAddModListSCG_Ext_r13 = null;
      sCellToAddModListSCG_Ext_v1370 = null;
      pSCellToAddMod_v1440 = null;
      sCellGroupToReleaseListSCG_r15 = null;
      sCellGroupToAddModListSCG_r15 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 12; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return radioResourceConfigDedicatedSCG_r12;
         case 1: return sCellToReleaseListSCG_r12;
         case 2: return pSCellToAddMod_r12;
         case 3: return sCellToAddModListSCG_r12;
         case 4: return mobilityControlInfoSCG_r12;
         case 5: return sCellToReleaseListSCG_Ext_r13;
         case 6: return sCellToAddModListSCG_Ext_r13;
         case 7: return sCellToAddModListSCG_Ext_v1370;
         case 8: return pSCellToAddMod_v1440;
         case 9: return sCellGroupToReleaseListSCG_r15;
         case 10: return sCellGroupToAddModListSCG_r15;
         case 11: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "radioResourceConfigDedicatedSCG-r12";
         case 1: return "sCellToReleaseListSCG-r12";
         case 2: return "pSCellToAddMod-r12";
         case 3: return "sCellToAddModListSCG-r12";
         case 4: return "mobilityControlInfoSCG-r12";
         case 5: return "sCellToReleaseListSCG-Ext-r13";
         case 6: return "sCellToAddModListSCG-Ext-r13";
         case 7: return "sCellToAddModListSCG-Ext-v1370";
         case 8: return "pSCellToAddMod-v1440";
         case 9: return "sCellGroupToReleaseListSCG-r15";
         case 10: return "sCellGroupToAddModListSCG-r15";
         case 11: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean radioResourceConfigDedicatedSCG_r12Present = buffer.decodeBit ("radioResourceConfigDedicatedSCG_r12Present");
      boolean sCellToReleaseListSCG_r12Present = buffer.decodeBit ("sCellToReleaseListSCG_r12Present");
      boolean pSCellToAddMod_r12Present = buffer.decodeBit ("pSCellToAddMod_r12Present");
      boolean sCellToAddModListSCG_r12Present = buffer.decodeBit ("sCellToAddModListSCG_r12Present");
      boolean mobilityControlInfoSCG_r12Present = buffer.decodeBit ("mobilityControlInfoSCG_r12Present");

      // decode radioResourceConfigDedicatedSCG_r12

      if (radioResourceConfigDedicatedSCG_r12Present) {
         buffer.getContext().eventDispatcher.startElement("radioResourceConfigDedicatedSCG_r12", -1);

         radioResourceConfigDedicatedSCG_r12 = new RadioResourceConfigDedicatedSCG_r12();
         radioResourceConfigDedicatedSCG_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("radioResourceConfigDedicatedSCG_r12", -1);
      }
      else {
         radioResourceConfigDedicatedSCG_r12 = null;
      }

      // decode sCellToReleaseListSCG_r12

      if (sCellToReleaseListSCG_r12Present) {
         buffer.getContext().eventDispatcher.startElement("sCellToReleaseListSCG_r12", -1);

         sCellToReleaseListSCG_r12 = new SCellToReleaseList_r10();
         sCellToReleaseListSCG_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sCellToReleaseListSCG_r12", -1);
      }
      else {
         sCellToReleaseListSCG_r12 = null;
      }

      // decode pSCellToAddMod_r12

      if (pSCellToAddMod_r12Present) {
         buffer.getContext().eventDispatcher.startElement("pSCellToAddMod_r12", -1);

         pSCellToAddMod_r12 = new PSCellToAddMod_r12();
         pSCellToAddMod_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("pSCellToAddMod_r12", -1);
      }
      else {
         pSCellToAddMod_r12 = null;
      }

      // decode sCellToAddModListSCG_r12

      if (sCellToAddModListSCG_r12Present) {
         buffer.getContext().eventDispatcher.startElement("sCellToAddModListSCG_r12", -1);

         sCellToAddModListSCG_r12 = new SCellToAddModList_r10();
         sCellToAddModListSCG_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sCellToAddModListSCG_r12", -1);
      }
      else {
         sCellToAddModListSCG_r12 = null;
      }

      // decode mobilityControlInfoSCG_r12

      if (mobilityControlInfoSCG_r12Present) {
         buffer.getContext().eventDispatcher.startElement("mobilityControlInfoSCG_r12", -1);

         mobilityControlInfoSCG_r12 = new MobilityControlInfoSCG_r12();
         mobilityControlInfoSCG_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mobilityControlInfoSCG_r12", -1);
      }
      else {
         mobilityControlInfoSCG_r12 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV3ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV4ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV5ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean sCellToReleaseListSCG_Ext_r13Present = buffer.decodeBit ("sCellToReleaseListSCG_Ext_r13Present");

            boolean sCellToAddModListSCG_Ext_r13Present = buffer.decodeBit ("sCellToAddModListSCG_Ext_r13Present");

            // decode sCellToReleaseListSCG_Ext_r13

            if (sCellToReleaseListSCG_Ext_r13Present) {
               buffer.getContext().eventDispatcher.startElement("sCellToReleaseListSCG_Ext_r13", -1);

               sCellToReleaseListSCG_Ext_r13 = new SCellToReleaseListExt_r13();
               sCellToReleaseListSCG_Ext_r13.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("sCellToReleaseListSCG_Ext_r13", -1);
            }
            else {
               sCellToReleaseListSCG_Ext_r13 = null;
            }

            // decode sCellToAddModListSCG_Ext_r13

            if (sCellToAddModListSCG_Ext_r13Present) {
               buffer.getContext().eventDispatcher.startElement("sCellToAddModListSCG_Ext_r13", -1);

               sCellToAddModListSCG_Ext_r13 = new SCellToAddModListExt_r13();
               sCellToAddModListSCG_Ext_r13.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("sCellToAddModListSCG_Ext_r13", -1);
            }
            else {
               sCellToAddModListSCG_Ext_r13 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV3ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean sCellToAddModListSCG_Ext_v1370Present = buffer.decodeBit ("sCellToAddModListSCG_Ext_v1370Present");

            // decode sCellToAddModListSCG_Ext_v1370

            if (sCellToAddModListSCG_Ext_v1370Present) {
               buffer.getContext().eventDispatcher.startElement("sCellToAddModListSCG_Ext_v1370", -1);

               sCellToAddModListSCG_Ext_v1370 = new SCellToAddModListExt_v1370();
               sCellToAddModListSCG_Ext_v1370.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("sCellToAddModListSCG_Ext_v1370", -1);
            }
            else {
               sCellToAddModListSCG_Ext_v1370 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV4ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean pSCellToAddMod_v1440Present = buffer.decodeBit ("pSCellToAddMod_v1440Present");

            // decode pSCellToAddMod_v1440

            if (pSCellToAddMod_v1440Present) {
               buffer.getContext().eventDispatcher.startElement("pSCellToAddMod_v1440", -1);

               pSCellToAddMod_v1440 = new PSCellToAddMod_v1440();
               pSCellToAddMod_v1440.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("pSCellToAddMod_v1440", -1);
            }
            else {
               pSCellToAddMod_v1440 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV5ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean sCellGroupToReleaseListSCG_r15Present = buffer.decodeBit ("sCellGroupToReleaseListSCG_r15Present");

            boolean sCellGroupToAddModListSCG_r15Present = buffer.decodeBit ("sCellGroupToAddModListSCG_r15Present");

            // decode sCellGroupToReleaseListSCG_r15

            if (sCellGroupToReleaseListSCG_r15Present) {
               buffer.getContext().eventDispatcher.startElement("sCellGroupToReleaseListSCG_r15", -1);

               sCellGroupToReleaseListSCG_r15 = new SCellGroupToReleaseList_r15();
               sCellGroupToReleaseListSCG_r15.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("sCellGroupToReleaseListSCG_r15", -1);
            }
            else {
               sCellGroupToReleaseListSCG_r15 = null;
            }

            // decode sCellGroupToAddModListSCG_r15

            if (sCellGroupToAddModListSCG_r15Present) {
               buffer.getContext().eventDispatcher.startElement("sCellGroupToAddModListSCG_r15", -1);

               sCellGroupToAddModListSCG_r15 = new SCellGroupToAddModList_r15();
               sCellGroupToAddModListSCG_r15.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("sCellGroupToAddModListSCG_r15", -1);
            }
            else {
               sCellGroupToAddModListSCG_r15 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (radioResourceConfigDedicatedSCG_r12 != null) radioResourceConfigDedicatedSCG_r12.print (_sb, "radioResourceConfigDedicatedSCG_r12", _level+1);
      if (sCellToReleaseListSCG_r12 != null) sCellToReleaseListSCG_r12.print (_sb, "sCellToReleaseListSCG_r12", _level+1);
      if (pSCellToAddMod_r12 != null) pSCellToAddMod_r12.print (_sb, "pSCellToAddMod_r12", _level+1);
      if (sCellToAddModListSCG_r12 != null) sCellToAddModListSCG_r12.print (_sb, "sCellToAddModListSCG_r12", _level+1);
      if (mobilityControlInfoSCG_r12 != null) mobilityControlInfoSCG_r12.print (_sb, "mobilityControlInfoSCG_r12", _level+1);
      if (sCellToReleaseListSCG_Ext_r13 != null) sCellToReleaseListSCG_Ext_r13.print (_sb, "sCellToReleaseListSCG_Ext_r13", _level+1);
      if (sCellToAddModListSCG_Ext_r13 != null) sCellToAddModListSCG_Ext_r13.print (_sb, "sCellToAddModListSCG_Ext_r13", _level+1);
      if (sCellToAddModListSCG_Ext_v1370 != null) sCellToAddModListSCG_Ext_v1370.print (_sb, "sCellToAddModListSCG_Ext_v1370", _level+1);
      if (pSCellToAddMod_v1440 != null) pSCellToAddMod_v1440.print (_sb, "pSCellToAddMod_v1440", _level+1);
      if (sCellGroupToReleaseListSCG_r15 != null) sCellGroupToReleaseListSCG_r15.print (_sb, "sCellGroupToReleaseListSCG_r15", _level+1);
      if (sCellGroupToAddModListSCG_r15 != null) sCellGroupToAddModListSCG_r15.print (_sb, "sCellGroupToAddModListSCG_r15", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
