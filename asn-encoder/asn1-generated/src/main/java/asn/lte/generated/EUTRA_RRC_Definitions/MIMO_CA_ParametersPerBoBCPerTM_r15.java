/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MIMO_CA_ParametersPerBoBCPerTM_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MIMO-CA-ParametersPerBoBCPerTM-r15";
   }

   public MIMO_NonPrecodedCapabilities_r13 nonPrecoded_r13;  // optional
   public MIMO_BeamformedCapabilityList_r13 beamformed_r13;  // optional
   public MIMO_CA_ParametersPerBoBCPerTM_r15_dmrs_Enhancements_r13 dmrs_Enhancements_r13 = null;  // optional
   public MIMO_CA_ParametersPerBoBCPerTM_r15_csi_ReportingNP_r14 csi_ReportingNP_r14 = null;  // optional
   public MIMO_CA_ParametersPerBoBCPerTM_r15_csi_ReportingAdvanced_r14 csi_ReportingAdvanced_r14 = null;  // optional

   public MIMO_CA_ParametersPerBoBCPerTM_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MIMO_CA_ParametersPerBoBCPerTM_r15 (
      MIMO_NonPrecodedCapabilities_r13 nonPrecoded_r13_,
      MIMO_BeamformedCapabilityList_r13 beamformed_r13_,
      MIMO_CA_ParametersPerBoBCPerTM_r15_dmrs_Enhancements_r13 dmrs_Enhancements_r13_,
      MIMO_CA_ParametersPerBoBCPerTM_r15_csi_ReportingNP_r14 csi_ReportingNP_r14_,
      MIMO_CA_ParametersPerBoBCPerTM_r15_csi_ReportingAdvanced_r14 csi_ReportingAdvanced_r14_
   ) {
      super();
      nonPrecoded_r13 = nonPrecoded_r13_;
      beamformed_r13 = beamformed_r13_;
      dmrs_Enhancements_r13 = dmrs_Enhancements_r13_;
      csi_ReportingNP_r14 = csi_ReportingNP_r14_;
      csi_ReportingAdvanced_r14 = csi_ReportingAdvanced_r14_;
   }

   public void init () {
      nonPrecoded_r13 = null;
      beamformed_r13 = null;
      dmrs_Enhancements_r13 = null;
      csi_ReportingNP_r14 = null;
      csi_ReportingAdvanced_r14 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return nonPrecoded_r13;
         case 1: return beamformed_r13;
         case 2: return dmrs_Enhancements_r13;
         case 3: return csi_ReportingNP_r14;
         case 4: return csi_ReportingAdvanced_r14;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "nonPrecoded-r13";
         case 1: return "beamformed-r13";
         case 2: return "dmrs-Enhancements-r13";
         case 3: return "csi-ReportingNP-r14";
         case 4: return "csi-ReportingAdvanced-r14";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean nonPrecoded_r13Present = buffer.decodeBit ("nonPrecoded_r13Present");
      boolean beamformed_r13Present = buffer.decodeBit ("beamformed_r13Present");
      boolean dmrs_Enhancements_r13Present = buffer.decodeBit ("dmrs_Enhancements_r13Present");
      boolean csi_ReportingNP_r14Present = buffer.decodeBit ("csi_ReportingNP_r14Present");
      boolean csi_ReportingAdvanced_r14Present = buffer.decodeBit ("csi_ReportingAdvanced_r14Present");

      // decode nonPrecoded_r13

      if (nonPrecoded_r13Present) {
         buffer.getContext().eventDispatcher.startElement("nonPrecoded_r13", -1);

         nonPrecoded_r13 = new MIMO_NonPrecodedCapabilities_r13();
         nonPrecoded_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonPrecoded_r13", -1);
      }
      else {
         nonPrecoded_r13 = null;
      }

      // decode beamformed_r13

      if (beamformed_r13Present) {
         buffer.getContext().eventDispatcher.startElement("beamformed_r13", -1);

         beamformed_r13 = new MIMO_BeamformedCapabilityList_r13();
         beamformed_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("beamformed_r13", -1);
      }
      else {
         beamformed_r13 = null;
      }

      // decode dmrs_Enhancements_r13

      if (dmrs_Enhancements_r13Present) {
         buffer.getContext().eventDispatcher.startElement("dmrs_Enhancements_r13", -1);

         int tval = MIMO_CA_ParametersPerBoBCPerTM_r15_dmrs_Enhancements_r13.decodeEnumValue (buffer);
         dmrs_Enhancements_r13 = MIMO_CA_ParametersPerBoBCPerTM_r15_dmrs_Enhancements_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("dmrs_Enhancements_r13", -1);
      }
      else {
         dmrs_Enhancements_r13 = null;
      }

      // decode csi_ReportingNP_r14

      if (csi_ReportingNP_r14Present) {
         buffer.getContext().eventDispatcher.startElement("csi_ReportingNP_r14", -1);

         int tval = MIMO_CA_ParametersPerBoBCPerTM_r15_csi_ReportingNP_r14.decodeEnumValue (buffer);
         csi_ReportingNP_r14 = MIMO_CA_ParametersPerBoBCPerTM_r15_csi_ReportingNP_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("csi_ReportingNP_r14", -1);
      }
      else {
         csi_ReportingNP_r14 = null;
      }

      // decode csi_ReportingAdvanced_r14

      if (csi_ReportingAdvanced_r14Present) {
         buffer.getContext().eventDispatcher.startElement("csi_ReportingAdvanced_r14", -1);

         int tval = MIMO_CA_ParametersPerBoBCPerTM_r15_csi_ReportingAdvanced_r14.decodeEnumValue (buffer);
         csi_ReportingAdvanced_r14 = MIMO_CA_ParametersPerBoBCPerTM_r15_csi_ReportingAdvanced_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("csi_ReportingAdvanced_r14", -1);
      }
      else {
         csi_ReportingAdvanced_r14 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (nonPrecoded_r13 != null) nonPrecoded_r13.print (_sb, "nonPrecoded_r13", _level+1);
      if (beamformed_r13 != null) beamformed_r13.print (_sb, "beamformed_r13", _level+1);
      if (dmrs_Enhancements_r13 != null) dmrs_Enhancements_r13.print (_sb, "dmrs_Enhancements_r13", _level+1);
      if (csi_ReportingNP_r14 != null) csi_ReportingNP_r14.print (_sb, "csi_ReportingNP_r14", _level+1);
      if (csi_ReportingAdvanced_r14 != null) csi_ReportingAdvanced_r14.print (_sb, "csi_ReportingAdvanced_r14", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
