/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UplinkPowerControlCommon extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UplinkPowerControlCommon";
   }

   public Asn1Integer p0_NominalPUSCH;
   public Alpha_r12 alpha = null;
   public Asn1Integer p0_NominalPUCCH;
   public DeltaFList_PUCCH deltaFList_PUCCH;
   public Asn1Integer deltaPreambleMsg3;

   public UplinkPowerControlCommon () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UplinkPowerControlCommon (
      Asn1Integer p0_NominalPUSCH_,
      Alpha_r12 alpha_,
      Asn1Integer p0_NominalPUCCH_,
      DeltaFList_PUCCH deltaFList_PUCCH_,
      Asn1Integer deltaPreambleMsg3_
   ) {
      super();
      p0_NominalPUSCH = p0_NominalPUSCH_;
      alpha = alpha_;
      p0_NominalPUCCH = p0_NominalPUCCH_;
      deltaFList_PUCCH = deltaFList_PUCCH_;
      deltaPreambleMsg3 = deltaPreambleMsg3_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public UplinkPowerControlCommon (long p0_NominalPUSCH_,
      Alpha_r12 alpha_,
      long p0_NominalPUCCH_,
      DeltaFList_PUCCH deltaFList_PUCCH_,
      long deltaPreambleMsg3_
   ) {
      super();
      p0_NominalPUSCH = new Asn1Integer (p0_NominalPUSCH_);
      alpha = alpha_;
      p0_NominalPUCCH = new Asn1Integer (p0_NominalPUCCH_);
      deltaFList_PUCCH = deltaFList_PUCCH_;
      deltaPreambleMsg3 = new Asn1Integer (deltaPreambleMsg3_);
   }

   public void init () {
      p0_NominalPUSCH = null;
      alpha = null;
      p0_NominalPUCCH = null;
      deltaFList_PUCCH = null;
      deltaPreambleMsg3 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return p0_NominalPUSCH;
         case 1: return alpha;
         case 2: return p0_NominalPUCCH;
         case 3: return deltaFList_PUCCH;
         case 4: return deltaPreambleMsg3;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "p0-NominalPUSCH";
         case 1: return "alpha";
         case 2: return "p0-NominalPUCCH";
         case 3: return "deltaFList-PUCCH";
         case 4: return "deltaPreambleMsg3";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode p0_NominalPUSCH

      buffer.getContext().eventDispatcher.startElement("p0_NominalPUSCH", -1);

      p0_NominalPUSCH = new Asn1Integer();
      p0_NominalPUSCH.decode (buffer, -126, 24);

      buffer.invokeCharacters(p0_NominalPUSCH.toString());
      buffer.getContext().eventDispatcher.endElement("p0_NominalPUSCH", -1);

      // decode alpha

      buffer.getContext().eventDispatcher.startElement("alpha", -1);

      {
         int tval = Alpha_r12.decodeEnumValue (buffer);
         alpha = Alpha_r12.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("alpha", -1);

      // decode p0_NominalPUCCH

      buffer.getContext().eventDispatcher.startElement("p0_NominalPUCCH", -1);

      p0_NominalPUCCH = new Asn1Integer();
      p0_NominalPUCCH.decode (buffer, -127, -96);

      buffer.invokeCharacters(p0_NominalPUCCH.toString());
      buffer.getContext().eventDispatcher.endElement("p0_NominalPUCCH", -1);

      // decode deltaFList_PUCCH

      buffer.getContext().eventDispatcher.startElement("deltaFList_PUCCH", -1);

      deltaFList_PUCCH = new DeltaFList_PUCCH();
      deltaFList_PUCCH.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("deltaFList_PUCCH", -1);

      // decode deltaPreambleMsg3

      buffer.getContext().eventDispatcher.startElement("deltaPreambleMsg3", -1);

      deltaPreambleMsg3 = new Asn1Integer();
      deltaPreambleMsg3.decode (buffer, -1, 6);

      buffer.invokeCharacters(deltaPreambleMsg3.toString());
      buffer.getContext().eventDispatcher.endElement("deltaPreambleMsg3", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (p0_NominalPUSCH != null) p0_NominalPUSCH.print (_sb, "p0_NominalPUSCH", _level+1);
      if (alpha != null) alpha.print (_sb, "alpha", _level+1);
      if (p0_NominalPUCCH != null) p0_NominalPUCCH.print (_sb, "p0_NominalPUCCH", _level+1);
      if (deltaFList_PUCCH != null) deltaFList_PUCCH.print (_sb, "deltaFList_PUCCH", _level+1);
      if (deltaPreambleMsg3 != null) deltaPreambleMsg3.print (_sb, "deltaPreambleMsg3", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
