/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SRS_ResourceSet_resourceType extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _APERIODIC = 1;
   public final static byte _SEMI_PERSISTENT = 2;
   public final static byte _PERIODIC = 3;

   public SRS_ResourceSet_resourceType () {
      super();
   }

   public SRS_ResourceSet_resourceType (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _APERIODIC: return "aperiodic";
      case _SEMI_PERSISTENT: return "semi_persistent";
      case _PERIODIC: return "periodic";
      default: return "UNDEFINED";
      }
   }

   public void set_aperiodic (SRS_ResourceSet_resourceType_aperiodic value) {
      setElement (_APERIODIC, value);
   }

   public void set_semi_persistent (SRS_ResourceSet_resourceType_semi_persistent value) {
      setElement (_SEMI_PERSISTENT, value);
   }

   public void set_periodic (SRS_ResourceSet_resourceType_periodic value) {
      setElement (_PERIODIC, value);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (3, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // aperiodic
         case 0: { 
            SRS_ResourceSet_resourceType_aperiodic aperiodic;
            element = aperiodic = new SRS_ResourceSet_resourceType_aperiodic();
            aperiodic.decode (buffer);
            break;
         }

         // semi_persistent
         case 1: { 
            SRS_ResourceSet_resourceType_semi_persistent semi_persistent;
            element = semi_persistent = new SRS_ResourceSet_resourceType_semi_persistent();
            semi_persistent.decode (buffer);
            break;
         }

         // periodic
         case 2: { 
            SRS_ResourceSet_resourceType_periodic periodic;
            element = periodic = new SRS_ResourceSet_resourceType_periodic();
            periodic.decode (buffer);
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
