/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SPS_ConfigDL_STTI_r15_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 semiPersistSchedIntervalDL_STTI_r15 = null;
   public Asn1Integer numberOfConfSPS_Processes_STTI_r15;
   public SPS_ConfigDL_STTI_r15_setup_twoAntennaPortActivated_r15 twoAntennaPortActivated_r15;  // optional
   public Asn1Integer sTTI_StartTimeDL_r15;
   public TPC_PDCCH_Config tpc_PDCCH_ConfigPUCCH_SPS_r15;  // optional
   public Asn1OpenExt extElem1;

   public SPS_ConfigDL_STTI_r15_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SPS_ConfigDL_STTI_r15_setup (
      SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 semiPersistSchedIntervalDL_STTI_r15_,
      Asn1Integer numberOfConfSPS_Processes_STTI_r15_,
      SPS_ConfigDL_STTI_r15_setup_twoAntennaPortActivated_r15 twoAntennaPortActivated_r15_,
      Asn1Integer sTTI_StartTimeDL_r15_,
      TPC_PDCCH_Config tpc_PDCCH_ConfigPUCCH_SPS_r15_
   ) {
      super();
      semiPersistSchedIntervalDL_STTI_r15 = semiPersistSchedIntervalDL_STTI_r15_;
      numberOfConfSPS_Processes_STTI_r15 = numberOfConfSPS_Processes_STTI_r15_;
      twoAntennaPortActivated_r15 = twoAntennaPortActivated_r15_;
      sTTI_StartTimeDL_r15 = sTTI_StartTimeDL_r15_;
      tpc_PDCCH_ConfigPUCCH_SPS_r15 = tpc_PDCCH_ConfigPUCCH_SPS_r15_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SPS_ConfigDL_STTI_r15_setup (
      SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 semiPersistSchedIntervalDL_STTI_r15_,
      Asn1Integer numberOfConfSPS_Processes_STTI_r15_,
      Asn1Integer sTTI_StartTimeDL_r15_
   ) {
      super();
      semiPersistSchedIntervalDL_STTI_r15 = semiPersistSchedIntervalDL_STTI_r15_;
      numberOfConfSPS_Processes_STTI_r15 = numberOfConfSPS_Processes_STTI_r15_;
      sTTI_StartTimeDL_r15 = sTTI_StartTimeDL_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SPS_ConfigDL_STTI_r15_setup (SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 semiPersistSchedIntervalDL_STTI_r15_,
      long numberOfConfSPS_Processes_STTI_r15_,
      SPS_ConfigDL_STTI_r15_setup_twoAntennaPortActivated_r15 twoAntennaPortActivated_r15_,
      long sTTI_StartTimeDL_r15_,
      TPC_PDCCH_Config tpc_PDCCH_ConfigPUCCH_SPS_r15_
   ) {
      super();
      semiPersistSchedIntervalDL_STTI_r15 = semiPersistSchedIntervalDL_STTI_r15_;
      numberOfConfSPS_Processes_STTI_r15 = new Asn1Integer (numberOfConfSPS_Processes_STTI_r15_);
      twoAntennaPortActivated_r15 = twoAntennaPortActivated_r15_;
      sTTI_StartTimeDL_r15 = new Asn1Integer (sTTI_StartTimeDL_r15_);
      tpc_PDCCH_ConfigPUCCH_SPS_r15 = tpc_PDCCH_ConfigPUCCH_SPS_r15_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public SPS_ConfigDL_STTI_r15_setup (
      SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 semiPersistSchedIntervalDL_STTI_r15_,
      long numberOfConfSPS_Processes_STTI_r15_,
      long sTTI_StartTimeDL_r15_
   ) {
      super();
      semiPersistSchedIntervalDL_STTI_r15 = semiPersistSchedIntervalDL_STTI_r15_;
      numberOfConfSPS_Processes_STTI_r15 = new Asn1Integer (numberOfConfSPS_Processes_STTI_r15_);
      sTTI_StartTimeDL_r15 = new Asn1Integer (sTTI_StartTimeDL_r15_);
   }

   public void init () {
      semiPersistSchedIntervalDL_STTI_r15 = null;
      numberOfConfSPS_Processes_STTI_r15 = null;
      twoAntennaPortActivated_r15 = null;
      sTTI_StartTimeDL_r15 = null;
      tpc_PDCCH_ConfigPUCCH_SPS_r15 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return semiPersistSchedIntervalDL_STTI_r15;
         case 1: return numberOfConfSPS_Processes_STTI_r15;
         case 2: return twoAntennaPortActivated_r15;
         case 3: return sTTI_StartTimeDL_r15;
         case 4: return tpc_PDCCH_ConfigPUCCH_SPS_r15;
         case 5: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "semiPersistSchedIntervalDL-STTI-r15";
         case 1: return "numberOfConfSPS-Processes-STTI-r15";
         case 2: return "twoAntennaPortActivated-r15";
         case 3: return "sTTI-StartTimeDL-r15";
         case 4: return "tpc-PDCCH-ConfigPUCCH-SPS-r15";
         case 5: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean twoAntennaPortActivated_r15Present = buffer.decodeBit ("twoAntennaPortActivated_r15Present");
      boolean tpc_PDCCH_ConfigPUCCH_SPS_r15Present = buffer.decodeBit ("tpc_PDCCH_ConfigPUCCH_SPS_r15Present");

      // decode semiPersistSchedIntervalDL_STTI_r15

      buffer.getContext().eventDispatcher.startElement("semiPersistSchedIntervalDL_STTI_r15", -1);

      {
         int tval = SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15.decodeEnumValue (buffer);
         semiPersistSchedIntervalDL_STTI_r15 = SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("semiPersistSchedIntervalDL_STTI_r15", -1);

      // decode numberOfConfSPS_Processes_STTI_r15

      buffer.getContext().eventDispatcher.startElement("numberOfConfSPS_Processes_STTI_r15", -1);

      numberOfConfSPS_Processes_STTI_r15 = new Asn1Integer();
      numberOfConfSPS_Processes_STTI_r15.decode (buffer, 1, 12);

      buffer.invokeCharacters(numberOfConfSPS_Processes_STTI_r15.toString());
      buffer.getContext().eventDispatcher.endElement("numberOfConfSPS_Processes_STTI_r15", -1);

      // decode twoAntennaPortActivated_r15

      if (twoAntennaPortActivated_r15Present) {
         buffer.getContext().eventDispatcher.startElement("twoAntennaPortActivated_r15", -1);

         twoAntennaPortActivated_r15 = new SPS_ConfigDL_STTI_r15_setup_twoAntennaPortActivated_r15();
         twoAntennaPortActivated_r15.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("twoAntennaPortActivated_r15", -1);
      }
      else {
         twoAntennaPortActivated_r15 = null;
      }

      // decode sTTI_StartTimeDL_r15

      buffer.getContext().eventDispatcher.startElement("sTTI_StartTimeDL_r15", -1);

      sTTI_StartTimeDL_r15 = new Asn1Integer();
      sTTI_StartTimeDL_r15.decode (buffer, 0, 5);

      buffer.invokeCharacters(sTTI_StartTimeDL_r15.toString());
      buffer.getContext().eventDispatcher.endElement("sTTI_StartTimeDL_r15", -1);

      // decode tpc_PDCCH_ConfigPUCCH_SPS_r15

      if (tpc_PDCCH_ConfigPUCCH_SPS_r15Present) {
         buffer.getContext().eventDispatcher.startElement("tpc_PDCCH_ConfigPUCCH_SPS_r15", -1);

         tpc_PDCCH_ConfigPUCCH_SPS_r15 = new TPC_PDCCH_Config();
         tpc_PDCCH_ConfigPUCCH_SPS_r15.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tpc_PDCCH_ConfigPUCCH_SPS_r15", -1);
      }
      else {
         tpc_PDCCH_ConfigPUCCH_SPS_r15 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (semiPersistSchedIntervalDL_STTI_r15 != null) semiPersistSchedIntervalDL_STTI_r15.print (_sb, "semiPersistSchedIntervalDL_STTI_r15", _level+1);
      if (numberOfConfSPS_Processes_STTI_r15 != null) numberOfConfSPS_Processes_STTI_r15.print (_sb, "numberOfConfSPS_Processes_STTI_r15", _level+1);
      if (twoAntennaPortActivated_r15 != null) twoAntennaPortActivated_r15.print (_sb, "twoAntennaPortActivated_r15", _level+1);
      if (sTTI_StartTimeDL_r15 != null) sTTI_StartTimeDL_r15.print (_sb, "sTTI_StartTimeDL_r15", _level+1);
      if (tpc_PDCCH_ConfigPUCCH_SPS_r15 != null) tpc_PDCCH_ConfigPUCCH_SPS_r15.print (_sb, "tpc_PDCCH_ConfigPUCCH_SPS_r15", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
