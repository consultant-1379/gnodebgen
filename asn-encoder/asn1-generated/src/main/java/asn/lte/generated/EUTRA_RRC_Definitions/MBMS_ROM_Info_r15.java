/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MBMS_ROM_Info_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MBMS-ROM-Info-r15";
   }

   public ARFCN_ValueEUTRA_r9 mbms_ROM_Freq_r15;
   public MBMS_ROM_Info_r15_mbms_ROM_SubcarrierSpacing_r15 mbms_ROM_SubcarrierSpacing_r15 = null;
   public MBMS_ROM_Info_r15_mbms_Bandwidth_r15 mbms_Bandwidth_r15 = null;

   public MBMS_ROM_Info_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MBMS_ROM_Info_r15 (
      ARFCN_ValueEUTRA_r9 mbms_ROM_Freq_r15_,
      MBMS_ROM_Info_r15_mbms_ROM_SubcarrierSpacing_r15 mbms_ROM_SubcarrierSpacing_r15_,
      MBMS_ROM_Info_r15_mbms_Bandwidth_r15 mbms_Bandwidth_r15_
   ) {
      super();
      mbms_ROM_Freq_r15 = mbms_ROM_Freq_r15_;
      mbms_ROM_SubcarrierSpacing_r15 = mbms_ROM_SubcarrierSpacing_r15_;
      mbms_Bandwidth_r15 = mbms_Bandwidth_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public MBMS_ROM_Info_r15 (long mbms_ROM_Freq_r15_,
      MBMS_ROM_Info_r15_mbms_ROM_SubcarrierSpacing_r15 mbms_ROM_SubcarrierSpacing_r15_,
      MBMS_ROM_Info_r15_mbms_Bandwidth_r15 mbms_Bandwidth_r15_
   ) {
      super();
      mbms_ROM_Freq_r15 = new ARFCN_ValueEUTRA_r9 (mbms_ROM_Freq_r15_);
      mbms_ROM_SubcarrierSpacing_r15 = mbms_ROM_SubcarrierSpacing_r15_;
      mbms_Bandwidth_r15 = mbms_Bandwidth_r15_;
   }

   public void init () {
      mbms_ROM_Freq_r15 = null;
      mbms_ROM_SubcarrierSpacing_r15 = null;
      mbms_Bandwidth_r15 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return mbms_ROM_Freq_r15;
         case 1: return mbms_ROM_SubcarrierSpacing_r15;
         case 2: return mbms_Bandwidth_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "mbms-ROM-Freq-r15";
         case 1: return "mbms-ROM-SubcarrierSpacing-r15";
         case 2: return "mbms-Bandwidth-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode mbms_ROM_Freq_r15

      buffer.getContext().eventDispatcher.startElement("mbms_ROM_Freq_r15", -1);

      mbms_ROM_Freq_r15 = new ARFCN_ValueEUTRA_r9();
      mbms_ROM_Freq_r15.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("mbms_ROM_Freq_r15", -1);

      // decode mbms_ROM_SubcarrierSpacing_r15

      buffer.getContext().eventDispatcher.startElement("mbms_ROM_SubcarrierSpacing_r15", -1);

      {
         int tval = MBMS_ROM_Info_r15_mbms_ROM_SubcarrierSpacing_r15.decodeEnumValue (buffer);
         mbms_ROM_SubcarrierSpacing_r15 = MBMS_ROM_Info_r15_mbms_ROM_SubcarrierSpacing_r15.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("mbms_ROM_SubcarrierSpacing_r15", -1);

      // decode mbms_Bandwidth_r15

      buffer.getContext().eventDispatcher.startElement("mbms_Bandwidth_r15", -1);

      {
         int tval = MBMS_ROM_Info_r15_mbms_Bandwidth_r15.decodeEnumValue (buffer);
         mbms_Bandwidth_r15 = MBMS_ROM_Info_r15_mbms_Bandwidth_r15.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("mbms_Bandwidth_r15", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (mbms_ROM_Freq_r15 != null) mbms_ROM_Freq_r15.print (_sb, "mbms_ROM_Freq_r15", _level+1);
      if (mbms_ROM_SubcarrierSpacing_r15 != null) mbms_ROM_SubcarrierSpacing_r15.print (_sb, "mbms_ROM_SubcarrierSpacing_r15", _level+1);
      if (mbms_Bandwidth_r15 != null) mbms_Bandwidth_r15.print (_sb, "mbms_Bandwidth_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
