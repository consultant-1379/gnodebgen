/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;

public class HandoverPreparationInformation_v1320_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "HandoverPreparationInformation-v1320-IEs";
   }

   public AS_Config_v1320 as_Config_v1320;  // optional
   public AS_Context_v1320 as_Context_v1320;  // optional
   public HandoverPreparationInformation_v1430_IEs nonCriticalExtension;  // optional

   public HandoverPreparationInformation_v1320_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public HandoverPreparationInformation_v1320_IEs (
      AS_Config_v1320 as_Config_v1320_,
      AS_Context_v1320 as_Context_v1320_,
      HandoverPreparationInformation_v1430_IEs nonCriticalExtension_
   ) {
      super();
      as_Config_v1320 = as_Config_v1320_;
      as_Context_v1320 = as_Context_v1320_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      as_Config_v1320 = null;
      as_Context_v1320 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return as_Config_v1320;
         case 1: return as_Context_v1320;
         case 2: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "as-Config-v1320";
         case 1: return "as-Context-v1320";
         case 2: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean as_Config_v1320Present = buffer.decodeBit ("as_Config_v1320Present");
      boolean as_Context_v1320Present = buffer.decodeBit ("as_Context_v1320Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode as_Config_v1320

      if (as_Config_v1320Present) {
         buffer.getContext().eventDispatcher.startElement("as_Config_v1320", -1);

         as_Config_v1320 = new AS_Config_v1320();
         as_Config_v1320.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("as_Config_v1320", -1);
      }
      else {
         as_Config_v1320 = null;
      }

      // decode as_Context_v1320

      if (as_Context_v1320Present) {
         buffer.getContext().eventDispatcher.startElement("as_Context_v1320", -1);

         as_Context_v1320 = new AS_Context_v1320();
         as_Context_v1320.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("as_Context_v1320", -1);
      }
      else {
         as_Context_v1320 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new HandoverPreparationInformation_v1430_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (as_Config_v1320 != null) as_Config_v1320.print (_sb, "as_Config_v1320", _level+1);
      if (as_Context_v1320 != null) as_Context_v1320.print (_sb, "as_Context_v1320", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
