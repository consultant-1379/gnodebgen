/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PUCCH_ConfigDedicated_v1530 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PUCCH-ConfigDedicated-v1530";
   }

   public Asn1Integer n1PUCCH_AN_SPT_r15;  // optional
   public PUCCH_ConfigDedicated_v1530_codebooksizeDeterminationSTTI_r15 codebooksizeDeterminationSTTI_r15 = null;  // optional

   public PUCCH_ConfigDedicated_v1530 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PUCCH_ConfigDedicated_v1530 (
      Asn1Integer n1PUCCH_AN_SPT_r15_,
      PUCCH_ConfigDedicated_v1530_codebooksizeDeterminationSTTI_r15 codebooksizeDeterminationSTTI_r15_
   ) {
      super();
      n1PUCCH_AN_SPT_r15 = n1PUCCH_AN_SPT_r15_;
      codebooksizeDeterminationSTTI_r15 = codebooksizeDeterminationSTTI_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PUCCH_ConfigDedicated_v1530 (long n1PUCCH_AN_SPT_r15_,
      PUCCH_ConfigDedicated_v1530_codebooksizeDeterminationSTTI_r15 codebooksizeDeterminationSTTI_r15_
   ) {
      super();
      n1PUCCH_AN_SPT_r15 = new Asn1Integer (n1PUCCH_AN_SPT_r15_);
      codebooksizeDeterminationSTTI_r15 = codebooksizeDeterminationSTTI_r15_;
   }

   public void init () {
      n1PUCCH_AN_SPT_r15 = null;
      codebooksizeDeterminationSTTI_r15 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return n1PUCCH_AN_SPT_r15;
         case 1: return codebooksizeDeterminationSTTI_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "n1PUCCH-AN-SPT-r15";
         case 1: return "codebooksizeDeterminationSTTI-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean n1PUCCH_AN_SPT_r15Present = buffer.decodeBit ("n1PUCCH_AN_SPT_r15Present");
      boolean codebooksizeDeterminationSTTI_r15Present = buffer.decodeBit ("codebooksizeDeterminationSTTI_r15Present");

      // decode n1PUCCH_AN_SPT_r15

      if (n1PUCCH_AN_SPT_r15Present) {
         buffer.getContext().eventDispatcher.startElement("n1PUCCH_AN_SPT_r15", -1);

         n1PUCCH_AN_SPT_r15 = new Asn1Integer();
         n1PUCCH_AN_SPT_r15.decode (buffer, 0, 2047);

         buffer.invokeCharacters(n1PUCCH_AN_SPT_r15.toString());
         buffer.getContext().eventDispatcher.endElement("n1PUCCH_AN_SPT_r15", -1);
      }
      else {
         n1PUCCH_AN_SPT_r15 = null;
      }

      // decode codebooksizeDeterminationSTTI_r15

      if (codebooksizeDeterminationSTTI_r15Present) {
         buffer.getContext().eventDispatcher.startElement("codebooksizeDeterminationSTTI_r15", -1);

         int tval = PUCCH_ConfigDedicated_v1530_codebooksizeDeterminationSTTI_r15.decodeEnumValue (buffer);
         codebooksizeDeterminationSTTI_r15 = PUCCH_ConfigDedicated_v1530_codebooksizeDeterminationSTTI_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("codebooksizeDeterminationSTTI_r15", -1);
      }
      else {
         codebooksizeDeterminationSTTI_r15 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (n1PUCCH_AN_SPT_r15 != null) n1PUCCH_AN_SPT_r15.print (_sb, "n1PUCCH_AN_SPT_r15", _level+1);
      if (codebooksizeDeterminationSTTI_r15 != null) codebooksizeDeterminationSTTI_r15.print (_sb, "codebooksizeDeterminationSTTI_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
