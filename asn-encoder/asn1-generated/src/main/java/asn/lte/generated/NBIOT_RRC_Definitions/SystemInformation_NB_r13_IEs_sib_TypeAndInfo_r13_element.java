/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformation_NB_r13_IEs_sib_TypeAndInfo_r13_element extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _SIB2_R13 = 1;
   public final static byte _SIB3_R13 = 2;
   public final static byte _SIB4_R13 = 3;
   public final static byte _SIB5_R13 = 4;
   public final static byte _SIB14_R13 = 5;
   public final static byte _SIB16_R13 = 6;
   public final static byte _SIB15_V1430 = 7;
   public final static byte _SIB20_V1430 = 8;
   public final static byte _SIB22_V1430 = 9;
   public final static byte _SIB23_V1530 = 10;
   public final static byte _EXTELEM1 = 11;

   public SystemInformation_NB_r13_IEs_sib_TypeAndInfo_r13_element () {
      super();
   }

   public SystemInformation_NB_r13_IEs_sib_TypeAndInfo_r13_element (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _SIB2_R13: return "sib2_r13";
      case _SIB3_R13: return "sib3_r13";
      case _SIB4_R13: return "sib4_r13";
      case _SIB5_R13: return "sib5_r13";
      case _SIB14_R13: return "sib14_r13";
      case _SIB16_R13: return "sib16_r13";
      case _SIB15_V1430: return "sib15_v1430";
      case _SIB20_V1430: return "sib20_v1430";
      case _SIB22_V1430: return "sib22_v1430";
      case _SIB23_V1530: return "sib23_v1530";
      case _EXTELEM1: return "...";
      default: return "UNDEFINED";
      }
   }

   public void set_sib2_r13 (SystemInformationBlockType2_NB_r13 value) {
      setElement (_SIB2_R13, value);
   }

   public void set_sib3_r13 (SystemInformationBlockType3_NB_r13 value) {
      setElement (_SIB3_R13, value);
   }

   public void set_sib4_r13 (SystemInformationBlockType4_NB_r13 value) {
      setElement (_SIB4_R13, value);
   }

   public void set_sib5_r13 (SystemInformationBlockType5_NB_r13 value) {
      setElement (_SIB5_R13, value);
   }

   public void set_sib14_r13 (SystemInformationBlockType14_NB_r13 value) {
      setElement (_SIB14_R13, value);
   }

   public void set_sib16_r13 (SystemInformationBlockType16_NB_r13 value) {
      setElement (_SIB16_R13, value);
   }

   public void set_sib15_v1430 (SystemInformationBlockType15_NB_r14 value) {
      setElement (_SIB15_V1430, value);
   }

   public void set_sib20_v1430 (SystemInformationBlockType20_NB_r14 value) {
      setElement (_SIB20_V1430, value);
   }

   public void set_sib22_v1430 (SystemInformationBlockType22_NB_r14 value) {
      setElement (_SIB22_V1430, value);
   }

   public void set_sib23_v1530 (SystemInformationBlockType23_NB_r15 value) {
      setElement (_SIB23_V1530, value);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      Asn1PerDecodeBuffer savedBuffer = null;
      boolean extbit = buffer.decodeBit ("extbit");

      if (!extbit) {
         int idx = (int) buffer.decodeConsWholeNumber (6, "index");
         choiceID = idx + 1;
         buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

         switch (idx) {
            // sib2_r13
            case 0: { 
               SystemInformationBlockType2_NB_r13 sib2_r13;
               element = sib2_r13 = new SystemInformationBlockType2_NB_r13();
               sib2_r13.decode (buffer);
               break;
            }

            // sib3_r13
            case 1: { 
               SystemInformationBlockType3_NB_r13 sib3_r13;
               element = sib3_r13 = new SystemInformationBlockType3_NB_r13();
               sib3_r13.decode (buffer);
               break;
            }

            // sib4_r13
            case 2: { 
               SystemInformationBlockType4_NB_r13 sib4_r13;
               element = sib4_r13 = new SystemInformationBlockType4_NB_r13();
               sib4_r13.decode (buffer);
               break;
            }

            // sib5_r13
            case 3: { 
               SystemInformationBlockType5_NB_r13 sib5_r13;
               element = sib5_r13 = new SystemInformationBlockType5_NB_r13();
               sib5_r13.decode (buffer);
               break;
            }

            // sib14_r13
            case 4: { 
               SystemInformationBlockType14_NB_r13 sib14_r13;
               element = sib14_r13 = new SystemInformationBlockType14_NB_r13();
               sib14_r13.decode (buffer);
               break;
            }

            // sib16_r13
            case 5: { 
               SystemInformationBlockType16_NB_r13 sib16_r13;
               element = sib16_r13 = new SystemInformationBlockType16_NB_r13();
               sib16_r13.decode (buffer);
               break;
            }

            default:
            throw new Asn1InvalidChoiceOptionException (buffer, idx);
         }
      }
      else {
         int idx = (int) buffer.decodeSmallNonNegWholeNumber ();
         choiceID = idx + 7;
         buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

         buffer.byteAlign();

         Asn1OpenType openType = new Asn1OpenType ();
         openType.decode (buffer);

         savedBuffer = buffer;
         buffer = new Asn1PerDecodeBuffer (openType.value, savedBuffer.isAligned());
         buffer.setEventHandlerList (savedBuffer);

         switch (idx) {
            // sib15_v1430
            case 0: { 
               SystemInformationBlockType15_NB_r14 sib15_v1430;
               element = sib15_v1430 = new SystemInformationBlockType15_NB_r14();
               sib15_v1430.decode (buffer);
               break;
            }

            // sib20_v1430
            case 1: { 
               SystemInformationBlockType20_NB_r14 sib20_v1430;
               element = sib20_v1430 = new SystemInformationBlockType20_NB_r14();
               sib20_v1430.decode (buffer);
               break;
            }

            // sib22_v1430
            case 2: { 
               SystemInformationBlockType22_NB_r14 sib22_v1430;
               element = sib22_v1430 = new SystemInformationBlockType22_NB_r14();
               sib22_v1430.decode (buffer);
               break;
            }

            // sib23_v1530
            case 3: { 
               SystemInformationBlockType23_NB_r15 sib23_v1530;
               element = sib23_v1530 = new SystemInformationBlockType23_NB_r15();
               sib23_v1530.decode (buffer);
               break;
            }

            // extElem1
            case 4: { 
               Asn1OpenType extElem1;
               element = extElem1 = new Asn1OpenType();
               extElem1.decode (buffer);

               buffer.invokeCharacters(extElem1.toString());
               break;
            }

            default:
               setElement (_EXTELEM1, openType);
               buffer.invokeCharacters (openType.toString());
         }

      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);

      if (savedBuffer != null) {
         buffer = savedBuffer;
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
