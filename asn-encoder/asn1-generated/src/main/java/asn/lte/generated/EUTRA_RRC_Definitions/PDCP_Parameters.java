/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PDCP_Parameters extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PDCP-Parameters";
   }

   public ROHC_ProfileSupportList_r15 supportedROHC_Profiles;
   public PDCP_Parameters_maxNumberROHC_ContextSessions maxNumberROHC_ContextSessions = null;  // default = PDCP_Parameters_maxNumberROHC_ContextSessions.cs16()
   public Asn1OpenExt extElem1;

   public PDCP_Parameters () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PDCP_Parameters (
      ROHC_ProfileSupportList_r15 supportedROHC_Profiles_,
      PDCP_Parameters_maxNumberROHC_ContextSessions maxNumberROHC_ContextSessions_
   ) {
      super();
      supportedROHC_Profiles = supportedROHC_Profiles_;
      maxNumberROHC_ContextSessions = maxNumberROHC_ContextSessions_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public PDCP_Parameters (
      ROHC_ProfileSupportList_r15 supportedROHC_Profiles_
   ) {
      super();
      supportedROHC_Profiles = supportedROHC_Profiles_;
      maxNumberROHC_ContextSessions = PDCP_Parameters_maxNumberROHC_ContextSessions.cs16();
   }

   public void init () {
      supportedROHC_Profiles = null;
      maxNumberROHC_ContextSessions = PDCP_Parameters_maxNumberROHC_ContextSessions.cs16();
      extElem1 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return supportedROHC_Profiles;
         case 1: return maxNumberROHC_ContextSessions;
         case 2: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "supportedROHC-Profiles";
         case 1: return "maxNumberROHC-ContextSessions";
         case 2: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean maxNumberROHC_ContextSessionsPresent = buffer.decodeBit ("maxNumberROHC_ContextSessionsPresent");

      // decode supportedROHC_Profiles

      buffer.getContext().eventDispatcher.startElement("supportedROHC_Profiles", -1);

      supportedROHC_Profiles = new ROHC_ProfileSupportList_r15();
      supportedROHC_Profiles.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("supportedROHC_Profiles", -1);

      // decode maxNumberROHC_ContextSessions

      if (maxNumberROHC_ContextSessionsPresent) {
         buffer.getContext().eventDispatcher.startElement("maxNumberROHC_ContextSessions", -1);

         int tval = PDCP_Parameters_maxNumberROHC_ContextSessions.decodeEnumValue (buffer);
         maxNumberROHC_ContextSessions = PDCP_Parameters_maxNumberROHC_ContextSessions.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("maxNumberROHC_ContextSessions", -1);
      }
      else {
         maxNumberROHC_ContextSessions = PDCP_Parameters_maxNumberROHC_ContextSessions.cs16();
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (supportedROHC_Profiles != null) supportedROHC_Profiles.print (_sb, "supportedROHC_Profiles", _level+1);
      if (maxNumberROHC_ContextSessions != null) maxNumberROHC_ContextSessions.print (_sb, "maxNumberROHC_ContextSessions", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
