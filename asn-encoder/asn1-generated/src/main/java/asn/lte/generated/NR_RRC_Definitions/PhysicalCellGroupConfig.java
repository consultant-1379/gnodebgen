/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PhysicalCellGroupConfig extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PhysicalCellGroupConfig";
   }

   public PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH harq_ACK_SpatialBundlingPUCCH = null;  // optional
   public PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH harq_ACK_SpatialBundlingPUSCH = null;  // optional
   public P_Max p_NR_FR1;  // optional
   public PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook pdsch_HARQ_ACK_Codebook = null;
   public RNTI_Value tpc_SRS_RNTI;  // optional
   public RNTI_Value tpc_PUCCH_RNTI;  // optional
   public RNTI_Value tpc_PUSCH_RNTI;  // optional
   public RNTI_Value sp_CSI_RNTI;  // optional
   public PhysicalCellGroupConfig_cs_RNTI cs_RNTI;  // optional
   public boolean mV2ExtPresent;
   public RNTI_Value mcs_C_RNTI;  // optional
   public P_Max p_UE_FR1;  // optional
   public boolean mV3ExtPresent;
   public PhysicalCellGroupConfig_xScale xScale = null;  // optional
   public boolean mV4ExtPresent;
   public PhysicalCellGroupConfig_pdcch_BlindDetection pdcch_BlindDetection;  // optional
   public boolean mV5ExtPresent;
   public PhysicalCellGroupConfig_dcp_Config_r16 dcp_Config_r16;  // optional
   public PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16 harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16 = null;  // optional
   public PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16 harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16 = null;  // optional
   public PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16 pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16 = null;  // optional
   public P_Max p_NR_FR2_r16;  // optional
   public P_Max p_UE_FR2_r16;  // optional
   public PhysicalCellGroupConfig_nrdc_PCmode_FR1_r16 nrdc_PCmode_FR1_r16 = null;  // optional
   public PhysicalCellGroupConfig_nrdc_PCmode_FR2_r16 nrdc_PCmode_FR2_r16 = null;  // optional
   public PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook_r16 pdsch_HARQ_ACK_Codebook_r16 = null;  // optional
   public PhysicalCellGroupConfig_nfi_TotalDAI_Included_r16 nfi_TotalDAI_Included_r16 = null;  // optional
   public PhysicalCellGroupConfig_ul_TotalDAI_Included_r16 ul_TotalDAI_Included_r16 = null;  // optional
   public PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedback_r16 pdsch_HARQ_ACK_OneShotFeedback_r16 = null;  // optional
   public PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedbackNDI_r16 pdsch_HARQ_ACK_OneShotFeedbackNDI_r16 = null;  // optional
   public PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedbackCBG_r16 pdsch_HARQ_ACK_OneShotFeedbackCBG_r16 = null;  // optional
   public PhysicalCellGroupConfig_downlinkAssignmentIndexDCI_0_2_r16 downlinkAssignmentIndexDCI_0_2_r16 = null;  // optional
   public PhysicalCellGroupConfig_downlinkAssignmentIndexDCI_1_2_r16 downlinkAssignmentIndexDCI_1_2_r16 = null;  // optional
   public PhysicalCellGroupConfig_pdsch_HARQ_ACK_CodebookList_r16 pdsch_HARQ_ACK_CodebookList_r16;  // optional
   public PhysicalCellGroupConfig_ackNackFeedbackMode_r16 ackNackFeedbackMode_r16 = null;  // optional
   public PhysicalCellGroupConfig_pdcch_BlindDetectionCA_CombIndicator_r16 pdcch_BlindDetectionCA_CombIndicator_r16;  // optional
   public PhysicalCellGroupConfig_pdcch_BlindDetection2_r16 pdcch_BlindDetection2_r16;  // optional
   public PhysicalCellGroupConfig_pdcch_BlindDetection3_r16 pdcch_BlindDetection3_r16;  // optional
   public PhysicalCellGroupConfig_bdFactorR_r16 bdFactorR_r16 = null;  // optional
   public Asn1OpenExt extElem1;

   public PhysicalCellGroupConfig () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PhysicalCellGroupConfig (
      PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH harq_ACK_SpatialBundlingPUCCH_,
      PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH harq_ACK_SpatialBundlingPUSCH_,
      P_Max p_NR_FR1_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook pdsch_HARQ_ACK_Codebook_,
      RNTI_Value tpc_SRS_RNTI_,
      RNTI_Value tpc_PUCCH_RNTI_,
      RNTI_Value tpc_PUSCH_RNTI_,
      RNTI_Value sp_CSI_RNTI_,
      PhysicalCellGroupConfig_cs_RNTI cs_RNTI_,
      RNTI_Value mcs_C_RNTI_,
      P_Max p_UE_FR1_,
      PhysicalCellGroupConfig_xScale xScale_,
      PhysicalCellGroupConfig_pdcch_BlindDetection pdcch_BlindDetection_,
      PhysicalCellGroupConfig_dcp_Config_r16 dcp_Config_r16_,
      PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16 harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16_,
      PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16 harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16 pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16_,
      P_Max p_NR_FR2_r16_,
      P_Max p_UE_FR2_r16_,
      PhysicalCellGroupConfig_nrdc_PCmode_FR1_r16 nrdc_PCmode_FR1_r16_,
      PhysicalCellGroupConfig_nrdc_PCmode_FR2_r16 nrdc_PCmode_FR2_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook_r16 pdsch_HARQ_ACK_Codebook_r16_,
      PhysicalCellGroupConfig_nfi_TotalDAI_Included_r16 nfi_TotalDAI_Included_r16_,
      PhysicalCellGroupConfig_ul_TotalDAI_Included_r16 ul_TotalDAI_Included_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedback_r16 pdsch_HARQ_ACK_OneShotFeedback_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedbackNDI_r16 pdsch_HARQ_ACK_OneShotFeedbackNDI_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedbackCBG_r16 pdsch_HARQ_ACK_OneShotFeedbackCBG_r16_,
      PhysicalCellGroupConfig_downlinkAssignmentIndexDCI_0_2_r16 downlinkAssignmentIndexDCI_0_2_r16_,
      PhysicalCellGroupConfig_downlinkAssignmentIndexDCI_1_2_r16 downlinkAssignmentIndexDCI_1_2_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_CodebookList_r16 pdsch_HARQ_ACK_CodebookList_r16_,
      PhysicalCellGroupConfig_ackNackFeedbackMode_r16 ackNackFeedbackMode_r16_,
      PhysicalCellGroupConfig_pdcch_BlindDetectionCA_CombIndicator_r16 pdcch_BlindDetectionCA_CombIndicator_r16_,
      PhysicalCellGroupConfig_pdcch_BlindDetection2_r16 pdcch_BlindDetection2_r16_,
      PhysicalCellGroupConfig_pdcch_BlindDetection3_r16 pdcch_BlindDetection3_r16_,
      PhysicalCellGroupConfig_bdFactorR_r16 bdFactorR_r16_
   ) {
      super();
      harq_ACK_SpatialBundlingPUCCH = harq_ACK_SpatialBundlingPUCCH_;
      harq_ACK_SpatialBundlingPUSCH = harq_ACK_SpatialBundlingPUSCH_;
      p_NR_FR1 = p_NR_FR1_;
      pdsch_HARQ_ACK_Codebook = pdsch_HARQ_ACK_Codebook_;
      tpc_SRS_RNTI = tpc_SRS_RNTI_;
      tpc_PUCCH_RNTI = tpc_PUCCH_RNTI_;
      tpc_PUSCH_RNTI = tpc_PUSCH_RNTI_;
      sp_CSI_RNTI = sp_CSI_RNTI_;
      cs_RNTI = cs_RNTI_;
      mcs_C_RNTI = mcs_C_RNTI_;
      p_UE_FR1 = p_UE_FR1_;
      xScale = xScale_;
      pdcch_BlindDetection = pdcch_BlindDetection_;
      dcp_Config_r16 = dcp_Config_r16_;
      harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16 = harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16_;
      harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16 = harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16_;
      pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16 = pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16_;
      p_NR_FR2_r16 = p_NR_FR2_r16_;
      p_UE_FR2_r16 = p_UE_FR2_r16_;
      nrdc_PCmode_FR1_r16 = nrdc_PCmode_FR1_r16_;
      nrdc_PCmode_FR2_r16 = nrdc_PCmode_FR2_r16_;
      pdsch_HARQ_ACK_Codebook_r16 = pdsch_HARQ_ACK_Codebook_r16_;
      nfi_TotalDAI_Included_r16 = nfi_TotalDAI_Included_r16_;
      ul_TotalDAI_Included_r16 = ul_TotalDAI_Included_r16_;
      pdsch_HARQ_ACK_OneShotFeedback_r16 = pdsch_HARQ_ACK_OneShotFeedback_r16_;
      pdsch_HARQ_ACK_OneShotFeedbackNDI_r16 = pdsch_HARQ_ACK_OneShotFeedbackNDI_r16_;
      pdsch_HARQ_ACK_OneShotFeedbackCBG_r16 = pdsch_HARQ_ACK_OneShotFeedbackCBG_r16_;
      downlinkAssignmentIndexDCI_0_2_r16 = downlinkAssignmentIndexDCI_0_2_r16_;
      downlinkAssignmentIndexDCI_1_2_r16 = downlinkAssignmentIndexDCI_1_2_r16_;
      pdsch_HARQ_ACK_CodebookList_r16 = pdsch_HARQ_ACK_CodebookList_r16_;
      ackNackFeedbackMode_r16 = ackNackFeedbackMode_r16_;
      pdcch_BlindDetectionCA_CombIndicator_r16 = pdcch_BlindDetectionCA_CombIndicator_r16_;
      pdcch_BlindDetection2_r16 = pdcch_BlindDetection2_r16_;
      pdcch_BlindDetection3_r16 = pdcch_BlindDetection3_r16_;
      bdFactorR_r16 = bdFactorR_r16_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public PhysicalCellGroupConfig (
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook pdsch_HARQ_ACK_Codebook_
   ) {
      super();
      pdsch_HARQ_ACK_Codebook = pdsch_HARQ_ACK_Codebook_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PhysicalCellGroupConfig (PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH harq_ACK_SpatialBundlingPUCCH_,
      PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH harq_ACK_SpatialBundlingPUSCH_,
      long p_NR_FR1_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook pdsch_HARQ_ACK_Codebook_,
      long tpc_SRS_RNTI_,
      long tpc_PUCCH_RNTI_,
      long tpc_PUSCH_RNTI_,
      long sp_CSI_RNTI_,
      PhysicalCellGroupConfig_cs_RNTI cs_RNTI_,
      long mcs_C_RNTI_,
      long p_UE_FR1_,
      PhysicalCellGroupConfig_xScale xScale_,
      PhysicalCellGroupConfig_pdcch_BlindDetection pdcch_BlindDetection_,
      PhysicalCellGroupConfig_dcp_Config_r16 dcp_Config_r16_,
      PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16 harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16_,
      PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16 harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16 pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16_,
      long p_NR_FR2_r16_,
      long p_UE_FR2_r16_,
      PhysicalCellGroupConfig_nrdc_PCmode_FR1_r16 nrdc_PCmode_FR1_r16_,
      PhysicalCellGroupConfig_nrdc_PCmode_FR2_r16 nrdc_PCmode_FR2_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook_r16 pdsch_HARQ_ACK_Codebook_r16_,
      PhysicalCellGroupConfig_nfi_TotalDAI_Included_r16 nfi_TotalDAI_Included_r16_,
      PhysicalCellGroupConfig_ul_TotalDAI_Included_r16 ul_TotalDAI_Included_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedback_r16 pdsch_HARQ_ACK_OneShotFeedback_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedbackNDI_r16 pdsch_HARQ_ACK_OneShotFeedbackNDI_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedbackCBG_r16 pdsch_HARQ_ACK_OneShotFeedbackCBG_r16_,
      PhysicalCellGroupConfig_downlinkAssignmentIndexDCI_0_2_r16 downlinkAssignmentIndexDCI_0_2_r16_,
      PhysicalCellGroupConfig_downlinkAssignmentIndexDCI_1_2_r16 downlinkAssignmentIndexDCI_1_2_r16_,
      PhysicalCellGroupConfig_pdsch_HARQ_ACK_CodebookList_r16 pdsch_HARQ_ACK_CodebookList_r16_,
      PhysicalCellGroupConfig_ackNackFeedbackMode_r16 ackNackFeedbackMode_r16_,
      PhysicalCellGroupConfig_pdcch_BlindDetectionCA_CombIndicator_r16 pdcch_BlindDetectionCA_CombIndicator_r16_,
      PhysicalCellGroupConfig_pdcch_BlindDetection2_r16 pdcch_BlindDetection2_r16_,
      PhysicalCellGroupConfig_pdcch_BlindDetection3_r16 pdcch_BlindDetection3_r16_,
      PhysicalCellGroupConfig_bdFactorR_r16 bdFactorR_r16_
   ) {
      super();
      harq_ACK_SpatialBundlingPUCCH = harq_ACK_SpatialBundlingPUCCH_;
      harq_ACK_SpatialBundlingPUSCH = harq_ACK_SpatialBundlingPUSCH_;
      p_NR_FR1 = new P_Max (p_NR_FR1_);
      pdsch_HARQ_ACK_Codebook = pdsch_HARQ_ACK_Codebook_;
      tpc_SRS_RNTI = new RNTI_Value (tpc_SRS_RNTI_);
      tpc_PUCCH_RNTI = new RNTI_Value (tpc_PUCCH_RNTI_);
      tpc_PUSCH_RNTI = new RNTI_Value (tpc_PUSCH_RNTI_);
      sp_CSI_RNTI = new RNTI_Value (sp_CSI_RNTI_);
      cs_RNTI = cs_RNTI_;
      mcs_C_RNTI = new RNTI_Value (mcs_C_RNTI_);
      p_UE_FR1 = new P_Max (p_UE_FR1_);
      xScale = xScale_;
      pdcch_BlindDetection = pdcch_BlindDetection_;
      dcp_Config_r16 = dcp_Config_r16_;
      harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16 = harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16_;
      harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16 = harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16_;
      pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16 = pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16_;
      p_NR_FR2_r16 = new P_Max (p_NR_FR2_r16_);
      p_UE_FR2_r16 = new P_Max (p_UE_FR2_r16_);
      nrdc_PCmode_FR1_r16 = nrdc_PCmode_FR1_r16_;
      nrdc_PCmode_FR2_r16 = nrdc_PCmode_FR2_r16_;
      pdsch_HARQ_ACK_Codebook_r16 = pdsch_HARQ_ACK_Codebook_r16_;
      nfi_TotalDAI_Included_r16 = nfi_TotalDAI_Included_r16_;
      ul_TotalDAI_Included_r16 = ul_TotalDAI_Included_r16_;
      pdsch_HARQ_ACK_OneShotFeedback_r16 = pdsch_HARQ_ACK_OneShotFeedback_r16_;
      pdsch_HARQ_ACK_OneShotFeedbackNDI_r16 = pdsch_HARQ_ACK_OneShotFeedbackNDI_r16_;
      pdsch_HARQ_ACK_OneShotFeedbackCBG_r16 = pdsch_HARQ_ACK_OneShotFeedbackCBG_r16_;
      downlinkAssignmentIndexDCI_0_2_r16 = downlinkAssignmentIndexDCI_0_2_r16_;
      downlinkAssignmentIndexDCI_1_2_r16 = downlinkAssignmentIndexDCI_1_2_r16_;
      pdsch_HARQ_ACK_CodebookList_r16 = pdsch_HARQ_ACK_CodebookList_r16_;
      ackNackFeedbackMode_r16 = ackNackFeedbackMode_r16_;
      pdcch_BlindDetectionCA_CombIndicator_r16 = pdcch_BlindDetectionCA_CombIndicator_r16_;
      pdcch_BlindDetection2_r16 = pdcch_BlindDetection2_r16_;
      pdcch_BlindDetection3_r16 = pdcch_BlindDetection3_r16_;
      bdFactorR_r16 = bdFactorR_r16_;
   }

   public void init () {
      harq_ACK_SpatialBundlingPUCCH = null;
      harq_ACK_SpatialBundlingPUSCH = null;
      p_NR_FR1 = null;
      pdsch_HARQ_ACK_Codebook = null;
      tpc_SRS_RNTI = null;
      tpc_PUCCH_RNTI = null;
      tpc_PUSCH_RNTI = null;
      sp_CSI_RNTI = null;
      cs_RNTI = null;
      mcs_C_RNTI = null;
      p_UE_FR1 = null;
      xScale = null;
      pdcch_BlindDetection = null;
      dcp_Config_r16 = null;
      harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16 = null;
      harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16 = null;
      pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16 = null;
      p_NR_FR2_r16 = null;
      p_UE_FR2_r16 = null;
      nrdc_PCmode_FR1_r16 = null;
      nrdc_PCmode_FR2_r16 = null;
      pdsch_HARQ_ACK_Codebook_r16 = null;
      nfi_TotalDAI_Included_r16 = null;
      ul_TotalDAI_Included_r16 = null;
      pdsch_HARQ_ACK_OneShotFeedback_r16 = null;
      pdsch_HARQ_ACK_OneShotFeedbackNDI_r16 = null;
      pdsch_HARQ_ACK_OneShotFeedbackCBG_r16 = null;
      downlinkAssignmentIndexDCI_0_2_r16 = null;
      downlinkAssignmentIndexDCI_1_2_r16 = null;
      pdsch_HARQ_ACK_CodebookList_r16 = null;
      ackNackFeedbackMode_r16 = null;
      pdcch_BlindDetectionCA_CombIndicator_r16 = null;
      pdcch_BlindDetection2_r16 = null;
      pdcch_BlindDetection3_r16 = null;
      bdFactorR_r16 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 36; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return harq_ACK_SpatialBundlingPUCCH;
         case 1: return harq_ACK_SpatialBundlingPUSCH;
         case 2: return p_NR_FR1;
         case 3: return pdsch_HARQ_ACK_Codebook;
         case 4: return tpc_SRS_RNTI;
         case 5: return tpc_PUCCH_RNTI;
         case 6: return tpc_PUSCH_RNTI;
         case 7: return sp_CSI_RNTI;
         case 8: return cs_RNTI;
         case 9: return mcs_C_RNTI;
         case 10: return p_UE_FR1;
         case 11: return xScale;
         case 12: return pdcch_BlindDetection;
         case 13: return dcp_Config_r16;
         case 14: return harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16;
         case 15: return harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16;
         case 16: return pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16;
         case 17: return p_NR_FR2_r16;
         case 18: return p_UE_FR2_r16;
         case 19: return nrdc_PCmode_FR1_r16;
         case 20: return nrdc_PCmode_FR2_r16;
         case 21: return pdsch_HARQ_ACK_Codebook_r16;
         case 22: return nfi_TotalDAI_Included_r16;
         case 23: return ul_TotalDAI_Included_r16;
         case 24: return pdsch_HARQ_ACK_OneShotFeedback_r16;
         case 25: return pdsch_HARQ_ACK_OneShotFeedbackNDI_r16;
         case 26: return pdsch_HARQ_ACK_OneShotFeedbackCBG_r16;
         case 27: return downlinkAssignmentIndexDCI_0_2_r16;
         case 28: return downlinkAssignmentIndexDCI_1_2_r16;
         case 29: return pdsch_HARQ_ACK_CodebookList_r16;
         case 30: return ackNackFeedbackMode_r16;
         case 31: return pdcch_BlindDetectionCA_CombIndicator_r16;
         case 32: return pdcch_BlindDetection2_r16;
         case 33: return pdcch_BlindDetection3_r16;
         case 34: return bdFactorR_r16;
         case 35: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "harq-ACK-SpatialBundlingPUCCH";
         case 1: return "harq-ACK-SpatialBundlingPUSCH";
         case 2: return "p-NR-FR1";
         case 3: return "pdsch-HARQ-ACK-Codebook";
         case 4: return "tpc-SRS-RNTI";
         case 5: return "tpc-PUCCH-RNTI";
         case 6: return "tpc-PUSCH-RNTI";
         case 7: return "sp-CSI-RNTI";
         case 8: return "cs-RNTI";
         case 9: return "mcs-C-RNTI";
         case 10: return "p-UE-FR1";
         case 11: return "xScale";
         case 12: return "pdcch-BlindDetection";
         case 13: return "dcp-Config-r16";
         case 14: return "harq-ACK-SpatialBundlingPUCCH-secondaryPUCCHgroup-r16";
         case 15: return "harq-ACK-SpatialBundlingPUSCH-secondaryPUCCHgroup-r16";
         case 16: return "pdsch-HARQ-ACK-Codebook-secondaryPUCCHgroup-r16";
         case 17: return "p-NR-FR2-r16";
         case 18: return "p-UE-FR2-r16";
         case 19: return "nrdc-PCmode-FR1-r16";
         case 20: return "nrdc-PCmode-FR2-r16";
         case 21: return "pdsch-HARQ-ACK-Codebook-r16";
         case 22: return "nfi-TotalDAI-Included-r16";
         case 23: return "ul-TotalDAI-Included-r16";
         case 24: return "pdsch-HARQ-ACK-OneShotFeedback-r16";
         case 25: return "pdsch-HARQ-ACK-OneShotFeedbackNDI-r16";
         case 26: return "pdsch-HARQ-ACK-OneShotFeedbackCBG-r16";
         case 27: return "downlinkAssignmentIndexDCI-0-2-r16";
         case 28: return "downlinkAssignmentIndexDCI-1-2-r16";
         case 29: return "pdsch-HARQ-ACK-CodebookList-r16";
         case 30: return "ackNackFeedbackMode-r16";
         case 31: return "pdcch-BlindDetectionCA-CombIndicator-r16";
         case 32: return "pdcch-BlindDetection2-r16";
         case 33: return "pdcch-BlindDetection3-r16";
         case 34: return "bdFactorR-r16";
         case 35: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean harq_ACK_SpatialBundlingPUCCHPresent = buffer.decodeBit ("harq_ACK_SpatialBundlingPUCCHPresent");
      boolean harq_ACK_SpatialBundlingPUSCHPresent = buffer.decodeBit ("harq_ACK_SpatialBundlingPUSCHPresent");
      boolean p_NR_FR1Present = buffer.decodeBit ("p_NR_FR1Present");
      boolean tpc_SRS_RNTIPresent = buffer.decodeBit ("tpc_SRS_RNTIPresent");
      boolean tpc_PUCCH_RNTIPresent = buffer.decodeBit ("tpc_PUCCH_RNTIPresent");
      boolean tpc_PUSCH_RNTIPresent = buffer.decodeBit ("tpc_PUSCH_RNTIPresent");
      boolean sp_CSI_RNTIPresent = buffer.decodeBit ("sp_CSI_RNTIPresent");
      boolean cs_RNTIPresent = buffer.decodeBit ("cs_RNTIPresent");

      // decode harq_ACK_SpatialBundlingPUCCH

      if (harq_ACK_SpatialBundlingPUCCHPresent) {
         buffer.getContext().eventDispatcher.startElement("harq_ACK_SpatialBundlingPUCCH", -1);

         int tval = PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH.decodeEnumValue (buffer);
         harq_ACK_SpatialBundlingPUCCH = PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("harq_ACK_SpatialBundlingPUCCH", -1);
      }
      else {
         harq_ACK_SpatialBundlingPUCCH = null;
      }

      // decode harq_ACK_SpatialBundlingPUSCH

      if (harq_ACK_SpatialBundlingPUSCHPresent) {
         buffer.getContext().eventDispatcher.startElement("harq_ACK_SpatialBundlingPUSCH", -1);

         int tval = PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH.decodeEnumValue (buffer);
         harq_ACK_SpatialBundlingPUSCH = PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("harq_ACK_SpatialBundlingPUSCH", -1);
      }
      else {
         harq_ACK_SpatialBundlingPUSCH = null;
      }

      // decode p_NR_FR1

      if (p_NR_FR1Present) {
         buffer.getContext().eventDispatcher.startElement("p_NR_FR1", -1);

         p_NR_FR1 = new P_Max();
         p_NR_FR1.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("p_NR_FR1", -1);
      }
      else {
         p_NR_FR1 = null;
      }

      // decode pdsch_HARQ_ACK_Codebook

      buffer.getContext().eventDispatcher.startElement("pdsch_HARQ_ACK_Codebook", -1);

      {
         int tval = PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook.decodeEnumValue (buffer);
         pdsch_HARQ_ACK_Codebook = PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("pdsch_HARQ_ACK_Codebook", -1);

      // decode tpc_SRS_RNTI

      if (tpc_SRS_RNTIPresent) {
         buffer.getContext().eventDispatcher.startElement("tpc_SRS_RNTI", -1);

         tpc_SRS_RNTI = new RNTI_Value();
         tpc_SRS_RNTI.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tpc_SRS_RNTI", -1);
      }
      else {
         tpc_SRS_RNTI = null;
      }

      // decode tpc_PUCCH_RNTI

      if (tpc_PUCCH_RNTIPresent) {
         buffer.getContext().eventDispatcher.startElement("tpc_PUCCH_RNTI", -1);

         tpc_PUCCH_RNTI = new RNTI_Value();
         tpc_PUCCH_RNTI.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tpc_PUCCH_RNTI", -1);
      }
      else {
         tpc_PUCCH_RNTI = null;
      }

      // decode tpc_PUSCH_RNTI

      if (tpc_PUSCH_RNTIPresent) {
         buffer.getContext().eventDispatcher.startElement("tpc_PUSCH_RNTI", -1);

         tpc_PUSCH_RNTI = new RNTI_Value();
         tpc_PUSCH_RNTI.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tpc_PUSCH_RNTI", -1);
      }
      else {
         tpc_PUSCH_RNTI = null;
      }

      // decode sp_CSI_RNTI

      if (sp_CSI_RNTIPresent) {
         buffer.getContext().eventDispatcher.startElement("sp_CSI_RNTI", -1);

         sp_CSI_RNTI = new RNTI_Value();
         sp_CSI_RNTI.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sp_CSI_RNTI", -1);
      }
      else {
         sp_CSI_RNTI = null;
      }

      // decode cs_RNTI

      if (cs_RNTIPresent) {
         buffer.getContext().eventDispatcher.startElement("cs_RNTI", -1);

         cs_RNTI = new PhysicalCellGroupConfig_cs_RNTI();
         cs_RNTI.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cs_RNTI", -1);
      }
      else {
         cs_RNTI = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV3ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV4ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV5ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean mcs_C_RNTIPresent = buffer.decodeBit ("mcs_C_RNTIPresent");

            boolean p_UE_FR1Present = buffer.decodeBit ("p_UE_FR1Present");

            // decode mcs_C_RNTI

            if (mcs_C_RNTIPresent) {
               buffer.getContext().eventDispatcher.startElement("mcs_C_RNTI", -1);

               mcs_C_RNTI = new RNTI_Value();
               mcs_C_RNTI.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("mcs_C_RNTI", -1);
            }
            else {
               mcs_C_RNTI = null;
            }

            // decode p_UE_FR1

            if (p_UE_FR1Present) {
               buffer.getContext().eventDispatcher.startElement("p_UE_FR1", -1);

               p_UE_FR1 = new P_Max();
               p_UE_FR1.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("p_UE_FR1", -1);
            }
            else {
               p_UE_FR1 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV3ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean xScalePresent = buffer.decodeBit ("xScalePresent");

            // decode xScale

            if (xScalePresent) {
               buffer.getContext().eventDispatcher.startElement("xScale", -1);

               int tval = PhysicalCellGroupConfig_xScale.decodeEnumValue (buffer);
               xScale = PhysicalCellGroupConfig_xScale.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("xScale", -1);
            }
            else {
               xScale = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV4ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean pdcch_BlindDetectionPresent = buffer.decodeBit ("pdcch_BlindDetectionPresent");

            // decode pdcch_BlindDetection

            if (pdcch_BlindDetectionPresent) {
               buffer.getContext().eventDispatcher.startElement("pdcch_BlindDetection", -1);

               pdcch_BlindDetection = new PhysicalCellGroupConfig_pdcch_BlindDetection();
               pdcch_BlindDetection.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("pdcch_BlindDetection", -1);
            }
            else {
               pdcch_BlindDetection = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV5ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean dcp_Config_r16Present = buffer.decodeBit ("dcp_Config_r16Present");

            boolean harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16Present = buffer.decodeBit ("harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16Present");

            boolean harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16Present = buffer.decodeBit ("harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16Present");

            boolean pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16Present = buffer.decodeBit ("pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16Present");

            boolean p_NR_FR2_r16Present = buffer.decodeBit ("p_NR_FR2_r16Present");

            boolean p_UE_FR2_r16Present = buffer.decodeBit ("p_UE_FR2_r16Present");

            boolean nrdc_PCmode_FR1_r16Present = buffer.decodeBit ("nrdc_PCmode_FR1_r16Present");

            boolean nrdc_PCmode_FR2_r16Present = buffer.decodeBit ("nrdc_PCmode_FR2_r16Present");

            boolean pdsch_HARQ_ACK_Codebook_r16Present = buffer.decodeBit ("pdsch_HARQ_ACK_Codebook_r16Present");

            boolean nfi_TotalDAI_Included_r16Present = buffer.decodeBit ("nfi_TotalDAI_Included_r16Present");

            boolean ul_TotalDAI_Included_r16Present = buffer.decodeBit ("ul_TotalDAI_Included_r16Present");

            boolean pdsch_HARQ_ACK_OneShotFeedback_r16Present = buffer.decodeBit ("pdsch_HARQ_ACK_OneShotFeedback_r16Present");

            boolean pdsch_HARQ_ACK_OneShotFeedbackNDI_r16Present = buffer.decodeBit ("pdsch_HARQ_ACK_OneShotFeedbackNDI_r16Present");

            boolean pdsch_HARQ_ACK_OneShotFeedbackCBG_r16Present = buffer.decodeBit ("pdsch_HARQ_ACK_OneShotFeedbackCBG_r16Present");

            boolean downlinkAssignmentIndexDCI_0_2_r16Present = buffer.decodeBit ("downlinkAssignmentIndexDCI_0_2_r16Present");

            boolean downlinkAssignmentIndexDCI_1_2_r16Present = buffer.decodeBit ("downlinkAssignmentIndexDCI_1_2_r16Present");

            boolean pdsch_HARQ_ACK_CodebookList_r16Present = buffer.decodeBit ("pdsch_HARQ_ACK_CodebookList_r16Present");

            boolean ackNackFeedbackMode_r16Present = buffer.decodeBit ("ackNackFeedbackMode_r16Present");

            boolean pdcch_BlindDetectionCA_CombIndicator_r16Present = buffer.decodeBit ("pdcch_BlindDetectionCA_CombIndicator_r16Present");

            boolean pdcch_BlindDetection2_r16Present = buffer.decodeBit ("pdcch_BlindDetection2_r16Present");

            boolean pdcch_BlindDetection3_r16Present = buffer.decodeBit ("pdcch_BlindDetection3_r16Present");

            boolean bdFactorR_r16Present = buffer.decodeBit ("bdFactorR_r16Present");

            // decode dcp_Config_r16

            if (dcp_Config_r16Present) {
               buffer.getContext().eventDispatcher.startElement("dcp_Config_r16", -1);

               dcp_Config_r16 = new PhysicalCellGroupConfig_dcp_Config_r16();
               dcp_Config_r16.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("dcp_Config_r16", -1);
            }
            else {
               dcp_Config_r16 = null;
            }

            // decode harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16

            if (harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16Present) {
               buffer.getContext().eventDispatcher.startElement("harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16", -1);

               int tval = PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16.decodeEnumValue (buffer);
               harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16 = PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16", -1);
            }
            else {
               harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16 = null;
            }

            // decode harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16

            if (harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16Present) {
               buffer.getContext().eventDispatcher.startElement("harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16", -1);

               int tval = PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16.decodeEnumValue (buffer);
               harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16 = PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16", -1);
            }
            else {
               harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16 = null;
            }

            // decode pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16

            if (pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16Present) {
               buffer.getContext().eventDispatcher.startElement("pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16", -1);

               int tval = PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16.decodeEnumValue (buffer);
               pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16 = PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16", -1);
            }
            else {
               pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16 = null;
            }

            // decode p_NR_FR2_r16

            if (p_NR_FR2_r16Present) {
               buffer.getContext().eventDispatcher.startElement("p_NR_FR2_r16", -1);

               p_NR_FR2_r16 = new P_Max();
               p_NR_FR2_r16.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("p_NR_FR2_r16", -1);
            }
            else {
               p_NR_FR2_r16 = null;
            }

            // decode p_UE_FR2_r16

            if (p_UE_FR2_r16Present) {
               buffer.getContext().eventDispatcher.startElement("p_UE_FR2_r16", -1);

               p_UE_FR2_r16 = new P_Max();
               p_UE_FR2_r16.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("p_UE_FR2_r16", -1);
            }
            else {
               p_UE_FR2_r16 = null;
            }

            // decode nrdc_PCmode_FR1_r16

            if (nrdc_PCmode_FR1_r16Present) {
               buffer.getContext().eventDispatcher.startElement("nrdc_PCmode_FR1_r16", -1);

               int tval = PhysicalCellGroupConfig_nrdc_PCmode_FR1_r16.decodeEnumValue (buffer);
               nrdc_PCmode_FR1_r16 = PhysicalCellGroupConfig_nrdc_PCmode_FR1_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("nrdc_PCmode_FR1_r16", -1);
            }
            else {
               nrdc_PCmode_FR1_r16 = null;
            }

            // decode nrdc_PCmode_FR2_r16

            if (nrdc_PCmode_FR2_r16Present) {
               buffer.getContext().eventDispatcher.startElement("nrdc_PCmode_FR2_r16", -1);

               int tval = PhysicalCellGroupConfig_nrdc_PCmode_FR2_r16.decodeEnumValue (buffer);
               nrdc_PCmode_FR2_r16 = PhysicalCellGroupConfig_nrdc_PCmode_FR2_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("nrdc_PCmode_FR2_r16", -1);
            }
            else {
               nrdc_PCmode_FR2_r16 = null;
            }

            // decode pdsch_HARQ_ACK_Codebook_r16

            if (pdsch_HARQ_ACK_Codebook_r16Present) {
               buffer.getContext().eventDispatcher.startElement("pdsch_HARQ_ACK_Codebook_r16", -1);

               int tval = PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook_r16.decodeEnumValue (buffer);
               pdsch_HARQ_ACK_Codebook_r16 = PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("pdsch_HARQ_ACK_Codebook_r16", -1);
            }
            else {
               pdsch_HARQ_ACK_Codebook_r16 = null;
            }

            // decode nfi_TotalDAI_Included_r16

            if (nfi_TotalDAI_Included_r16Present) {
               buffer.getContext().eventDispatcher.startElement("nfi_TotalDAI_Included_r16", -1);

               int tval = PhysicalCellGroupConfig_nfi_TotalDAI_Included_r16.decodeEnumValue (buffer);
               nfi_TotalDAI_Included_r16 = PhysicalCellGroupConfig_nfi_TotalDAI_Included_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("nfi_TotalDAI_Included_r16", -1);
            }
            else {
               nfi_TotalDAI_Included_r16 = null;
            }

            // decode ul_TotalDAI_Included_r16

            if (ul_TotalDAI_Included_r16Present) {
               buffer.getContext().eventDispatcher.startElement("ul_TotalDAI_Included_r16", -1);

               int tval = PhysicalCellGroupConfig_ul_TotalDAI_Included_r16.decodeEnumValue (buffer);
               ul_TotalDAI_Included_r16 = PhysicalCellGroupConfig_ul_TotalDAI_Included_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("ul_TotalDAI_Included_r16", -1);
            }
            else {
               ul_TotalDAI_Included_r16 = null;
            }

            // decode pdsch_HARQ_ACK_OneShotFeedback_r16

            if (pdsch_HARQ_ACK_OneShotFeedback_r16Present) {
               buffer.getContext().eventDispatcher.startElement("pdsch_HARQ_ACK_OneShotFeedback_r16", -1);

               int tval = PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedback_r16.decodeEnumValue (buffer);
               pdsch_HARQ_ACK_OneShotFeedback_r16 = PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedback_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("pdsch_HARQ_ACK_OneShotFeedback_r16", -1);
            }
            else {
               pdsch_HARQ_ACK_OneShotFeedback_r16 = null;
            }

            // decode pdsch_HARQ_ACK_OneShotFeedbackNDI_r16

            if (pdsch_HARQ_ACK_OneShotFeedbackNDI_r16Present) {
               buffer.getContext().eventDispatcher.startElement("pdsch_HARQ_ACK_OneShotFeedbackNDI_r16", -1);

               int tval = PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedbackNDI_r16.decodeEnumValue (buffer);
               pdsch_HARQ_ACK_OneShotFeedbackNDI_r16 = PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedbackNDI_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("pdsch_HARQ_ACK_OneShotFeedbackNDI_r16", -1);
            }
            else {
               pdsch_HARQ_ACK_OneShotFeedbackNDI_r16 = null;
            }

            // decode pdsch_HARQ_ACK_OneShotFeedbackCBG_r16

            if (pdsch_HARQ_ACK_OneShotFeedbackCBG_r16Present) {
               buffer.getContext().eventDispatcher.startElement("pdsch_HARQ_ACK_OneShotFeedbackCBG_r16", -1);

               int tval = PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedbackCBG_r16.decodeEnumValue (buffer);
               pdsch_HARQ_ACK_OneShotFeedbackCBG_r16 = PhysicalCellGroupConfig_pdsch_HARQ_ACK_OneShotFeedbackCBG_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("pdsch_HARQ_ACK_OneShotFeedbackCBG_r16", -1);
            }
            else {
               pdsch_HARQ_ACK_OneShotFeedbackCBG_r16 = null;
            }

            // decode downlinkAssignmentIndexDCI_0_2_r16

            if (downlinkAssignmentIndexDCI_0_2_r16Present) {
               buffer.getContext().eventDispatcher.startElement("downlinkAssignmentIndexDCI_0_2_r16", -1);

               int tval = PhysicalCellGroupConfig_downlinkAssignmentIndexDCI_0_2_r16.decodeEnumValue (buffer);
               downlinkAssignmentIndexDCI_0_2_r16 = PhysicalCellGroupConfig_downlinkAssignmentIndexDCI_0_2_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("downlinkAssignmentIndexDCI_0_2_r16", -1);
            }
            else {
               downlinkAssignmentIndexDCI_0_2_r16 = null;
            }

            // decode downlinkAssignmentIndexDCI_1_2_r16

            if (downlinkAssignmentIndexDCI_1_2_r16Present) {
               buffer.getContext().eventDispatcher.startElement("downlinkAssignmentIndexDCI_1_2_r16", -1);

               int tval = PhysicalCellGroupConfig_downlinkAssignmentIndexDCI_1_2_r16.decodeEnumValue (buffer);
               downlinkAssignmentIndexDCI_1_2_r16 = PhysicalCellGroupConfig_downlinkAssignmentIndexDCI_1_2_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("downlinkAssignmentIndexDCI_1_2_r16", -1);
            }
            else {
               downlinkAssignmentIndexDCI_1_2_r16 = null;
            }

            // decode pdsch_HARQ_ACK_CodebookList_r16

            if (pdsch_HARQ_ACK_CodebookList_r16Present) {
               buffer.getContext().eventDispatcher.startElement("pdsch_HARQ_ACK_CodebookList_r16", -1);

               pdsch_HARQ_ACK_CodebookList_r16 = new PhysicalCellGroupConfig_pdsch_HARQ_ACK_CodebookList_r16();
               pdsch_HARQ_ACK_CodebookList_r16.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("pdsch_HARQ_ACK_CodebookList_r16", -1);
            }
            else {
               pdsch_HARQ_ACK_CodebookList_r16 = null;
            }

            // decode ackNackFeedbackMode_r16

            if (ackNackFeedbackMode_r16Present) {
               buffer.getContext().eventDispatcher.startElement("ackNackFeedbackMode_r16", -1);

               int tval = PhysicalCellGroupConfig_ackNackFeedbackMode_r16.decodeEnumValue (buffer);
               ackNackFeedbackMode_r16 = PhysicalCellGroupConfig_ackNackFeedbackMode_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("ackNackFeedbackMode_r16", -1);
            }
            else {
               ackNackFeedbackMode_r16 = null;
            }

            // decode pdcch_BlindDetectionCA_CombIndicator_r16

            if (pdcch_BlindDetectionCA_CombIndicator_r16Present) {
               buffer.getContext().eventDispatcher.startElement("pdcch_BlindDetectionCA_CombIndicator_r16", -1);

               pdcch_BlindDetectionCA_CombIndicator_r16 = new PhysicalCellGroupConfig_pdcch_BlindDetectionCA_CombIndicator_r16();
               pdcch_BlindDetectionCA_CombIndicator_r16.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("pdcch_BlindDetectionCA_CombIndicator_r16", -1);
            }
            else {
               pdcch_BlindDetectionCA_CombIndicator_r16 = null;
            }

            // decode pdcch_BlindDetection2_r16

            if (pdcch_BlindDetection2_r16Present) {
               buffer.getContext().eventDispatcher.startElement("pdcch_BlindDetection2_r16", -1);

               pdcch_BlindDetection2_r16 = new PhysicalCellGroupConfig_pdcch_BlindDetection2_r16();
               pdcch_BlindDetection2_r16.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("pdcch_BlindDetection2_r16", -1);
            }
            else {
               pdcch_BlindDetection2_r16 = null;
            }

            // decode pdcch_BlindDetection3_r16

            if (pdcch_BlindDetection3_r16Present) {
               buffer.getContext().eventDispatcher.startElement("pdcch_BlindDetection3_r16", -1);

               pdcch_BlindDetection3_r16 = new PhysicalCellGroupConfig_pdcch_BlindDetection3_r16();
               pdcch_BlindDetection3_r16.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("pdcch_BlindDetection3_r16", -1);
            }
            else {
               pdcch_BlindDetection3_r16 = null;
            }

            // decode bdFactorR_r16

            if (bdFactorR_r16Present) {
               buffer.getContext().eventDispatcher.startElement("bdFactorR_r16", -1);

               int tval = PhysicalCellGroupConfig_bdFactorR_r16.decodeEnumValue (buffer);
               bdFactorR_r16 = PhysicalCellGroupConfig_bdFactorR_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("bdFactorR_r16", -1);
            }
            else {
               bdFactorR_r16 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (harq_ACK_SpatialBundlingPUCCH != null) harq_ACK_SpatialBundlingPUCCH.print (_sb, "harq_ACK_SpatialBundlingPUCCH", _level+1);
      if (harq_ACK_SpatialBundlingPUSCH != null) harq_ACK_SpatialBundlingPUSCH.print (_sb, "harq_ACK_SpatialBundlingPUSCH", _level+1);
      if (p_NR_FR1 != null) p_NR_FR1.print (_sb, "p_NR_FR1", _level+1);
      if (pdsch_HARQ_ACK_Codebook != null) pdsch_HARQ_ACK_Codebook.print (_sb, "pdsch_HARQ_ACK_Codebook", _level+1);
      if (tpc_SRS_RNTI != null) tpc_SRS_RNTI.print (_sb, "tpc_SRS_RNTI", _level+1);
      if (tpc_PUCCH_RNTI != null) tpc_PUCCH_RNTI.print (_sb, "tpc_PUCCH_RNTI", _level+1);
      if (tpc_PUSCH_RNTI != null) tpc_PUSCH_RNTI.print (_sb, "tpc_PUSCH_RNTI", _level+1);
      if (sp_CSI_RNTI != null) sp_CSI_RNTI.print (_sb, "sp_CSI_RNTI", _level+1);
      if (cs_RNTI != null) cs_RNTI.print (_sb, "cs_RNTI", _level+1);
      if (mcs_C_RNTI != null) mcs_C_RNTI.print (_sb, "mcs_C_RNTI", _level+1);
      if (p_UE_FR1 != null) p_UE_FR1.print (_sb, "p_UE_FR1", _level+1);
      if (xScale != null) xScale.print (_sb, "xScale", _level+1);
      if (pdcch_BlindDetection != null) pdcch_BlindDetection.print (_sb, "pdcch_BlindDetection", _level+1);
      if (dcp_Config_r16 != null) dcp_Config_r16.print (_sb, "dcp_Config_r16", _level+1);
      if (harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16 != null) harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16.print (_sb, "harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16", _level+1);
      if (harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16 != null) harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16.print (_sb, "harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16", _level+1);
      if (pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16 != null) pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16.print (_sb, "pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16", _level+1);
      if (p_NR_FR2_r16 != null) p_NR_FR2_r16.print (_sb, "p_NR_FR2_r16", _level+1);
      if (p_UE_FR2_r16 != null) p_UE_FR2_r16.print (_sb, "p_UE_FR2_r16", _level+1);
      if (nrdc_PCmode_FR1_r16 != null) nrdc_PCmode_FR1_r16.print (_sb, "nrdc_PCmode_FR1_r16", _level+1);
      if (nrdc_PCmode_FR2_r16 != null) nrdc_PCmode_FR2_r16.print (_sb, "nrdc_PCmode_FR2_r16", _level+1);
      if (pdsch_HARQ_ACK_Codebook_r16 != null) pdsch_HARQ_ACK_Codebook_r16.print (_sb, "pdsch_HARQ_ACK_Codebook_r16", _level+1);
      if (nfi_TotalDAI_Included_r16 != null) nfi_TotalDAI_Included_r16.print (_sb, "nfi_TotalDAI_Included_r16", _level+1);
      if (ul_TotalDAI_Included_r16 != null) ul_TotalDAI_Included_r16.print (_sb, "ul_TotalDAI_Included_r16", _level+1);
      if (pdsch_HARQ_ACK_OneShotFeedback_r16 != null) pdsch_HARQ_ACK_OneShotFeedback_r16.print (_sb, "pdsch_HARQ_ACK_OneShotFeedback_r16", _level+1);
      if (pdsch_HARQ_ACK_OneShotFeedbackNDI_r16 != null) pdsch_HARQ_ACK_OneShotFeedbackNDI_r16.print (_sb, "pdsch_HARQ_ACK_OneShotFeedbackNDI_r16", _level+1);
      if (pdsch_HARQ_ACK_OneShotFeedbackCBG_r16 != null) pdsch_HARQ_ACK_OneShotFeedbackCBG_r16.print (_sb, "pdsch_HARQ_ACK_OneShotFeedbackCBG_r16", _level+1);
      if (downlinkAssignmentIndexDCI_0_2_r16 != null) downlinkAssignmentIndexDCI_0_2_r16.print (_sb, "downlinkAssignmentIndexDCI_0_2_r16", _level+1);
      if (downlinkAssignmentIndexDCI_1_2_r16 != null) downlinkAssignmentIndexDCI_1_2_r16.print (_sb, "downlinkAssignmentIndexDCI_1_2_r16", _level+1);
      if (pdsch_HARQ_ACK_CodebookList_r16 != null) pdsch_HARQ_ACK_CodebookList_r16.print (_sb, "pdsch_HARQ_ACK_CodebookList_r16", _level+1);
      if (ackNackFeedbackMode_r16 != null) ackNackFeedbackMode_r16.print (_sb, "ackNackFeedbackMode_r16", _level+1);
      if (pdcch_BlindDetectionCA_CombIndicator_r16 != null) pdcch_BlindDetectionCA_CombIndicator_r16.print (_sb, "pdcch_BlindDetectionCA_CombIndicator_r16", _level+1);
      if (pdcch_BlindDetection2_r16 != null) pdcch_BlindDetection2_r16.print (_sb, "pdcch_BlindDetection2_r16", _level+1);
      if (pdcch_BlindDetection3_r16 != null) pdcch_BlindDetection3_r16.print (_sb, "pdcch_BlindDetection3_r16", _level+1);
      if (bdFactorR_r16 != null) bdFactorR_r16.print (_sb, "bdFactorR_r16", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
