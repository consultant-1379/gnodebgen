/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CarrierFreqsInfoGERAN_commonInfo extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CellReselectionPriority cellReselectionPriority;  // optional
   public Asn1BitString ncc_Permitted;
   public Asn1Integer q_RxLevMin;
   public Asn1Integer p_MaxGERAN;  // optional
   public ReselectionThreshold threshX_High;
   public ReselectionThreshold threshX_Low;

   public CarrierFreqsInfoGERAN_commonInfo () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CarrierFreqsInfoGERAN_commonInfo (
      CellReselectionPriority cellReselectionPriority_,
      Asn1BitString ncc_Permitted_,
      Asn1Integer q_RxLevMin_,
      Asn1Integer p_MaxGERAN_,
      ReselectionThreshold threshX_High_,
      ReselectionThreshold threshX_Low_
   ) {
      super();
      cellReselectionPriority = cellReselectionPriority_;
      ncc_Permitted = ncc_Permitted_;
      q_RxLevMin = q_RxLevMin_;
      p_MaxGERAN = p_MaxGERAN_;
      threshX_High = threshX_High_;
      threshX_Low = threshX_Low_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public CarrierFreqsInfoGERAN_commonInfo (
      Asn1BitString ncc_Permitted_,
      Asn1Integer q_RxLevMin_,
      ReselectionThreshold threshX_High_,
      ReselectionThreshold threshX_Low_
   ) {
      super();
      ncc_Permitted = ncc_Permitted_;
      q_RxLevMin = q_RxLevMin_;
      threshX_High = threshX_High_;
      threshX_Low = threshX_Low_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CarrierFreqsInfoGERAN_commonInfo (long cellReselectionPriority_,
      Asn1BitString ncc_Permitted_,
      long q_RxLevMin_,
      long p_MaxGERAN_,
      long threshX_High_,
      long threshX_Low_
   ) {
      super();
      cellReselectionPriority = new CellReselectionPriority (cellReselectionPriority_);
      ncc_Permitted = ncc_Permitted_;
      q_RxLevMin = new Asn1Integer (q_RxLevMin_);
      p_MaxGERAN = new Asn1Integer (p_MaxGERAN_);
      threshX_High = new ReselectionThreshold (threshX_High_);
      threshX_Low = new ReselectionThreshold (threshX_Low_);
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public CarrierFreqsInfoGERAN_commonInfo (
      Asn1BitString ncc_Permitted_,
      long q_RxLevMin_,
      long threshX_High_,
      long threshX_Low_
   ) {
      super();
      ncc_Permitted = ncc_Permitted_;
      q_RxLevMin = new Asn1Integer (q_RxLevMin_);
      threshX_High = new ReselectionThreshold (threshX_High_);
      threshX_Low = new ReselectionThreshold (threshX_Low_);
   }

   public void init () {
      cellReselectionPriority = null;
      ncc_Permitted = null;
      q_RxLevMin = null;
      p_MaxGERAN = null;
      threshX_High = null;
      threshX_Low = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return cellReselectionPriority;
         case 1: return ncc_Permitted;
         case 2: return q_RxLevMin;
         case 3: return p_MaxGERAN;
         case 4: return threshX_High;
         case 5: return threshX_Low;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "cellReselectionPriority";
         case 1: return "ncc-Permitted";
         case 2: return "q-RxLevMin";
         case 3: return "p-MaxGERAN";
         case 4: return "threshX-High";
         case 5: return "threshX-Low";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean cellReselectionPriorityPresent = buffer.decodeBit ("cellReselectionPriorityPresent");
      boolean p_MaxGERANPresent = buffer.decodeBit ("p_MaxGERANPresent");

      // decode cellReselectionPriority

      if (cellReselectionPriorityPresent) {
         buffer.getContext().eventDispatcher.startElement("cellReselectionPriority", -1);

         cellReselectionPriority = new CellReselectionPriority();
         cellReselectionPriority.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cellReselectionPriority", -1);
      }
      else {
         cellReselectionPriority = null;
      }

      // decode ncc_Permitted

      buffer.getContext().eventDispatcher.startElement("ncc_Permitted", -1);

      ncc_Permitted = new Asn1BitString();
      ncc_Permitted.decode (buffer, 8, 8);

      buffer.invokeCharacters(ncc_Permitted.toString());
      buffer.getContext().eventDispatcher.endElement("ncc_Permitted", -1);

      // decode q_RxLevMin

      buffer.getContext().eventDispatcher.startElement("q_RxLevMin", -1);

      q_RxLevMin = new Asn1Integer();
      q_RxLevMin.decode (buffer, 0, 45);

      buffer.invokeCharacters(q_RxLevMin.toString());
      buffer.getContext().eventDispatcher.endElement("q_RxLevMin", -1);

      // decode p_MaxGERAN

      if (p_MaxGERANPresent) {
         buffer.getContext().eventDispatcher.startElement("p_MaxGERAN", -1);

         p_MaxGERAN = new Asn1Integer();
         p_MaxGERAN.decode (buffer, 0, 39);

         buffer.invokeCharacters(p_MaxGERAN.toString());
         buffer.getContext().eventDispatcher.endElement("p_MaxGERAN", -1);
      }
      else {
         p_MaxGERAN = null;
      }

      // decode threshX_High

      buffer.getContext().eventDispatcher.startElement("threshX_High", -1);

      threshX_High = new ReselectionThreshold();
      threshX_High.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("threshX_High", -1);

      // decode threshX_Low

      buffer.getContext().eventDispatcher.startElement("threshX_Low", -1);

      threshX_Low = new ReselectionThreshold();
      threshX_Low.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("threshX_Low", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (cellReselectionPriority != null) cellReselectionPriority.print (_sb, "cellReselectionPriority", _level+1);
      if (ncc_Permitted != null) ncc_Permitted.print (_sb, "ncc_Permitted", _level+1);
      if (q_RxLevMin != null) q_RxLevMin.print (_sb, "q_RxLevMin", _level+1);
      if (p_MaxGERAN != null) p_MaxGERAN.print (_sb, "p_MaxGERAN", _level+1);
      if (threshX_High != null) threshX_High.print (_sb, "threshX_High", _level+1);
      if (threshX_Low != null) threshX_Low.print (_sb, "threshX_Low", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
