/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class ServingCellConfigCommonSIB_ssb_PositionsInBurst extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1BitString inOneGroup;
   public Asn1BitString groupPresence;  // optional

   public ServingCellConfigCommonSIB_ssb_PositionsInBurst () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public ServingCellConfigCommonSIB_ssb_PositionsInBurst (
      Asn1BitString inOneGroup_,
      Asn1BitString groupPresence_
   ) {
      super();
      inOneGroup = inOneGroup_;
      groupPresence = groupPresence_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public ServingCellConfigCommonSIB_ssb_PositionsInBurst (
      Asn1BitString inOneGroup_
   ) {
      super();
      inOneGroup = inOneGroup_;
   }

   public void init () {
      inOneGroup = null;
      groupPresence = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return inOneGroup;
         case 1: return groupPresence;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "inOneGroup";
         case 1: return "groupPresence";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean groupPresencePresent = buffer.decodeBit ("groupPresencePresent");

      // decode inOneGroup

      buffer.getContext().eventDispatcher.startElement("inOneGroup", -1);

      inOneGroup = new Asn1BitString();
      inOneGroup.decode (buffer, 8, 8);

      buffer.invokeCharacters(inOneGroup.toString());
      buffer.getContext().eventDispatcher.endElement("inOneGroup", -1);

      // decode groupPresence

      if (groupPresencePresent) {
         buffer.getContext().eventDispatcher.startElement("groupPresence", -1);

         groupPresence = new Asn1BitString();
         groupPresence.decode (buffer, 8, 8);

         buffer.invokeCharacters(groupPresence.toString());
         buffer.getContext().eventDispatcher.endElement("groupPresence", -1);
      }
      else {
         groupPresence = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (inOneGroup != null) inOneGroup.print (_sb, "inOneGroup", _level+1);
      if (groupPresence != null) groupPresence.print (_sb, "groupPresence", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
