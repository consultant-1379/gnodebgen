/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class DRX_Config_NB_r13_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public DRX_Config_NB_r13_setup_onDurationTimer_r13 onDurationTimer_r13 = null;
   public DRX_Config_NB_r13_setup_drx_InactivityTimer_r13 drx_InactivityTimer_r13 = null;
   public DRX_Config_NB_r13_setup_drx_RetransmissionTimer_r13 drx_RetransmissionTimer_r13 = null;
   public DRX_Config_NB_r13_setup_drx_Cycle_r13 drx_Cycle_r13 = null;
   public Asn1Integer drx_StartOffset_r13;
   public DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 drx_ULRetransmissionTimer_r13 = null;

   public DRX_Config_NB_r13_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public DRX_Config_NB_r13_setup (
      DRX_Config_NB_r13_setup_onDurationTimer_r13 onDurationTimer_r13_,
      DRX_Config_NB_r13_setup_drx_InactivityTimer_r13 drx_InactivityTimer_r13_,
      DRX_Config_NB_r13_setup_drx_RetransmissionTimer_r13 drx_RetransmissionTimer_r13_,
      DRX_Config_NB_r13_setup_drx_Cycle_r13 drx_Cycle_r13_,
      Asn1Integer drx_StartOffset_r13_,
      DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 drx_ULRetransmissionTimer_r13_
   ) {
      super();
      onDurationTimer_r13 = onDurationTimer_r13_;
      drx_InactivityTimer_r13 = drx_InactivityTimer_r13_;
      drx_RetransmissionTimer_r13 = drx_RetransmissionTimer_r13_;
      drx_Cycle_r13 = drx_Cycle_r13_;
      drx_StartOffset_r13 = drx_StartOffset_r13_;
      drx_ULRetransmissionTimer_r13 = drx_ULRetransmissionTimer_r13_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public DRX_Config_NB_r13_setup (DRX_Config_NB_r13_setup_onDurationTimer_r13 onDurationTimer_r13_,
      DRX_Config_NB_r13_setup_drx_InactivityTimer_r13 drx_InactivityTimer_r13_,
      DRX_Config_NB_r13_setup_drx_RetransmissionTimer_r13 drx_RetransmissionTimer_r13_,
      DRX_Config_NB_r13_setup_drx_Cycle_r13 drx_Cycle_r13_,
      long drx_StartOffset_r13_,
      DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13 drx_ULRetransmissionTimer_r13_
   ) {
      super();
      onDurationTimer_r13 = onDurationTimer_r13_;
      drx_InactivityTimer_r13 = drx_InactivityTimer_r13_;
      drx_RetransmissionTimer_r13 = drx_RetransmissionTimer_r13_;
      drx_Cycle_r13 = drx_Cycle_r13_;
      drx_StartOffset_r13 = new Asn1Integer (drx_StartOffset_r13_);
      drx_ULRetransmissionTimer_r13 = drx_ULRetransmissionTimer_r13_;
   }

   public void init () {
      onDurationTimer_r13 = null;
      drx_InactivityTimer_r13 = null;
      drx_RetransmissionTimer_r13 = null;
      drx_Cycle_r13 = null;
      drx_StartOffset_r13 = null;
      drx_ULRetransmissionTimer_r13 = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return onDurationTimer_r13;
         case 1: return drx_InactivityTimer_r13;
         case 2: return drx_RetransmissionTimer_r13;
         case 3: return drx_Cycle_r13;
         case 4: return drx_StartOffset_r13;
         case 5: return drx_ULRetransmissionTimer_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "onDurationTimer-r13";
         case 1: return "drx-InactivityTimer-r13";
         case 2: return "drx-RetransmissionTimer-r13";
         case 3: return "drx-Cycle-r13";
         case 4: return "drx-StartOffset-r13";
         case 5: return "drx-ULRetransmissionTimer-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode onDurationTimer_r13

      buffer.getContext().eventDispatcher.startElement("onDurationTimer_r13", -1);

      {
         int tval = DRX_Config_NB_r13_setup_onDurationTimer_r13.decodeEnumValue (buffer);
         onDurationTimer_r13 = DRX_Config_NB_r13_setup_onDurationTimer_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("onDurationTimer_r13", -1);

      // decode drx_InactivityTimer_r13

      buffer.getContext().eventDispatcher.startElement("drx_InactivityTimer_r13", -1);

      {
         int tval = DRX_Config_NB_r13_setup_drx_InactivityTimer_r13.decodeEnumValue (buffer);
         drx_InactivityTimer_r13 = DRX_Config_NB_r13_setup_drx_InactivityTimer_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("drx_InactivityTimer_r13", -1);

      // decode drx_RetransmissionTimer_r13

      buffer.getContext().eventDispatcher.startElement("drx_RetransmissionTimer_r13", -1);

      {
         int tval = DRX_Config_NB_r13_setup_drx_RetransmissionTimer_r13.decodeEnumValue (buffer);
         drx_RetransmissionTimer_r13 = DRX_Config_NB_r13_setup_drx_RetransmissionTimer_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("drx_RetransmissionTimer_r13", -1);

      // decode drx_Cycle_r13

      buffer.getContext().eventDispatcher.startElement("drx_Cycle_r13", -1);

      {
         int tval = DRX_Config_NB_r13_setup_drx_Cycle_r13.decodeEnumValue (buffer);
         drx_Cycle_r13 = DRX_Config_NB_r13_setup_drx_Cycle_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("drx_Cycle_r13", -1);

      // decode drx_StartOffset_r13

      buffer.getContext().eventDispatcher.startElement("drx_StartOffset_r13", -1);

      drx_StartOffset_r13 = new Asn1Integer();
      drx_StartOffset_r13.decode (buffer, 0, 255);

      buffer.invokeCharacters(drx_StartOffset_r13.toString());
      buffer.getContext().eventDispatcher.endElement("drx_StartOffset_r13", -1);

      // decode drx_ULRetransmissionTimer_r13

      buffer.getContext().eventDispatcher.startElement("drx_ULRetransmissionTimer_r13", -1);

      {
         int tval = DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13.decodeEnumValue (buffer);
         drx_ULRetransmissionTimer_r13 = DRX_Config_NB_r13_setup_drx_ULRetransmissionTimer_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("drx_ULRetransmissionTimer_r13", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (onDurationTimer_r13 != null) onDurationTimer_r13.print (_sb, "onDurationTimer_r13", _level+1);
      if (drx_InactivityTimer_r13 != null) drx_InactivityTimer_r13.print (_sb, "drx_InactivityTimer_r13", _level+1);
      if (drx_RetransmissionTimer_r13 != null) drx_RetransmissionTimer_r13.print (_sb, "drx_RetransmissionTimer_r13", _level+1);
      if (drx_Cycle_r13 != null) drx_Cycle_r13.print (_sb, "drx_Cycle_r13", _level+1);
      if (drx_StartOffset_r13 != null) drx_StartOffset_r13.print (_sb, "drx_StartOffset_r13", _level+1);
      if (drx_ULRetransmissionTimer_r13 != null) drx_ULRetransmissionTimer_r13.print (_sb, "drx_ULRetransmissionTimer_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
