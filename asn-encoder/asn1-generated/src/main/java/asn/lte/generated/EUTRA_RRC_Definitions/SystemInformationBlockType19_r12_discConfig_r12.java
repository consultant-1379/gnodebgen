/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformationBlockType19_r12_discConfig_r12 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public SL_DiscRxPoolList_r12 discRxPool_r12;
   public SL_DiscTxPoolList_r12 discTxPoolCommon_r12;  // optional
   public SL_DiscTxPowerInfoList_r12 discTxPowerInfo_r12;  // optional
   public SL_SyncConfigList_r12 discSyncConfig_r12;  // optional

   public SystemInformationBlockType19_r12_discConfig_r12 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SystemInformationBlockType19_r12_discConfig_r12 (
      SL_DiscRxPoolList_r12 discRxPool_r12_,
      SL_DiscTxPoolList_r12 discTxPoolCommon_r12_,
      SL_DiscTxPowerInfoList_r12 discTxPowerInfo_r12_,
      SL_SyncConfigList_r12 discSyncConfig_r12_
   ) {
      super();
      discRxPool_r12 = discRxPool_r12_;
      discTxPoolCommon_r12 = discTxPoolCommon_r12_;
      discTxPowerInfo_r12 = discTxPowerInfo_r12_;
      discSyncConfig_r12 = discSyncConfig_r12_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SystemInformationBlockType19_r12_discConfig_r12 (
      SL_DiscRxPoolList_r12 discRxPool_r12_
   ) {
      super();
      discRxPool_r12 = discRxPool_r12_;
   }

   public void init () {
      discRxPool_r12 = null;
      discTxPoolCommon_r12 = null;
      discTxPowerInfo_r12 = null;
      discSyncConfig_r12 = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return discRxPool_r12;
         case 1: return discTxPoolCommon_r12;
         case 2: return discTxPowerInfo_r12;
         case 3: return discSyncConfig_r12;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "discRxPool-r12";
         case 1: return "discTxPoolCommon-r12";
         case 2: return "discTxPowerInfo-r12";
         case 3: return "discSyncConfig-r12";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean discTxPoolCommon_r12Present = buffer.decodeBit ("discTxPoolCommon_r12Present");
      boolean discTxPowerInfo_r12Present = buffer.decodeBit ("discTxPowerInfo_r12Present");
      boolean discSyncConfig_r12Present = buffer.decodeBit ("discSyncConfig_r12Present");

      // decode discRxPool_r12

      buffer.getContext().eventDispatcher.startElement("discRxPool_r12", -1);

      discRxPool_r12 = new SL_DiscRxPoolList_r12();
      discRxPool_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("discRxPool_r12", -1);

      // decode discTxPoolCommon_r12

      if (discTxPoolCommon_r12Present) {
         buffer.getContext().eventDispatcher.startElement("discTxPoolCommon_r12", -1);

         discTxPoolCommon_r12 = new SL_DiscTxPoolList_r12();
         discTxPoolCommon_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("discTxPoolCommon_r12", -1);
      }
      else {
         discTxPoolCommon_r12 = null;
      }

      // decode discTxPowerInfo_r12

      if (discTxPowerInfo_r12Present) {
         buffer.getContext().eventDispatcher.startElement("discTxPowerInfo_r12", -1);

         discTxPowerInfo_r12 = new SL_DiscTxPowerInfoList_r12();
         discTxPowerInfo_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("discTxPowerInfo_r12", -1);
      }
      else {
         discTxPowerInfo_r12 = null;
      }

      // decode discSyncConfig_r12

      if (discSyncConfig_r12Present) {
         buffer.getContext().eventDispatcher.startElement("discSyncConfig_r12", -1);

         discSyncConfig_r12 = new SL_SyncConfigList_r12();
         discSyncConfig_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("discSyncConfig_r12", -1);
      }
      else {
         discSyncConfig_r12 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (discRxPool_r12 != null) discRxPool_r12.print (_sb, "discRxPool_r12", _level+1);
      if (discTxPoolCommon_r12 != null) discTxPoolCommon_r12.print (_sb, "discTxPoolCommon_r12", _level+1);
      if (discTxPowerInfo_r12 != null) discTxPowerInfo_r12.print (_sb, "discTxPowerInfo_r12", _level+1);
      if (discSyncConfig_r12 != null) discSyncConfig_r12.print (_sb, "discSyncConfig_r12", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
