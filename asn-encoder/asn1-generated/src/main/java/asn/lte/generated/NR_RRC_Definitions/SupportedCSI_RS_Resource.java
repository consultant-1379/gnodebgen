/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SupportedCSI_RS_Resource extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SupportedCSI-RS-Resource";
   }

   public SupportedCSI_RS_Resource_maxNumberTxPortsPerResource maxNumberTxPortsPerResource = null;
   public Asn1Integer maxNumberResourcesPerBand;
   public Asn1Integer totalNumberTxPortsPerBand;

   public SupportedCSI_RS_Resource () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SupportedCSI_RS_Resource (
      SupportedCSI_RS_Resource_maxNumberTxPortsPerResource maxNumberTxPortsPerResource_,
      Asn1Integer maxNumberResourcesPerBand_,
      Asn1Integer totalNumberTxPortsPerBand_
   ) {
      super();
      maxNumberTxPortsPerResource = maxNumberTxPortsPerResource_;
      maxNumberResourcesPerBand = maxNumberResourcesPerBand_;
      totalNumberTxPortsPerBand = totalNumberTxPortsPerBand_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SupportedCSI_RS_Resource (SupportedCSI_RS_Resource_maxNumberTxPortsPerResource maxNumberTxPortsPerResource_,
      long maxNumberResourcesPerBand_,
      long totalNumberTxPortsPerBand_
   ) {
      super();
      maxNumberTxPortsPerResource = maxNumberTxPortsPerResource_;
      maxNumberResourcesPerBand = new Asn1Integer (maxNumberResourcesPerBand_);
      totalNumberTxPortsPerBand = new Asn1Integer (totalNumberTxPortsPerBand_);
   }

   public void init () {
      maxNumberTxPortsPerResource = null;
      maxNumberResourcesPerBand = null;
      totalNumberTxPortsPerBand = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return maxNumberTxPortsPerResource;
         case 1: return maxNumberResourcesPerBand;
         case 2: return totalNumberTxPortsPerBand;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "maxNumberTxPortsPerResource";
         case 1: return "maxNumberResourcesPerBand";
         case 2: return "totalNumberTxPortsPerBand";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode maxNumberTxPortsPerResource

      buffer.getContext().eventDispatcher.startElement("maxNumberTxPortsPerResource", -1);

      {
         int tval = SupportedCSI_RS_Resource_maxNumberTxPortsPerResource.decodeEnumValue (buffer);
         maxNumberTxPortsPerResource = SupportedCSI_RS_Resource_maxNumberTxPortsPerResource.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("maxNumberTxPortsPerResource", -1);

      // decode maxNumberResourcesPerBand

      buffer.getContext().eventDispatcher.startElement("maxNumberResourcesPerBand", -1);

      maxNumberResourcesPerBand = new Asn1Integer();
      maxNumberResourcesPerBand.decode (buffer, 1, 64);

      buffer.invokeCharacters(maxNumberResourcesPerBand.toString());
      buffer.getContext().eventDispatcher.endElement("maxNumberResourcesPerBand", -1);

      // decode totalNumberTxPortsPerBand

      buffer.getContext().eventDispatcher.startElement("totalNumberTxPortsPerBand", -1);

      totalNumberTxPortsPerBand = new Asn1Integer();
      totalNumberTxPortsPerBand.decode (buffer, 2, 256);

      buffer.invokeCharacters(totalNumberTxPortsPerBand.toString());
      buffer.getContext().eventDispatcher.endElement("totalNumberTxPortsPerBand", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (maxNumberTxPortsPerResource != null) maxNumberTxPortsPerResource.print (_sb, "maxNumberTxPortsPerResource", _level+1);
      if (maxNumberResourcesPerBand != null) maxNumberResourcesPerBand.print (_sb, "maxNumberResourcesPerBand", _level+1);
      if (totalNumberTxPortsPerBand != null) totalNumberTxPortsPerBand.print (_sb, "totalNumberTxPortsPerBand", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
