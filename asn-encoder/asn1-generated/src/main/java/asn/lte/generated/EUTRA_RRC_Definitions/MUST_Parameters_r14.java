/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MUST_Parameters_r14 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MUST-Parameters-r14";
   }

   public MUST_Parameters_r14_must_TM234_UpTo2Tx_r14 must_TM234_UpTo2Tx_r14 = null;  // optional
   public MUST_Parameters_r14_must_TM89_UpToOneInterferingLayer_r14 must_TM89_UpToOneInterferingLayer_r14 = null;  // optional
   public MUST_Parameters_r14_must_TM10_UpToOneInterferingLayer_r14 must_TM10_UpToOneInterferingLayer_r14 = null;  // optional
   public MUST_Parameters_r14_must_TM89_UpToThreeInterferingLayers_r14 must_TM89_UpToThreeInterferingLayers_r14 = null;  // optional
   public MUST_Parameters_r14_must_TM10_UpToThreeInterferingLayers_r14 must_TM10_UpToThreeInterferingLayers_r14 = null;  // optional

   public MUST_Parameters_r14 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MUST_Parameters_r14 (
      MUST_Parameters_r14_must_TM234_UpTo2Tx_r14 must_TM234_UpTo2Tx_r14_,
      MUST_Parameters_r14_must_TM89_UpToOneInterferingLayer_r14 must_TM89_UpToOneInterferingLayer_r14_,
      MUST_Parameters_r14_must_TM10_UpToOneInterferingLayer_r14 must_TM10_UpToOneInterferingLayer_r14_,
      MUST_Parameters_r14_must_TM89_UpToThreeInterferingLayers_r14 must_TM89_UpToThreeInterferingLayers_r14_,
      MUST_Parameters_r14_must_TM10_UpToThreeInterferingLayers_r14 must_TM10_UpToThreeInterferingLayers_r14_
   ) {
      super();
      must_TM234_UpTo2Tx_r14 = must_TM234_UpTo2Tx_r14_;
      must_TM89_UpToOneInterferingLayer_r14 = must_TM89_UpToOneInterferingLayer_r14_;
      must_TM10_UpToOneInterferingLayer_r14 = must_TM10_UpToOneInterferingLayer_r14_;
      must_TM89_UpToThreeInterferingLayers_r14 = must_TM89_UpToThreeInterferingLayers_r14_;
      must_TM10_UpToThreeInterferingLayers_r14 = must_TM10_UpToThreeInterferingLayers_r14_;
   }

   public void init () {
      must_TM234_UpTo2Tx_r14 = null;
      must_TM89_UpToOneInterferingLayer_r14 = null;
      must_TM10_UpToOneInterferingLayer_r14 = null;
      must_TM89_UpToThreeInterferingLayers_r14 = null;
      must_TM10_UpToThreeInterferingLayers_r14 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return must_TM234_UpTo2Tx_r14;
         case 1: return must_TM89_UpToOneInterferingLayer_r14;
         case 2: return must_TM10_UpToOneInterferingLayer_r14;
         case 3: return must_TM89_UpToThreeInterferingLayers_r14;
         case 4: return must_TM10_UpToThreeInterferingLayers_r14;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "must-TM234-UpTo2Tx-r14";
         case 1: return "must-TM89-UpToOneInterferingLayer-r14";
         case 2: return "must-TM10-UpToOneInterferingLayer-r14";
         case 3: return "must-TM89-UpToThreeInterferingLayers-r14";
         case 4: return "must-TM10-UpToThreeInterferingLayers-r14";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean must_TM234_UpTo2Tx_r14Present = buffer.decodeBit ("must_TM234_UpTo2Tx_r14Present");
      boolean must_TM89_UpToOneInterferingLayer_r14Present = buffer.decodeBit ("must_TM89_UpToOneInterferingLayer_r14Present");
      boolean must_TM10_UpToOneInterferingLayer_r14Present = buffer.decodeBit ("must_TM10_UpToOneInterferingLayer_r14Present");
      boolean must_TM89_UpToThreeInterferingLayers_r14Present = buffer.decodeBit ("must_TM89_UpToThreeInterferingLayers_r14Present");
      boolean must_TM10_UpToThreeInterferingLayers_r14Present = buffer.decodeBit ("must_TM10_UpToThreeInterferingLayers_r14Present");

      // decode must_TM234_UpTo2Tx_r14

      if (must_TM234_UpTo2Tx_r14Present) {
         buffer.getContext().eventDispatcher.startElement("must_TM234_UpTo2Tx_r14", -1);

         int tval = MUST_Parameters_r14_must_TM234_UpTo2Tx_r14.decodeEnumValue (buffer);
         must_TM234_UpTo2Tx_r14 = MUST_Parameters_r14_must_TM234_UpTo2Tx_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("must_TM234_UpTo2Tx_r14", -1);
      }
      else {
         must_TM234_UpTo2Tx_r14 = null;
      }

      // decode must_TM89_UpToOneInterferingLayer_r14

      if (must_TM89_UpToOneInterferingLayer_r14Present) {
         buffer.getContext().eventDispatcher.startElement("must_TM89_UpToOneInterferingLayer_r14", -1);

         int tval = MUST_Parameters_r14_must_TM89_UpToOneInterferingLayer_r14.decodeEnumValue (buffer);
         must_TM89_UpToOneInterferingLayer_r14 = MUST_Parameters_r14_must_TM89_UpToOneInterferingLayer_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("must_TM89_UpToOneInterferingLayer_r14", -1);
      }
      else {
         must_TM89_UpToOneInterferingLayer_r14 = null;
      }

      // decode must_TM10_UpToOneInterferingLayer_r14

      if (must_TM10_UpToOneInterferingLayer_r14Present) {
         buffer.getContext().eventDispatcher.startElement("must_TM10_UpToOneInterferingLayer_r14", -1);

         int tval = MUST_Parameters_r14_must_TM10_UpToOneInterferingLayer_r14.decodeEnumValue (buffer);
         must_TM10_UpToOneInterferingLayer_r14 = MUST_Parameters_r14_must_TM10_UpToOneInterferingLayer_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("must_TM10_UpToOneInterferingLayer_r14", -1);
      }
      else {
         must_TM10_UpToOneInterferingLayer_r14 = null;
      }

      // decode must_TM89_UpToThreeInterferingLayers_r14

      if (must_TM89_UpToThreeInterferingLayers_r14Present) {
         buffer.getContext().eventDispatcher.startElement("must_TM89_UpToThreeInterferingLayers_r14", -1);

         int tval = MUST_Parameters_r14_must_TM89_UpToThreeInterferingLayers_r14.decodeEnumValue (buffer);
         must_TM89_UpToThreeInterferingLayers_r14 = MUST_Parameters_r14_must_TM89_UpToThreeInterferingLayers_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("must_TM89_UpToThreeInterferingLayers_r14", -1);
      }
      else {
         must_TM89_UpToThreeInterferingLayers_r14 = null;
      }

      // decode must_TM10_UpToThreeInterferingLayers_r14

      if (must_TM10_UpToThreeInterferingLayers_r14Present) {
         buffer.getContext().eventDispatcher.startElement("must_TM10_UpToThreeInterferingLayers_r14", -1);

         int tval = MUST_Parameters_r14_must_TM10_UpToThreeInterferingLayers_r14.decodeEnumValue (buffer);
         must_TM10_UpToThreeInterferingLayers_r14 = MUST_Parameters_r14_must_TM10_UpToThreeInterferingLayers_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("must_TM10_UpToThreeInterferingLayers_r14", -1);
      }
      else {
         must_TM10_UpToThreeInterferingLayers_r14 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (must_TM234_UpTo2Tx_r14 != null) must_TM234_UpTo2Tx_r14.print (_sb, "must_TM234_UpTo2Tx_r14", _level+1);
      if (must_TM89_UpToOneInterferingLayer_r14 != null) must_TM89_UpToOneInterferingLayer_r14.print (_sb, "must_TM89_UpToOneInterferingLayer_r14", _level+1);
      if (must_TM10_UpToOneInterferingLayer_r14 != null) must_TM10_UpToOneInterferingLayer_r14.print (_sb, "must_TM10_UpToOneInterferingLayer_r14", _level+1);
      if (must_TM89_UpToThreeInterferingLayers_r14 != null) must_TM89_UpToThreeInterferingLayers_r14.print (_sb, "must_TM89_UpToThreeInterferingLayers_r14", _level+1);
      if (must_TM10_UpToThreeInterferingLayers_r14 != null) must_TM10_UpToThreeInterferingLayers_r14.print (_sb, "must_TM10_UpToThreeInterferingLayers_r14", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
