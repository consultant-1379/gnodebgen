/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SupportedBandEUTRA extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SupportedBandEUTRA";
   }

   public FreqBandIndicator bandEUTRA;
   public Asn1Boolean halfDuplex;

   public SupportedBandEUTRA () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SupportedBandEUTRA (
      FreqBandIndicator bandEUTRA_,
      Asn1Boolean halfDuplex_
   ) {
      super();
      bandEUTRA = bandEUTRA_;
      halfDuplex = halfDuplex_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SupportedBandEUTRA (long bandEUTRA_,
      boolean halfDuplex_
   ) {
      super();
      bandEUTRA = new FreqBandIndicator (bandEUTRA_);
      halfDuplex = new Asn1Boolean (halfDuplex_);
   }

   public void init () {
      bandEUTRA = null;
      halfDuplex = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return bandEUTRA;
         case 1: return halfDuplex;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "bandEUTRA";
         case 1: return "halfDuplex";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode bandEUTRA

      buffer.getContext().eventDispatcher.startElement("bandEUTRA", -1);

      bandEUTRA = new FreqBandIndicator();
      bandEUTRA.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("bandEUTRA", -1);

      // decode halfDuplex

      buffer.getContext().eventDispatcher.startElement("halfDuplex", -1);

      halfDuplex = new Asn1Boolean();
      halfDuplex.decode (buffer);

      buffer.invokeCharacters(halfDuplex.toString());
      buffer.getContext().eventDispatcher.endElement("halfDuplex", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (bandEUTRA != null) bandEUTRA.print (_sb, "bandEUTRA", _level+1);
      if (halfDuplex != null) halfDuplex.print (_sb, "halfDuplex", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
