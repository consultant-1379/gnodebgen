/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SupportedBandEUTRA_v1320 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SupportedBandEUTRA-v1320";
   }

   public SupportedBandEUTRA_v1320_intraFreq_CE_NeedForGaps_r13 intraFreq_CE_NeedForGaps_r13 = null;  // optional
   public SupportedBandEUTRA_v1320_ue_PowerClass_N_r13 ue_PowerClass_N_r13 = null;  // optional

   public SupportedBandEUTRA_v1320 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SupportedBandEUTRA_v1320 (
      SupportedBandEUTRA_v1320_intraFreq_CE_NeedForGaps_r13 intraFreq_CE_NeedForGaps_r13_,
      SupportedBandEUTRA_v1320_ue_PowerClass_N_r13 ue_PowerClass_N_r13_
   ) {
      super();
      intraFreq_CE_NeedForGaps_r13 = intraFreq_CE_NeedForGaps_r13_;
      ue_PowerClass_N_r13 = ue_PowerClass_N_r13_;
   }

   public void init () {
      intraFreq_CE_NeedForGaps_r13 = null;
      ue_PowerClass_N_r13 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return intraFreq_CE_NeedForGaps_r13;
         case 1: return ue_PowerClass_N_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "intraFreq-CE-NeedForGaps-r13";
         case 1: return "ue-PowerClass-N-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean intraFreq_CE_NeedForGaps_r13Present = buffer.decodeBit ("intraFreq_CE_NeedForGaps_r13Present");
      boolean ue_PowerClass_N_r13Present = buffer.decodeBit ("ue_PowerClass_N_r13Present");

      // decode intraFreq_CE_NeedForGaps_r13

      if (intraFreq_CE_NeedForGaps_r13Present) {
         buffer.getContext().eventDispatcher.startElement("intraFreq_CE_NeedForGaps_r13", -1);

         int tval = SupportedBandEUTRA_v1320_intraFreq_CE_NeedForGaps_r13.decodeEnumValue (buffer);
         intraFreq_CE_NeedForGaps_r13 = SupportedBandEUTRA_v1320_intraFreq_CE_NeedForGaps_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("intraFreq_CE_NeedForGaps_r13", -1);
      }
      else {
         intraFreq_CE_NeedForGaps_r13 = null;
      }

      // decode ue_PowerClass_N_r13

      if (ue_PowerClass_N_r13Present) {
         buffer.getContext().eventDispatcher.startElement("ue_PowerClass_N_r13", -1);

         int tval = SupportedBandEUTRA_v1320_ue_PowerClass_N_r13.decodeEnumValue (buffer);
         ue_PowerClass_N_r13 = SupportedBandEUTRA_v1320_ue_PowerClass_N_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ue_PowerClass_N_r13", -1);
      }
      else {
         ue_PowerClass_N_r13 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (intraFreq_CE_NeedForGaps_r13 != null) intraFreq_CE_NeedForGaps_r13.print (_sb, "intraFreq_CE_NeedForGaps_r13", _level+1);
      if (ue_PowerClass_N_r13 != null) ue_PowerClass_N_r13.print (_sb, "ue_PowerClass_N_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
