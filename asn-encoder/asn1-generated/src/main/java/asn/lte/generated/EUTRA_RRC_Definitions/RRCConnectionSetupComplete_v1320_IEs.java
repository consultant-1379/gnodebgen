/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RRCConnectionSetupComplete_v1320_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RRCConnectionSetupComplete-v1320-IEs";
   }

   public RRCConnectionSetupComplete_v1320_IEs_ce_ModeB_r13 ce_ModeB_r13 = null;  // optional
   public S_TMSI s_TMSI_r13;  // optional
   public RRCConnectionSetupComplete_v1320_IEs_attachWithoutPDN_Connectivity_r13 attachWithoutPDN_Connectivity_r13 = null;  // optional
   public RRCConnectionSetupComplete_v1320_IEs_up_CIoT_EPS_Optimisation_r13 up_CIoT_EPS_Optimisation_r13 = null;  // optional
   public RRCConnectionSetupComplete_v1320_IEs_cp_CIoT_EPS_Optimisation_r13 cp_CIoT_EPS_Optimisation_r13 = null;  // optional
   public RRCConnectionSetupComplete_v1330_IEs nonCriticalExtension;  // optional

   public RRCConnectionSetupComplete_v1320_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RRCConnectionSetupComplete_v1320_IEs (
      RRCConnectionSetupComplete_v1320_IEs_ce_ModeB_r13 ce_ModeB_r13_,
      S_TMSI s_TMSI_r13_,
      RRCConnectionSetupComplete_v1320_IEs_attachWithoutPDN_Connectivity_r13 attachWithoutPDN_Connectivity_r13_,
      RRCConnectionSetupComplete_v1320_IEs_up_CIoT_EPS_Optimisation_r13 up_CIoT_EPS_Optimisation_r13_,
      RRCConnectionSetupComplete_v1320_IEs_cp_CIoT_EPS_Optimisation_r13 cp_CIoT_EPS_Optimisation_r13_,
      RRCConnectionSetupComplete_v1330_IEs nonCriticalExtension_
   ) {
      super();
      ce_ModeB_r13 = ce_ModeB_r13_;
      s_TMSI_r13 = s_TMSI_r13_;
      attachWithoutPDN_Connectivity_r13 = attachWithoutPDN_Connectivity_r13_;
      up_CIoT_EPS_Optimisation_r13 = up_CIoT_EPS_Optimisation_r13_;
      cp_CIoT_EPS_Optimisation_r13 = cp_CIoT_EPS_Optimisation_r13_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      ce_ModeB_r13 = null;
      s_TMSI_r13 = null;
      attachWithoutPDN_Connectivity_r13 = null;
      up_CIoT_EPS_Optimisation_r13 = null;
      cp_CIoT_EPS_Optimisation_r13 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ce_ModeB_r13;
         case 1: return s_TMSI_r13;
         case 2: return attachWithoutPDN_Connectivity_r13;
         case 3: return up_CIoT_EPS_Optimisation_r13;
         case 4: return cp_CIoT_EPS_Optimisation_r13;
         case 5: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ce-ModeB-r13";
         case 1: return "s-TMSI-r13";
         case 2: return "attachWithoutPDN-Connectivity-r13";
         case 3: return "up-CIoT-EPS-Optimisation-r13";
         case 4: return "cp-CIoT-EPS-Optimisation-r13";
         case 5: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean ce_ModeB_r13Present = buffer.decodeBit ("ce_ModeB_r13Present");
      boolean s_TMSI_r13Present = buffer.decodeBit ("s_TMSI_r13Present");
      boolean attachWithoutPDN_Connectivity_r13Present = buffer.decodeBit ("attachWithoutPDN_Connectivity_r13Present");
      boolean up_CIoT_EPS_Optimisation_r13Present = buffer.decodeBit ("up_CIoT_EPS_Optimisation_r13Present");
      boolean cp_CIoT_EPS_Optimisation_r13Present = buffer.decodeBit ("cp_CIoT_EPS_Optimisation_r13Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode ce_ModeB_r13

      if (ce_ModeB_r13Present) {
         buffer.getContext().eventDispatcher.startElement("ce_ModeB_r13", -1);

         int tval = RRCConnectionSetupComplete_v1320_IEs_ce_ModeB_r13.decodeEnumValue (buffer);
         ce_ModeB_r13 = RRCConnectionSetupComplete_v1320_IEs_ce_ModeB_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ce_ModeB_r13", -1);
      }
      else {
         ce_ModeB_r13 = null;
      }

      // decode s_TMSI_r13

      if (s_TMSI_r13Present) {
         buffer.getContext().eventDispatcher.startElement("s_TMSI_r13", -1);

         s_TMSI_r13 = new S_TMSI();
         s_TMSI_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("s_TMSI_r13", -1);
      }
      else {
         s_TMSI_r13 = null;
      }

      // decode attachWithoutPDN_Connectivity_r13

      if (attachWithoutPDN_Connectivity_r13Present) {
         buffer.getContext().eventDispatcher.startElement("attachWithoutPDN_Connectivity_r13", -1);

         int tval = RRCConnectionSetupComplete_v1320_IEs_attachWithoutPDN_Connectivity_r13.decodeEnumValue (buffer);
         attachWithoutPDN_Connectivity_r13 = RRCConnectionSetupComplete_v1320_IEs_attachWithoutPDN_Connectivity_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("attachWithoutPDN_Connectivity_r13", -1);
      }
      else {
         attachWithoutPDN_Connectivity_r13 = null;
      }

      // decode up_CIoT_EPS_Optimisation_r13

      if (up_CIoT_EPS_Optimisation_r13Present) {
         buffer.getContext().eventDispatcher.startElement("up_CIoT_EPS_Optimisation_r13", -1);

         int tval = RRCConnectionSetupComplete_v1320_IEs_up_CIoT_EPS_Optimisation_r13.decodeEnumValue (buffer);
         up_CIoT_EPS_Optimisation_r13 = RRCConnectionSetupComplete_v1320_IEs_up_CIoT_EPS_Optimisation_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("up_CIoT_EPS_Optimisation_r13", -1);
      }
      else {
         up_CIoT_EPS_Optimisation_r13 = null;
      }

      // decode cp_CIoT_EPS_Optimisation_r13

      if (cp_CIoT_EPS_Optimisation_r13Present) {
         buffer.getContext().eventDispatcher.startElement("cp_CIoT_EPS_Optimisation_r13", -1);

         int tval = RRCConnectionSetupComplete_v1320_IEs_cp_CIoT_EPS_Optimisation_r13.decodeEnumValue (buffer);
         cp_CIoT_EPS_Optimisation_r13 = RRCConnectionSetupComplete_v1320_IEs_cp_CIoT_EPS_Optimisation_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("cp_CIoT_EPS_Optimisation_r13", -1);
      }
      else {
         cp_CIoT_EPS_Optimisation_r13 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new RRCConnectionSetupComplete_v1330_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ce_ModeB_r13 != null) ce_ModeB_r13.print (_sb, "ce_ModeB_r13", _level+1);
      if (s_TMSI_r13 != null) s_TMSI_r13.print (_sb, "s_TMSI_r13", _level+1);
      if (attachWithoutPDN_Connectivity_r13 != null) attachWithoutPDN_Connectivity_r13.print (_sb, "attachWithoutPDN_Connectivity_r13", _level+1);
      if (up_CIoT_EPS_Optimisation_r13 != null) up_CIoT_EPS_Optimisation_r13.print (_sb, "up_CIoT_EPS_Optimisation_r13", _level+1);
      if (cp_CIoT_EPS_Optimisation_r13 != null) cp_CIoT_EPS_Optimisation_r13.print (_sb, "cp_CIoT_EPS_Optimisation_r13", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
