/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SlotOrSubslotPDSCH_Config_r15_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public SlotOrSubslotPDSCH_Config_r15_setup_altCQI_TableSTTI_r15 altCQI_TableSTTI_r15 = null;  // optional
   public SlotOrSubslotPDSCH_Config_r15_setup_altCQI_Table1024QAM_STTI_r15 altCQI_Table1024QAM_STTI_r15 = null;  // optional
   public SlotOrSubslotPDSCH_Config_r15_setup_resourceAllocation_r15 resourceAllocation_r15 = null;  // optional
   public SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt_STTI_r15 tbsIndexAlt_STTI_r15 = null;  // optional
   public SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt2_STTI_r15 tbsIndexAlt2_STTI_r15 = null;  // optional
   public SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt3_STTI_r15 tbsIndexAlt3_STTI_r15 = null;  // optional
   public Asn1OpenExt extElem1;

   public SlotOrSubslotPDSCH_Config_r15_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SlotOrSubslotPDSCH_Config_r15_setup (
      SlotOrSubslotPDSCH_Config_r15_setup_altCQI_TableSTTI_r15 altCQI_TableSTTI_r15_,
      SlotOrSubslotPDSCH_Config_r15_setup_altCQI_Table1024QAM_STTI_r15 altCQI_Table1024QAM_STTI_r15_,
      SlotOrSubslotPDSCH_Config_r15_setup_resourceAllocation_r15 resourceAllocation_r15_,
      SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt_STTI_r15 tbsIndexAlt_STTI_r15_,
      SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt2_STTI_r15 tbsIndexAlt2_STTI_r15_,
      SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt3_STTI_r15 tbsIndexAlt3_STTI_r15_
   ) {
      super();
      altCQI_TableSTTI_r15 = altCQI_TableSTTI_r15_;
      altCQI_Table1024QAM_STTI_r15 = altCQI_Table1024QAM_STTI_r15_;
      resourceAllocation_r15 = resourceAllocation_r15_;
      tbsIndexAlt_STTI_r15 = tbsIndexAlt_STTI_r15_;
      tbsIndexAlt2_STTI_r15 = tbsIndexAlt2_STTI_r15_;
      tbsIndexAlt3_STTI_r15 = tbsIndexAlt3_STTI_r15_;
   }

   public void init () {
      altCQI_TableSTTI_r15 = null;
      altCQI_Table1024QAM_STTI_r15 = null;
      resourceAllocation_r15 = null;
      tbsIndexAlt_STTI_r15 = null;
      tbsIndexAlt2_STTI_r15 = null;
      tbsIndexAlt3_STTI_r15 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return altCQI_TableSTTI_r15;
         case 1: return altCQI_Table1024QAM_STTI_r15;
         case 2: return resourceAllocation_r15;
         case 3: return tbsIndexAlt_STTI_r15;
         case 4: return tbsIndexAlt2_STTI_r15;
         case 5: return tbsIndexAlt3_STTI_r15;
         case 6: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "altCQI-TableSTTI-r15";
         case 1: return "altCQI-Table1024QAM-STTI-r15";
         case 2: return "resourceAllocation-r15";
         case 3: return "tbsIndexAlt-STTI-r15";
         case 4: return "tbsIndexAlt2-STTI-r15";
         case 5: return "tbsIndexAlt3-STTI-r15";
         case 6: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean altCQI_TableSTTI_r15Present = buffer.decodeBit ("altCQI_TableSTTI_r15Present");
      boolean altCQI_Table1024QAM_STTI_r15Present = buffer.decodeBit ("altCQI_Table1024QAM_STTI_r15Present");
      boolean resourceAllocation_r15Present = buffer.decodeBit ("resourceAllocation_r15Present");
      boolean tbsIndexAlt_STTI_r15Present = buffer.decodeBit ("tbsIndexAlt_STTI_r15Present");
      boolean tbsIndexAlt2_STTI_r15Present = buffer.decodeBit ("tbsIndexAlt2_STTI_r15Present");
      boolean tbsIndexAlt3_STTI_r15Present = buffer.decodeBit ("tbsIndexAlt3_STTI_r15Present");

      // decode altCQI_TableSTTI_r15

      if (altCQI_TableSTTI_r15Present) {
         buffer.getContext().eventDispatcher.startElement("altCQI_TableSTTI_r15", -1);

         int tval = SlotOrSubslotPDSCH_Config_r15_setup_altCQI_TableSTTI_r15.decodeEnumValue (buffer);
         altCQI_TableSTTI_r15 = SlotOrSubslotPDSCH_Config_r15_setup_altCQI_TableSTTI_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("altCQI_TableSTTI_r15", -1);
      }
      else {
         altCQI_TableSTTI_r15 = null;
      }

      // decode altCQI_Table1024QAM_STTI_r15

      if (altCQI_Table1024QAM_STTI_r15Present) {
         buffer.getContext().eventDispatcher.startElement("altCQI_Table1024QAM_STTI_r15", -1);

         int tval = SlotOrSubslotPDSCH_Config_r15_setup_altCQI_Table1024QAM_STTI_r15.decodeEnumValue (buffer);
         altCQI_Table1024QAM_STTI_r15 = SlotOrSubslotPDSCH_Config_r15_setup_altCQI_Table1024QAM_STTI_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("altCQI_Table1024QAM_STTI_r15", -1);
      }
      else {
         altCQI_Table1024QAM_STTI_r15 = null;
      }

      // decode resourceAllocation_r15

      if (resourceAllocation_r15Present) {
         buffer.getContext().eventDispatcher.startElement("resourceAllocation_r15", -1);

         int tval = SlotOrSubslotPDSCH_Config_r15_setup_resourceAllocation_r15.decodeEnumValue (buffer);
         resourceAllocation_r15 = SlotOrSubslotPDSCH_Config_r15_setup_resourceAllocation_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("resourceAllocation_r15", -1);
      }
      else {
         resourceAllocation_r15 = null;
      }

      // decode tbsIndexAlt_STTI_r15

      if (tbsIndexAlt_STTI_r15Present) {
         buffer.getContext().eventDispatcher.startElement("tbsIndexAlt_STTI_r15", -1);

         int tval = SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt_STTI_r15.decodeEnumValue (buffer);
         tbsIndexAlt_STTI_r15 = SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt_STTI_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tbsIndexAlt_STTI_r15", -1);
      }
      else {
         tbsIndexAlt_STTI_r15 = null;
      }

      // decode tbsIndexAlt2_STTI_r15

      if (tbsIndexAlt2_STTI_r15Present) {
         buffer.getContext().eventDispatcher.startElement("tbsIndexAlt2_STTI_r15", -1);

         int tval = SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt2_STTI_r15.decodeEnumValue (buffer);
         tbsIndexAlt2_STTI_r15 = SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt2_STTI_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tbsIndexAlt2_STTI_r15", -1);
      }
      else {
         tbsIndexAlt2_STTI_r15 = null;
      }

      // decode tbsIndexAlt3_STTI_r15

      if (tbsIndexAlt3_STTI_r15Present) {
         buffer.getContext().eventDispatcher.startElement("tbsIndexAlt3_STTI_r15", -1);

         int tval = SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt3_STTI_r15.decodeEnumValue (buffer);
         tbsIndexAlt3_STTI_r15 = SlotOrSubslotPDSCH_Config_r15_setup_tbsIndexAlt3_STTI_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tbsIndexAlt3_STTI_r15", -1);
      }
      else {
         tbsIndexAlt3_STTI_r15 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (altCQI_TableSTTI_r15 != null) altCQI_TableSTTI_r15.print (_sb, "altCQI_TableSTTI_r15", _level+1);
      if (altCQI_Table1024QAM_STTI_r15 != null) altCQI_Table1024QAM_STTI_r15.print (_sb, "altCQI_Table1024QAM_STTI_r15", _level+1);
      if (resourceAllocation_r15 != null) resourceAllocation_r15.print (_sb, "resourceAllocation_r15", _level+1);
      if (tbsIndexAlt_STTI_r15 != null) tbsIndexAlt_STTI_r15.print (_sb, "tbsIndexAlt_STTI_r15", _level+1);
      if (tbsIndexAlt2_STTI_r15 != null) tbsIndexAlt2_STTI_r15.print (_sb, "tbsIndexAlt2_STTI_r15", _level+1);
      if (tbsIndexAlt3_STTI_r15 != null) tbsIndexAlt3_STTI_r15.print (_sb, "tbsIndexAlt3_STTI_r15", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
