/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PUCCH_ResourceSet extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PUCCH-ResourceSet";
   }

   public PUCCH_ResourceSetId pucch_ResourceSetId;
   public PUCCH_ResourceSet_resourceList resourceList;
   public Asn1Integer maxPayloadSize;  // optional

   public PUCCH_ResourceSet () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PUCCH_ResourceSet (
      PUCCH_ResourceSetId pucch_ResourceSetId_,
      PUCCH_ResourceSet_resourceList resourceList_,
      Asn1Integer maxPayloadSize_
   ) {
      super();
      pucch_ResourceSetId = pucch_ResourceSetId_;
      resourceList = resourceList_;
      maxPayloadSize = maxPayloadSize_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public PUCCH_ResourceSet (
      PUCCH_ResourceSetId pucch_ResourceSetId_,
      PUCCH_ResourceSet_resourceList resourceList_
   ) {
      super();
      pucch_ResourceSetId = pucch_ResourceSetId_;
      resourceList = resourceList_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PUCCH_ResourceSet (long pucch_ResourceSetId_,
      PUCCH_ResourceSet_resourceList resourceList_,
      long maxPayloadSize_
   ) {
      super();
      pucch_ResourceSetId = new PUCCH_ResourceSetId (pucch_ResourceSetId_);
      resourceList = resourceList_;
      maxPayloadSize = new Asn1Integer (maxPayloadSize_);
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public PUCCH_ResourceSet (
      long pucch_ResourceSetId_,
      PUCCH_ResourceSet_resourceList resourceList_
   ) {
      super();
      pucch_ResourceSetId = new PUCCH_ResourceSetId (pucch_ResourceSetId_);
      resourceList = resourceList_;
   }

   public void init () {
      pucch_ResourceSetId = null;
      resourceList = null;
      maxPayloadSize = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return pucch_ResourceSetId;
         case 1: return resourceList;
         case 2: return maxPayloadSize;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "pucch-ResourceSetId";
         case 1: return "resourceList";
         case 2: return "maxPayloadSize";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean maxPayloadSizePresent = buffer.decodeBit ("maxPayloadSizePresent");

      // decode pucch_ResourceSetId

      buffer.getContext().eventDispatcher.startElement("pucch_ResourceSetId", -1);

      pucch_ResourceSetId = new PUCCH_ResourceSetId();
      pucch_ResourceSetId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("pucch_ResourceSetId", -1);

      // decode resourceList

      buffer.getContext().eventDispatcher.startElement("resourceList", -1);

      resourceList = new PUCCH_ResourceSet_resourceList();
      resourceList.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("resourceList", -1);

      // decode maxPayloadSize

      if (maxPayloadSizePresent) {
         buffer.getContext().eventDispatcher.startElement("maxPayloadSize", -1);

         maxPayloadSize = new Asn1Integer();
         maxPayloadSize.decode (buffer, 4, 256);

         buffer.invokeCharacters(maxPayloadSize.toString());
         buffer.getContext().eventDispatcher.endElement("maxPayloadSize", -1);
      }
      else {
         maxPayloadSize = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (pucch_ResourceSetId != null) pucch_ResourceSetId.print (_sb, "pucch_ResourceSetId", _level+1);
      if (resourceList != null) resourceList.print (_sb, "resourceList", _level+1);
      if (maxPayloadSize != null) maxPayloadSize.print (_sb, "maxPayloadSize", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
