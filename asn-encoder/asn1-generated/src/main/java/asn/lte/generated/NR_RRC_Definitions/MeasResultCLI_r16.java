/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MeasResultCLI_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MeasResultCLI-r16";
   }

   public MeasResultListSRS_RSRP_r16 measResultListSRS_RSRP_r16;  // optional
   public MeasResultListCLI_RSSI_r16 measResultListCLI_RSSI_r16;  // optional

   public MeasResultCLI_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasResultCLI_r16 (
      MeasResultListSRS_RSRP_r16 measResultListSRS_RSRP_r16_,
      MeasResultListCLI_RSSI_r16 measResultListCLI_RSSI_r16_
   ) {
      super();
      measResultListSRS_RSRP_r16 = measResultListSRS_RSRP_r16_;
      measResultListCLI_RSSI_r16 = measResultListCLI_RSSI_r16_;
   }

   public void init () {
      measResultListSRS_RSRP_r16 = null;
      measResultListCLI_RSSI_r16 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return measResultListSRS_RSRP_r16;
         case 1: return measResultListCLI_RSSI_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "measResultListSRS-RSRP-r16";
         case 1: return "measResultListCLI-RSSI-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean measResultListSRS_RSRP_r16Present = buffer.decodeBit ("measResultListSRS_RSRP_r16Present");
      boolean measResultListCLI_RSSI_r16Present = buffer.decodeBit ("measResultListCLI_RSSI_r16Present");

      // decode measResultListSRS_RSRP_r16

      if (measResultListSRS_RSRP_r16Present) {
         buffer.getContext().eventDispatcher.startElement("measResultListSRS_RSRP_r16", -1);

         measResultListSRS_RSRP_r16 = new MeasResultListSRS_RSRP_r16();
         measResultListSRS_RSRP_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measResultListSRS_RSRP_r16", -1);
      }
      else {
         measResultListSRS_RSRP_r16 = null;
      }

      // decode measResultListCLI_RSSI_r16

      if (measResultListCLI_RSSI_r16Present) {
         buffer.getContext().eventDispatcher.startElement("measResultListCLI_RSSI_r16", -1);

         measResultListCLI_RSSI_r16 = new MeasResultListCLI_RSSI_r16();
         measResultListCLI_RSSI_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measResultListCLI_RSSI_r16", -1);
      }
      else {
         measResultListCLI_RSSI_r16 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (measResultListSRS_RSRP_r16 != null) measResultListSRS_RSRP_r16.print (_sb, "measResultListSRS_RSRP_r16", _level+1);
      if (measResultListCLI_RSSI_r16 != null) measResultListCLI_RSSI_r16.print (_sb, "measResultListCLI_RSSI_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
