/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class AccessStratumRelease extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "AccessStratumRelease";
   }

   // Integer constants for switch-case
   public static final int _REL8 = 0;
   public static final int _REL9 = 1;
   public static final int _REL10 = 2;
   public static final int _REL11 = 3;
   public static final int _REL12 = 4;
   public static final int _REL13 = 5;
   public static final int _REL14 = 6;
   public static final int _REL15 = 7;

   // Singleton instances of AccessStratumRelease
   protected static final AccessStratumRelease _rel8 = new AccessStratumRelease(0);
   protected static final AccessStratumRelease _rel9 = new AccessStratumRelease(1);
   protected static final AccessStratumRelease _rel10 = new AccessStratumRelease(2);
   protected static final AccessStratumRelease _rel11 = new AccessStratumRelease(3);
   protected static final AccessStratumRelease _rel12 = new AccessStratumRelease(4);
   protected static final AccessStratumRelease _rel13 = new AccessStratumRelease(5);
   protected static final AccessStratumRelease _rel14 = new AccessStratumRelease(6);
   protected static final AccessStratumRelease _rel15 = new AccessStratumRelease(7);
   private static AccessStratumRelease __undefined = new AccessStratumRelease(-999);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected AccessStratumRelease (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for rel8.
    */
   public static AccessStratumRelease rel8() {
      return _rel8;
   }

   /**
    * Singleton accessor method for rel9.
    */
   public static AccessStratumRelease rel9() {
      return _rel9;
   }

   /**
    * Singleton accessor method for rel10.
    */
   public static AccessStratumRelease rel10() {
      return _rel10;
   }

   /**
    * Singleton accessor method for rel11.
    */
   public static AccessStratumRelease rel11() {
      return _rel11;
   }

   /**
    * Singleton accessor method for rel12.
    */
   public static AccessStratumRelease rel12() {
      return _rel12;
   }

   /**
    * Singleton accessor method for rel13.
    */
   public static AccessStratumRelease rel13() {
      return _rel13;
   }

   /**
    * Singleton accessor method for rel14.
    */
   public static AccessStratumRelease rel14() {
      return _rel14;
   }

   /**
    * Singleton accessor method for rel15.
    */
   public static AccessStratumRelease rel15() {
      return _rel15;
   }

   /** Undefined value. */
   protected static AccessStratumRelease __undefined_() { return __undefined; }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return AccessStratumRelease.valueOf( AccessStratumRelease.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static AccessStratumRelease valueOf (int _value)
   {
      switch ((int)_value) {
         case 0: return rel8();
         case 1: return rel9();
         case 2: return rel10();
         case 3: return rel11();
         case 4: return rel12();
         case 5: return rel13();
         case 6: return rel14();
         case 7: return rel15();
         default: return __undefined_();
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      boolean extbit = buffer.decodeBit ("extbit");

      if (extbit) {
         ui = buffer.decodeSmallNonNegWholeNumber ();

         return 0x7fffffff;
      }
      else {
         ui = (int) buffer.decodeConsWholeNumber (8);

         switch (ui) {
            case 0: ret =  0; break;
            case 1: ret =  1; break;
            case 2: ret =  2; break;
            case 3: ret =  3; break;
            case 4: ret =  4; break;
            case 5: ret =  5; break;
            case 6: ret =  6; break;
            case 7: ret =  7; break;
            default: throw new Asn1InvalidEnumException (ui);
         }
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (AccessStratumRelease.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("rel8");
         case 1: return ("rel9");
         case 2: return ("rel10");
         case 3: return ("rel11");
         case 4: return ("rel12");
         case 5: return ("rel13");
         case 6: return ("rel14");
         case 7: return ("rel15");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
