/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _P00 = 0;
   public static final int _P05 = 1;
   public static final int _P10 = 2;
   public static final int _P15 = 3;
   public static final int _P20 = 4;
   public static final int _P25 = 5;
   public static final int _P30 = 6;
   public static final int _P40 = 7;
   public static final int _P50 = 8;
   public static final int _P60 = 9;
   public static final int _P70 = 10;
   public static final int _P75 = 11;
   public static final int _P80 = 12;
   public static final int _P85 = 13;
   public static final int _P90 = 14;
   public static final int _P95 = 15;

   // Singleton instances of BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p00 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(0);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p05 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(1);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p10 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(2);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p15 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(3);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p20 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(4);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p25 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(5);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p30 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(6);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p40 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(7);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p50 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(8);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p60 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(9);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p70 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(10);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p75 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(11);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p80 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(12);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p85 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(13);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p90 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(14);
   protected static final BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 _p95 = new BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13(15);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    */
   protected BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for p00.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p00() {
      return _p00;
   }

   /**
    * Singleton accessor method for p05.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p05() {
      return _p05;
   }

   /**
    * Singleton accessor method for p10.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p10() {
      return _p10;
   }

   /**
    * Singleton accessor method for p15.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p15() {
      return _p15;
   }

   /**
    * Singleton accessor method for p20.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p20() {
      return _p20;
   }

   /**
    * Singleton accessor method for p25.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p25() {
      return _p25;
   }

   /**
    * Singleton accessor method for p30.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p30() {
      return _p30;
   }

   /**
    * Singleton accessor method for p40.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p40() {
      return _p40;
   }

   /**
    * Singleton accessor method for p50.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p50() {
      return _p50;
   }

   /**
    * Singleton accessor method for p60.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p60() {
      return _p60;
   }

   /**
    * Singleton accessor method for p70.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p70() {
      return _p70;
   }

   /**
    * Singleton accessor method for p75.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p75() {
      return _p75;
   }

   /**
    * Singleton accessor method for p80.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p80() {
      return _p80;
   }

   /**
    * Singleton accessor method for p85.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p85() {
      return _p85;
   }

   /**
    * Singleton accessor method for p90.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p90() {
      return _p90;
   }

   /**
    * Singleton accessor method for p95.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 p95() {
      return _p95;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13.valueOf( BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return p00();
         case 1: return p05();
         case 2: return p10();
         case 3: return p15();
         case 4: return p20();
         case 5: return p25();
         case 6: return p30();
         case 7: return p40();
         case 8: return p50();
         case 9: return p60();
         case 10: return p70();
         case 11: return p75();
         case 12: return p80();
         case 13: return p85();
         case 14: return p90();
         case 15: return p95();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (16);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (BarringPerACDC_Category_r13_acdc_BarringConfig_r13_ac_BarringFactor_r13.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("p00");
         case 1: return ("p05");
         case 2: return ("p10");
         case 3: return ("p15");
         case 4: return ("p20");
         case 5: return ("p25");
         case 6: return ("p30");
         case 7: return ("p40");
         case 8: return ("p50");
         case 9: return ("p60");
         case 10: return ("p70");
         case 11: return ("p75");
         case 12: return ("p80");
         case 13: return ("p85");
         case 14: return ("p90");
         case 15: return ("p95");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
