/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _N4 = 0;
   public static final int _N5 = 1;
   public static final int _N6 = 2;
   public static final int _N8 = 3;
   public static final int _N9 = 4;
   public static final int _N10 = 5;
   public static final int _N12 = 6;
   public static final int _N15 = 7;
   public static final int _N16 = 8;
   public static final int _N18 = 9;
   public static final int _N20 = 10;
   public static final int _N25 = 11;
   public static final int _N30 = 12;
   public static final int _N48 = 13;
   public static final int _N50 = 14;
   public static final int _N72 = 15;
   public static final int _N75 = 16;
   public static final int _N96 = 17;
   public static final int _N100 = 18;
   public static final int _SPARE13 = 19;
   public static final int _SPARE12 = 20;
   public static final int _SPARE11 = 21;
   public static final int _SPARE10 = 22;
   public static final int _SPARE9 = 23;
   public static final int _SPARE8 = 24;
   public static final int _SPARE7 = 25;
   public static final int _SPARE6 = 26;
   public static final int _SPARE5 = 27;
   public static final int _SPARE4 = 28;
   public static final int _SPARE3 = 29;
   public static final int _SPARE2 = 30;
   public static final int _SPARE1 = 31;

   // Singleton instances of SL_CommResourcePoolV2X_r14_sizeSubchannel_r14
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n4 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(0);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n5 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(1);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n6 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(2);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n8 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(3);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n9 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(4);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n10 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(5);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n12 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(6);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n15 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(7);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n16 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(8);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n18 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(9);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n20 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(10);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n25 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(11);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n30 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(12);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n48 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(13);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n50 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(14);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n72 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(15);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n75 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(16);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n96 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(17);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _n100 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(18);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare13 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(19);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare12 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(20);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare11 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(21);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare10 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(22);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare9 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(23);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare8 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(24);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare7 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(25);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare6 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(26);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare5 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(27);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare4 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(28);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare3 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(29);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare2 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(30);
   protected static final SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 _spare1 = new SL_CommResourcePoolV2X_r14_sizeSubchannel_r14(31);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    *   16
    *   17
    *   18
    *   19
    *   20
    *   21
    *   22
    *   23
    *   24
    *   25
    *   26
    *   27
    *   28
    *   29
    *   30
    *   31
    */
   protected SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for n4.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n4() {
      return _n4;
   }

   /**
    * Singleton accessor method for n5.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n5() {
      return _n5;
   }

   /**
    * Singleton accessor method for n6.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n6() {
      return _n6;
   }

   /**
    * Singleton accessor method for n8.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n8() {
      return _n8;
   }

   /**
    * Singleton accessor method for n9.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n9() {
      return _n9;
   }

   /**
    * Singleton accessor method for n10.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n10() {
      return _n10;
   }

   /**
    * Singleton accessor method for n12.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n12() {
      return _n12;
   }

   /**
    * Singleton accessor method for n15.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n15() {
      return _n15;
   }

   /**
    * Singleton accessor method for n16.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n16() {
      return _n16;
   }

   /**
    * Singleton accessor method for n18.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n18() {
      return _n18;
   }

   /**
    * Singleton accessor method for n20.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n20() {
      return _n20;
   }

   /**
    * Singleton accessor method for n25.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n25() {
      return _n25;
   }

   /**
    * Singleton accessor method for n30.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n30() {
      return _n30;
   }

   /**
    * Singleton accessor method for n48.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n48() {
      return _n48;
   }

   /**
    * Singleton accessor method for n50.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n50() {
      return _n50;
   }

   /**
    * Singleton accessor method for n72.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n72() {
      return _n72;
   }

   /**
    * Singleton accessor method for n75.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n75() {
      return _n75;
   }

   /**
    * Singleton accessor method for n96.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n96() {
      return _n96;
   }

   /**
    * Singleton accessor method for n100.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 n100() {
      return _n100;
   }

   /**
    * Singleton accessor method for spare13.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare13() {
      return _spare13;
   }

   /**
    * Singleton accessor method for spare12.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare12() {
      return _spare12;
   }

   /**
    * Singleton accessor method for spare11.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare11() {
      return _spare11;
   }

   /**
    * Singleton accessor method for spare10.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare10() {
      return _spare10;
   }

   /**
    * Singleton accessor method for spare9.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare9() {
      return _spare9;
   }

   /**
    * Singleton accessor method for spare8.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare8() {
      return _spare8;
   }

   /**
    * Singleton accessor method for spare7.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare7() {
      return _spare7;
   }

   /**
    * Singleton accessor method for spare6.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare6() {
      return _spare6;
   }

   /**
    * Singleton accessor method for spare5.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare5() {
      return _spare5;
   }

   /**
    * Singleton accessor method for spare4.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare4() {
      return _spare4;
   }

   /**
    * Singleton accessor method for spare3.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare3() {
      return _spare3;
   }

   /**
    * Singleton accessor method for spare2.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare2() {
      return _spare2;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 spare1() {
      return _spare1;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return SL_CommResourcePoolV2X_r14_sizeSubchannel_r14.valueOf( SL_CommResourcePoolV2X_r14_sizeSubchannel_r14.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static SL_CommResourcePoolV2X_r14_sizeSubchannel_r14 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return n4();
         case 1: return n5();
         case 2: return n6();
         case 3: return n8();
         case 4: return n9();
         case 5: return n10();
         case 6: return n12();
         case 7: return n15();
         case 8: return n16();
         case 9: return n18();
         case 10: return n20();
         case 11: return n25();
         case 12: return n30();
         case 13: return n48();
         case 14: return n50();
         case 15: return n72();
         case 16: return n75();
         case 17: return n96();
         case 18: return n100();
         case 19: return spare13();
         case 20: return spare12();
         case 21: return spare11();
         case 22: return spare10();
         case 23: return spare9();
         case 24: return spare8();
         case 25: return spare7();
         case 26: return spare6();
         case 27: return spare5();
         case 28: return spare4();
         case 29: return spare3();
         case 30: return spare2();
         case 31: return spare1();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (32);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         case 16: ret =  16; break;
         case 17: ret =  17; break;
         case 18: ret =  18; break;
         case 19: ret =  19; break;
         case 20: ret =  20; break;
         case 21: ret =  21; break;
         case 22: ret =  22; break;
         case 23: ret =  23; break;
         case 24: ret =  24; break;
         case 25: ret =  25; break;
         case 26: ret =  26; break;
         case 27: ret =  27; break;
         case 28: ret =  28; break;
         case 29: ret =  29; break;
         case 30: ret =  30; break;
         case 31: ret =  31; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (SL_CommResourcePoolV2X_r14_sizeSubchannel_r14.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("n4");
         case 1: return ("n5");
         case 2: return ("n6");
         case 3: return ("n8");
         case 4: return ("n9");
         case 5: return ("n10");
         case 6: return ("n12");
         case 7: return ("n15");
         case 8: return ("n16");
         case 9: return ("n18");
         case 10: return ("n20");
         case 11: return ("n25");
         case 12: return ("n30");
         case 13: return ("n48");
         case 14: return ("n50");
         case 15: return ("n72");
         case 16: return ("n75");
         case 17: return ("n96");
         case 18: return ("n100");
         case 19: return ("spare13");
         case 20: return ("spare12");
         case 21: return ("spare11");
         case 22: return ("spare10");
         case 23: return ("spare9");
         case 24: return ("spare8");
         case 25: return ("spare7");
         case 26: return ("spare6");
         case 27: return ("spare5");
         case 28: return ("spare4");
         case 29: return ("spare3");
         case 30: return ("spare2");
         case 31: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
