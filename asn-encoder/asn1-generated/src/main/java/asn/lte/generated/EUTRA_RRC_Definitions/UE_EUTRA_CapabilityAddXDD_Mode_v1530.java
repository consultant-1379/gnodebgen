/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UE_EUTRA_CapabilityAddXDD_Mode_v1530 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UE-EUTRA-CapabilityAddXDD-Mode-v1530";
   }

   public NeighCellSI_AcquisitionParameters_v1530 neighCellSI_AcquisitionParameters_v1530;  // optional
   public UE_EUTRA_CapabilityAddXDD_Mode_v1530_reducedCP_Latency_r15 reducedCP_Latency_r15 = null;  // optional

   public UE_EUTRA_CapabilityAddXDD_Mode_v1530 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UE_EUTRA_CapabilityAddXDD_Mode_v1530 (
      NeighCellSI_AcquisitionParameters_v1530 neighCellSI_AcquisitionParameters_v1530_,
      UE_EUTRA_CapabilityAddXDD_Mode_v1530_reducedCP_Latency_r15 reducedCP_Latency_r15_
   ) {
      super();
      neighCellSI_AcquisitionParameters_v1530 = neighCellSI_AcquisitionParameters_v1530_;
      reducedCP_Latency_r15 = reducedCP_Latency_r15_;
   }

   public void init () {
      neighCellSI_AcquisitionParameters_v1530 = null;
      reducedCP_Latency_r15 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return neighCellSI_AcquisitionParameters_v1530;
         case 1: return reducedCP_Latency_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "neighCellSI-AcquisitionParameters-v1530";
         case 1: return "reducedCP-Latency-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean neighCellSI_AcquisitionParameters_v1530Present = buffer.decodeBit ("neighCellSI_AcquisitionParameters_v1530Present");
      boolean reducedCP_Latency_r15Present = buffer.decodeBit ("reducedCP_Latency_r15Present");

      // decode neighCellSI_AcquisitionParameters_v1530

      if (neighCellSI_AcquisitionParameters_v1530Present) {
         buffer.getContext().eventDispatcher.startElement("neighCellSI_AcquisitionParameters_v1530", -1);

         neighCellSI_AcquisitionParameters_v1530 = new NeighCellSI_AcquisitionParameters_v1530();
         neighCellSI_AcquisitionParameters_v1530.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("neighCellSI_AcquisitionParameters_v1530", -1);
      }
      else {
         neighCellSI_AcquisitionParameters_v1530 = null;
      }

      // decode reducedCP_Latency_r15

      if (reducedCP_Latency_r15Present) {
         buffer.getContext().eventDispatcher.startElement("reducedCP_Latency_r15", -1);

         int tval = UE_EUTRA_CapabilityAddXDD_Mode_v1530_reducedCP_Latency_r15.decodeEnumValue (buffer);
         reducedCP_Latency_r15 = UE_EUTRA_CapabilityAddXDD_Mode_v1530_reducedCP_Latency_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("reducedCP_Latency_r15", -1);
      }
      else {
         reducedCP_Latency_r15 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (neighCellSI_AcquisitionParameters_v1530 != null) neighCellSI_AcquisitionParameters_v1530.print (_sb, "neighCellSI_AcquisitionParameters_v1530", _level+1);
      if (reducedCP_Latency_r15 != null) reducedCP_Latency_r15.print (_sb, "reducedCP_Latency_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
