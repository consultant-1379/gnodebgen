/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RACH_Skip_r14_ul_ConfigInfo_r14 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer numberOfConfUL_Processes_r14;
   public RACH_Skip_r14_ul_ConfigInfo_r14_ul_SchedInterval_r14 ul_SchedInterval_r14 = null;
   public Asn1Integer ul_StartSubframe_r14;
   public Asn1BitString ul_Grant_r14;

   public RACH_Skip_r14_ul_ConfigInfo_r14 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RACH_Skip_r14_ul_ConfigInfo_r14 (
      Asn1Integer numberOfConfUL_Processes_r14_,
      RACH_Skip_r14_ul_ConfigInfo_r14_ul_SchedInterval_r14 ul_SchedInterval_r14_,
      Asn1Integer ul_StartSubframe_r14_,
      Asn1BitString ul_Grant_r14_
   ) {
      super();
      numberOfConfUL_Processes_r14 = numberOfConfUL_Processes_r14_;
      ul_SchedInterval_r14 = ul_SchedInterval_r14_;
      ul_StartSubframe_r14 = ul_StartSubframe_r14_;
      ul_Grant_r14 = ul_Grant_r14_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public RACH_Skip_r14_ul_ConfigInfo_r14 (long numberOfConfUL_Processes_r14_,
      RACH_Skip_r14_ul_ConfigInfo_r14_ul_SchedInterval_r14 ul_SchedInterval_r14_,
      long ul_StartSubframe_r14_,
      Asn1BitString ul_Grant_r14_
   ) {
      super();
      numberOfConfUL_Processes_r14 = new Asn1Integer (numberOfConfUL_Processes_r14_);
      ul_SchedInterval_r14 = ul_SchedInterval_r14_;
      ul_StartSubframe_r14 = new Asn1Integer (ul_StartSubframe_r14_);
      ul_Grant_r14 = ul_Grant_r14_;
   }

   public void init () {
      numberOfConfUL_Processes_r14 = null;
      ul_SchedInterval_r14 = null;
      ul_StartSubframe_r14 = null;
      ul_Grant_r14 = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return numberOfConfUL_Processes_r14;
         case 1: return ul_SchedInterval_r14;
         case 2: return ul_StartSubframe_r14;
         case 3: return ul_Grant_r14;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "numberOfConfUL-Processes-r14";
         case 1: return "ul-SchedInterval-r14";
         case 2: return "ul-StartSubframe-r14";
         case 3: return "ul-Grant-r14";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode numberOfConfUL_Processes_r14

      buffer.getContext().eventDispatcher.startElement("numberOfConfUL_Processes_r14", -1);

      numberOfConfUL_Processes_r14 = new Asn1Integer();
      numberOfConfUL_Processes_r14.decode (buffer, 1, 8);

      buffer.invokeCharacters(numberOfConfUL_Processes_r14.toString());
      buffer.getContext().eventDispatcher.endElement("numberOfConfUL_Processes_r14", -1);

      // decode ul_SchedInterval_r14

      buffer.getContext().eventDispatcher.startElement("ul_SchedInterval_r14", -1);

      {
         int tval = RACH_Skip_r14_ul_ConfigInfo_r14_ul_SchedInterval_r14.decodeEnumValue (buffer);
         ul_SchedInterval_r14 = RACH_Skip_r14_ul_ConfigInfo_r14_ul_SchedInterval_r14.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("ul_SchedInterval_r14", -1);

      // decode ul_StartSubframe_r14

      buffer.getContext().eventDispatcher.startElement("ul_StartSubframe_r14", -1);

      ul_StartSubframe_r14 = new Asn1Integer();
      ul_StartSubframe_r14.decode (buffer, 0, 9);

      buffer.invokeCharacters(ul_StartSubframe_r14.toString());
      buffer.getContext().eventDispatcher.endElement("ul_StartSubframe_r14", -1);

      // decode ul_Grant_r14

      buffer.getContext().eventDispatcher.startElement("ul_Grant_r14", -1);

      ul_Grant_r14 = new Asn1BitString();
      ul_Grant_r14.decode (buffer, 16, 16);

      buffer.invokeCharacters(ul_Grant_r14.toString());
      buffer.getContext().eventDispatcher.endElement("ul_Grant_r14", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (numberOfConfUL_Processes_r14 != null) numberOfConfUL_Processes_r14.print (_sb, "numberOfConfUL_Processes_r14", _level+1);
      if (ul_SchedInterval_r14 != null) ul_SchedInterval_r14.print (_sb, "ul_SchedInterval_r14", _level+1);
      if (ul_StartSubframe_r14 != null) ul_StartSubframe_r14.print (_sb, "ul_StartSubframe_r14", _level+1);
      if (ul_Grant_r14 != null) ul_Grant_r14.print (_sb, "ul_Grant_r14", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
