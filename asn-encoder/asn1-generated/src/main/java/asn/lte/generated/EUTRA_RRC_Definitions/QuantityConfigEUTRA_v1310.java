/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class QuantityConfigEUTRA_v1310 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "QuantityConfigEUTRA-v1310";
   }

   public FilterCoefficient filterCoefficientRS_SINR_r13 = null;  // default = FilterCoefficient.fc4()

   public QuantityConfigEUTRA_v1310 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public QuantityConfigEUTRA_v1310 (
      FilterCoefficient filterCoefficientRS_SINR_r13_
   ) {
      super();
      filterCoefficientRS_SINR_r13 = filterCoefficientRS_SINR_r13_;
   }

   public void init () {
      filterCoefficientRS_SINR_r13 = FilterCoefficient.fc4();
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return filterCoefficientRS_SINR_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "filterCoefficientRS-SINR-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean filterCoefficientRS_SINR_r13Present = buffer.decodeBit ("filterCoefficientRS_SINR_r13Present");

      // decode filterCoefficientRS_SINR_r13

      if (filterCoefficientRS_SINR_r13Present) {
         buffer.getContext().eventDispatcher.startElement("filterCoefficientRS_SINR_r13", -1);

         int tval = FilterCoefficient.decodeEnumValue (buffer);
         filterCoefficientRS_SINR_r13 = FilterCoefficient.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("filterCoefficientRS_SINR_r13", -1);
      }
      else {
         filterCoefficientRS_SINR_r13 = FilterCoefficient.fc4();
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (filterCoefficientRS_SINR_r13 != null) filterCoefficientRS_SINR_r13.print (_sb, "filterCoefficientRS_SINR_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
