/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type1_SinglePanel_r16 type1_SinglePanel_r16 = null;  // optional
   public UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type1_MultiPanel_r16 type1_MultiPanel_r16 = null;  // optional
   public UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type2_r16 type2_r16 = null;  // optional
   public UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type2_PortSelection_r16 type2_PortSelection_r16 = null;  // optional

   public UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16 (
      UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type1_SinglePanel_r16 type1_SinglePanel_r16_,
      UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type1_MultiPanel_r16 type1_MultiPanel_r16_,
      UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type2_r16 type2_r16_,
      UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type2_PortSelection_r16 type2_PortSelection_r16_
   ) {
      super();
      type1_SinglePanel_r16 = type1_SinglePanel_r16_;
      type1_MultiPanel_r16 = type1_MultiPanel_r16_;
      type2_r16 = type2_r16_;
      type2_PortSelection_r16 = type2_PortSelection_r16_;
   }

   public void init () {
      type1_SinglePanel_r16 = null;
      type1_MultiPanel_r16 = null;
      type2_r16 = null;
      type2_PortSelection_r16 = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return type1_SinglePanel_r16;
         case 1: return type1_MultiPanel_r16;
         case 2: return type2_r16;
         case 3: return type2_PortSelection_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "type1-SinglePanel-r16";
         case 1: return "type1-MultiPanel-r16";
         case 2: return "type2-r16";
         case 3: return "type2-PortSelection-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean type1_SinglePanel_r16Present = buffer.decodeBit ("type1_SinglePanel_r16Present");
      boolean type1_MultiPanel_r16Present = buffer.decodeBit ("type1_MultiPanel_r16Present");
      boolean type2_r16Present = buffer.decodeBit ("type2_r16Present");
      boolean type2_PortSelection_r16Present = buffer.decodeBit ("type2_PortSelection_r16Present");

      // decode type1_SinglePanel_r16

      if (type1_SinglePanel_r16Present) {
         buffer.getContext().eventDispatcher.startElement("type1_SinglePanel_r16", -1);

         int tval = UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type1_SinglePanel_r16.decodeEnumValue (buffer);
         type1_SinglePanel_r16 = UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type1_SinglePanel_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("type1_SinglePanel_r16", -1);
      }
      else {
         type1_SinglePanel_r16 = null;
      }

      // decode type1_MultiPanel_r16

      if (type1_MultiPanel_r16Present) {
         buffer.getContext().eventDispatcher.startElement("type1_MultiPanel_r16", -1);

         int tval = UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type1_MultiPanel_r16.decodeEnumValue (buffer);
         type1_MultiPanel_r16 = UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type1_MultiPanel_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("type1_MultiPanel_r16", -1);
      }
      else {
         type1_MultiPanel_r16 = null;
      }

      // decode type2_r16

      if (type2_r16Present) {
         buffer.getContext().eventDispatcher.startElement("type2_r16", -1);

         int tval = UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type2_r16.decodeEnumValue (buffer);
         type2_r16 = UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type2_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("type2_r16", -1);
      }
      else {
         type2_r16 = null;
      }

      // decode type2_PortSelection_r16

      if (type2_PortSelection_r16Present) {
         buffer.getContext().eventDispatcher.startElement("type2_PortSelection_r16", -1);

         int tval = UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type2_PortSelection_r16.decodeEnumValue (buffer);
         type2_PortSelection_r16 = UE_CapabilityRequestFilterCommon_codebookTypeRequest_r16_type2_PortSelection_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("type2_PortSelection_r16", -1);
      }
      else {
         type2_PortSelection_r16 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (type1_SinglePanel_r16 != null) type1_SinglePanel_r16.print (_sb, "type1_SinglePanel_r16", _level+1);
      if (type1_MultiPanel_r16 != null) type1_MultiPanel_r16.print (_sb, "type1_MultiPanel_r16", _level+1);
      if (type2_r16 != null) type2_r16.print (_sb, "type2_r16", _level+1);
      if (type2_PortSelection_r16 != null) type2_PortSelection_r16.print (_sb, "type2_PortSelection_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
