/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.S1AP_IEs;

import com.objsys.asn1j.runtime.*;

public class M6delay_threshold extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_S1AP_IEsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "M6delay-threshold";
   }

   // Integer constants for switch-case
   public static final int _MS30 = 0;
   public static final int _MS40 = 1;
   public static final int _MS50 = 2;
   public static final int _MS60 = 3;
   public static final int _MS70 = 4;
   public static final int _MS80 = 5;
   public static final int _MS90 = 6;
   public static final int _MS100 = 7;
   public static final int _MS150 = 8;
   public static final int _MS300 = 9;
   public static final int _MS500 = 10;
   public static final int _MS750 = 11;

   // Singleton instances of M6delay_threshold
   protected static final M6delay_threshold _ms30 = new M6delay_threshold(0);
   protected static final M6delay_threshold _ms40 = new M6delay_threshold(1);
   protected static final M6delay_threshold _ms50 = new M6delay_threshold(2);
   protected static final M6delay_threshold _ms60 = new M6delay_threshold(3);
   protected static final M6delay_threshold _ms70 = new M6delay_threshold(4);
   protected static final M6delay_threshold _ms80 = new M6delay_threshold(5);
   protected static final M6delay_threshold _ms90 = new M6delay_threshold(6);
   protected static final M6delay_threshold _ms100 = new M6delay_threshold(7);
   protected static final M6delay_threshold _ms150 = new M6delay_threshold(8);
   protected static final M6delay_threshold _ms300 = new M6delay_threshold(9);
   protected static final M6delay_threshold _ms500 = new M6delay_threshold(10);
   protected static final M6delay_threshold _ms750 = new M6delay_threshold(11);
   private static M6delay_threshold __undefined = new M6delay_threshold(-999);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    */
   protected M6delay_threshold (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for ms30.
    */
   public static M6delay_threshold ms30() {
      return _ms30;
   }

   /**
    * Singleton accessor method for ms40.
    */
   public static M6delay_threshold ms40() {
      return _ms40;
   }

   /**
    * Singleton accessor method for ms50.
    */
   public static M6delay_threshold ms50() {
      return _ms50;
   }

   /**
    * Singleton accessor method for ms60.
    */
   public static M6delay_threshold ms60() {
      return _ms60;
   }

   /**
    * Singleton accessor method for ms70.
    */
   public static M6delay_threshold ms70() {
      return _ms70;
   }

   /**
    * Singleton accessor method for ms80.
    */
   public static M6delay_threshold ms80() {
      return _ms80;
   }

   /**
    * Singleton accessor method for ms90.
    */
   public static M6delay_threshold ms90() {
      return _ms90;
   }

   /**
    * Singleton accessor method for ms100.
    */
   public static M6delay_threshold ms100() {
      return _ms100;
   }

   /**
    * Singleton accessor method for ms150.
    */
   public static M6delay_threshold ms150() {
      return _ms150;
   }

   /**
    * Singleton accessor method for ms300.
    */
   public static M6delay_threshold ms300() {
      return _ms300;
   }

   /**
    * Singleton accessor method for ms500.
    */
   public static M6delay_threshold ms500() {
      return _ms500;
   }

   /**
    * Singleton accessor method for ms750.
    */
   public static M6delay_threshold ms750() {
      return _ms750;
   }

   /** Undefined value. */
   protected static M6delay_threshold __undefined_() { return __undefined; }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return M6delay_threshold.valueOf( M6delay_threshold.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static M6delay_threshold valueOf (int _value)
   {
      switch ((int)_value) {
         case 0: return ms30();
         case 1: return ms40();
         case 2: return ms50();
         case 3: return ms60();
         case 4: return ms70();
         case 5: return ms80();
         case 6: return ms90();
         case 7: return ms100();
         case 8: return ms150();
         case 9: return ms300();
         case 10: return ms500();
         case 11: return ms750();
         default: return __undefined_();
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      boolean extbit = buffer.decodeBit ("extbit");

      if (extbit) {
         ui = buffer.decodeSmallNonNegWholeNumber ();

         return 0x7fffffff;
      }
      else {
         ui = (int) buffer.decodeConsWholeNumber (12);

         switch (ui) {
            case 0: ret =  0; break;
            case 1: ret =  1; break;
            case 2: ret =  2; break;
            case 3: ret =  3; break;
            case 4: ret =  4; break;
            case 5: ret =  5; break;
            case 6: ret =  6; break;
            case 7: ret =  7; break;
            case 8: ret =  8; break;
            case 9: ret =  9; break;
            case 10: ret =  10; break;
            case 11: ret =  11; break;
            default: throw new Asn1InvalidEnumException (ui);
         }
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (M6delay_threshold.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("ms30");
         case 1: return ("ms40");
         case 2: return ("ms50");
         case 3: return ("ms60");
         case 4: return ("ms70");
         case 5: return ("ms80");
         case 6: return ("ms90");
         case 7: return ("ms100");
         case 8: return ("ms150");
         case 9: return ("ms300");
         case 10: return ("ms500");
         case 11: return ("ms750");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
