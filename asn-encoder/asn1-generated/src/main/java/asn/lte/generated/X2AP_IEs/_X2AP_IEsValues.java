/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.X2AP_IEs;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.X2AP_Containers.X2AP_PROTOCOL_EXTENSION;
import asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID;
import asn.lte.generated.X2AP_CommonDataTypes.Criticality;
import asn.lte.generated.X2AP_CommonDataTypes.Presence;
import asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues;
import asn.lte.generated.X2AP_Containers.X2AP_PROTOCOL_IES;

public class _X2AP_IEsValues {

   public static final X2AP_PROTOCOL_EXTENSION[] ABSInformationFDD_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ABSInformationTDD_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ABS_Status_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] AdditionalSpecialSubframe_Info_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] AdditionalSpecialSubframeExtension_Info_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] AllocationAndRetentionPriority_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] AS_SecurityInformation_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] BluetoothMeasurementConfiguration_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] BPLMN_ID_Info_EUTRA_Item_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] BPLMN_ID_Info_NR_Item_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CellBasedMDT_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CellBasedQMC_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CellReplacingInfo_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CellType_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CNTypeRestrictionsItem_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CoMPHypothesisSetItem_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CoMPInformation_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CoMPInformationItem_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CoMPInformationStartTime_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CompositeAvailableCapacity_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CompositeAvailableCapacityGroup_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] COUNTvalue_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] COUNTValueExtended_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] COUNTvaluePDCP_SNlength18_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CriticalityDiagnostics_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CriticalityDiagnostics_IE_List_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CSIReportList_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CSIReportPerCSIProcess_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] CSIReportPerCSIProcessItem_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] DataTrafficResourceIndication_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] DeliveryStatus_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] DynamicNAICSInformation_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ECGI_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] EnhancedRNTP_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] EnhancedRNTPStartTime_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] EN_DC_ResourceConfigurationExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ERABActivityNotifyItem_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] E_RAB_Level_QoS_Parameters_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_DownlinkPacketLossRate),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(Packet_LossRate.class, null, "Packet-LossRate"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_UplinkPacketLossRate),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(Packet_LossRate.class, null, "Packet-LossRate"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_IES[] E_RAB_ItemIEs = 
      new X2AP_PROTOCOL_IES[] {
         new X2AP_PROTOCOL_IES (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_E_RAB_Item),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(E_RAB_Item.class, null, "E-RAB-Item"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.mandatory())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] E_RAB_Item_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_IES[] E_RABUsageReport_ItemIEs = 
      new X2AP_PROTOCOL_IES[] {
         new X2AP_PROTOCOL_IES (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_E_RABUsageReport_Item),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(E_RABUsageReport_Item.class, null, "E-RABUsageReport-Item"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.mandatory())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] E_RABUsageReport_Item_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ExpectedUEBehaviour_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ExpectedUEActivityBehaviour_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ExtendedULInterferenceOverloadInfo_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] FDD_Info_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_UL_EARFCNExtension),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject(),
            new Asn1OpenTypeField(EARFCNExtension.class, null, "EARFCNExtension"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_DL_EARFCNExtension),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject(),
            new Asn1OpenTypeField(EARFCNExtension.class, null, "EARFCNExtension"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_OffsetOfNbiotChannelNumberToDL_EARFCN),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject(),
            new Asn1OpenTypeField(OffsetOfNbiotChannelNumberToEARFCN.class, OffsetOfNbiotChannelNumberToEARFCN.DECODER, "OffsetOfNbiotChannelNumberToEARFCN"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_OffsetOfNbiotChannelNumberToUL_EARFCN),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject(),
            new Asn1OpenTypeField(OffsetOfNbiotChannelNumberToEARFCN.class, OffsetOfNbiotChannelNumberToEARFCN.DECODER, "OffsetOfNbiotChannelNumberToEARFCN"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_NRS_NSSS_PowerOffset),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(NRS_NSSS_PowerOffset.class, NRS_NSSS_PowerOffset.DECODER, "NRS-NSSS-PowerOffset"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_NSSS_NumOccasionDifferentPrecoder),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(NSSS_NumOccasionDifferentPrecoder.class, NSSS_NumOccasionDifferentPrecoder.DECODER, "NSSS-NumOccasionDifferentPrecoder"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] FDD_InfoNeighbourServedNRCell_Information_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ForbiddenTAs_Item_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ForbiddenLAs_Item_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] FreqBandNrItem_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] GBR_QosInformation_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_extended_e_RAB_MaximumBitrateDL),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(ExtendedBitRate.class, null, "ExtendedBitRate"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_extended_e_RAB_MaximumBitrateUL),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(ExtendedBitRate.class, null, "ExtendedBitRate"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_extended_e_RAB_GuaranteedBitrateDL),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(ExtendedBitRate.class, null, "ExtendedBitRate"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_extended_e_RAB_GuaranteedBitrateUL),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(ExtendedBitRate.class, null, "ExtendedBitRate"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] GlobalENB_ID_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] GlobalGNB_ID_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] GTPtunnelEndpoint_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] GU_Group_ID_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] GUMMEI_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] HandoverRestrictionList_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_NRrestrictioninEPSasSecondaryRAT),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(NRrestrictioninEPSasSecondaryRAT.class, NRrestrictioninEPSasSecondaryRAT.DECODER, "NRrestrictioninEPSasSecondaryRAT"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_CNTypeRestrictions),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(CNTypeRestrictions.class, null, "CNTypeRestrictions"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_NRrestrictionin5GS),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(NRrestrictionin5GS.class, NRrestrictionin5GS.DECODER, "NRrestrictionin5GS"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_LastNG_RANPLMNIdentity),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(PLMN_Identity.class, null, "PLMN-Identity"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] HWLoadIndicator_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] LastVisitedEUTRANCellInformation_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_Time_UE_StayedInCell_EnhancedGranularity),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(Time_UE_StayedInCell_EnhancedGranularity.class, null, "Time-UE-StayedInCell-EnhancedGranularity"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_HO_cause),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(Cause.class, null, "Cause"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] LocationInformationSgNB_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] LocationReportingInformation_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] M1PeriodicReporting_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] M1ThresholdEventA2_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] M3Configuration_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] M4Configuration_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] M5Configuration_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] M6Configuration_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] M7Configuration_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] MDT_Configuration_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_M3Configuration),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(M3Configuration.class, null, "M3Configuration"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.conditional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_M4Configuration),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(M4Configuration.class, null, "M4Configuration"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.conditional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_M5Configuration),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(M5Configuration.class, null, "M5Configuration"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.conditional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_MDT_Location_Info),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(MDT_Location_Info.class, null, "MDT-Location-Info"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_SignallingBasedMDTPLMNList),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(MDTPLMNList.class, null, "MDTPLMNList"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_M6Configuration),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(M6Configuration.class, null, "M6Configuration"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.conditional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_M7Configuration),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(M7Configuration.class, null, "M7Configuration"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.conditional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_BluetoothMeasurementConfiguration),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(BluetoothMeasurementConfiguration.class, null, "BluetoothMeasurementConfiguration"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_WLANMeasurementConfiguration),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(WLANMeasurementConfiguration.class, null, "WLANMeasurementConfiguration"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] MeNBResourceCoordinationInformationExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_NRCGI),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(NRCGI.class, null, "NRCGI"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_MeNBCoordinationAssistanceInformation),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject(),
            new Asn1OpenTypeField(MeNBCoordinationAssistanceInformation.class, MeNBCoordinationAssistanceInformation.DECODER, "MeNBCoordinationAssistanceInformation"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] MBSFN_Subframe_Info_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] BandInfo_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] SplitSRB_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] Neighbour_Information_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_NeighbourTAC),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(TAC.class, null, "TAC"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_eARFCNExtension),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject(),
            new Asn1OpenTypeField(EARFCNExtension.class, null, "EARFCNExtension"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] NRFreqInfo_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] NRCGI_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] NRNeighbour_Information_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] NR_TxBW_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] NRUeReport_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] NRUESecurityCapabilities_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] PLMNAreaBasedQMC_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] PRACH_Configuration_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ProSeAuthorized_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_ProSeUEtoNetworkRelaying),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(ProSeUEtoNetworkRelaying.class, ProSeUEtoNetworkRelaying.DECODER, "ProSeUEtoNetworkRelaying"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ProtectedEUTRAResourceIndication_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ProtectedFootprintTimePattern_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ProtectedResourceList_Item_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] RadioResourceStatus_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_DL_scheduling_PDCCH_CCE_usage),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(DL_scheduling_PDCCH_CCE_usage.class, null, "DL-scheduling-PDCCH-CCE-usage"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_UL_scheduling_PDCCH_CCE_usage),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(UL_scheduling_PDCCH_CCE_usage.class, null, "UL-scheduling-PDCCH-CCE-usage"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] RelativeNarrowbandTxPower_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_enhancedRNTP),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(EnhancedRNTP.class, null, "EnhancedRNTP"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ReservedSubframePattern_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] RLC_Status_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] RSRPMeasurementResult_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] RSRPMRList_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_UEID),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(UEID.class, null, "UEID"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] S1TNLLoadIndicator_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_IES[] SecondaryRATUsageReport_ItemIEs = 
      new X2AP_PROTOCOL_IES[] {
         new X2AP_PROTOCOL_IES (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_SecondaryRATUsageReport_Item),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject(),
            new Asn1OpenTypeField(SecondaryRATUsageReport_Item.class, null, "SecondaryRATUsageReport-Item"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.mandatory())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] SecondaryRATUsageReport_Item_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ServedCell_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_NRNeighbourInfoToAdd),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(NRNeighbour_Information.class, null, "NRNeighbour-Information"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ServedCell_Information_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_Number_of_Antennaports),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(Number_of_Antennaports.class, Number_of_Antennaports.DECODER, "Number-of-Antennaports"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_PRACH_Configuration),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(PRACH_Configuration.class, null, "PRACH-Configuration"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_MBSFN_Subframe_Info),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(MBSFN_Subframe_Infolist.class, null, "MBSFN-Subframe-Infolist"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_CSG_Id),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(CSG_Id.class, null, "CSG-Id"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_MBMS_Service_Area_List),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(MBMS_Service_Area_Identity_List.class, null, "MBMS-Service-Area-Identity-List"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_MultibandInfoList),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(MultibandInfoList.class, null, "MultibandInfoList"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_FreqBandIndicatorPriority),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(FreqBandIndicatorPriority.class, FreqBandIndicatorPriority.DECODER, "FreqBandIndicatorPriority"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_BandwidthReducedSI),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(BandwidthReducedSI.class, BandwidthReducedSI.DECODER, "BandwidthReducedSI"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_ProtectedEUTRAResourceIndication),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(ProtectedEUTRAResourceIndication.class, null, "ProtectedEUTRAResourceIndication"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_BPLMN_ID_Info_EUTRA),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(BPLMN_ID_Info_EUTRA.class, null, "BPLMN-ID-Info-EUTRA"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] SgNBResourceCoordinationInformationExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_ECGI),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(ECGI.class, null, "ECGI"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_SgNBCoordinationAssistanceInformation),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject(),
            new Asn1OpenTypeField(SgNBCoordinationAssistanceInformation.class, SgNBCoordinationAssistanceInformation.DECODER, "SgNBCoordinationAssistanceInformation"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] SpecialSubframe_Info_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] Subscription_Based_UE_DifferentiationInfo_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ScheduledCommunicationTime_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] SubbandCQI_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] SubbandCQIItem_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] SupportedSULFreqBandItem_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] SULInformation_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] TABasedMDT_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] TAIBasedMDT_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] TAI_Item_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] TABasedQMC_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] TAIBasedQMC_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] TDD_Info_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_AdditionalSpecialSubframe_Info),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(AdditionalSpecialSubframe_Info.class, null, "AdditionalSpecialSubframe-Info"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_eARFCNExtension),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject(),
            new Asn1OpenTypeField(EARFCNExtension.class, null, "EARFCNExtension"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_AdditionalSpecialSubframeExtension_Info),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(AdditionalSpecialSubframeExtension_Info.class, null, "AdditionalSpecialSubframeExtension-Info"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_OffsetOfNbiotChannelNumberToDL_EARFCN),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject(),
            new Asn1OpenTypeField(OffsetOfNbiotChannelNumberToEARFCN.class, OffsetOfNbiotChannelNumberToEARFCN.DECODER, "OffsetOfNbiotChannelNumberToEARFCN"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_NBIoT_UL_DL_AlignmentOffset),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.reject(),
            new Asn1OpenTypeField(NBIoT_UL_DL_AlignmentOffset.class, NBIoT_UL_DL_AlignmentOffset.DECODER, "NBIoT-UL-DL-AlignmentOffset"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] TDD_InfoNeighbourServedNRCell_Information_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] TraceActivation_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_MDTConfiguration),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(MDT_Configuration.class, null, "MDT-Configuration"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_UEAppLayerMeasConfig),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(UEAppLayerMeasConfig.class, null, "UEAppLayerMeasConfig"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] Tunnel_Information_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] UEAggregate_MaximumBitrate_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_extended_uEaggregateMaximumBitRateDownlink),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(ExtendedBitRate.class, null, "ExtendedBitRate"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional()),
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_extended_uEaggregateMaximumBitRateUplink),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(ExtendedBitRate.class, null, "ExtendedBitRate"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] UEAppLayerMeasConfig_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
         new X2AP_PROTOCOL_EXTENSION (
            new asn.lte.generated.X2AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.X2AP_Constants._X2AP_ConstantsValues.id_serviceType),
            asn.lte.generated.X2AP_CommonDataTypes.Criticality.ignore(),
            new Asn1OpenTypeField(ServiceType.class, ServiceType.DECODER, "ServiceType"),
            asn.lte.generated.X2AP_CommonDataTypes.Presence.optional())
      };

   public static final X2AP_PROTOCOL_EXTENSION[] UESecurityCapabilities_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] UE_Sidelink_Aggregate_MaximumBitRate_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] UEsToBeResetList_Item_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ULandDLSharing_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ULConfiguration_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] UL_HighInterferenceIndicationInfo_Item_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] ULOnlySharing_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] UsableABSInformationFDD_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] UsableABSInformationTDD_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] V2XServicesAuthorized_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] WidebandCQI_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

   public static final X2AP_PROTOCOL_EXTENSION[] WLANMeasurementConfiguration_ExtIEs = 
      new X2AP_PROTOCOL_EXTENSION[] {
      };

}

