/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformationBlockType12_r9 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SystemInformationBlockType12-r9";
   }

   public Asn1BitString messageIdentifier_r9;
   public Asn1BitString serialNumber_r9;
   public SystemInformationBlockType12_r9_warningMessageSegmentType_r9 warningMessageSegmentType_r9 = null;
   public Asn1Integer warningMessageSegmentNumber_r9;
   public Asn1OctetString warningMessageSegment_r9;
   public Asn1OctetString dataCodingScheme_r9;  // optional
   public Asn1OctetString lateNonCriticalExtension;  // optional
   public boolean mV2ExtPresent;
   public Asn1OctetString warningAreaCoordinatesSegment_r15;  // optional
   public Asn1OpenExt extElem1;

   public SystemInformationBlockType12_r9 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SystemInformationBlockType12_r9 (
      Asn1BitString messageIdentifier_r9_,
      Asn1BitString serialNumber_r9_,
      SystemInformationBlockType12_r9_warningMessageSegmentType_r9 warningMessageSegmentType_r9_,
      Asn1Integer warningMessageSegmentNumber_r9_,
      Asn1OctetString warningMessageSegment_r9_,
      Asn1OctetString dataCodingScheme_r9_,
      Asn1OctetString lateNonCriticalExtension_,
      Asn1OctetString warningAreaCoordinatesSegment_r15_
   ) {
      super();
      messageIdentifier_r9 = messageIdentifier_r9_;
      serialNumber_r9 = serialNumber_r9_;
      warningMessageSegmentType_r9 = warningMessageSegmentType_r9_;
      warningMessageSegmentNumber_r9 = warningMessageSegmentNumber_r9_;
      warningMessageSegment_r9 = warningMessageSegment_r9_;
      dataCodingScheme_r9 = dataCodingScheme_r9_;
      lateNonCriticalExtension = lateNonCriticalExtension_;
      warningAreaCoordinatesSegment_r15 = warningAreaCoordinatesSegment_r15_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SystemInformationBlockType12_r9 (
      Asn1BitString messageIdentifier_r9_,
      Asn1BitString serialNumber_r9_,
      SystemInformationBlockType12_r9_warningMessageSegmentType_r9 warningMessageSegmentType_r9_,
      Asn1Integer warningMessageSegmentNumber_r9_,
      Asn1OctetString warningMessageSegment_r9_
   ) {
      super();
      messageIdentifier_r9 = messageIdentifier_r9_;
      serialNumber_r9 = serialNumber_r9_;
      warningMessageSegmentType_r9 = warningMessageSegmentType_r9_;
      warningMessageSegmentNumber_r9 = warningMessageSegmentNumber_r9_;
      warningMessageSegment_r9 = warningMessageSegment_r9_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SystemInformationBlockType12_r9 (Asn1BitString messageIdentifier_r9_,
      Asn1BitString serialNumber_r9_,
      SystemInformationBlockType12_r9_warningMessageSegmentType_r9 warningMessageSegmentType_r9_,
      long warningMessageSegmentNumber_r9_,
      byte[] warningMessageSegment_r9_,
      byte[] dataCodingScheme_r9_,
      byte[] lateNonCriticalExtension_,
      byte[] warningAreaCoordinatesSegment_r15_
   ) {
      super();
      messageIdentifier_r9 = messageIdentifier_r9_;
      serialNumber_r9 = serialNumber_r9_;
      warningMessageSegmentType_r9 = warningMessageSegmentType_r9_;
      warningMessageSegmentNumber_r9 = new Asn1Integer (warningMessageSegmentNumber_r9_);
      warningMessageSegment_r9 = new Asn1OctetString (warningMessageSegment_r9_);
      dataCodingScheme_r9 = new Asn1OctetString (dataCodingScheme_r9_);
      lateNonCriticalExtension = new Asn1OctetString (lateNonCriticalExtension_);
      warningAreaCoordinatesSegment_r15 = new Asn1OctetString (warningAreaCoordinatesSegment_r15_);
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public SystemInformationBlockType12_r9 (
      Asn1BitString messageIdentifier_r9_,
      Asn1BitString serialNumber_r9_,
      SystemInformationBlockType12_r9_warningMessageSegmentType_r9 warningMessageSegmentType_r9_,
      long warningMessageSegmentNumber_r9_,
      byte[] warningMessageSegment_r9_
   ) {
      super();
      messageIdentifier_r9 = messageIdentifier_r9_;
      serialNumber_r9 = serialNumber_r9_;
      warningMessageSegmentType_r9 = warningMessageSegmentType_r9_;
      warningMessageSegmentNumber_r9 = new Asn1Integer (warningMessageSegmentNumber_r9_);
      warningMessageSegment_r9 = new Asn1OctetString (warningMessageSegment_r9_);
   }

   public void init () {
      messageIdentifier_r9 = null;
      serialNumber_r9 = null;
      warningMessageSegmentType_r9 = null;
      warningMessageSegmentNumber_r9 = null;
      warningMessageSegment_r9 = null;
      dataCodingScheme_r9 = null;
      lateNonCriticalExtension = null;
      warningAreaCoordinatesSegment_r15 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 9; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return messageIdentifier_r9;
         case 1: return serialNumber_r9;
         case 2: return warningMessageSegmentType_r9;
         case 3: return warningMessageSegmentNumber_r9;
         case 4: return warningMessageSegment_r9;
         case 5: return dataCodingScheme_r9;
         case 6: return lateNonCriticalExtension;
         case 7: return warningAreaCoordinatesSegment_r15;
         case 8: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "messageIdentifier-r9";
         case 1: return "serialNumber-r9";
         case 2: return "warningMessageSegmentType-r9";
         case 3: return "warningMessageSegmentNumber-r9";
         case 4: return "warningMessageSegment-r9";
         case 5: return "dataCodingScheme-r9";
         case 6: return "lateNonCriticalExtension";
         case 7: return "warningAreaCoordinatesSegment-r15";
         case 8: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean dataCodingScheme_r9Present = buffer.decodeBit ("dataCodingScheme_r9Present");
      boolean lateNonCriticalExtensionPresent = buffer.decodeBit ("lateNonCriticalExtensionPresent");

      // decode messageIdentifier_r9

      buffer.getContext().eventDispatcher.startElement("messageIdentifier_r9", -1);

      messageIdentifier_r9 = new Asn1BitString();
      messageIdentifier_r9.decode (buffer, 16, 16);

      buffer.invokeCharacters(messageIdentifier_r9.toString());
      buffer.getContext().eventDispatcher.endElement("messageIdentifier_r9", -1);

      // decode serialNumber_r9

      buffer.getContext().eventDispatcher.startElement("serialNumber_r9", -1);

      serialNumber_r9 = new Asn1BitString();
      serialNumber_r9.decode (buffer, 16, 16);

      buffer.invokeCharacters(serialNumber_r9.toString());
      buffer.getContext().eventDispatcher.endElement("serialNumber_r9", -1);

      // decode warningMessageSegmentType_r9

      buffer.getContext().eventDispatcher.startElement("warningMessageSegmentType_r9", -1);

      {
         int tval = SystemInformationBlockType12_r9_warningMessageSegmentType_r9.decodeEnumValue (buffer);
         warningMessageSegmentType_r9 = SystemInformationBlockType12_r9_warningMessageSegmentType_r9.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("warningMessageSegmentType_r9", -1);

      // decode warningMessageSegmentNumber_r9

      buffer.getContext().eventDispatcher.startElement("warningMessageSegmentNumber_r9", -1);

      warningMessageSegmentNumber_r9 = new Asn1Integer();
      warningMessageSegmentNumber_r9.decode (buffer, 0, 63);

      buffer.invokeCharacters(warningMessageSegmentNumber_r9.toString());
      buffer.getContext().eventDispatcher.endElement("warningMessageSegmentNumber_r9", -1);

      // decode warningMessageSegment_r9

      buffer.getContext().eventDispatcher.startElement("warningMessageSegment_r9", -1);

      warningMessageSegment_r9 = new Asn1OctetString();
      warningMessageSegment_r9.decode (buffer);

      buffer.invokeCharacters(warningMessageSegment_r9.toString());
      buffer.getContext().eventDispatcher.endElement("warningMessageSegment_r9", -1);

      // decode dataCodingScheme_r9

      if (dataCodingScheme_r9Present) {
         buffer.getContext().eventDispatcher.startElement("dataCodingScheme_r9", -1);

         dataCodingScheme_r9 = new Asn1OctetString();
         dataCodingScheme_r9.decode (buffer, 1, 1);

         buffer.invokeCharacters(dataCodingScheme_r9.toString());
         buffer.getContext().eventDispatcher.endElement("dataCodingScheme_r9", -1);
      }
      else {
         dataCodingScheme_r9 = null;
      }

      // decode lateNonCriticalExtension

      if (lateNonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("lateNonCriticalExtension", -1);

         lateNonCriticalExtension = new Asn1OctetString();
         lateNonCriticalExtension.decode (buffer);

         buffer.invokeCharacters(lateNonCriticalExtension.toString());
         buffer.getContext().eventDispatcher.endElement("lateNonCriticalExtension", -1);
      }
      else {
         lateNonCriticalExtension = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean warningAreaCoordinatesSegment_r15Present = buffer.decodeBit ("warningAreaCoordinatesSegment_r15Present");

            // decode warningAreaCoordinatesSegment_r15

            if (warningAreaCoordinatesSegment_r15Present) {
               buffer.getContext().eventDispatcher.startElement("warningAreaCoordinatesSegment_r15", -1);

               warningAreaCoordinatesSegment_r15 = new Asn1OctetString();
               warningAreaCoordinatesSegment_r15.decode (buffer);

               buffer.invokeCharacters(warningAreaCoordinatesSegment_r15.toString());
               buffer.getContext().eventDispatcher.endElement("warningAreaCoordinatesSegment_r15", -1);
            }
            else {
               warningAreaCoordinatesSegment_r15 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (messageIdentifier_r9 != null) messageIdentifier_r9.print (_sb, "messageIdentifier_r9", _level+1);
      if (serialNumber_r9 != null) serialNumber_r9.print (_sb, "serialNumber_r9", _level+1);
      if (warningMessageSegmentType_r9 != null) warningMessageSegmentType_r9.print (_sb, "warningMessageSegmentType_r9", _level+1);
      if (warningMessageSegmentNumber_r9 != null) warningMessageSegmentNumber_r9.print (_sb, "warningMessageSegmentNumber_r9", _level+1);
      if (warningMessageSegment_r9 != null) warningMessageSegment_r9.print (_sb, "warningMessageSegment_r9", _level+1);
      if (dataCodingScheme_r9 != null) dataCodingScheme_r9.print (_sb, "dataCodingScheme_r9", _level+1);
      if (lateNonCriticalExtension != null) lateNonCriticalExtension.print (_sb, "lateNonCriticalExtension", _level+1);
      if (warningAreaCoordinatesSegment_r15 != null) warningAreaCoordinatesSegment_r15.print (_sb, "warningAreaCoordinatesSegment_r15", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
