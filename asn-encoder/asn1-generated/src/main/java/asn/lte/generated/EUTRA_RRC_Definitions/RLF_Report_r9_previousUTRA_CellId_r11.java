/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RLF_Report_r9_previousUTRA_CellId_r11 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public ARFCN_ValueUTRA carrierFreq_r11;
   public RLF_Report_r9_previousUTRA_CellId_r11_physCellId_r11 physCellId_r11;
   public CellGlobalIdUTRA cellGlobalId_r11;  // optional

   public RLF_Report_r9_previousUTRA_CellId_r11 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RLF_Report_r9_previousUTRA_CellId_r11 (
      ARFCN_ValueUTRA carrierFreq_r11_,
      RLF_Report_r9_previousUTRA_CellId_r11_physCellId_r11 physCellId_r11_,
      CellGlobalIdUTRA cellGlobalId_r11_
   ) {
      super();
      carrierFreq_r11 = carrierFreq_r11_;
      physCellId_r11 = physCellId_r11_;
      cellGlobalId_r11 = cellGlobalId_r11_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public RLF_Report_r9_previousUTRA_CellId_r11 (
      ARFCN_ValueUTRA carrierFreq_r11_,
      RLF_Report_r9_previousUTRA_CellId_r11_physCellId_r11 physCellId_r11_
   ) {
      super();
      carrierFreq_r11 = carrierFreq_r11_;
      physCellId_r11 = physCellId_r11_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public RLF_Report_r9_previousUTRA_CellId_r11 (long carrierFreq_r11_,
      RLF_Report_r9_previousUTRA_CellId_r11_physCellId_r11 physCellId_r11_,
      CellGlobalIdUTRA cellGlobalId_r11_
   ) {
      super();
      carrierFreq_r11 = new ARFCN_ValueUTRA (carrierFreq_r11_);
      physCellId_r11 = physCellId_r11_;
      cellGlobalId_r11 = cellGlobalId_r11_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public RLF_Report_r9_previousUTRA_CellId_r11 (
      long carrierFreq_r11_,
      RLF_Report_r9_previousUTRA_CellId_r11_physCellId_r11 physCellId_r11_
   ) {
      super();
      carrierFreq_r11 = new ARFCN_ValueUTRA (carrierFreq_r11_);
      physCellId_r11 = physCellId_r11_;
   }

   public void init () {
      carrierFreq_r11 = null;
      physCellId_r11 = null;
      cellGlobalId_r11 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return carrierFreq_r11;
         case 1: return physCellId_r11;
         case 2: return cellGlobalId_r11;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "carrierFreq-r11";
         case 1: return "physCellId-r11";
         case 2: return "cellGlobalId-r11";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean cellGlobalId_r11Present = buffer.decodeBit ("cellGlobalId_r11Present");

      // decode carrierFreq_r11

      buffer.getContext().eventDispatcher.startElement("carrierFreq_r11", -1);

      carrierFreq_r11 = new ARFCN_ValueUTRA();
      carrierFreq_r11.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("carrierFreq_r11", -1);

      // decode physCellId_r11

      buffer.getContext().eventDispatcher.startElement("physCellId_r11", -1);

      physCellId_r11 = new RLF_Report_r9_previousUTRA_CellId_r11_physCellId_r11();
      physCellId_r11.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("physCellId_r11", -1);

      // decode cellGlobalId_r11

      if (cellGlobalId_r11Present) {
         buffer.getContext().eventDispatcher.startElement("cellGlobalId_r11", -1);

         cellGlobalId_r11 = new CellGlobalIdUTRA();
         cellGlobalId_r11.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cellGlobalId_r11", -1);
      }
      else {
         cellGlobalId_r11 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (carrierFreq_r11 != null) carrierFreq_r11.print (_sb, "carrierFreq_r11", _level+1);
      if (physCellId_r11 != null) physCellId_r11.print (_sb, "physCellId_r11", _level+1);
      if (cellGlobalId_r11 != null) cellGlobalId_r11.print (_sb, "cellGlobalId_r11", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
