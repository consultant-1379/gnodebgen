/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;

public class BandCombinationInfoSN extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "BandCombinationInfoSN";
   }

   public BandCombinationIndex bandCombinationIndex;
   public FeatureSetEntryIndex requestedFeatureSets;

   public BandCombinationInfoSN () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public BandCombinationInfoSN (
      BandCombinationIndex bandCombinationIndex_,
      FeatureSetEntryIndex requestedFeatureSets_
   ) {
      super();
      bandCombinationIndex = bandCombinationIndex_;
      requestedFeatureSets = requestedFeatureSets_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public BandCombinationInfoSN (long bandCombinationIndex_,
      long requestedFeatureSets_
   ) {
      super();
      bandCombinationIndex = new BandCombinationIndex (bandCombinationIndex_);
      requestedFeatureSets = new FeatureSetEntryIndex (requestedFeatureSets_);
   }

   public void init () {
      bandCombinationIndex = null;
      requestedFeatureSets = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return bandCombinationIndex;
         case 1: return requestedFeatureSets;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "bandCombinationIndex";
         case 1: return "requestedFeatureSets";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode bandCombinationIndex

      buffer.getContext().eventDispatcher.startElement("bandCombinationIndex", -1);

      bandCombinationIndex = new BandCombinationIndex();
      bandCombinationIndex.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("bandCombinationIndex", -1);

      // decode requestedFeatureSets

      buffer.getContext().eventDispatcher.startElement("requestedFeatureSets", -1);

      requestedFeatureSets = new FeatureSetEntryIndex();
      requestedFeatureSets.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("requestedFeatureSets", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (bandCombinationIndex != null) bandCombinationIndex.print (_sb, "bandCombinationIndex", _level+1);
      if (requestedFeatureSets != null) requestedFeatureSets.print (_sb, "requestedFeatureSets", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
