/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PUSCH_ConfigDedicated extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PUSCH-ConfigDedicated";
   }

   public Asn1Integer betaOffset_ACK_Index;
   public Asn1Integer betaOffset_RI_Index;
   public Asn1Integer betaOffset_CQI_Index;

   public PUSCH_ConfigDedicated () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PUSCH_ConfigDedicated (
      Asn1Integer betaOffset_ACK_Index_,
      Asn1Integer betaOffset_RI_Index_,
      Asn1Integer betaOffset_CQI_Index_
   ) {
      super();
      betaOffset_ACK_Index = betaOffset_ACK_Index_;
      betaOffset_RI_Index = betaOffset_RI_Index_;
      betaOffset_CQI_Index = betaOffset_CQI_Index_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PUSCH_ConfigDedicated (long betaOffset_ACK_Index_,
      long betaOffset_RI_Index_,
      long betaOffset_CQI_Index_
   ) {
      super();
      betaOffset_ACK_Index = new Asn1Integer (betaOffset_ACK_Index_);
      betaOffset_RI_Index = new Asn1Integer (betaOffset_RI_Index_);
      betaOffset_CQI_Index = new Asn1Integer (betaOffset_CQI_Index_);
   }

   public void init () {
      betaOffset_ACK_Index = null;
      betaOffset_RI_Index = null;
      betaOffset_CQI_Index = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return betaOffset_ACK_Index;
         case 1: return betaOffset_RI_Index;
         case 2: return betaOffset_CQI_Index;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "betaOffset-ACK-Index";
         case 1: return "betaOffset-RI-Index";
         case 2: return "betaOffset-CQI-Index";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode betaOffset_ACK_Index

      buffer.getContext().eventDispatcher.startElement("betaOffset_ACK_Index", -1);

      betaOffset_ACK_Index = new Asn1Integer();
      betaOffset_ACK_Index.decode (buffer, 0, 15);

      buffer.invokeCharacters(betaOffset_ACK_Index.toString());
      buffer.getContext().eventDispatcher.endElement("betaOffset_ACK_Index", -1);

      // decode betaOffset_RI_Index

      buffer.getContext().eventDispatcher.startElement("betaOffset_RI_Index", -1);

      betaOffset_RI_Index = new Asn1Integer();
      betaOffset_RI_Index.decode (buffer, 0, 15);

      buffer.invokeCharacters(betaOffset_RI_Index.toString());
      buffer.getContext().eventDispatcher.endElement("betaOffset_RI_Index", -1);

      // decode betaOffset_CQI_Index

      buffer.getContext().eventDispatcher.startElement("betaOffset_CQI_Index", -1);

      betaOffset_CQI_Index = new Asn1Integer();
      betaOffset_CQI_Index.decode (buffer, 0, 15);

      buffer.invokeCharacters(betaOffset_CQI_Index.toString());
      buffer.getContext().eventDispatcher.endElement("betaOffset_CQI_Index", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (betaOffset_ACK_Index != null) betaOffset_ACK_Index.print (_sb, "betaOffset_ACK_Index", _level+1);
      if (betaOffset_RI_Index != null) betaOffset_RI_Index.print (_sb, "betaOffset_RI_Index", _level+1);
      if (betaOffset_CQI_Index != null) betaOffset_CQI_Index.print (_sb, "betaOffset_CQI_Index", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
