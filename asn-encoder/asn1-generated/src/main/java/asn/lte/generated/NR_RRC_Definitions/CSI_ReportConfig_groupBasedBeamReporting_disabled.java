/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CSI_ReportConfig_groupBasedBeamReporting_disabled extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CSI_ReportConfig_groupBasedBeamReporting_disabled_nrofReportedRS nrofReportedRS = null;  // optional

   public CSI_ReportConfig_groupBasedBeamReporting_disabled () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CSI_ReportConfig_groupBasedBeamReporting_disabled (
      CSI_ReportConfig_groupBasedBeamReporting_disabled_nrofReportedRS nrofReportedRS_
   ) {
      super();
      nrofReportedRS = nrofReportedRS_;
   }

   public void init () {
      nrofReportedRS = null;
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return nrofReportedRS;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "nrofReportedRS";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean nrofReportedRSPresent = buffer.decodeBit ("nrofReportedRSPresent");

      // decode nrofReportedRS

      if (nrofReportedRSPresent) {
         buffer.getContext().eventDispatcher.startElement("nrofReportedRS", -1);

         int tval = CSI_ReportConfig_groupBasedBeamReporting_disabled_nrofReportedRS.decodeEnumValue (buffer);
         nrofReportedRS = CSI_ReportConfig_groupBasedBeamReporting_disabled_nrofReportedRS.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("nrofReportedRS", -1);
      }
      else {
         nrofReportedRS = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (nrofReportedRS != null) nrofReportedRS.print (_sb, "nrofReportedRS", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
