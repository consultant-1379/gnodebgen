/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SPS_ConfigUL_setup_cyclicShiftSPS_r15 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _CS0 = 0;
   public static final int _CS1 = 1;
   public static final int _CS2 = 2;
   public static final int _CS3 = 3;
   public static final int _CS4 = 4;
   public static final int _CS5 = 5;
   public static final int _CS6 = 6;
   public static final int _CS7 = 7;

   // Singleton instances of SPS_ConfigUL_setup_cyclicShiftSPS_r15
   protected static final SPS_ConfigUL_setup_cyclicShiftSPS_r15 _cs0 = new SPS_ConfigUL_setup_cyclicShiftSPS_r15(0);
   protected static final SPS_ConfigUL_setup_cyclicShiftSPS_r15 _cs1 = new SPS_ConfigUL_setup_cyclicShiftSPS_r15(1);
   protected static final SPS_ConfigUL_setup_cyclicShiftSPS_r15 _cs2 = new SPS_ConfigUL_setup_cyclicShiftSPS_r15(2);
   protected static final SPS_ConfigUL_setup_cyclicShiftSPS_r15 _cs3 = new SPS_ConfigUL_setup_cyclicShiftSPS_r15(3);
   protected static final SPS_ConfigUL_setup_cyclicShiftSPS_r15 _cs4 = new SPS_ConfigUL_setup_cyclicShiftSPS_r15(4);
   protected static final SPS_ConfigUL_setup_cyclicShiftSPS_r15 _cs5 = new SPS_ConfigUL_setup_cyclicShiftSPS_r15(5);
   protected static final SPS_ConfigUL_setup_cyclicShiftSPS_r15 _cs6 = new SPS_ConfigUL_setup_cyclicShiftSPS_r15(6);
   protected static final SPS_ConfigUL_setup_cyclicShiftSPS_r15 _cs7 = new SPS_ConfigUL_setup_cyclicShiftSPS_r15(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected SPS_ConfigUL_setup_cyclicShiftSPS_r15 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for cs0.
    */
   public static SPS_ConfigUL_setup_cyclicShiftSPS_r15 cs0() {
      return _cs0;
   }

   /**
    * Singleton accessor method for cs1.
    */
   public static SPS_ConfigUL_setup_cyclicShiftSPS_r15 cs1() {
      return _cs1;
   }

   /**
    * Singleton accessor method for cs2.
    */
   public static SPS_ConfigUL_setup_cyclicShiftSPS_r15 cs2() {
      return _cs2;
   }

   /**
    * Singleton accessor method for cs3.
    */
   public static SPS_ConfigUL_setup_cyclicShiftSPS_r15 cs3() {
      return _cs3;
   }

   /**
    * Singleton accessor method for cs4.
    */
   public static SPS_ConfigUL_setup_cyclicShiftSPS_r15 cs4() {
      return _cs4;
   }

   /**
    * Singleton accessor method for cs5.
    */
   public static SPS_ConfigUL_setup_cyclicShiftSPS_r15 cs5() {
      return _cs5;
   }

   /**
    * Singleton accessor method for cs6.
    */
   public static SPS_ConfigUL_setup_cyclicShiftSPS_r15 cs6() {
      return _cs6;
   }

   /**
    * Singleton accessor method for cs7.
    */
   public static SPS_ConfigUL_setup_cyclicShiftSPS_r15 cs7() {
      return _cs7;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return SPS_ConfigUL_setup_cyclicShiftSPS_r15.valueOf( SPS_ConfigUL_setup_cyclicShiftSPS_r15.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static SPS_ConfigUL_setup_cyclicShiftSPS_r15 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return cs0();
         case 1: return cs1();
         case 2: return cs2();
         case 3: return cs3();
         case 4: return cs4();
         case 5: return cs5();
         case 6: return cs6();
         case 7: return cs7();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (SPS_ConfigUL_setup_cyclicShiftSPS_r15.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("cs0");
         case 1: return ("cs1");
         case 2: return ("cs2");
         case 3: return ("cs3");
         case 4: return ("cs4");
         case 5: return ("cs5");
         case 6: return ("cs6");
         case 7: return ("cs7");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
