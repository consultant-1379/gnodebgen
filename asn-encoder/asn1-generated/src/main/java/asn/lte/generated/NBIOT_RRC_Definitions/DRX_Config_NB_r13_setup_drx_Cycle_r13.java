/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class DRX_Config_NB_r13_setup_drx_Cycle_r13 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _SF256 = 0;
   public static final int _SF512 = 1;
   public static final int _SF1024 = 2;
   public static final int _SF1536 = 3;
   public static final int _SF2048 = 4;
   public static final int _SF3072 = 5;
   public static final int _SF4096 = 6;
   public static final int _SF4608 = 7;
   public static final int _SF6144 = 8;
   public static final int _SF7680 = 9;
   public static final int _SF8192 = 10;
   public static final int _SF9216 = 11;
   public static final int _SPARE4 = 12;
   public static final int _SPARE3 = 13;
   public static final int _SPARE2 = 14;
   public static final int _SPARE1 = 15;

   // Singleton instances of DRX_Config_NB_r13_setup_drx_Cycle_r13
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf256 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(0);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf512 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(1);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf1024 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(2);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf1536 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(3);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf2048 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(4);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf3072 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(5);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf4096 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(6);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf4608 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(7);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf6144 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(8);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf7680 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(9);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf8192 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(10);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _sf9216 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(11);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _spare4 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(12);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _spare3 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(13);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _spare2 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(14);
   protected static final DRX_Config_NB_r13_setup_drx_Cycle_r13 _spare1 = new DRX_Config_NB_r13_setup_drx_Cycle_r13(15);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    */
   protected DRX_Config_NB_r13_setup_drx_Cycle_r13 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for sf256.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf256() {
      return _sf256;
   }

   /**
    * Singleton accessor method for sf512.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf512() {
      return _sf512;
   }

   /**
    * Singleton accessor method for sf1024.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf1024() {
      return _sf1024;
   }

   /**
    * Singleton accessor method for sf1536.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf1536() {
      return _sf1536;
   }

   /**
    * Singleton accessor method for sf2048.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf2048() {
      return _sf2048;
   }

   /**
    * Singleton accessor method for sf3072.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf3072() {
      return _sf3072;
   }

   /**
    * Singleton accessor method for sf4096.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf4096() {
      return _sf4096;
   }

   /**
    * Singleton accessor method for sf4608.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf4608() {
      return _sf4608;
   }

   /**
    * Singleton accessor method for sf6144.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf6144() {
      return _sf6144;
   }

   /**
    * Singleton accessor method for sf7680.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf7680() {
      return _sf7680;
   }

   /**
    * Singleton accessor method for sf8192.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf8192() {
      return _sf8192;
   }

   /**
    * Singleton accessor method for sf9216.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 sf9216() {
      return _sf9216;
   }

   /**
    * Singleton accessor method for spare4.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 spare4() {
      return _spare4;
   }

   /**
    * Singleton accessor method for spare3.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 spare3() {
      return _spare3;
   }

   /**
    * Singleton accessor method for spare2.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 spare2() {
      return _spare2;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 spare1() {
      return _spare1;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return DRX_Config_NB_r13_setup_drx_Cycle_r13.valueOf( DRX_Config_NB_r13_setup_drx_Cycle_r13.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static DRX_Config_NB_r13_setup_drx_Cycle_r13 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return sf256();
         case 1: return sf512();
         case 2: return sf1024();
         case 3: return sf1536();
         case 4: return sf2048();
         case 5: return sf3072();
         case 6: return sf4096();
         case 7: return sf4608();
         case 8: return sf6144();
         case 9: return sf7680();
         case 10: return sf8192();
         case 11: return sf9216();
         case 12: return spare4();
         case 13: return spare3();
         case 14: return spare2();
         case 15: return spare1();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (16);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (DRX_Config_NB_r13_setup_drx_Cycle_r13.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("sf256");
         case 1: return ("sf512");
         case 2: return ("sf1024");
         case 3: return ("sf1536");
         case 4: return ("sf2048");
         case 5: return ("sf3072");
         case 6: return ("sf4096");
         case 7: return ("sf4608");
         case 8: return ("sf6144");
         case 9: return ("sf7680");
         case 10: return ("sf8192");
         case 11: return ("sf9216");
         case 12: return ("spare4");
         case 13: return ("spare3");
         case 14: return ("spare2");
         case 15: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
