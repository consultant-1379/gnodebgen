/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.S1AP_PDU_Contents;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID;
import asn.lte.generated.S1AP_CommonDataTypes.Criticality;

public class InitialContextSetupRequest_protocolIEs_element extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_S1AP_PDU_ContentsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public ProtocolIE_ID id;
   public Criticality criticality = null;

   /**
    * id: id-MME-UE-S1AP-ID
    * criticality: Criticality.reject
    * presence: Presence.mandatory
    * ASN.1 type: MME-UE-S1AP-ID
    * Java type: MME_UE_S1AP_ID
    *
    * id: id-eNB-UE-S1AP-ID
    * criticality: Criticality.reject
    * presence: Presence.mandatory
    * ASN.1 type: ENB-UE-S1AP-ID
    * Java type: ENB_UE_S1AP_ID
    *
    * id: id-uEaggregateMaximumBitrate
    * criticality: Criticality.reject
    * presence: Presence.mandatory
    * ASN.1 type: UEAggregateMaximumBitrate
    * Java type: UEAggregateMaximumBitrate
    *
    * id: id-E-RABToBeSetupListCtxtSUReq
    * criticality: Criticality.reject
    * presence: Presence.mandatory
    * ASN.1 type: E-RABToBeSetupListCtxtSUReq
    * Java type: E_RABToBeSetupListCtxtSUReq
    *
    * id: id-UESecurityCapabilities
    * criticality: Criticality.reject
    * presence: Presence.mandatory
    * ASN.1 type: UESecurityCapabilities
    * Java type: UESecurityCapabilities
    *
    * id: id-SecurityKey
    * criticality: Criticality.reject
    * presence: Presence.mandatory
    * ASN.1 type: SecurityKey
    * Java type: SecurityKey
    *
    * id: id-TraceActivation
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: TraceActivation
    * Java type: TraceActivation
    *
    * id: id-HandoverRestrictionList
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: HandoverRestrictionList
    * Java type: HandoverRestrictionList
    *
    * id: id-UERadioCapability
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: UERadioCapability
    * Java type: UERadioCapability
    *
    * id: id-SubscriberProfileIDforRFP
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: SubscriberProfileIDforRFP
    * Java type: SubscriberProfileIDforRFP
    *
    * id: id-CSFallbackIndicator
    * criticality: Criticality.reject
    * presence: Presence.optional
    * ASN.1 type: CSFallbackIndicator
    * Java type: CSFallbackIndicator
    *
    * id: id-SRVCCOperationPossible
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: SRVCCOperationPossible
    * Java type: SRVCCOperationPossible
    *
    * id: id-CSGMembershipStatus
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: CSGMembershipStatus
    * Java type: CSGMembershipStatus
    *
    * id: id-RegisteredLAI
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: LAI
    * Java type: LAI
    *
    * id: id-GUMMEI-ID
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: GUMMEI
    * Java type: GUMMEI
    *
    * id: id-MME-UE-S1AP-ID-2
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: MME-UE-S1AP-ID
    * Java type: MME_UE_S1AP_ID
    *
    * id: id-ManagementBasedMDTAllowed
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: ManagementBasedMDTAllowed
    * Java type: ManagementBasedMDTAllowed
    *
    * id: id-ManagementBasedMDTPLMNList
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: MDTPLMNList
    * Java type: MDTPLMNList
    *
    * id: id-AdditionalCSFallbackIndicator
    * criticality: Criticality.ignore
    * presence: Presence.conditional
    * ASN.1 type: AdditionalCSFallbackIndicator
    * Java type: AdditionalCSFallbackIndicator
    *
    * id: id-Masked-IMEISV
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: Masked-IMEISV
    * Java type: Masked_IMEISV
    *
    * id: id-ExpectedUEBehaviour
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: ExpectedUEBehaviour
    * Java type: ExpectedUEBehaviour
    *
    * id: id-ProSeAuthorized
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: ProSeAuthorized
    * Java type: ProSeAuthorized
    *
    * id: id-UEUserPlaneCIoTSupportIndicator
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: UEUserPlaneCIoTSupportIndicator
    * Java type: UEUserPlaneCIoTSupportIndicator
    *
    * id: id-V2XServicesAuthorized
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: V2XServicesAuthorized
    * Java type: V2XServicesAuthorized
    *
    * id: id-UESidelinkAggregateMaximumBitrate
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: UESidelinkAggregateMaximumBitrate
    * Java type: UESidelinkAggregateMaximumBitrate
    *
    * id: id-EnhancedCoverageRestricted
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: EnhancedCoverageRestricted
    * Java type: EnhancedCoverageRestricted
    *
    * id: id-NRUESecurityCapabilities
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: NRUESecurityCapabilities
    * Java type: NRUESecurityCapabilities
    *
    * id: id-CE-ModeBRestricted
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: CE-ModeBRestricted
    * Java type: CE_ModeBRestricted
    *
    * id: id-AerialUEsubscriptionInformation
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: AerialUEsubscriptionInformation
    * Java type: AerialUEsubscriptionInformation
    *
    * id: id-PendingDataIndication
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: PendingDataIndication
    * Java type: PendingDataIndication
    *
    * id: id-Subscription-Based-UE-DifferentiationInfo
    * criticality: Criticality.ignore
    * presence: Presence.optional
    * ASN.1 type: Subscription-Based-UE-DifferentiationInfo
    * Java type: Subscription_Based_UE_DifferentiationInfo
    */
   public Asn1Type value;

   public InitialContextSetupRequest_protocolIEs_element () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public InitialContextSetupRequest_protocolIEs_element (
      ProtocolIE_ID id_,
      Criticality criticality_,
      Asn1Type value_
   ) {
      super();
      id = id_;
      criticality = criticality_;
      value = value_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public InitialContextSetupRequest_protocolIEs_element (long id_,
      Criticality criticality_,
      Asn1Type value_
   ) {
      super();
      id = new ProtocolIE_ID (id_);
      criticality = criticality_;
      value = value_;
   }

   public void init () {
      id = null;
      criticality = null;
      value = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return id;
         case 1: return criticality;
         case 2: return value;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "id";
         case 1: return "criticality";
         case 2: return "value";
         default: return null;
      }
   }


   /**
    * Assign fields according to information object having key id-MME-UE-S1AP-ID
    */
   public void setUsing_id_MME_UE_S1AP_ID(asn.lte.generated.S1AP_IEs.MME_UE_S1AP_ID value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_MME_UE_S1AP_ID);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-eNB-UE-S1AP-ID
    */
   public void setUsing_id_eNB_UE_S1AP_ID(asn.lte.generated.S1AP_IEs.ENB_UE_S1AP_ID value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_eNB_UE_S1AP_ID);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-uEaggregateMaximumBitrate
    */
   public void setUsing_id_uEaggregateMaximumBitrate(asn.lte.generated.S1AP_IEs.UEAggregateMaximumBitrate value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_uEaggregateMaximumBitrate);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-E-RABToBeSetupListCtxtSUReq
    */
   public void setUsing_id_E_RABToBeSetupListCtxtSUReq(E_RABToBeSetupListCtxtSUReq value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_E_RABToBeSetupListCtxtSUReq);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-UESecurityCapabilities
    */
   public void setUsing_id_UESecurityCapabilities(asn.lte.generated.S1AP_IEs.UESecurityCapabilities value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_UESecurityCapabilities);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-SecurityKey
    */
   public void setUsing_id_SecurityKey(asn.lte.generated.S1AP_IEs.SecurityKey value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_SecurityKey);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-TraceActivation
    */
   public void setUsing_id_TraceActivation(asn.lte.generated.S1AP_IEs.TraceActivation value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_TraceActivation);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-HandoverRestrictionList
    */
   public void setUsing_id_HandoverRestrictionList(asn.lte.generated.S1AP_IEs.HandoverRestrictionList value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_HandoverRestrictionList);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-UERadioCapability
    */
   public void setUsing_id_UERadioCapability(asn.lte.generated.S1AP_IEs.UERadioCapability value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_UERadioCapability);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-SubscriberProfileIDforRFP
    */
   public void setUsing_id_SubscriberProfileIDforRFP(asn.lte.generated.S1AP_IEs.SubscriberProfileIDforRFP value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_SubscriberProfileIDforRFP);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-CSFallbackIndicator
    */
   public void setUsing_id_CSFallbackIndicator(asn.lte.generated.S1AP_IEs.CSFallbackIndicator value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_CSFallbackIndicator);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.reject();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-SRVCCOperationPossible
    */
   public void setUsing_id_SRVCCOperationPossible(asn.lte.generated.S1AP_IEs.SRVCCOperationPossible value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_SRVCCOperationPossible);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-CSGMembershipStatus
    */
   public void setUsing_id_CSGMembershipStatus(asn.lte.generated.S1AP_IEs.CSGMembershipStatus value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_CSGMembershipStatus);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-RegisteredLAI
    */
   public void setUsing_id_RegisteredLAI(asn.lte.generated.S1AP_IEs.LAI value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_RegisteredLAI);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-GUMMEI-ID
    */
   public void setUsing_id_GUMMEI_ID(asn.lte.generated.S1AP_IEs.GUMMEI value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_GUMMEI_ID);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-MME-UE-S1AP-ID-2
    */
   public void setUsing_id_MME_UE_S1AP_ID_2(asn.lte.generated.S1AP_IEs.MME_UE_S1AP_ID value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_MME_UE_S1AP_ID_2);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-ManagementBasedMDTAllowed
    */
   public void setUsing_id_ManagementBasedMDTAllowed(asn.lte.generated.S1AP_IEs.ManagementBasedMDTAllowed value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_ManagementBasedMDTAllowed);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-ManagementBasedMDTPLMNList
    */
   public void setUsing_id_ManagementBasedMDTPLMNList(asn.lte.generated.S1AP_IEs.MDTPLMNList value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_ManagementBasedMDTPLMNList);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-AdditionalCSFallbackIndicator
    */
   public void setUsing_id_AdditionalCSFallbackIndicator(asn.lte.generated.S1AP_IEs.AdditionalCSFallbackIndicator value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_AdditionalCSFallbackIndicator);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-Masked-IMEISV
    */
   public void setUsing_id_Masked_IMEISV(asn.lte.generated.S1AP_IEs.Masked_IMEISV value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_Masked_IMEISV);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-ExpectedUEBehaviour
    */
   public void setUsing_id_ExpectedUEBehaviour(asn.lte.generated.S1AP_IEs.ExpectedUEBehaviour value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_ExpectedUEBehaviour);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-ProSeAuthorized
    */
   public void setUsing_id_ProSeAuthorized(asn.lte.generated.S1AP_IEs.ProSeAuthorized value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_ProSeAuthorized);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-UEUserPlaneCIoTSupportIndicator
    */
   public void setUsing_id_UEUserPlaneCIoTSupportIndicator(asn.lte.generated.S1AP_IEs.UEUserPlaneCIoTSupportIndicator value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_UEUserPlaneCIoTSupportIndicator);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-V2XServicesAuthorized
    */
   public void setUsing_id_V2XServicesAuthorized(asn.lte.generated.S1AP_IEs.V2XServicesAuthorized value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_V2XServicesAuthorized);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-UESidelinkAggregateMaximumBitrate
    */
   public void setUsing_id_UESidelinkAggregateMaximumBitrate(asn.lte.generated.S1AP_IEs.UESidelinkAggregateMaximumBitrate value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_UESidelinkAggregateMaximumBitrate);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-EnhancedCoverageRestricted
    */
   public void setUsing_id_EnhancedCoverageRestricted(asn.lte.generated.S1AP_IEs.EnhancedCoverageRestricted value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_EnhancedCoverageRestricted);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-NRUESecurityCapabilities
    */
   public void setUsing_id_NRUESecurityCapabilities(asn.lte.generated.S1AP_IEs.NRUESecurityCapabilities value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_NRUESecurityCapabilities);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-CE-ModeBRestricted
    */
   public void setUsing_id_CE_ModeBRestricted(asn.lte.generated.S1AP_IEs.CE_ModeBRestricted value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_CE_ModeBRestricted);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-AerialUEsubscriptionInformation
    */
   public void setUsing_id_AerialUEsubscriptionInformation(asn.lte.generated.S1AP_IEs.AerialUEsubscriptionInformation value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_AerialUEsubscriptionInformation);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-PendingDataIndication
    */
   public void setUsing_id_PendingDataIndication(asn.lte.generated.S1AP_IEs.PendingDataIndication value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_PendingDataIndication);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Assign fields according to information object having key id-Subscription-Based-UE-DifferentiationInfo
    */
   public void setUsing_id_Subscription_Based_UE_DifferentiationInfo(asn.lte.generated.S1AP_IEs.Subscription_Based_UE_DifferentiationInfo value) {
      this.id = new asn.lte.generated.S1AP_CommonDataTypes.ProtocolIE_ID(asn.lte.generated.S1AP_Constants._S1AP_ConstantsValues.id_Subscription_Based_UE_DifferentiationInfo);
      this.criticality = asn.lte.generated.S1AP_CommonDataTypes.Criticality.ignore();
      this.value = value;
   }

   /**
    * Get value of value with type set according to information object having key id-MME-UE-S1AP-ID
    */
   public asn.lte.generated.S1AP_IEs.MME_UE_S1AP_ID getValueFor_id_MME_UE_S1AP_ID() {
      return (asn.lte.generated.S1AP_IEs.MME_UE_S1AP_ID) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-eNB-UE-S1AP-ID
    */
   public asn.lte.generated.S1AP_IEs.ENB_UE_S1AP_ID getValueFor_id_eNB_UE_S1AP_ID() {
      return (asn.lte.generated.S1AP_IEs.ENB_UE_S1AP_ID) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-uEaggregateMaximumBitrate
    */
   public asn.lte.generated.S1AP_IEs.UEAggregateMaximumBitrate getValueFor_id_uEaggregateMaximumBitrate() {
      return (asn.lte.generated.S1AP_IEs.UEAggregateMaximumBitrate) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-E-RABToBeSetupListCtxtSUReq
    */
   public E_RABToBeSetupListCtxtSUReq getValueFor_id_E_RABToBeSetupListCtxtSUReq() {
      return (E_RABToBeSetupListCtxtSUReq) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-UESecurityCapabilities
    */
   public asn.lte.generated.S1AP_IEs.UESecurityCapabilities getValueFor_id_UESecurityCapabilities() {
      return (asn.lte.generated.S1AP_IEs.UESecurityCapabilities) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-SecurityKey
    */
   public asn.lte.generated.S1AP_IEs.SecurityKey getValueFor_id_SecurityKey() {
      return (asn.lte.generated.S1AP_IEs.SecurityKey) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-TraceActivation
    */
   public asn.lte.generated.S1AP_IEs.TraceActivation getValueFor_id_TraceActivation() {
      return (asn.lte.generated.S1AP_IEs.TraceActivation) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-HandoverRestrictionList
    */
   public asn.lte.generated.S1AP_IEs.HandoverRestrictionList getValueFor_id_HandoverRestrictionList() {
      return (asn.lte.generated.S1AP_IEs.HandoverRestrictionList) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-UERadioCapability
    */
   public asn.lte.generated.S1AP_IEs.UERadioCapability getValueFor_id_UERadioCapability() {
      return (asn.lte.generated.S1AP_IEs.UERadioCapability) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-SubscriberProfileIDforRFP
    */
   public asn.lte.generated.S1AP_IEs.SubscriberProfileIDforRFP getValueFor_id_SubscriberProfileIDforRFP() {
      return (asn.lte.generated.S1AP_IEs.SubscriberProfileIDforRFP) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-CSFallbackIndicator
    */
   public asn.lte.generated.S1AP_IEs.CSFallbackIndicator getValueFor_id_CSFallbackIndicator() {
      return (asn.lte.generated.S1AP_IEs.CSFallbackIndicator) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-SRVCCOperationPossible
    */
   public asn.lte.generated.S1AP_IEs.SRVCCOperationPossible getValueFor_id_SRVCCOperationPossible() {
      return (asn.lte.generated.S1AP_IEs.SRVCCOperationPossible) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-CSGMembershipStatus
    */
   public asn.lte.generated.S1AP_IEs.CSGMembershipStatus getValueFor_id_CSGMembershipStatus() {
      return (asn.lte.generated.S1AP_IEs.CSGMembershipStatus) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-RegisteredLAI
    */
   public asn.lte.generated.S1AP_IEs.LAI getValueFor_id_RegisteredLAI() {
      return (asn.lte.generated.S1AP_IEs.LAI) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-GUMMEI-ID
    */
   public asn.lte.generated.S1AP_IEs.GUMMEI getValueFor_id_GUMMEI_ID() {
      return (asn.lte.generated.S1AP_IEs.GUMMEI) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-MME-UE-S1AP-ID-2
    */
   public asn.lte.generated.S1AP_IEs.MME_UE_S1AP_ID getValueFor_id_MME_UE_S1AP_ID_2() {
      return (asn.lte.generated.S1AP_IEs.MME_UE_S1AP_ID) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-ManagementBasedMDTAllowed
    */
   public asn.lte.generated.S1AP_IEs.ManagementBasedMDTAllowed getValueFor_id_ManagementBasedMDTAllowed() {
      return (asn.lte.generated.S1AP_IEs.ManagementBasedMDTAllowed) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-ManagementBasedMDTPLMNList
    */
   public asn.lte.generated.S1AP_IEs.MDTPLMNList getValueFor_id_ManagementBasedMDTPLMNList() {
      return (asn.lte.generated.S1AP_IEs.MDTPLMNList) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-AdditionalCSFallbackIndicator
    */
   public asn.lte.generated.S1AP_IEs.AdditionalCSFallbackIndicator getValueFor_id_AdditionalCSFallbackIndicator() {
      return (asn.lte.generated.S1AP_IEs.AdditionalCSFallbackIndicator) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-Masked-IMEISV
    */
   public asn.lte.generated.S1AP_IEs.Masked_IMEISV getValueFor_id_Masked_IMEISV() {
      return (asn.lte.generated.S1AP_IEs.Masked_IMEISV) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-ExpectedUEBehaviour
    */
   public asn.lte.generated.S1AP_IEs.ExpectedUEBehaviour getValueFor_id_ExpectedUEBehaviour() {
      return (asn.lte.generated.S1AP_IEs.ExpectedUEBehaviour) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-ProSeAuthorized
    */
   public asn.lte.generated.S1AP_IEs.ProSeAuthorized getValueFor_id_ProSeAuthorized() {
      return (asn.lte.generated.S1AP_IEs.ProSeAuthorized) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-UEUserPlaneCIoTSupportIndicator
    */
   public asn.lte.generated.S1AP_IEs.UEUserPlaneCIoTSupportIndicator getValueFor_id_UEUserPlaneCIoTSupportIndicator() {
      return (asn.lte.generated.S1AP_IEs.UEUserPlaneCIoTSupportIndicator) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-V2XServicesAuthorized
    */
   public asn.lte.generated.S1AP_IEs.V2XServicesAuthorized getValueFor_id_V2XServicesAuthorized() {
      return (asn.lte.generated.S1AP_IEs.V2XServicesAuthorized) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-UESidelinkAggregateMaximumBitrate
    */
   public asn.lte.generated.S1AP_IEs.UESidelinkAggregateMaximumBitrate getValueFor_id_UESidelinkAggregateMaximumBitrate() {
      return (asn.lte.generated.S1AP_IEs.UESidelinkAggregateMaximumBitrate) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-EnhancedCoverageRestricted
    */
   public asn.lte.generated.S1AP_IEs.EnhancedCoverageRestricted getValueFor_id_EnhancedCoverageRestricted() {
      return (asn.lte.generated.S1AP_IEs.EnhancedCoverageRestricted) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-NRUESecurityCapabilities
    */
   public asn.lte.generated.S1AP_IEs.NRUESecurityCapabilities getValueFor_id_NRUESecurityCapabilities() {
      return (asn.lte.generated.S1AP_IEs.NRUESecurityCapabilities) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-CE-ModeBRestricted
    */
   public asn.lte.generated.S1AP_IEs.CE_ModeBRestricted getValueFor_id_CE_ModeBRestricted() {
      return (asn.lte.generated.S1AP_IEs.CE_ModeBRestricted) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-AerialUEsubscriptionInformation
    */
   public asn.lte.generated.S1AP_IEs.AerialUEsubscriptionInformation getValueFor_id_AerialUEsubscriptionInformation() {
      return (asn.lte.generated.S1AP_IEs.AerialUEsubscriptionInformation) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-PendingDataIndication
    */
   public asn.lte.generated.S1AP_IEs.PendingDataIndication getValueFor_id_PendingDataIndication() {
      return (asn.lte.generated.S1AP_IEs.PendingDataIndication) this.value;
   }

   /**
    * Get value of value with type set according to information object having key id-Subscription-Based-UE-DifferentiationInfo
    */
   public asn.lte.generated.S1AP_IEs.Subscription_Based_UE_DifferentiationInfo getValueFor_id_Subscription_Based_UE_DifferentiationInfo() {
      return (asn.lte.generated.S1AP_IEs.Subscription_Based_UE_DifferentiationInfo) this.value;
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode id

      buffer.getContext().eventDispatcher.startElement("id", -1);

      id = new ProtocolIE_ID();
      id.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("id", -1);

      // decode criticality

      buffer.getContext().eventDispatcher.startElement("criticality", -1);

      {
         int tval = Criticality.decodeEnumValue (buffer);
         criticality = Criticality.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("criticality", -1);

      // decode value

      buffer.getContext().eventDispatcher.startElement("value", -1);

      value = new Asn1OpenType();
      value.decode (buffer);

      buffer.invokeCharacters(value.toString());
      buffer.getContext().eventDispatcher.endElement("value", -1);

      checkTC (true, buffer.getLazyOpenTypeDecode() ? 0 : 2, buffer.isAligned(), buffer.getContext().eventDispatcher);
   }

   public void checkTC(boolean decode, int decodeOpenTypeFlag, boolean aligned, Asn1NamedEventDispatcher eventDispatcher)
      throws Asn1Exception
   {
      /* check id */
      asn.lte.generated.S1AP_Containers.S1AP_PROTOCOL_IES _index = null;
      for(int i=0; i < _S1AP_PDU_ContentsValues.InitialContextSetupRequestIEs.length; i++) {
         if(_S1AP_PDU_ContentsValues.InitialContextSetupRequestIEs[i].id.equals(id)) {
            _index = _S1AP_PDU_ContentsValues.InitialContextSetupRequestIEs[i];
            break;
         }
      }
      if (null == _index) {
         return;
      }

      /* check value */
      if( decode && decodeOpenTypeFlag >=1 ) {
         try {
            Asn1PerDecodeBuffer buffer = new Asn1PerDecodeBuffer(((Asn1OpenType)value).value, aligned);
            buffer.setLazyOpenTypeDecode(decodeOpenTypeFlag == 1);
            if (eventDispatcher != null)buffer.getContext().eventDispatcher = eventDispatcher;
            buffer.getContext().eventDispatcher.startElement("value", -1);

            String className = _index.Value.actualType.getName();
            if (className.lastIndexOf('.') > 0) {
               className = className.substring (className.lastIndexOf (".")+1);
            }
            buffer.getContext().eventDispatcher.startElement(className, -1);

            value = Asn1Type.decode(buffer, _index.Value);

            buffer.getContext().eventDispatcher.endElement(className, -1);

            buffer.getContext().eventDispatcher.endElement("value", -1);
         }
         catch (java.io.IOException e) {
            throw new Asn1Exception(e.toString());
         }
      }

      /* use -strict option to validate the "criticality" element */
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (id.value == 0) {
         indent (_sb, _level+1);
         _sb.append("id = id-MME-UE-S1AP-ID\n");
      }
      else if (id.value == 8) {
         indent (_sb, _level+1);
         _sb.append("id = id-eNB-UE-S1AP-ID\n");
      }
      else if (id.value == 66) {
         indent (_sb, _level+1);
         _sb.append("id = id-uEaggregateMaximumBitrate\n");
      }
      else if (id.value == 24) {
         indent (_sb, _level+1);
         _sb.append("id = id-E-RABToBeSetupListCtxtSUReq\n");
      }
      else if (id.value == 107) {
         indent (_sb, _level+1);
         _sb.append("id = id-UESecurityCapabilities\n");
      }
      else if (id.value == 73) {
         indent (_sb, _level+1);
         _sb.append("id = id-SecurityKey\n");
      }
      else if (id.value == 25) {
         indent (_sb, _level+1);
         _sb.append("id = id-TraceActivation\n");
      }
      else if (id.value == 41) {
         indent (_sb, _level+1);
         _sb.append("id = id-HandoverRestrictionList\n");
      }
      else if (id.value == 74) {
         indent (_sb, _level+1);
         _sb.append("id = id-UERadioCapability\n");
      }
      else if (id.value == 106) {
         indent (_sb, _level+1);
         _sb.append("id = id-SubscriberProfileIDforRFP\n");
      }
      else if (id.value == 108) {
         indent (_sb, _level+1);
         _sb.append("id = id-CSFallbackIndicator\n");
      }
      else if (id.value == 124) {
         indent (_sb, _level+1);
         _sb.append("id = id-SRVCCOperationPossible\n");
      }
      else if (id.value == 146) {
         indent (_sb, _level+1);
         _sb.append("id = id-CSGMembershipStatus\n");
      }
      else if (id.value == 159) {
         indent (_sb, _level+1);
         _sb.append("id = id-RegisteredLAI\n");
      }
      else if (id.value == 75) {
         indent (_sb, _level+1);
         _sb.append("id = id-GUMMEI-ID\n");
      }
      else if (id.value == 158) {
         indent (_sb, _level+1);
         _sb.append("id = id-MME-UE-S1AP-ID-2\n");
      }
      else if (id.value == 165) {
         indent (_sb, _level+1);
         _sb.append("id = id-ManagementBasedMDTAllowed\n");
      }
      else if (id.value == 177) {
         indent (_sb, _level+1);
         _sb.append("id = id-ManagementBasedMDTPLMNList\n");
      }
      else if (id.value == 187) {
         indent (_sb, _level+1);
         _sb.append("id = id-AdditionalCSFallbackIndicator\n");
      }
      else if (id.value == 192) {
         indent (_sb, _level+1);
         _sb.append("id = id-Masked-IMEISV\n");
      }
      else if (id.value == 196) {
         indent (_sb, _level+1);
         _sb.append("id = id-ExpectedUEBehaviour\n");
      }
      else if (id.value == 195) {
         indent (_sb, _level+1);
         _sb.append("id = id-ProSeAuthorized\n");
      }
      else if (id.value == 241) {
         indent (_sb, _level+1);
         _sb.append("id = id-UEUserPlaneCIoTSupportIndicator\n");
      }
      else if (id.value == 240) {
         indent (_sb, _level+1);
         _sb.append("id = id-V2XServicesAuthorized\n");
      }
      else if (id.value == 248) {
         indent (_sb, _level+1);
         _sb.append("id = id-UESidelinkAggregateMaximumBitrate\n");
      }
      else if (id.value == 251) {
         indent (_sb, _level+1);
         _sb.append("id = id-EnhancedCoverageRestricted\n");
      }
      else if (id.value == 269) {
         indent (_sb, _level+1);
         _sb.append("id = id-NRUESecurityCapabilities\n");
      }
      else if (id.value == 271) {
         indent (_sb, _level+1);
         _sb.append("id = id-CE-ModeBRestricted\n");
      }
      else if (id.value == 277) {
         indent (_sb, _level+1);
         _sb.append("id = id-AerialUEsubscriptionInformation\n");
      }
      else if (id.value == 283) {
         indent (_sb, _level+1);
         _sb.append("id = id-PendingDataIndication\n");
      }
      else if (id.value == 278) {
         indent (_sb, _level+1);
         _sb.append("id = id-Subscription-Based-UE-DifferentiationInfo\n");
      }

      if (criticality != null) {
         criticality.print (_sb, "criticality", _level+1);
      }
      if (value != null) {
         String tmpName = value.getAsn1TypeName();
         if (tmpName != null && tmpName != "")  {
            tmpName = "value" + " (" + tmpName + ")";
         }
         else  {
            tmpName = "value";
         }
         value.print (_sb, tmpName, _level+1);
      }
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
