/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MeasResultMBSFN_r12 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MeasResultMBSFN-r12";
   }

   public MeasResultMBSFN_r12_mbsfn_Area_r12 mbsfn_Area_r12;
   public RSRP_Range rsrpResultMBSFN_r12;
   public MBSFN_RSRQ_Range_r12 rsrqResultMBSFN_r12;
   public BLER_Result_r12 signallingBLER_Result_r12;  // optional
   public DataBLER_MCH_ResultList_r12 dataBLER_MCH_ResultList_r12;  // optional
   public Asn1OpenExt extElem1;

   public MeasResultMBSFN_r12 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasResultMBSFN_r12 (
      MeasResultMBSFN_r12_mbsfn_Area_r12 mbsfn_Area_r12_,
      RSRP_Range rsrpResultMBSFN_r12_,
      MBSFN_RSRQ_Range_r12 rsrqResultMBSFN_r12_,
      BLER_Result_r12 signallingBLER_Result_r12_,
      DataBLER_MCH_ResultList_r12 dataBLER_MCH_ResultList_r12_
   ) {
      super();
      mbsfn_Area_r12 = mbsfn_Area_r12_;
      rsrpResultMBSFN_r12 = rsrpResultMBSFN_r12_;
      rsrqResultMBSFN_r12 = rsrqResultMBSFN_r12_;
      signallingBLER_Result_r12 = signallingBLER_Result_r12_;
      dataBLER_MCH_ResultList_r12 = dataBLER_MCH_ResultList_r12_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public MeasResultMBSFN_r12 (
      MeasResultMBSFN_r12_mbsfn_Area_r12 mbsfn_Area_r12_,
      RSRP_Range rsrpResultMBSFN_r12_,
      MBSFN_RSRQ_Range_r12 rsrqResultMBSFN_r12_
   ) {
      super();
      mbsfn_Area_r12 = mbsfn_Area_r12_;
      rsrpResultMBSFN_r12 = rsrpResultMBSFN_r12_;
      rsrqResultMBSFN_r12 = rsrqResultMBSFN_r12_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public MeasResultMBSFN_r12 (MeasResultMBSFN_r12_mbsfn_Area_r12 mbsfn_Area_r12_,
      long rsrpResultMBSFN_r12_,
      long rsrqResultMBSFN_r12_,
      BLER_Result_r12 signallingBLER_Result_r12_,
      DataBLER_MCH_ResultList_r12 dataBLER_MCH_ResultList_r12_
   ) {
      super();
      mbsfn_Area_r12 = mbsfn_Area_r12_;
      rsrpResultMBSFN_r12 = new RSRP_Range (rsrpResultMBSFN_r12_);
      rsrqResultMBSFN_r12 = new MBSFN_RSRQ_Range_r12 (rsrqResultMBSFN_r12_);
      signallingBLER_Result_r12 = signallingBLER_Result_r12_;
      dataBLER_MCH_ResultList_r12 = dataBLER_MCH_ResultList_r12_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public MeasResultMBSFN_r12 (
      MeasResultMBSFN_r12_mbsfn_Area_r12 mbsfn_Area_r12_,
      long rsrpResultMBSFN_r12_,
      long rsrqResultMBSFN_r12_
   ) {
      super();
      mbsfn_Area_r12 = mbsfn_Area_r12_;
      rsrpResultMBSFN_r12 = new RSRP_Range (rsrpResultMBSFN_r12_);
      rsrqResultMBSFN_r12 = new MBSFN_RSRQ_Range_r12 (rsrqResultMBSFN_r12_);
   }

   public void init () {
      mbsfn_Area_r12 = null;
      rsrpResultMBSFN_r12 = null;
      rsrqResultMBSFN_r12 = null;
      signallingBLER_Result_r12 = null;
      dataBLER_MCH_ResultList_r12 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return mbsfn_Area_r12;
         case 1: return rsrpResultMBSFN_r12;
         case 2: return rsrqResultMBSFN_r12;
         case 3: return signallingBLER_Result_r12;
         case 4: return dataBLER_MCH_ResultList_r12;
         case 5: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "mbsfn-Area-r12";
         case 1: return "rsrpResultMBSFN-r12";
         case 2: return "rsrqResultMBSFN-r12";
         case 3: return "signallingBLER-Result-r12";
         case 4: return "dataBLER-MCH-ResultList-r12";
         case 5: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean signallingBLER_Result_r12Present = buffer.decodeBit ("signallingBLER_Result_r12Present");
      boolean dataBLER_MCH_ResultList_r12Present = buffer.decodeBit ("dataBLER_MCH_ResultList_r12Present");

      // decode mbsfn_Area_r12

      buffer.getContext().eventDispatcher.startElement("mbsfn_Area_r12", -1);

      mbsfn_Area_r12 = new MeasResultMBSFN_r12_mbsfn_Area_r12();
      mbsfn_Area_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("mbsfn_Area_r12", -1);

      // decode rsrpResultMBSFN_r12

      buffer.getContext().eventDispatcher.startElement("rsrpResultMBSFN_r12", -1);

      rsrpResultMBSFN_r12 = new RSRP_Range();
      rsrpResultMBSFN_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("rsrpResultMBSFN_r12", -1);

      // decode rsrqResultMBSFN_r12

      buffer.getContext().eventDispatcher.startElement("rsrqResultMBSFN_r12", -1);

      rsrqResultMBSFN_r12 = new MBSFN_RSRQ_Range_r12();
      rsrqResultMBSFN_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("rsrqResultMBSFN_r12", -1);

      // decode signallingBLER_Result_r12

      if (signallingBLER_Result_r12Present) {
         buffer.getContext().eventDispatcher.startElement("signallingBLER_Result_r12", -1);

         signallingBLER_Result_r12 = new BLER_Result_r12();
         signallingBLER_Result_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("signallingBLER_Result_r12", -1);
      }
      else {
         signallingBLER_Result_r12 = null;
      }

      // decode dataBLER_MCH_ResultList_r12

      if (dataBLER_MCH_ResultList_r12Present) {
         buffer.getContext().eventDispatcher.startElement("dataBLER_MCH_ResultList_r12", -1);

         dataBLER_MCH_ResultList_r12 = new DataBLER_MCH_ResultList_r12();
         dataBLER_MCH_ResultList_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("dataBLER_MCH_ResultList_r12", -1);
      }
      else {
         dataBLER_MCH_ResultList_r12 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (mbsfn_Area_r12 != null) mbsfn_Area_r12.print (_sb, "mbsfn_Area_r12", _level+1);
      if (rsrpResultMBSFN_r12 != null) rsrpResultMBSFN_r12.print (_sb, "rsrpResultMBSFN_r12", _level+1);
      if (rsrqResultMBSFN_r12 != null) rsrqResultMBSFN_r12.print (_sb, "rsrqResultMBSFN_r12", _level+1);
      if (signallingBLER_Result_r12 != null) signallingBLER_Result_r12.print (_sb, "signallingBLER_Result_r12", _level+1);
      if (dataBLER_MCH_ResultList_r12 != null) dataBLER_MCH_ResultList_r12.print (_sb, "dataBLER_MCH_ResultList_r12", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
