/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PUSCH_ConfigDedicated_v1530_ce_PUSCH_SubPRB_Config_r15_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer locationCE_ModeB_r15;  // optional
   public Asn1Integer sixToneCyclicShift_r15;
   public Asn1Integer threeToneCyclicShift_r15;

   public PUSCH_ConfigDedicated_v1530_ce_PUSCH_SubPRB_Config_r15_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PUSCH_ConfigDedicated_v1530_ce_PUSCH_SubPRB_Config_r15_setup (
      Asn1Integer locationCE_ModeB_r15_,
      Asn1Integer sixToneCyclicShift_r15_,
      Asn1Integer threeToneCyclicShift_r15_
   ) {
      super();
      locationCE_ModeB_r15 = locationCE_ModeB_r15_;
      sixToneCyclicShift_r15 = sixToneCyclicShift_r15_;
      threeToneCyclicShift_r15 = threeToneCyclicShift_r15_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public PUSCH_ConfigDedicated_v1530_ce_PUSCH_SubPRB_Config_r15_setup (
      Asn1Integer sixToneCyclicShift_r15_,
      Asn1Integer threeToneCyclicShift_r15_
   ) {
      super();
      sixToneCyclicShift_r15 = sixToneCyclicShift_r15_;
      threeToneCyclicShift_r15 = threeToneCyclicShift_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PUSCH_ConfigDedicated_v1530_ce_PUSCH_SubPRB_Config_r15_setup (long locationCE_ModeB_r15_,
      long sixToneCyclicShift_r15_,
      long threeToneCyclicShift_r15_
   ) {
      super();
      locationCE_ModeB_r15 = new Asn1Integer (locationCE_ModeB_r15_);
      sixToneCyclicShift_r15 = new Asn1Integer (sixToneCyclicShift_r15_);
      threeToneCyclicShift_r15 = new Asn1Integer (threeToneCyclicShift_r15_);
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public PUSCH_ConfigDedicated_v1530_ce_PUSCH_SubPRB_Config_r15_setup (
      long sixToneCyclicShift_r15_,
      long threeToneCyclicShift_r15_
   ) {
      super();
      sixToneCyclicShift_r15 = new Asn1Integer (sixToneCyclicShift_r15_);
      threeToneCyclicShift_r15 = new Asn1Integer (threeToneCyclicShift_r15_);
   }

   public void init () {
      locationCE_ModeB_r15 = null;
      sixToneCyclicShift_r15 = null;
      threeToneCyclicShift_r15 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return locationCE_ModeB_r15;
         case 1: return sixToneCyclicShift_r15;
         case 2: return threeToneCyclicShift_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "locationCE-ModeB-r15";
         case 1: return "sixToneCyclicShift-r15";
         case 2: return "threeToneCyclicShift-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean locationCE_ModeB_r15Present = buffer.decodeBit ("locationCE_ModeB_r15Present");

      // decode locationCE_ModeB_r15

      if (locationCE_ModeB_r15Present) {
         buffer.getContext().eventDispatcher.startElement("locationCE_ModeB_r15", -1);

         locationCE_ModeB_r15 = new Asn1Integer();
         locationCE_ModeB_r15.decode (buffer, 0, 5);

         buffer.invokeCharacters(locationCE_ModeB_r15.toString());
         buffer.getContext().eventDispatcher.endElement("locationCE_ModeB_r15", -1);
      }
      else {
         locationCE_ModeB_r15 = null;
      }

      // decode sixToneCyclicShift_r15

      buffer.getContext().eventDispatcher.startElement("sixToneCyclicShift_r15", -1);

      sixToneCyclicShift_r15 = new Asn1Integer();
      sixToneCyclicShift_r15.decode (buffer, 0, 3);

      buffer.invokeCharacters(sixToneCyclicShift_r15.toString());
      buffer.getContext().eventDispatcher.endElement("sixToneCyclicShift_r15", -1);

      // decode threeToneCyclicShift_r15

      buffer.getContext().eventDispatcher.startElement("threeToneCyclicShift_r15", -1);

      threeToneCyclicShift_r15 = new Asn1Integer();
      threeToneCyclicShift_r15.decode (buffer, 0, 2);

      buffer.invokeCharacters(threeToneCyclicShift_r15.toString());
      buffer.getContext().eventDispatcher.endElement("threeToneCyclicShift_r15", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (locationCE_ModeB_r15 != null) locationCE_ModeB_r15.print (_sb, "locationCE_ModeB_r15", _level+1);
      if (sixToneCyclicShift_r15 != null) sixToneCyclicShift_r15.print (_sb, "sixToneCyclicShift_r15", _level+1);
      if (threeToneCyclicShift_r15 != null) threeToneCyclicShift_r15.print (_sb, "threeToneCyclicShift_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
