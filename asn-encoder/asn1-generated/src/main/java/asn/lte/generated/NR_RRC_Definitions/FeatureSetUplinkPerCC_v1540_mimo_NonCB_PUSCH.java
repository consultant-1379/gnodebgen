/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class FeatureSetUplinkPerCC_v1540_mimo_NonCB_PUSCH extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer maxNumberSRS_ResourcePerSet;
   public Asn1Integer maxNumberSimultaneousSRS_ResourceTx;

   public FeatureSetUplinkPerCC_v1540_mimo_NonCB_PUSCH () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public FeatureSetUplinkPerCC_v1540_mimo_NonCB_PUSCH (
      Asn1Integer maxNumberSRS_ResourcePerSet_,
      Asn1Integer maxNumberSimultaneousSRS_ResourceTx_
   ) {
      super();
      maxNumberSRS_ResourcePerSet = maxNumberSRS_ResourcePerSet_;
      maxNumberSimultaneousSRS_ResourceTx = maxNumberSimultaneousSRS_ResourceTx_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public FeatureSetUplinkPerCC_v1540_mimo_NonCB_PUSCH (long maxNumberSRS_ResourcePerSet_,
      long maxNumberSimultaneousSRS_ResourceTx_
   ) {
      super();
      maxNumberSRS_ResourcePerSet = new Asn1Integer (maxNumberSRS_ResourcePerSet_);
      maxNumberSimultaneousSRS_ResourceTx = new Asn1Integer (maxNumberSimultaneousSRS_ResourceTx_);
   }

   public void init () {
      maxNumberSRS_ResourcePerSet = null;
      maxNumberSimultaneousSRS_ResourceTx = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return maxNumberSRS_ResourcePerSet;
         case 1: return maxNumberSimultaneousSRS_ResourceTx;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "maxNumberSRS-ResourcePerSet";
         case 1: return "maxNumberSimultaneousSRS-ResourceTx";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode maxNumberSRS_ResourcePerSet

      buffer.getContext().eventDispatcher.startElement("maxNumberSRS_ResourcePerSet", -1);

      maxNumberSRS_ResourcePerSet = new Asn1Integer();
      maxNumberSRS_ResourcePerSet.decode (buffer, 1, 4);

      buffer.invokeCharacters(maxNumberSRS_ResourcePerSet.toString());
      buffer.getContext().eventDispatcher.endElement("maxNumberSRS_ResourcePerSet", -1);

      // decode maxNumberSimultaneousSRS_ResourceTx

      buffer.getContext().eventDispatcher.startElement("maxNumberSimultaneousSRS_ResourceTx", -1);

      maxNumberSimultaneousSRS_ResourceTx = new Asn1Integer();
      maxNumberSimultaneousSRS_ResourceTx.decode (buffer, 1, 4);

      buffer.invokeCharacters(maxNumberSimultaneousSRS_ResourceTx.toString());
      buffer.getContext().eventDispatcher.endElement("maxNumberSimultaneousSRS_ResourceTx", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (maxNumberSRS_ResourcePerSet != null) maxNumberSRS_ResourcePerSet.print (_sb, "maxNumberSRS_ResourcePerSet", _level+1);
      if (maxNumberSimultaneousSRS_ResourceTx != null) maxNumberSimultaneousSRS_ResourceTx.print (_sb, "maxNumberSimultaneousSRS_ResourceTx", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
