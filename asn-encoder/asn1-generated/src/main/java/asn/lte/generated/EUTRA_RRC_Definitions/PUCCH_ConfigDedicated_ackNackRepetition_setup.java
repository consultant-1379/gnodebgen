/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PUCCH_ConfigDedicated_ackNackRepetition_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public PUCCH_ConfigDedicated_ackNackRepetition_setup_repetitionFactor repetitionFactor = null;
   public Asn1Integer n1PUCCH_AN_Rep;

   public PUCCH_ConfigDedicated_ackNackRepetition_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PUCCH_ConfigDedicated_ackNackRepetition_setup (
      PUCCH_ConfigDedicated_ackNackRepetition_setup_repetitionFactor repetitionFactor_,
      Asn1Integer n1PUCCH_AN_Rep_
   ) {
      super();
      repetitionFactor = repetitionFactor_;
      n1PUCCH_AN_Rep = n1PUCCH_AN_Rep_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PUCCH_ConfigDedicated_ackNackRepetition_setup (PUCCH_ConfigDedicated_ackNackRepetition_setup_repetitionFactor repetitionFactor_,
      long n1PUCCH_AN_Rep_
   ) {
      super();
      repetitionFactor = repetitionFactor_;
      n1PUCCH_AN_Rep = new Asn1Integer (n1PUCCH_AN_Rep_);
   }

   public void init () {
      repetitionFactor = null;
      n1PUCCH_AN_Rep = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return repetitionFactor;
         case 1: return n1PUCCH_AN_Rep;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "repetitionFactor";
         case 1: return "n1PUCCH-AN-Rep";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode repetitionFactor

      buffer.getContext().eventDispatcher.startElement("repetitionFactor", -1);

      {
         int tval = PUCCH_ConfigDedicated_ackNackRepetition_setup_repetitionFactor.decodeEnumValue (buffer);
         repetitionFactor = PUCCH_ConfigDedicated_ackNackRepetition_setup_repetitionFactor.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("repetitionFactor", -1);

      // decode n1PUCCH_AN_Rep

      buffer.getContext().eventDispatcher.startElement("n1PUCCH_AN_Rep", -1);

      n1PUCCH_AN_Rep = new Asn1Integer();
      n1PUCCH_AN_Rep.decode (buffer, 0, 2047);

      buffer.invokeCharacters(n1PUCCH_AN_Rep.toString());
      buffer.getContext().eventDispatcher.endElement("n1PUCCH_AN_Rep", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (repetitionFactor != null) repetitionFactor.print (_sb, "repetitionFactor", _level+1);
      if (n1PUCCH_AN_Rep != null) n1PUCCH_AN_Rep.print (_sb, "n1PUCCH_AN_Rep", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
