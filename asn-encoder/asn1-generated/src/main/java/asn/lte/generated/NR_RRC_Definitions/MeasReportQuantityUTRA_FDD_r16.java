/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MeasReportQuantityUTRA_FDD_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MeasReportQuantityUTRA-FDD-r16";
   }

   public Asn1Boolean cpich_RSCP;
   public Asn1Boolean cpich_EcN0;

   public MeasReportQuantityUTRA_FDD_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasReportQuantityUTRA_FDD_r16 (
      Asn1Boolean cpich_RSCP_,
      Asn1Boolean cpich_EcN0_
   ) {
      super();
      cpich_RSCP = cpich_RSCP_;
      cpich_EcN0 = cpich_EcN0_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public MeasReportQuantityUTRA_FDD_r16 (boolean cpich_RSCP_,
      boolean cpich_EcN0_
   ) {
      super();
      cpich_RSCP = new Asn1Boolean (cpich_RSCP_);
      cpich_EcN0 = new Asn1Boolean (cpich_EcN0_);
   }

   public void init () {
      cpich_RSCP = null;
      cpich_EcN0 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return cpich_RSCP;
         case 1: return cpich_EcN0;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "cpich-RSCP";
         case 1: return "cpich-EcN0";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode cpich_RSCP

      buffer.getContext().eventDispatcher.startElement("cpich_RSCP", -1);

      cpich_RSCP = new Asn1Boolean();
      cpich_RSCP.decode (buffer);

      buffer.invokeCharacters(cpich_RSCP.toString());
      buffer.getContext().eventDispatcher.endElement("cpich_RSCP", -1);

      // decode cpich_EcN0

      buffer.getContext().eventDispatcher.startElement("cpich_EcN0", -1);

      cpich_EcN0 = new Asn1Boolean();
      cpich_EcN0.decode (buffer);

      buffer.invokeCharacters(cpich_EcN0.toString());
      buffer.getContext().eventDispatcher.endElement("cpich_EcN0", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (cpich_RSCP != null) cpich_RSCP.print (_sb, "cpich_RSCP", _level+1);
      if (cpich_EcN0 != null) cpich_EcN0.print (_sb, "cpich_EcN0", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
