/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_UE_Variables;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.NR_RRC_Definitions.MeasResultIdleNR_r16;
import asn.lte.generated.NR_RRC_Definitions.MeasResultIdleEUTRA_r16;

public class VarMeasIdleReport_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_UE_VariablesRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "VarMeasIdleReport-r16";
   }

   public MeasResultIdleNR_r16 measReportIdleNR_r16;  // optional
   public MeasResultIdleEUTRA_r16 measReportIdleEUTRA_r16;  // optional

   public VarMeasIdleReport_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public VarMeasIdleReport_r16 (
      MeasResultIdleNR_r16 measReportIdleNR_r16_,
      MeasResultIdleEUTRA_r16 measReportIdleEUTRA_r16_
   ) {
      super();
      measReportIdleNR_r16 = measReportIdleNR_r16_;
      measReportIdleEUTRA_r16 = measReportIdleEUTRA_r16_;
   }

   public void init () {
      measReportIdleNR_r16 = null;
      measReportIdleEUTRA_r16 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return measReportIdleNR_r16;
         case 1: return measReportIdleEUTRA_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "measReportIdleNR-r16";
         case 1: return "measReportIdleEUTRA-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean measReportIdleNR_r16Present = buffer.decodeBit ("measReportIdleNR_r16Present");
      boolean measReportIdleEUTRA_r16Present = buffer.decodeBit ("measReportIdleEUTRA_r16Present");

      // decode measReportIdleNR_r16

      if (measReportIdleNR_r16Present) {
         buffer.getContext().eventDispatcher.startElement("measReportIdleNR_r16", -1);

         measReportIdleNR_r16 = new MeasResultIdleNR_r16();
         measReportIdleNR_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measReportIdleNR_r16", -1);
      }
      else {
         measReportIdleNR_r16 = null;
      }

      // decode measReportIdleEUTRA_r16

      if (measReportIdleEUTRA_r16Present) {
         buffer.getContext().eventDispatcher.startElement("measReportIdleEUTRA_r16", -1);

         measReportIdleEUTRA_r16 = new MeasResultIdleEUTRA_r16();
         measReportIdleEUTRA_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measReportIdleEUTRA_r16", -1);
      }
      else {
         measReportIdleEUTRA_r16 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (measReportIdleNR_r16 != null) measReportIdleNR_r16.print (_sb, "measReportIdleNR_r16", _level+1);
      if (measReportIdleEUTRA_r16 != null) measReportIdleEUTRA_r16.print (_sb, "measReportIdleEUTRA_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
