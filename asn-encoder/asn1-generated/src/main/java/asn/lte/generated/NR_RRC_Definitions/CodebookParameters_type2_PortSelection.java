/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CodebookParameters_type2_PortSelection extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CodebookParameters_type2_PortSelection_supportedCSI_RS_ResourceList supportedCSI_RS_ResourceList;
   public Asn1Integer parameterLx;
   public CodebookParameters_type2_PortSelection_amplitudeScalingType amplitudeScalingType = null;

   public CodebookParameters_type2_PortSelection () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CodebookParameters_type2_PortSelection (
      CodebookParameters_type2_PortSelection_supportedCSI_RS_ResourceList supportedCSI_RS_ResourceList_,
      Asn1Integer parameterLx_,
      CodebookParameters_type2_PortSelection_amplitudeScalingType amplitudeScalingType_
   ) {
      super();
      supportedCSI_RS_ResourceList = supportedCSI_RS_ResourceList_;
      parameterLx = parameterLx_;
      amplitudeScalingType = amplitudeScalingType_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CodebookParameters_type2_PortSelection (CodebookParameters_type2_PortSelection_supportedCSI_RS_ResourceList supportedCSI_RS_ResourceList_,
      long parameterLx_,
      CodebookParameters_type2_PortSelection_amplitudeScalingType amplitudeScalingType_
   ) {
      super();
      supportedCSI_RS_ResourceList = supportedCSI_RS_ResourceList_;
      parameterLx = new Asn1Integer (parameterLx_);
      amplitudeScalingType = amplitudeScalingType_;
   }

   public void init () {
      supportedCSI_RS_ResourceList = null;
      parameterLx = null;
      amplitudeScalingType = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return supportedCSI_RS_ResourceList;
         case 1: return parameterLx;
         case 2: return amplitudeScalingType;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "supportedCSI-RS-ResourceList";
         case 1: return "parameterLx";
         case 2: return "amplitudeScalingType";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode supportedCSI_RS_ResourceList

      buffer.getContext().eventDispatcher.startElement("supportedCSI_RS_ResourceList", -1);

      supportedCSI_RS_ResourceList = new CodebookParameters_type2_PortSelection_supportedCSI_RS_ResourceList();
      supportedCSI_RS_ResourceList.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("supportedCSI_RS_ResourceList", -1);

      // decode parameterLx

      buffer.getContext().eventDispatcher.startElement("parameterLx", -1);

      parameterLx = new Asn1Integer();
      parameterLx.decode (buffer, 2, 4);

      buffer.invokeCharacters(parameterLx.toString());
      buffer.getContext().eventDispatcher.endElement("parameterLx", -1);

      // decode amplitudeScalingType

      buffer.getContext().eventDispatcher.startElement("amplitudeScalingType", -1);

      {
         int tval = CodebookParameters_type2_PortSelection_amplitudeScalingType.decodeEnumValue (buffer);
         amplitudeScalingType = CodebookParameters_type2_PortSelection_amplitudeScalingType.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("amplitudeScalingType", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (supportedCSI_RS_ResourceList != null) supportedCSI_RS_ResourceList.print (_sb, "supportedCSI_RS_ResourceList", _level+1);
      if (parameterLx != null) parameterLx.print (_sb, "parameterLx", _level+1);
      if (amplitudeScalingType != null) amplitudeScalingType.print (_sb, "amplitudeScalingType", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
