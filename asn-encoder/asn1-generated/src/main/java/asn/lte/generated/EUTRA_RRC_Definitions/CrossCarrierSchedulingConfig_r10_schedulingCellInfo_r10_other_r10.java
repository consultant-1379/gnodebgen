/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CrossCarrierSchedulingConfig_r10_schedulingCellInfo_r10_other_r10 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public ServCellIndex_r10 schedulingCellId_r10;
   public Asn1Integer pdsch_Start_r10;

   public CrossCarrierSchedulingConfig_r10_schedulingCellInfo_r10_other_r10 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CrossCarrierSchedulingConfig_r10_schedulingCellInfo_r10_other_r10 (
      ServCellIndex_r10 schedulingCellId_r10_,
      Asn1Integer pdsch_Start_r10_
   ) {
      super();
      schedulingCellId_r10 = schedulingCellId_r10_;
      pdsch_Start_r10 = pdsch_Start_r10_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CrossCarrierSchedulingConfig_r10_schedulingCellInfo_r10_other_r10 (long schedulingCellId_r10_,
      long pdsch_Start_r10_
   ) {
      super();
      schedulingCellId_r10 = new ServCellIndex_r10 (schedulingCellId_r10_);
      pdsch_Start_r10 = new Asn1Integer (pdsch_Start_r10_);
   }

   public void init () {
      schedulingCellId_r10 = null;
      pdsch_Start_r10 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return schedulingCellId_r10;
         case 1: return pdsch_Start_r10;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "schedulingCellId-r10";
         case 1: return "pdsch-Start-r10";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode schedulingCellId_r10

      buffer.getContext().eventDispatcher.startElement("schedulingCellId_r10", -1);

      schedulingCellId_r10 = new ServCellIndex_r10();
      schedulingCellId_r10.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("schedulingCellId_r10", -1);

      // decode pdsch_Start_r10

      buffer.getContext().eventDispatcher.startElement("pdsch_Start_r10", -1);

      pdsch_Start_r10 = new Asn1Integer();
      pdsch_Start_r10.decode (buffer, 1, 4);

      buffer.invokeCharacters(pdsch_Start_r10.toString());
      buffer.getContext().eventDispatcher.endElement("pdsch_Start_r10", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (schedulingCellId_r10 != null) schedulingCellId_r10.print (_sb, "schedulingCellId_r10", _level+1);
      if (pdsch_Start_r10 != null) pdsch_Start_r10.print (_sb, "pdsch_Start_r10", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
