/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class Inband_SamePCI_NB_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "Inband-SamePCI-NB-r13";
   }

   public Asn1Integer eutra_CRS_SequenceInfo_r13;

   public Inband_SamePCI_NB_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public Inband_SamePCI_NB_r13 (
      Asn1Integer eutra_CRS_SequenceInfo_r13_
   ) {
      super();
      eutra_CRS_SequenceInfo_r13 = eutra_CRS_SequenceInfo_r13_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public Inband_SamePCI_NB_r13 (long eutra_CRS_SequenceInfo_r13_
   ) {
      super();
      eutra_CRS_SequenceInfo_r13 = new Asn1Integer (eutra_CRS_SequenceInfo_r13_);
   }

   public void init () {
      eutra_CRS_SequenceInfo_r13 = null;
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return eutra_CRS_SequenceInfo_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "eutra-CRS-SequenceInfo-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode eutra_CRS_SequenceInfo_r13

      buffer.getContext().eventDispatcher.startElement("eutra_CRS_SequenceInfo_r13", -1);

      eutra_CRS_SequenceInfo_r13 = new Asn1Integer();
      eutra_CRS_SequenceInfo_r13.decode (buffer, 0, 31);

      buffer.invokeCharacters(eutra_CRS_SequenceInfo_r13.toString());
      buffer.getContext().eventDispatcher.endElement("eutra_CRS_SequenceInfo_r13", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (eutra_CRS_SequenceInfo_r13 != null) eutra_CRS_SequenceInfo_r13.print (_sb, "eutra_CRS_SequenceInfo_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
