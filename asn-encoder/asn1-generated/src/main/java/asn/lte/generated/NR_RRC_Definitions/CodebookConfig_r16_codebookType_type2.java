/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CodebookConfig_r16_codebookType_type2 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CodebookConfig_r16_codebookType_type2_subType subType;
   public Asn1Integer numberOfPMI_SubbandsPerCQI_Subband_r16;
   public Asn1Integer paramCombination_r16;

   public CodebookConfig_r16_codebookType_type2 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CodebookConfig_r16_codebookType_type2 (
      CodebookConfig_r16_codebookType_type2_subType subType_,
      Asn1Integer numberOfPMI_SubbandsPerCQI_Subband_r16_,
      Asn1Integer paramCombination_r16_
   ) {
      super();
      subType = subType_;
      numberOfPMI_SubbandsPerCQI_Subband_r16 = numberOfPMI_SubbandsPerCQI_Subband_r16_;
      paramCombination_r16 = paramCombination_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CodebookConfig_r16_codebookType_type2 (CodebookConfig_r16_codebookType_type2_subType subType_,
      long numberOfPMI_SubbandsPerCQI_Subband_r16_,
      long paramCombination_r16_
   ) {
      super();
      subType = subType_;
      numberOfPMI_SubbandsPerCQI_Subband_r16 = new Asn1Integer (numberOfPMI_SubbandsPerCQI_Subband_r16_);
      paramCombination_r16 = new Asn1Integer (paramCombination_r16_);
   }

   public void init () {
      subType = null;
      numberOfPMI_SubbandsPerCQI_Subband_r16 = null;
      paramCombination_r16 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return subType;
         case 1: return numberOfPMI_SubbandsPerCQI_Subband_r16;
         case 2: return paramCombination_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "subType";
         case 1: return "numberOfPMI-SubbandsPerCQI-Subband-r16";
         case 2: return "paramCombination-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode subType

      buffer.getContext().eventDispatcher.startElement("subType", -1);

      subType = new CodebookConfig_r16_codebookType_type2_subType();
      subType.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("subType", -1);

      // decode numberOfPMI_SubbandsPerCQI_Subband_r16

      buffer.getContext().eventDispatcher.startElement("numberOfPMI_SubbandsPerCQI_Subband_r16", -1);

      numberOfPMI_SubbandsPerCQI_Subband_r16 = new Asn1Integer();
      numberOfPMI_SubbandsPerCQI_Subband_r16.decode (buffer, 1, 2);

      buffer.invokeCharacters(numberOfPMI_SubbandsPerCQI_Subband_r16.toString());
      buffer.getContext().eventDispatcher.endElement("numberOfPMI_SubbandsPerCQI_Subband_r16", -1);

      // decode paramCombination_r16

      buffer.getContext().eventDispatcher.startElement("paramCombination_r16", -1);

      paramCombination_r16 = new Asn1Integer();
      paramCombination_r16.decode (buffer, 1, 8);

      buffer.invokeCharacters(paramCombination_r16.toString());
      buffer.getContext().eventDispatcher.endElement("paramCombination_r16", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (subType != null) subType.print (_sb, "subType", _level+1);
      if (numberOfPMI_SubbandsPerCQI_Subband_r16 != null) numberOfPMI_SubbandsPerCQI_Subband_r16.print (_sb, "numberOfPMI_SubbandsPerCQI_Subband_r16", _level+1);
      if (paramCombination_r16 != null) paramCombination_r16.print (_sb, "paramCombination_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
