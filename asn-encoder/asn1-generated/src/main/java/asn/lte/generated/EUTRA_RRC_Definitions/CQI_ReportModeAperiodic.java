/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CQI_ReportModeAperiodic extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CQI-ReportModeAperiodic";
   }

   // Integer constants for switch-case
   public static final int _RM12 = 0;
   public static final int _RM20 = 1;
   public static final int _RM22 = 2;
   public static final int _RM30 = 3;
   public static final int _RM31 = 4;
   public static final int _RM32_V1250 = 5;
   public static final int _RM10_V1310 = 6;
   public static final int _RM11_V1310 = 7;

   // Singleton instances of CQI_ReportModeAperiodic
   protected static final CQI_ReportModeAperiodic _rm12 = new CQI_ReportModeAperiodic(0);
   protected static final CQI_ReportModeAperiodic _rm20 = new CQI_ReportModeAperiodic(1);
   protected static final CQI_ReportModeAperiodic _rm22 = new CQI_ReportModeAperiodic(2);
   protected static final CQI_ReportModeAperiodic _rm30 = new CQI_ReportModeAperiodic(3);
   protected static final CQI_ReportModeAperiodic _rm31 = new CQI_ReportModeAperiodic(4);
   protected static final CQI_ReportModeAperiodic _rm32_v1250 = new CQI_ReportModeAperiodic(5);
   protected static final CQI_ReportModeAperiodic _rm10_v1310 = new CQI_ReportModeAperiodic(6);
   protected static final CQI_ReportModeAperiodic _rm11_v1310 = new CQI_ReportModeAperiodic(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected CQI_ReportModeAperiodic (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for rm12.
    */
   public static CQI_ReportModeAperiodic rm12() {
      return _rm12;
   }

   /**
    * Singleton accessor method for rm20.
    */
   public static CQI_ReportModeAperiodic rm20() {
      return _rm20;
   }

   /**
    * Singleton accessor method for rm22.
    */
   public static CQI_ReportModeAperiodic rm22() {
      return _rm22;
   }

   /**
    * Singleton accessor method for rm30.
    */
   public static CQI_ReportModeAperiodic rm30() {
      return _rm30;
   }

   /**
    * Singleton accessor method for rm31.
    */
   public static CQI_ReportModeAperiodic rm31() {
      return _rm31;
   }

   /**
    * Singleton accessor method for rm32_v1250.
    */
   public static CQI_ReportModeAperiodic rm32_v1250() {
      return _rm32_v1250;
   }

   /**
    * Singleton accessor method for rm10_v1310.
    */
   public static CQI_ReportModeAperiodic rm10_v1310() {
      return _rm10_v1310;
   }

   /**
    * Singleton accessor method for rm11_v1310.
    */
   public static CQI_ReportModeAperiodic rm11_v1310() {
      return _rm11_v1310;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return CQI_ReportModeAperiodic.valueOf( CQI_ReportModeAperiodic.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static CQI_ReportModeAperiodic valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return rm12();
         case 1: return rm20();
         case 2: return rm22();
         case 3: return rm30();
         case 4: return rm31();
         case 5: return rm32_v1250();
         case 6: return rm10_v1310();
         case 7: return rm11_v1310();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (CQI_ReportModeAperiodic.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("rm12");
         case 1: return ("rm20");
         case 2: return ("rm22");
         case 3: return ("rm30");
         case 4: return ("rm31");
         case 5: return ("rm32-v1250");
         case 6: return ("rm10-v1310");
         case 7: return ("rm11-v1310");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
