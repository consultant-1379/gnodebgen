/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_PSSCH_TxConfig_r14 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SL-PSSCH-TxConfig-r14";
   }

   public SL_TypeTxSync_r14 typeTxSync_r14 = null;  // optional
   public SL_PSSCH_TxConfig_r14_thresUE_Speed_r14 thresUE_Speed_r14 = null;
   public SL_PSSCH_TxParameters_r14 parametersAboveThres_r14;
   public SL_PSSCH_TxParameters_r14 parametersBelowThres_r14;
   public boolean mV2ExtPresent;
   public SL_PSSCH_TxParameters_v1530 parametersAboveThres_v1530;  // optional
   public SL_PSSCH_TxParameters_v1530 parametersBelowThres_v1530;  // optional
   public Asn1OpenExt extElem1;

   public SL_PSSCH_TxConfig_r14 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_PSSCH_TxConfig_r14 (
      SL_TypeTxSync_r14 typeTxSync_r14_,
      SL_PSSCH_TxConfig_r14_thresUE_Speed_r14 thresUE_Speed_r14_,
      SL_PSSCH_TxParameters_r14 parametersAboveThres_r14_,
      SL_PSSCH_TxParameters_r14 parametersBelowThres_r14_,
      SL_PSSCH_TxParameters_v1530 parametersAboveThres_v1530_,
      SL_PSSCH_TxParameters_v1530 parametersBelowThres_v1530_
   ) {
      super();
      typeTxSync_r14 = typeTxSync_r14_;
      thresUE_Speed_r14 = thresUE_Speed_r14_;
      parametersAboveThres_r14 = parametersAboveThres_r14_;
      parametersBelowThres_r14 = parametersBelowThres_r14_;
      parametersAboveThres_v1530 = parametersAboveThres_v1530_;
      parametersBelowThres_v1530 = parametersBelowThres_v1530_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SL_PSSCH_TxConfig_r14 (
      SL_PSSCH_TxConfig_r14_thresUE_Speed_r14 thresUE_Speed_r14_,
      SL_PSSCH_TxParameters_r14 parametersAboveThres_r14_,
      SL_PSSCH_TxParameters_r14 parametersBelowThres_r14_
   ) {
      super();
      thresUE_Speed_r14 = thresUE_Speed_r14_;
      parametersAboveThres_r14 = parametersAboveThres_r14_;
      parametersBelowThres_r14 = parametersBelowThres_r14_;
   }

   public void init () {
      typeTxSync_r14 = null;
      thresUE_Speed_r14 = null;
      parametersAboveThres_r14 = null;
      parametersBelowThres_r14 = null;
      parametersAboveThres_v1530 = null;
      parametersBelowThres_v1530 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return typeTxSync_r14;
         case 1: return thresUE_Speed_r14;
         case 2: return parametersAboveThres_r14;
         case 3: return parametersBelowThres_r14;
         case 4: return parametersAboveThres_v1530;
         case 5: return parametersBelowThres_v1530;
         case 6: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "typeTxSync-r14";
         case 1: return "thresUE-Speed-r14";
         case 2: return "parametersAboveThres-r14";
         case 3: return "parametersBelowThres-r14";
         case 4: return "parametersAboveThres-v1530";
         case 5: return "parametersBelowThres-v1530";
         case 6: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean typeTxSync_r14Present = buffer.decodeBit ("typeTxSync_r14Present");

      // decode typeTxSync_r14

      if (typeTxSync_r14Present) {
         buffer.getContext().eventDispatcher.startElement("typeTxSync_r14", -1);

         int tval = SL_TypeTxSync_r14.decodeEnumValue (buffer);
         typeTxSync_r14 = SL_TypeTxSync_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("typeTxSync_r14", -1);
      }
      else {
         typeTxSync_r14 = null;
      }

      // decode thresUE_Speed_r14

      buffer.getContext().eventDispatcher.startElement("thresUE_Speed_r14", -1);

      {
         int tval = SL_PSSCH_TxConfig_r14_thresUE_Speed_r14.decodeEnumValue (buffer);
         thresUE_Speed_r14 = SL_PSSCH_TxConfig_r14_thresUE_Speed_r14.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("thresUE_Speed_r14", -1);

      // decode parametersAboveThres_r14

      buffer.getContext().eventDispatcher.startElement("parametersAboveThres_r14", -1);

      parametersAboveThres_r14 = new SL_PSSCH_TxParameters_r14();
      parametersAboveThres_r14.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("parametersAboveThres_r14", -1);

      // decode parametersBelowThres_r14

      buffer.getContext().eventDispatcher.startElement("parametersBelowThres_r14", -1);

      parametersBelowThres_r14 = new SL_PSSCH_TxParameters_r14();
      parametersBelowThres_r14.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("parametersBelowThres_r14", -1);

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean parametersAboveThres_v1530Present = buffer.decodeBit ("parametersAboveThres_v1530Present");

            boolean parametersBelowThres_v1530Present = buffer.decodeBit ("parametersBelowThres_v1530Present");

            // decode parametersAboveThres_v1530

            if (parametersAboveThres_v1530Present) {
               buffer.getContext().eventDispatcher.startElement("parametersAboveThres_v1530", -1);

               parametersAboveThres_v1530 = new SL_PSSCH_TxParameters_v1530();
               parametersAboveThres_v1530.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("parametersAboveThres_v1530", -1);
            }
            else {
               parametersAboveThres_v1530 = null;
            }

            // decode parametersBelowThres_v1530

            if (parametersBelowThres_v1530Present) {
               buffer.getContext().eventDispatcher.startElement("parametersBelowThres_v1530", -1);

               parametersBelowThres_v1530 = new SL_PSSCH_TxParameters_v1530();
               parametersBelowThres_v1530.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("parametersBelowThres_v1530", -1);
            }
            else {
               parametersBelowThres_v1530 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (typeTxSync_r14 != null) typeTxSync_r14.print (_sb, "typeTxSync_r14", _level+1);
      if (thresUE_Speed_r14 != null) thresUE_Speed_r14.print (_sb, "thresUE_Speed_r14", _level+1);
      if (parametersAboveThres_r14 != null) parametersAboveThres_r14.print (_sb, "parametersAboveThres_r14", _level+1);
      if (parametersBelowThres_r14 != null) parametersBelowThres_r14.print (_sb, "parametersBelowThres_r14", _level+1);
      if (parametersAboveThres_v1530 != null) parametersAboveThres_v1530.print (_sb, "parametersAboveThres_v1530", _level+1);
      if (parametersBelowThres_v1530 != null) parametersBelowThres_v1530.print (_sb, "parametersBelowThres_v1530", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
