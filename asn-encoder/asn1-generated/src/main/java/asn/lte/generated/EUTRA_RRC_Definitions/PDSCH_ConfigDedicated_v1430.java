/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PDSCH_ConfigDedicated_v1430 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PDSCH-ConfigDedicated-v1430";
   }

   public PDSCH_ConfigDedicated_v1430_ce_PDSCH_MaxBandwidth_r14 ce_PDSCH_MaxBandwidth_r14 = null;  // optional
   public PDSCH_ConfigDedicated_v1430_ce_PDSCH_TenProcesses_r14 ce_PDSCH_TenProcesses_r14 = null;  // optional
   public PDSCH_ConfigDedicated_v1430_ce_HARQ_AckBundling_r14 ce_HARQ_AckBundling_r14 = null;  // optional
   public PDSCH_ConfigDedicated_v1430_ce_SchedulingEnhancement_r14 ce_SchedulingEnhancement_r14 = null;  // optional
   public PDSCH_ConfigDedicated_v1430_tbsIndexAlt2_r14 tbsIndexAlt2_r14 = null;  // optional

   public PDSCH_ConfigDedicated_v1430 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PDSCH_ConfigDedicated_v1430 (
      PDSCH_ConfigDedicated_v1430_ce_PDSCH_MaxBandwidth_r14 ce_PDSCH_MaxBandwidth_r14_,
      PDSCH_ConfigDedicated_v1430_ce_PDSCH_TenProcesses_r14 ce_PDSCH_TenProcesses_r14_,
      PDSCH_ConfigDedicated_v1430_ce_HARQ_AckBundling_r14 ce_HARQ_AckBundling_r14_,
      PDSCH_ConfigDedicated_v1430_ce_SchedulingEnhancement_r14 ce_SchedulingEnhancement_r14_,
      PDSCH_ConfigDedicated_v1430_tbsIndexAlt2_r14 tbsIndexAlt2_r14_
   ) {
      super();
      ce_PDSCH_MaxBandwidth_r14 = ce_PDSCH_MaxBandwidth_r14_;
      ce_PDSCH_TenProcesses_r14 = ce_PDSCH_TenProcesses_r14_;
      ce_HARQ_AckBundling_r14 = ce_HARQ_AckBundling_r14_;
      ce_SchedulingEnhancement_r14 = ce_SchedulingEnhancement_r14_;
      tbsIndexAlt2_r14 = tbsIndexAlt2_r14_;
   }

   public void init () {
      ce_PDSCH_MaxBandwidth_r14 = null;
      ce_PDSCH_TenProcesses_r14 = null;
      ce_HARQ_AckBundling_r14 = null;
      ce_SchedulingEnhancement_r14 = null;
      tbsIndexAlt2_r14 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ce_PDSCH_MaxBandwidth_r14;
         case 1: return ce_PDSCH_TenProcesses_r14;
         case 2: return ce_HARQ_AckBundling_r14;
         case 3: return ce_SchedulingEnhancement_r14;
         case 4: return tbsIndexAlt2_r14;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ce-PDSCH-MaxBandwidth-r14";
         case 1: return "ce-PDSCH-TenProcesses-r14";
         case 2: return "ce-HARQ-AckBundling-r14";
         case 3: return "ce-SchedulingEnhancement-r14";
         case 4: return "tbsIndexAlt2-r14";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean ce_PDSCH_MaxBandwidth_r14Present = buffer.decodeBit ("ce_PDSCH_MaxBandwidth_r14Present");
      boolean ce_PDSCH_TenProcesses_r14Present = buffer.decodeBit ("ce_PDSCH_TenProcesses_r14Present");
      boolean ce_HARQ_AckBundling_r14Present = buffer.decodeBit ("ce_HARQ_AckBundling_r14Present");
      boolean ce_SchedulingEnhancement_r14Present = buffer.decodeBit ("ce_SchedulingEnhancement_r14Present");
      boolean tbsIndexAlt2_r14Present = buffer.decodeBit ("tbsIndexAlt2_r14Present");

      // decode ce_PDSCH_MaxBandwidth_r14

      if (ce_PDSCH_MaxBandwidth_r14Present) {
         buffer.getContext().eventDispatcher.startElement("ce_PDSCH_MaxBandwidth_r14", -1);

         int tval = PDSCH_ConfigDedicated_v1430_ce_PDSCH_MaxBandwidth_r14.decodeEnumValue (buffer);
         ce_PDSCH_MaxBandwidth_r14 = PDSCH_ConfigDedicated_v1430_ce_PDSCH_MaxBandwidth_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ce_PDSCH_MaxBandwidth_r14", -1);
      }
      else {
         ce_PDSCH_MaxBandwidth_r14 = null;
      }

      // decode ce_PDSCH_TenProcesses_r14

      if (ce_PDSCH_TenProcesses_r14Present) {
         buffer.getContext().eventDispatcher.startElement("ce_PDSCH_TenProcesses_r14", -1);

         int tval = PDSCH_ConfigDedicated_v1430_ce_PDSCH_TenProcesses_r14.decodeEnumValue (buffer);
         ce_PDSCH_TenProcesses_r14 = PDSCH_ConfigDedicated_v1430_ce_PDSCH_TenProcesses_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ce_PDSCH_TenProcesses_r14", -1);
      }
      else {
         ce_PDSCH_TenProcesses_r14 = null;
      }

      // decode ce_HARQ_AckBundling_r14

      if (ce_HARQ_AckBundling_r14Present) {
         buffer.getContext().eventDispatcher.startElement("ce_HARQ_AckBundling_r14", -1);

         int tval = PDSCH_ConfigDedicated_v1430_ce_HARQ_AckBundling_r14.decodeEnumValue (buffer);
         ce_HARQ_AckBundling_r14 = PDSCH_ConfigDedicated_v1430_ce_HARQ_AckBundling_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ce_HARQ_AckBundling_r14", -1);
      }
      else {
         ce_HARQ_AckBundling_r14 = null;
      }

      // decode ce_SchedulingEnhancement_r14

      if (ce_SchedulingEnhancement_r14Present) {
         buffer.getContext().eventDispatcher.startElement("ce_SchedulingEnhancement_r14", -1);

         int tval = PDSCH_ConfigDedicated_v1430_ce_SchedulingEnhancement_r14.decodeEnumValue (buffer);
         ce_SchedulingEnhancement_r14 = PDSCH_ConfigDedicated_v1430_ce_SchedulingEnhancement_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ce_SchedulingEnhancement_r14", -1);
      }
      else {
         ce_SchedulingEnhancement_r14 = null;
      }

      // decode tbsIndexAlt2_r14

      if (tbsIndexAlt2_r14Present) {
         buffer.getContext().eventDispatcher.startElement("tbsIndexAlt2_r14", -1);

         int tval = PDSCH_ConfigDedicated_v1430_tbsIndexAlt2_r14.decodeEnumValue (buffer);
         tbsIndexAlt2_r14 = PDSCH_ConfigDedicated_v1430_tbsIndexAlt2_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tbsIndexAlt2_r14", -1);
      }
      else {
         tbsIndexAlt2_r14 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ce_PDSCH_MaxBandwidth_r14 != null) ce_PDSCH_MaxBandwidth_r14.print (_sb, "ce_PDSCH_MaxBandwidth_r14", _level+1);
      if (ce_PDSCH_TenProcesses_r14 != null) ce_PDSCH_TenProcesses_r14.print (_sb, "ce_PDSCH_TenProcesses_r14", _level+1);
      if (ce_HARQ_AckBundling_r14 != null) ce_HARQ_AckBundling_r14.print (_sb, "ce_HARQ_AckBundling_r14", _level+1);
      if (ce_SchedulingEnhancement_r14 != null) ce_SchedulingEnhancement_r14.print (_sb, "ce_SchedulingEnhancement_r14", _level+1);
      if (tbsIndexAlt2_r14 != null) tbsIndexAlt2_r14.print (_sb, "tbsIndexAlt2_r14", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
