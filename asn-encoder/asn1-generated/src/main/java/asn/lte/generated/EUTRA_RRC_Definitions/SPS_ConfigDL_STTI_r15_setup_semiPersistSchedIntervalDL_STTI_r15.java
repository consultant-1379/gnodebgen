/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _STTI1 = 0;
   public static final int _STTI2 = 1;
   public static final int _STTI3 = 2;
   public static final int _STTI4 = 3;
   public static final int _STTI6 = 4;
   public static final int _STTI8 = 5;
   public static final int _STTI12 = 6;
   public static final int _STTI16 = 7;
   public static final int _STTI20 = 8;
   public static final int _STTI40 = 9;
   public static final int _STTI60 = 10;
   public static final int _STTI80 = 11;
   public static final int _STTI120 = 12;
   public static final int _STTI240 = 13;
   public static final int _SPARE2 = 14;
   public static final int _SPARE1 = 15;

   // Singleton instances of SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI1 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(0);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI2 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(1);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI3 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(2);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI4 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(3);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI6 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(4);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI8 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(5);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI12 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(6);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI16 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(7);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI20 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(8);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI40 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(9);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI60 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(10);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI80 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(11);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI120 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(12);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _sTTI240 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(13);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _spare2 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(14);
   protected static final SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 _spare1 = new SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15(15);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    */
   protected SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for sTTI1.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI1() {
      return _sTTI1;
   }

   /**
    * Singleton accessor method for sTTI2.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI2() {
      return _sTTI2;
   }

   /**
    * Singleton accessor method for sTTI3.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI3() {
      return _sTTI3;
   }

   /**
    * Singleton accessor method for sTTI4.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI4() {
      return _sTTI4;
   }

   /**
    * Singleton accessor method for sTTI6.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI6() {
      return _sTTI6;
   }

   /**
    * Singleton accessor method for sTTI8.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI8() {
      return _sTTI8;
   }

   /**
    * Singleton accessor method for sTTI12.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI12() {
      return _sTTI12;
   }

   /**
    * Singleton accessor method for sTTI16.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI16() {
      return _sTTI16;
   }

   /**
    * Singleton accessor method for sTTI20.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI20() {
      return _sTTI20;
   }

   /**
    * Singleton accessor method for sTTI40.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI40() {
      return _sTTI40;
   }

   /**
    * Singleton accessor method for sTTI60.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI60() {
      return _sTTI60;
   }

   /**
    * Singleton accessor method for sTTI80.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI80() {
      return _sTTI80;
   }

   /**
    * Singleton accessor method for sTTI120.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI120() {
      return _sTTI120;
   }

   /**
    * Singleton accessor method for sTTI240.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 sTTI240() {
      return _sTTI240;
   }

   /**
    * Singleton accessor method for spare2.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 spare2() {
      return _spare2;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 spare1() {
      return _spare1;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15.valueOf( SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return sTTI1();
         case 1: return sTTI2();
         case 2: return sTTI3();
         case 3: return sTTI4();
         case 4: return sTTI6();
         case 5: return sTTI8();
         case 6: return sTTI12();
         case 7: return sTTI16();
         case 8: return sTTI20();
         case 9: return sTTI40();
         case 10: return sTTI60();
         case 11: return sTTI80();
         case 12: return sTTI120();
         case 13: return sTTI240();
         case 14: return spare2();
         case 15: return spare1();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (16);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (SPS_ConfigDL_STTI_r15_setup_semiPersistSchedIntervalDL_STTI_r15.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("sTTI1");
         case 1: return ("sTTI2");
         case 2: return ("sTTI3");
         case 3: return ("sTTI4");
         case 4: return ("sTTI6");
         case 5: return ("sTTI8");
         case 6: return ("sTTI12");
         case 7: return ("sTTI16");
         case 8: return ("sTTI20");
         case 9: return ("sTTI40");
         case 10: return ("sTTI60");
         case 11: return ("sTTI80");
         case 12: return ("sTTI120");
         case 13: return ("sTTI240");
         case 14: return ("spare2");
         case 15: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
