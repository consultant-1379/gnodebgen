/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CA_ParametersNRDC extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CA-ParametersNRDC";
   }

   public CA_ParametersNR ca_ParametersNR_ForDC;  // optional
   public CA_ParametersNR_v1540 ca_ParametersNR_ForDC_v1540;  // optional
   public CA_ParametersNR_v1550 ca_ParametersNR_ForDC_v1550;  // optional
   public CA_ParametersNR_v1560 ca_ParametersNR_ForDC_v1560;  // optional
   public FeatureSetCombinationId featureSetCombinationDC;  // optional

   public CA_ParametersNRDC () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CA_ParametersNRDC (
      CA_ParametersNR ca_ParametersNR_ForDC_,
      CA_ParametersNR_v1540 ca_ParametersNR_ForDC_v1540_,
      CA_ParametersNR_v1550 ca_ParametersNR_ForDC_v1550_,
      CA_ParametersNR_v1560 ca_ParametersNR_ForDC_v1560_,
      FeatureSetCombinationId featureSetCombinationDC_
   ) {
      super();
      ca_ParametersNR_ForDC = ca_ParametersNR_ForDC_;
      ca_ParametersNR_ForDC_v1540 = ca_ParametersNR_ForDC_v1540_;
      ca_ParametersNR_ForDC_v1550 = ca_ParametersNR_ForDC_v1550_;
      ca_ParametersNR_ForDC_v1560 = ca_ParametersNR_ForDC_v1560_;
      featureSetCombinationDC = featureSetCombinationDC_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CA_ParametersNRDC (CA_ParametersNR ca_ParametersNR_ForDC_,
      CA_ParametersNR_v1540 ca_ParametersNR_ForDC_v1540_,
      CA_ParametersNR_v1550 ca_ParametersNR_ForDC_v1550_,
      CA_ParametersNR_v1560 ca_ParametersNR_ForDC_v1560_,
      long featureSetCombinationDC_
   ) {
      super();
      ca_ParametersNR_ForDC = ca_ParametersNR_ForDC_;
      ca_ParametersNR_ForDC_v1540 = ca_ParametersNR_ForDC_v1540_;
      ca_ParametersNR_ForDC_v1550 = ca_ParametersNR_ForDC_v1550_;
      ca_ParametersNR_ForDC_v1560 = ca_ParametersNR_ForDC_v1560_;
      featureSetCombinationDC = new FeatureSetCombinationId (featureSetCombinationDC_);
   }

   public void init () {
      ca_ParametersNR_ForDC = null;
      ca_ParametersNR_ForDC_v1540 = null;
      ca_ParametersNR_ForDC_v1550 = null;
      ca_ParametersNR_ForDC_v1560 = null;
      featureSetCombinationDC = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ca_ParametersNR_ForDC;
         case 1: return ca_ParametersNR_ForDC_v1540;
         case 2: return ca_ParametersNR_ForDC_v1550;
         case 3: return ca_ParametersNR_ForDC_v1560;
         case 4: return featureSetCombinationDC;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ca-ParametersNR-ForDC";
         case 1: return "ca-ParametersNR-ForDC-v1540";
         case 2: return "ca-ParametersNR-ForDC-v1550";
         case 3: return "ca-ParametersNR-ForDC-v1560";
         case 4: return "featureSetCombinationDC";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean ca_ParametersNR_ForDCPresent = buffer.decodeBit ("ca_ParametersNR_ForDCPresent");
      boolean ca_ParametersNR_ForDC_v1540Present = buffer.decodeBit ("ca_ParametersNR_ForDC_v1540Present");
      boolean ca_ParametersNR_ForDC_v1550Present = buffer.decodeBit ("ca_ParametersNR_ForDC_v1550Present");
      boolean ca_ParametersNR_ForDC_v1560Present = buffer.decodeBit ("ca_ParametersNR_ForDC_v1560Present");
      boolean featureSetCombinationDCPresent = buffer.decodeBit ("featureSetCombinationDCPresent");

      // decode ca_ParametersNR_ForDC

      if (ca_ParametersNR_ForDCPresent) {
         buffer.getContext().eventDispatcher.startElement("ca_ParametersNR_ForDC", -1);

         ca_ParametersNR_ForDC = new CA_ParametersNR();
         ca_ParametersNR_ForDC.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ca_ParametersNR_ForDC", -1);
      }
      else {
         ca_ParametersNR_ForDC = null;
      }

      // decode ca_ParametersNR_ForDC_v1540

      if (ca_ParametersNR_ForDC_v1540Present) {
         buffer.getContext().eventDispatcher.startElement("ca_ParametersNR_ForDC_v1540", -1);

         ca_ParametersNR_ForDC_v1540 = new CA_ParametersNR_v1540();
         ca_ParametersNR_ForDC_v1540.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ca_ParametersNR_ForDC_v1540", -1);
      }
      else {
         ca_ParametersNR_ForDC_v1540 = null;
      }

      // decode ca_ParametersNR_ForDC_v1550

      if (ca_ParametersNR_ForDC_v1550Present) {
         buffer.getContext().eventDispatcher.startElement("ca_ParametersNR_ForDC_v1550", -1);

         ca_ParametersNR_ForDC_v1550 = new CA_ParametersNR_v1550();
         ca_ParametersNR_ForDC_v1550.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ca_ParametersNR_ForDC_v1550", -1);
      }
      else {
         ca_ParametersNR_ForDC_v1550 = null;
      }

      // decode ca_ParametersNR_ForDC_v1560

      if (ca_ParametersNR_ForDC_v1560Present) {
         buffer.getContext().eventDispatcher.startElement("ca_ParametersNR_ForDC_v1560", -1);

         ca_ParametersNR_ForDC_v1560 = new CA_ParametersNR_v1560();
         ca_ParametersNR_ForDC_v1560.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ca_ParametersNR_ForDC_v1560", -1);
      }
      else {
         ca_ParametersNR_ForDC_v1560 = null;
      }

      // decode featureSetCombinationDC

      if (featureSetCombinationDCPresent) {
         buffer.getContext().eventDispatcher.startElement("featureSetCombinationDC", -1);

         featureSetCombinationDC = new FeatureSetCombinationId();
         featureSetCombinationDC.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("featureSetCombinationDC", -1);
      }
      else {
         featureSetCombinationDC = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ca_ParametersNR_ForDC != null) ca_ParametersNR_ForDC.print (_sb, "ca_ParametersNR_ForDC", _level+1);
      if (ca_ParametersNR_ForDC_v1540 != null) ca_ParametersNR_ForDC_v1540.print (_sb, "ca_ParametersNR_ForDC_v1540", _level+1);
      if (ca_ParametersNR_ForDC_v1550 != null) ca_ParametersNR_ForDC_v1550.print (_sb, "ca_ParametersNR_ForDC_v1550", _level+1);
      if (ca_ParametersNR_ForDC_v1560 != null) ca_ParametersNR_ForDC_v1560.print (_sb, "ca_ParametersNR_ForDC_v1560", _level+1);
      if (featureSetCombinationDC != null) featureSetCombinationDC.print (_sb, "featureSetCombinationDC", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
