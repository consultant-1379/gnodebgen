/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.MeasResultSSTD_r13;
import asn.lte.generated.EUTRA_RRC_Definitions.SCellToAddModListExt_r13;
import asn.lte.generated.EUTRA_RRC_Definitions.SCellToReleaseListExt_r13;

public class SCG_ConfigInfo_v1310_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SCG-ConfigInfo-v1310-IEs";
   }

   public MeasResultSSTD_r13 measResultSSTD_r13;  // optional
   public SCellToAddModListExt_r13 sCellToAddModListMCG_Ext_r13;  // optional
   public MeasResultServCellListSCG_Ext_r13 measResultServCellListSCG_Ext_r13;  // optional
   public SCellToAddModListSCG_Ext_r13 sCellToAddModListSCG_Ext_r13;  // optional
   public SCellToReleaseListExt_r13 sCellToReleaseListSCG_Ext_r13;  // optional
   public SCG_ConfigInfo_v1330_IEs nonCriticalExtension;  // optional

   public SCG_ConfigInfo_v1310_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SCG_ConfigInfo_v1310_IEs (
      MeasResultSSTD_r13 measResultSSTD_r13_,
      SCellToAddModListExt_r13 sCellToAddModListMCG_Ext_r13_,
      MeasResultServCellListSCG_Ext_r13 measResultServCellListSCG_Ext_r13_,
      SCellToAddModListSCG_Ext_r13 sCellToAddModListSCG_Ext_r13_,
      SCellToReleaseListExt_r13 sCellToReleaseListSCG_Ext_r13_,
      SCG_ConfigInfo_v1330_IEs nonCriticalExtension_
   ) {
      super();
      measResultSSTD_r13 = measResultSSTD_r13_;
      sCellToAddModListMCG_Ext_r13 = sCellToAddModListMCG_Ext_r13_;
      measResultServCellListSCG_Ext_r13 = measResultServCellListSCG_Ext_r13_;
      sCellToAddModListSCG_Ext_r13 = sCellToAddModListSCG_Ext_r13_;
      sCellToReleaseListSCG_Ext_r13 = sCellToReleaseListSCG_Ext_r13_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      measResultSSTD_r13 = null;
      sCellToAddModListMCG_Ext_r13 = null;
      measResultServCellListSCG_Ext_r13 = null;
      sCellToAddModListSCG_Ext_r13 = null;
      sCellToReleaseListSCG_Ext_r13 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return measResultSSTD_r13;
         case 1: return sCellToAddModListMCG_Ext_r13;
         case 2: return measResultServCellListSCG_Ext_r13;
         case 3: return sCellToAddModListSCG_Ext_r13;
         case 4: return sCellToReleaseListSCG_Ext_r13;
         case 5: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "measResultSSTD-r13";
         case 1: return "sCellToAddModListMCG-Ext-r13";
         case 2: return "measResultServCellListSCG-Ext-r13";
         case 3: return "sCellToAddModListSCG-Ext-r13";
         case 4: return "sCellToReleaseListSCG-Ext-r13";
         case 5: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean measResultSSTD_r13Present = buffer.decodeBit ("measResultSSTD_r13Present");
      boolean sCellToAddModListMCG_Ext_r13Present = buffer.decodeBit ("sCellToAddModListMCG_Ext_r13Present");
      boolean measResultServCellListSCG_Ext_r13Present = buffer.decodeBit ("measResultServCellListSCG_Ext_r13Present");
      boolean sCellToAddModListSCG_Ext_r13Present = buffer.decodeBit ("sCellToAddModListSCG_Ext_r13Present");
      boolean sCellToReleaseListSCG_Ext_r13Present = buffer.decodeBit ("sCellToReleaseListSCG_Ext_r13Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode measResultSSTD_r13

      if (measResultSSTD_r13Present) {
         buffer.getContext().eventDispatcher.startElement("measResultSSTD_r13", -1);

         measResultSSTD_r13 = new MeasResultSSTD_r13();
         measResultSSTD_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measResultSSTD_r13", -1);
      }
      else {
         measResultSSTD_r13 = null;
      }

      // decode sCellToAddModListMCG_Ext_r13

      if (sCellToAddModListMCG_Ext_r13Present) {
         buffer.getContext().eventDispatcher.startElement("sCellToAddModListMCG_Ext_r13", -1);

         sCellToAddModListMCG_Ext_r13 = new SCellToAddModListExt_r13();
         sCellToAddModListMCG_Ext_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sCellToAddModListMCG_Ext_r13", -1);
      }
      else {
         sCellToAddModListMCG_Ext_r13 = null;
      }

      // decode measResultServCellListSCG_Ext_r13

      if (measResultServCellListSCG_Ext_r13Present) {
         buffer.getContext().eventDispatcher.startElement("measResultServCellListSCG_Ext_r13", -1);

         measResultServCellListSCG_Ext_r13 = new MeasResultServCellListSCG_Ext_r13();
         measResultServCellListSCG_Ext_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measResultServCellListSCG_Ext_r13", -1);
      }
      else {
         measResultServCellListSCG_Ext_r13 = null;
      }

      // decode sCellToAddModListSCG_Ext_r13

      if (sCellToAddModListSCG_Ext_r13Present) {
         buffer.getContext().eventDispatcher.startElement("sCellToAddModListSCG_Ext_r13", -1);

         sCellToAddModListSCG_Ext_r13 = new SCellToAddModListSCG_Ext_r13();
         sCellToAddModListSCG_Ext_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sCellToAddModListSCG_Ext_r13", -1);
      }
      else {
         sCellToAddModListSCG_Ext_r13 = null;
      }

      // decode sCellToReleaseListSCG_Ext_r13

      if (sCellToReleaseListSCG_Ext_r13Present) {
         buffer.getContext().eventDispatcher.startElement("sCellToReleaseListSCG_Ext_r13", -1);

         sCellToReleaseListSCG_Ext_r13 = new SCellToReleaseListExt_r13();
         sCellToReleaseListSCG_Ext_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sCellToReleaseListSCG_Ext_r13", -1);
      }
      else {
         sCellToReleaseListSCG_Ext_r13 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new SCG_ConfigInfo_v1330_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (measResultSSTD_r13 != null) measResultSSTD_r13.print (_sb, "measResultSSTD_r13", _level+1);
      if (sCellToAddModListMCG_Ext_r13 != null) sCellToAddModListMCG_Ext_r13.print (_sb, "sCellToAddModListMCG_Ext_r13", _level+1);
      if (measResultServCellListSCG_Ext_r13 != null) measResultServCellListSCG_Ext_r13.print (_sb, "measResultServCellListSCG_Ext_r13", _level+1);
      if (sCellToAddModListSCG_Ext_r13 != null) sCellToAddModListSCG_Ext_r13.print (_sb, "sCellToAddModListSCG_Ext_r13", _level+1);
      if (sCellToReleaseListSCG_Ext_r13 != null) sCellToReleaseListSCG_Ext_r13.print (_sb, "sCellToReleaseListSCG_Ext_r13", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
