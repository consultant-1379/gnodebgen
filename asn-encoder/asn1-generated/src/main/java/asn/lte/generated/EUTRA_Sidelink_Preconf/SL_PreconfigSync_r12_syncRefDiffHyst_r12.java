/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_Sidelink_Preconf;

import com.objsys.asn1j.runtime.*;

public class SL_PreconfigSync_r12_syncRefDiffHyst_r12 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_Sidelink_PreconfRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _DB0 = 0;
   public static final int _DB3 = 1;
   public static final int _DB6 = 2;
   public static final int _DB9 = 3;
   public static final int _DB12 = 4;
   public static final int _DBINF = 5;

   // Singleton instances of SL_PreconfigSync_r12_syncRefDiffHyst_r12
   protected static final SL_PreconfigSync_r12_syncRefDiffHyst_r12 _dB0 = new SL_PreconfigSync_r12_syncRefDiffHyst_r12(0);
   protected static final SL_PreconfigSync_r12_syncRefDiffHyst_r12 _dB3 = new SL_PreconfigSync_r12_syncRefDiffHyst_r12(1);
   protected static final SL_PreconfigSync_r12_syncRefDiffHyst_r12 _dB6 = new SL_PreconfigSync_r12_syncRefDiffHyst_r12(2);
   protected static final SL_PreconfigSync_r12_syncRefDiffHyst_r12 _dB9 = new SL_PreconfigSync_r12_syncRefDiffHyst_r12(3);
   protected static final SL_PreconfigSync_r12_syncRefDiffHyst_r12 _dB12 = new SL_PreconfigSync_r12_syncRefDiffHyst_r12(4);
   protected static final SL_PreconfigSync_r12_syncRefDiffHyst_r12 _dBinf = new SL_PreconfigSync_r12_syncRefDiffHyst_r12(5);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    */
   protected SL_PreconfigSync_r12_syncRefDiffHyst_r12 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for dB0.
    */
   public static SL_PreconfigSync_r12_syncRefDiffHyst_r12 dB0() {
      return _dB0;
   }

   /**
    * Singleton accessor method for dB3.
    */
   public static SL_PreconfigSync_r12_syncRefDiffHyst_r12 dB3() {
      return _dB3;
   }

   /**
    * Singleton accessor method for dB6.
    */
   public static SL_PreconfigSync_r12_syncRefDiffHyst_r12 dB6() {
      return _dB6;
   }

   /**
    * Singleton accessor method for dB9.
    */
   public static SL_PreconfigSync_r12_syncRefDiffHyst_r12 dB9() {
      return _dB9;
   }

   /**
    * Singleton accessor method for dB12.
    */
   public static SL_PreconfigSync_r12_syncRefDiffHyst_r12 dB12() {
      return _dB12;
   }

   /**
    * Singleton accessor method for dBinf.
    */
   public static SL_PreconfigSync_r12_syncRefDiffHyst_r12 dBinf() {
      return _dBinf;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return SL_PreconfigSync_r12_syncRefDiffHyst_r12.valueOf( SL_PreconfigSync_r12_syncRefDiffHyst_r12.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static SL_PreconfigSync_r12_syncRefDiffHyst_r12 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return dB0();
         case 1: return dB3();
         case 2: return dB6();
         case 3: return dB9();
         case 4: return dB12();
         case 5: return dBinf();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (6);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (SL_PreconfigSync_r12_syncRefDiffHyst_r12.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("dB0");
         case 1: return ("dB3");
         case 2: return ("dB6");
         case 3: return ("dB9");
         case 4: return ("dB12");
         case 5: return ("dBinf");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
