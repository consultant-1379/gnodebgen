/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CSI_ReportConfig_reportConfigType extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _PERIODIC = 1;
   public final static byte _SEMIPERSISTENTONPUCCH = 2;
   public final static byte _SEMIPERSISTENTONPUSCH = 3;
   public final static byte _APERIODIC = 4;

   public CSI_ReportConfig_reportConfigType () {
      super();
   }

   public CSI_ReportConfig_reportConfigType (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _PERIODIC: return "periodic";
      case _SEMIPERSISTENTONPUCCH: return "semiPersistentOnPUCCH";
      case _SEMIPERSISTENTONPUSCH: return "semiPersistentOnPUSCH";
      case _APERIODIC: return "aperiodic";
      default: return "UNDEFINED";
      }
   }

   public void set_periodic (CSI_ReportConfig_reportConfigType_periodic value) {
      setElement (_PERIODIC, value);
   }

   public void set_semiPersistentOnPUCCH (CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH value) {
      setElement (_SEMIPERSISTENTONPUCCH, value);
   }

   public void set_semiPersistentOnPUSCH (CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH value) {
      setElement (_SEMIPERSISTENTONPUSCH, value);
   }

   public void set_aperiodic (CSI_ReportConfig_reportConfigType_aperiodic value) {
      setElement (_APERIODIC, value);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (4, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // periodic
         case 0: { 
            CSI_ReportConfig_reportConfigType_periodic periodic;
            element = periodic = new CSI_ReportConfig_reportConfigType_periodic();
            periodic.decode (buffer);
            break;
         }

         // semiPersistentOnPUCCH
         case 1: { 
            CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH semiPersistentOnPUCCH;
            element = semiPersistentOnPUCCH = new CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH();
            semiPersistentOnPUCCH.decode (buffer);
            break;
         }

         // semiPersistentOnPUSCH
         case 2: { 
            CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH semiPersistentOnPUSCH;
            element = semiPersistentOnPUSCH = new CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH();
            semiPersistentOnPUSCH.decode (buffer);
            break;
         }

         // aperiodic
         case 3: { 
            CSI_ReportConfig_reportConfigType_aperiodic aperiodic;
            element = aperiodic = new CSI_ReportConfig_reportConfigType_aperiodic();
            aperiodic.decode (buffer);
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
