/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SRS_ConfigAp_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SRS-ConfigAp-r13";
   }

   public SRS_AntennaPort srs_AntennaPortAp_r13 = null;
   public SRS_ConfigAp_r13_srs_BandwidthAp_r13 srs_BandwidthAp_r13 = null;
   public Asn1Integer freqDomainPositionAp_r13;
   public Asn1Integer transmissionCombAp_r13;
   public SRS_ConfigAp_r13_cyclicShiftAp_r13 cyclicShiftAp_r13 = null;
   public SRS_ConfigAp_r13_transmissionCombNum_r13 transmissionCombNum_r13 = null;

   public SRS_ConfigAp_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SRS_ConfigAp_r13 (
      SRS_AntennaPort srs_AntennaPortAp_r13_,
      SRS_ConfigAp_r13_srs_BandwidthAp_r13 srs_BandwidthAp_r13_,
      Asn1Integer freqDomainPositionAp_r13_,
      Asn1Integer transmissionCombAp_r13_,
      SRS_ConfigAp_r13_cyclicShiftAp_r13 cyclicShiftAp_r13_,
      SRS_ConfigAp_r13_transmissionCombNum_r13 transmissionCombNum_r13_
   ) {
      super();
      srs_AntennaPortAp_r13 = srs_AntennaPortAp_r13_;
      srs_BandwidthAp_r13 = srs_BandwidthAp_r13_;
      freqDomainPositionAp_r13 = freqDomainPositionAp_r13_;
      transmissionCombAp_r13 = transmissionCombAp_r13_;
      cyclicShiftAp_r13 = cyclicShiftAp_r13_;
      transmissionCombNum_r13 = transmissionCombNum_r13_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SRS_ConfigAp_r13 (SRS_AntennaPort srs_AntennaPortAp_r13_,
      SRS_ConfigAp_r13_srs_BandwidthAp_r13 srs_BandwidthAp_r13_,
      long freqDomainPositionAp_r13_,
      long transmissionCombAp_r13_,
      SRS_ConfigAp_r13_cyclicShiftAp_r13 cyclicShiftAp_r13_,
      SRS_ConfigAp_r13_transmissionCombNum_r13 transmissionCombNum_r13_
   ) {
      super();
      srs_AntennaPortAp_r13 = srs_AntennaPortAp_r13_;
      srs_BandwidthAp_r13 = srs_BandwidthAp_r13_;
      freqDomainPositionAp_r13 = new Asn1Integer (freqDomainPositionAp_r13_);
      transmissionCombAp_r13 = new Asn1Integer (transmissionCombAp_r13_);
      cyclicShiftAp_r13 = cyclicShiftAp_r13_;
      transmissionCombNum_r13 = transmissionCombNum_r13_;
   }

   public void init () {
      srs_AntennaPortAp_r13 = null;
      srs_BandwidthAp_r13 = null;
      freqDomainPositionAp_r13 = null;
      transmissionCombAp_r13 = null;
      cyclicShiftAp_r13 = null;
      transmissionCombNum_r13 = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return srs_AntennaPortAp_r13;
         case 1: return srs_BandwidthAp_r13;
         case 2: return freqDomainPositionAp_r13;
         case 3: return transmissionCombAp_r13;
         case 4: return cyclicShiftAp_r13;
         case 5: return transmissionCombNum_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "srs-AntennaPortAp-r13";
         case 1: return "srs-BandwidthAp-r13";
         case 2: return "freqDomainPositionAp-r13";
         case 3: return "transmissionCombAp-r13";
         case 4: return "cyclicShiftAp-r13";
         case 5: return "transmissionCombNum-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode srs_AntennaPortAp_r13

      buffer.getContext().eventDispatcher.startElement("srs_AntennaPortAp_r13", -1);

      {
         int tval = SRS_AntennaPort.decodeEnumValue (buffer);
         srs_AntennaPortAp_r13 = SRS_AntennaPort.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("srs_AntennaPortAp_r13", -1);

      // decode srs_BandwidthAp_r13

      buffer.getContext().eventDispatcher.startElement("srs_BandwidthAp_r13", -1);

      {
         int tval = SRS_ConfigAp_r13_srs_BandwidthAp_r13.decodeEnumValue (buffer);
         srs_BandwidthAp_r13 = SRS_ConfigAp_r13_srs_BandwidthAp_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("srs_BandwidthAp_r13", -1);

      // decode freqDomainPositionAp_r13

      buffer.getContext().eventDispatcher.startElement("freqDomainPositionAp_r13", -1);

      freqDomainPositionAp_r13 = new Asn1Integer();
      freqDomainPositionAp_r13.decode (buffer, 0, 23);

      buffer.invokeCharacters(freqDomainPositionAp_r13.toString());
      buffer.getContext().eventDispatcher.endElement("freqDomainPositionAp_r13", -1);

      // decode transmissionCombAp_r13

      buffer.getContext().eventDispatcher.startElement("transmissionCombAp_r13", -1);

      transmissionCombAp_r13 = new Asn1Integer();
      transmissionCombAp_r13.decode (buffer, 0, 3);

      buffer.invokeCharacters(transmissionCombAp_r13.toString());
      buffer.getContext().eventDispatcher.endElement("transmissionCombAp_r13", -1);

      // decode cyclicShiftAp_r13

      buffer.getContext().eventDispatcher.startElement("cyclicShiftAp_r13", -1);

      {
         int tval = SRS_ConfigAp_r13_cyclicShiftAp_r13.decodeEnumValue (buffer);
         cyclicShiftAp_r13 = SRS_ConfigAp_r13_cyclicShiftAp_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("cyclicShiftAp_r13", -1);

      // decode transmissionCombNum_r13

      buffer.getContext().eventDispatcher.startElement("transmissionCombNum_r13", -1);

      {
         int tval = SRS_ConfigAp_r13_transmissionCombNum_r13.decodeEnumValue (buffer);
         transmissionCombNum_r13 = SRS_ConfigAp_r13_transmissionCombNum_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("transmissionCombNum_r13", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (srs_AntennaPortAp_r13 != null) srs_AntennaPortAp_r13.print (_sb, "srs_AntennaPortAp_r13", _level+1);
      if (srs_BandwidthAp_r13 != null) srs_BandwidthAp_r13.print (_sb, "srs_BandwidthAp_r13", _level+1);
      if (freqDomainPositionAp_r13 != null) freqDomainPositionAp_r13.print (_sb, "freqDomainPositionAp_r13", _level+1);
      if (transmissionCombAp_r13 != null) transmissionCombAp_r13.print (_sb, "transmissionCombAp_r13", _level+1);
      if (cyclicShiftAp_r13 != null) cyclicShiftAp_r13.print (_sb, "cyclicShiftAp_r13", _level+1);
      if (transmissionCombNum_r13 != null) transmissionCombNum_r13.print (_sb, "transmissionCombNum_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
