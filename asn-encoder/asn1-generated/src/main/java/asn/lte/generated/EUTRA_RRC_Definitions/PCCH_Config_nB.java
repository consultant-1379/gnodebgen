/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PCCH_Config_nB extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _FOURT = 0;
   public static final int _TWOT = 1;
   public static final int _ONET = 2;
   public static final int _HALFT = 3;
   public static final int _QUARTERT = 4;
   public static final int _ONEEIGHTHT = 5;
   public static final int _ONESIXTEENTHT = 6;
   public static final int _ONETHIRTYSECONDT = 7;

   // Singleton instances of PCCH_Config_nB
   protected static final PCCH_Config_nB _fourT = new PCCH_Config_nB(0);
   protected static final PCCH_Config_nB _twoT = new PCCH_Config_nB(1);
   protected static final PCCH_Config_nB _oneT = new PCCH_Config_nB(2);
   protected static final PCCH_Config_nB _halfT = new PCCH_Config_nB(3);
   protected static final PCCH_Config_nB _quarterT = new PCCH_Config_nB(4);
   protected static final PCCH_Config_nB _oneEighthT = new PCCH_Config_nB(5);
   protected static final PCCH_Config_nB _oneSixteenthT = new PCCH_Config_nB(6);
   protected static final PCCH_Config_nB _oneThirtySecondT = new PCCH_Config_nB(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected PCCH_Config_nB (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for fourT.
    */
   public static PCCH_Config_nB fourT() {
      return _fourT;
   }

   /**
    * Singleton accessor method for twoT.
    */
   public static PCCH_Config_nB twoT() {
      return _twoT;
   }

   /**
    * Singleton accessor method for oneT.
    */
   public static PCCH_Config_nB oneT() {
      return _oneT;
   }

   /**
    * Singleton accessor method for halfT.
    */
   public static PCCH_Config_nB halfT() {
      return _halfT;
   }

   /**
    * Singleton accessor method for quarterT.
    */
   public static PCCH_Config_nB quarterT() {
      return _quarterT;
   }

   /**
    * Singleton accessor method for oneEighthT.
    */
   public static PCCH_Config_nB oneEighthT() {
      return _oneEighthT;
   }

   /**
    * Singleton accessor method for oneSixteenthT.
    */
   public static PCCH_Config_nB oneSixteenthT() {
      return _oneSixteenthT;
   }

   /**
    * Singleton accessor method for oneThirtySecondT.
    */
   public static PCCH_Config_nB oneThirtySecondT() {
      return _oneThirtySecondT;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return PCCH_Config_nB.valueOf( PCCH_Config_nB.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static PCCH_Config_nB valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return fourT();
         case 1: return twoT();
         case 2: return oneT();
         case 3: return halfT();
         case 4: return quarterT();
         case 5: return oneEighthT();
         case 6: return oneSixteenthT();
         case 7: return oneThirtySecondT();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (PCCH_Config_nB.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("fourT");
         case 1: return ("twoT");
         case 2: return ("oneT");
         case 3: return ("halfT");
         case 4: return ("quarterT");
         case 5: return ("oneEighthT");
         case 6: return ("oneSixteenthT");
         case 7: return ("oneThirtySecondT");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
