/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RLC_Config_r15_mode_r15 extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _AM_R15 = 1;
   public final static byte _UM_BI_DIRECTIONAL_R15 = 2;
   public final static byte _UM_UNI_DIRECTIONAL_UL_R15 = 3;
   public final static byte _UM_UNI_DIRECTIONAL_DL_R15 = 4;

   public RLC_Config_r15_mode_r15 () {
      super();
   }

   public RLC_Config_r15_mode_r15 (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _AM_R15: return "am_r15";
      case _UM_BI_DIRECTIONAL_R15: return "um_Bi_Directional_r15";
      case _UM_UNI_DIRECTIONAL_UL_R15: return "um_Uni_Directional_UL_r15";
      case _UM_UNI_DIRECTIONAL_DL_R15: return "um_Uni_Directional_DL_r15";
      default: return "UNDEFINED";
      }
   }

   public void set_am_r15 (RLC_Config_r15_mode_r15_am_r15 value) {
      setElement (_AM_R15, value);
   }

   public void set_um_Bi_Directional_r15 (RLC_Config_r15_mode_r15_um_Bi_Directional_r15 value) {
      setElement (_UM_BI_DIRECTIONAL_R15, value);
   }

   public void set_um_Uni_Directional_UL_r15 (RLC_Config_r15_mode_r15_um_Uni_Directional_UL_r15 value) {
      setElement (_UM_UNI_DIRECTIONAL_UL_R15, value);
   }

   public void set_um_Uni_Directional_DL_r15 (RLC_Config_r15_mode_r15_um_Uni_Directional_DL_r15 value) {
      setElement (_UM_UNI_DIRECTIONAL_DL_R15, value);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (4, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // am_r15
         case 0: { 
            RLC_Config_r15_mode_r15_am_r15 am_r15;
            element = am_r15 = new RLC_Config_r15_mode_r15_am_r15();
            am_r15.decode (buffer);
            break;
         }

         // um_Bi_Directional_r15
         case 1: { 
            RLC_Config_r15_mode_r15_um_Bi_Directional_r15 um_Bi_Directional_r15;
            element = um_Bi_Directional_r15 = new RLC_Config_r15_mode_r15_um_Bi_Directional_r15();
            um_Bi_Directional_r15.decode (buffer);
            break;
         }

         // um_Uni_Directional_UL_r15
         case 2: { 
            RLC_Config_r15_mode_r15_um_Uni_Directional_UL_r15 um_Uni_Directional_UL_r15;
            element = um_Uni_Directional_UL_r15 = new RLC_Config_r15_mode_r15_um_Uni_Directional_UL_r15();
            um_Uni_Directional_UL_r15.decode (buffer);
            break;
         }

         // um_Uni_Directional_DL_r15
         case 3: { 
            RLC_Config_r15_mode_r15_um_Uni_Directional_DL_r15 um_Uni_Directional_DL_r15;
            element = um_Uni_Directional_DL_r15 = new RLC_Config_r15_mode_r15_um_Uni_Directional_DL_r15();
            um_Uni_Directional_DL_r15.decode (buffer);
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
