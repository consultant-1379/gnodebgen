/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.PhysCellId;

public class PCI_ARFCN_NB_r14 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PCI-ARFCN-NB-r14";
   }

   public PhysCellId physCellId_r14;
   public CarrierFreq_NB_r13 carrierFreq_r14;  // optional

   public PCI_ARFCN_NB_r14 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PCI_ARFCN_NB_r14 (
      PhysCellId physCellId_r14_,
      CarrierFreq_NB_r13 carrierFreq_r14_
   ) {
      super();
      physCellId_r14 = physCellId_r14_;
      carrierFreq_r14 = carrierFreq_r14_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public PCI_ARFCN_NB_r14 (
      PhysCellId physCellId_r14_
   ) {
      super();
      physCellId_r14 = physCellId_r14_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PCI_ARFCN_NB_r14 (long physCellId_r14_,
      CarrierFreq_NB_r13 carrierFreq_r14_
   ) {
      super();
      physCellId_r14 = new PhysCellId (physCellId_r14_);
      carrierFreq_r14 = carrierFreq_r14_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public PCI_ARFCN_NB_r14 (
      long physCellId_r14_
   ) {
      super();
      physCellId_r14 = new PhysCellId (physCellId_r14_);
   }

   public void init () {
      physCellId_r14 = null;
      carrierFreq_r14 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return physCellId_r14;
         case 1: return carrierFreq_r14;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "physCellId-r14";
         case 1: return "carrierFreq-r14";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean carrierFreq_r14Present = buffer.decodeBit ("carrierFreq_r14Present");

      // decode physCellId_r14

      buffer.getContext().eventDispatcher.startElement("physCellId_r14", -1);

      physCellId_r14 = new PhysCellId();
      physCellId_r14.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("physCellId_r14", -1);

      // decode carrierFreq_r14

      if (carrierFreq_r14Present) {
         buffer.getContext().eventDispatcher.startElement("carrierFreq_r14", -1);

         carrierFreq_r14 = new CarrierFreq_NB_r13();
         carrierFreq_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("carrierFreq_r14", -1);
      }
      else {
         carrierFreq_r14 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (physCellId_r14 != null) physCellId_r14.print (_sb, "physCellId_r14", _level+1);
      if (carrierFreq_r14 != null) carrierFreq_r14.print (_sb, "carrierFreq_r14", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
