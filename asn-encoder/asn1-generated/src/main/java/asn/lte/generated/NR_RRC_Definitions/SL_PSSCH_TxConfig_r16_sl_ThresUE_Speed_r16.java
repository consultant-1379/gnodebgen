/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _KMPH60 = 0;
   public static final int _KMPH80 = 1;
   public static final int _KMPH100 = 2;
   public static final int _KMPH120 = 3;
   public static final int _KMPH140 = 4;
   public static final int _KMPH160 = 5;
   public static final int _KMPH180 = 6;
   public static final int _KMPH200 = 7;

   // Singleton instances of SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16
   protected static final SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 _kmph60 = new SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16(0);
   protected static final SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 _kmph80 = new SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16(1);
   protected static final SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 _kmph100 = new SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16(2);
   protected static final SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 _kmph120 = new SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16(3);
   protected static final SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 _kmph140 = new SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16(4);
   protected static final SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 _kmph160 = new SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16(5);
   protected static final SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 _kmph180 = new SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16(6);
   protected static final SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 _kmph200 = new SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for kmph60.
    */
   public static SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 kmph60() {
      return _kmph60;
   }

   /**
    * Singleton accessor method for kmph80.
    */
   public static SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 kmph80() {
      return _kmph80;
   }

   /**
    * Singleton accessor method for kmph100.
    */
   public static SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 kmph100() {
      return _kmph100;
   }

   /**
    * Singleton accessor method for kmph120.
    */
   public static SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 kmph120() {
      return _kmph120;
   }

   /**
    * Singleton accessor method for kmph140.
    */
   public static SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 kmph140() {
      return _kmph140;
   }

   /**
    * Singleton accessor method for kmph160.
    */
   public static SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 kmph160() {
      return _kmph160;
   }

   /**
    * Singleton accessor method for kmph180.
    */
   public static SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 kmph180() {
      return _kmph180;
   }

   /**
    * Singleton accessor method for kmph200.
    */
   public static SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 kmph200() {
      return _kmph200;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16.valueOf( SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return kmph60();
         case 1: return kmph80();
         case 2: return kmph100();
         case 3: return kmph120();
         case 4: return kmph140();
         case 5: return kmph160();
         case 6: return kmph180();
         case 7: return kmph200();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (SL_PSSCH_TxConfig_r16_sl_ThresUE_Speed_r16.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("kmph60");
         case 1: return ("kmph80");
         case 2: return ("kmph100");
         case 3: return ("kmph120");
         case 4: return ("kmph140");
         case 5: return ("kmph160");
         case 6: return ("kmph180");
         case 7: return ("kmph200");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
