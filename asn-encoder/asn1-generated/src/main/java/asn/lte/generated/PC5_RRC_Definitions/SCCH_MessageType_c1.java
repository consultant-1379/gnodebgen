/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.PC5_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SCCH_MessageType_c1 extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_PC5_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _MEASUREMENTREPORTSIDELINK = 1;
   public final static byte _RRCRECONFIGURATIONSIDELINK = 2;
   public final static byte _RRCRECONFIGURATIONCOMPLETESIDELINK = 3;
   public final static byte _RRCRECONFIGURATIONFAILURESIDELINK = 4;
   public final static byte _UECAPABILITYENQUIRYSIDELINK = 5;
   public final static byte _UECAPABILITYINFORMATIONSIDELINK = 6;
   public final static byte _SPARE2 = 7;
   public final static byte _SPARE1 = 8;

   public SCCH_MessageType_c1 () {
      super();
   }

   public SCCH_MessageType_c1 (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _MEASUREMENTREPORTSIDELINK: return "measurementReportSidelink";
      case _RRCRECONFIGURATIONSIDELINK: return "rrcReconfigurationSidelink";
      case _RRCRECONFIGURATIONCOMPLETESIDELINK: return "rrcReconfigurationCompleteSidelink";
      case _RRCRECONFIGURATIONFAILURESIDELINK: return "rrcReconfigurationFailureSidelink";
      case _UECAPABILITYENQUIRYSIDELINK: return "ueCapabilityEnquirySidelink";
      case _UECAPABILITYINFORMATIONSIDELINK: return "ueCapabilityInformationSidelink";
      case _SPARE2: return "spare2";
      case _SPARE1: return "spare1";
      default: return "UNDEFINED";
      }
   }

   public void set_measurementReportSidelink (MeasurementReportSidelink value) {
      setElement (_MEASUREMENTREPORTSIDELINK, value);
   }

   public void set_rrcReconfigurationSidelink (RRCReconfigurationSidelink value) {
      setElement (_RRCRECONFIGURATIONSIDELINK, value);
   }

   public void set_rrcReconfigurationCompleteSidelink (RRCReconfigurationCompleteSidelink value) {
      setElement (_RRCRECONFIGURATIONCOMPLETESIDELINK, value);
   }

   public void set_rrcReconfigurationFailureSidelink (RRCReconfigurationFailureSidelink value) {
      setElement (_RRCRECONFIGURATIONFAILURESIDELINK, value);
   }

   public void set_ueCapabilityEnquirySidelink (UECapabilityEnquirySidelink value) {
      setElement (_UECAPABILITYENQUIRYSIDELINK, value);
   }

   public void set_ueCapabilityInformationSidelink (UECapabilityInformationSidelink value) {
      setElement (_UECAPABILITYINFORMATIONSIDELINK, value);
   }

   public void set_spare2 () {
      setElement (_SPARE2, Asn1Null.NULL_VALUE);
   }

   public void set_spare1 () {
      setElement (_SPARE1, Asn1Null.NULL_VALUE);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (8, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // measurementReportSidelink
         case 0: { 
            MeasurementReportSidelink measurementReportSidelink;
            element = measurementReportSidelink = new MeasurementReportSidelink();
            measurementReportSidelink.decode (buffer);
            break;
         }

         // rrcReconfigurationSidelink
         case 1: { 
            RRCReconfigurationSidelink rrcReconfigurationSidelink;
            element = rrcReconfigurationSidelink = new RRCReconfigurationSidelink();
            rrcReconfigurationSidelink.decode (buffer);
            break;
         }

         // rrcReconfigurationCompleteSidelink
         case 2: { 
            RRCReconfigurationCompleteSidelink rrcReconfigurationCompleteSidelink;
            element = rrcReconfigurationCompleteSidelink = new RRCReconfigurationCompleteSidelink();
            rrcReconfigurationCompleteSidelink.decode (buffer);
            break;
         }

         // rrcReconfigurationFailureSidelink
         case 3: { 
            RRCReconfigurationFailureSidelink rrcReconfigurationFailureSidelink;
            element = rrcReconfigurationFailureSidelink = new RRCReconfigurationFailureSidelink();
            rrcReconfigurationFailureSidelink.decode (buffer);
            break;
         }

         // ueCapabilityEnquirySidelink
         case 4: { 
            UECapabilityEnquirySidelink ueCapabilityEnquirySidelink;
            element = ueCapabilityEnquirySidelink = new UECapabilityEnquirySidelink();
            ueCapabilityEnquirySidelink.decode (buffer);
            break;
         }

         // ueCapabilityInformationSidelink
         case 5: { 
            UECapabilityInformationSidelink ueCapabilityInformationSidelink;
            element = ueCapabilityInformationSidelink = new UECapabilityInformationSidelink();
            ueCapabilityInformationSidelink.decode (buffer);
            break;
         }

         // spare2
         case 6: { 
            Asn1Null spare2;
            element = spare2 = Asn1Null.NULL_VALUE;
            spare2.decode (buffer);

            buffer.invokeCharacters(spare2.toString());
            break;
         }

         // spare1
         case 7: { 
            Asn1Null spare1;
            element = spare1 = Asn1Null.NULL_VALUE;
            spare1.decode (buffer);

            buffer.invokeCharacters(spare1.toString());
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
