/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformationBlockType6 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SystemInformationBlockType6";
   }

   public CarrierFreqListUTRA_FDD carrierFreqListUTRA_FDD;  // optional
   public CarrierFreqListUTRA_TDD carrierFreqListUTRA_TDD;  // optional
   public T_Reselection t_ReselectionUTRA;
   public SpeedStateScaleFactors t_ReselectionUTRA_SF;  // optional
   public SystemInformationBlockType6_v8h0_IEs lateNonCriticalExtension;  // optional
   public boolean mV3ExtPresent;
   public SystemInformationBlockType6_carrierFreqListUTRA_FDD_v1250 carrierFreqListUTRA_FDD_v1250;  // optional
   public SystemInformationBlockType6_carrierFreqListUTRA_TDD_v1250 carrierFreqListUTRA_TDD_v1250;  // optional
   public CarrierFreqListUTRA_FDD_Ext_r12 carrierFreqListUTRA_FDD_Ext_r12;  // optional
   public CarrierFreqListUTRA_TDD_Ext_r12 carrierFreqListUTRA_TDD_Ext_r12;  // optional
   public Asn1OpenExt extElem1;

   public SystemInformationBlockType6 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SystemInformationBlockType6 (
      CarrierFreqListUTRA_FDD carrierFreqListUTRA_FDD_,
      CarrierFreqListUTRA_TDD carrierFreqListUTRA_TDD_,
      T_Reselection t_ReselectionUTRA_,
      SpeedStateScaleFactors t_ReselectionUTRA_SF_,
      SystemInformationBlockType6_v8h0_IEs lateNonCriticalExtension_,
      SystemInformationBlockType6_carrierFreqListUTRA_FDD_v1250 carrierFreqListUTRA_FDD_v1250_,
      SystemInformationBlockType6_carrierFreqListUTRA_TDD_v1250 carrierFreqListUTRA_TDD_v1250_,
      CarrierFreqListUTRA_FDD_Ext_r12 carrierFreqListUTRA_FDD_Ext_r12_,
      CarrierFreqListUTRA_TDD_Ext_r12 carrierFreqListUTRA_TDD_Ext_r12_
   ) {
      super();
      carrierFreqListUTRA_FDD = carrierFreqListUTRA_FDD_;
      carrierFreqListUTRA_TDD = carrierFreqListUTRA_TDD_;
      t_ReselectionUTRA = t_ReselectionUTRA_;
      t_ReselectionUTRA_SF = t_ReselectionUTRA_SF_;
      lateNonCriticalExtension = lateNonCriticalExtension_;
      carrierFreqListUTRA_FDD_v1250 = carrierFreqListUTRA_FDD_v1250_;
      carrierFreqListUTRA_TDD_v1250 = carrierFreqListUTRA_TDD_v1250_;
      carrierFreqListUTRA_FDD_Ext_r12 = carrierFreqListUTRA_FDD_Ext_r12_;
      carrierFreqListUTRA_TDD_Ext_r12 = carrierFreqListUTRA_TDD_Ext_r12_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SystemInformationBlockType6 (
      T_Reselection t_ReselectionUTRA_
   ) {
      super();
      t_ReselectionUTRA = t_ReselectionUTRA_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SystemInformationBlockType6 (CarrierFreqListUTRA_FDD carrierFreqListUTRA_FDD_,
      CarrierFreqListUTRA_TDD carrierFreqListUTRA_TDD_,
      long t_ReselectionUTRA_,
      SpeedStateScaleFactors t_ReselectionUTRA_SF_,
      SystemInformationBlockType6_v8h0_IEs lateNonCriticalExtension_,
      SystemInformationBlockType6_carrierFreqListUTRA_FDD_v1250 carrierFreqListUTRA_FDD_v1250_,
      SystemInformationBlockType6_carrierFreqListUTRA_TDD_v1250 carrierFreqListUTRA_TDD_v1250_,
      CarrierFreqListUTRA_FDD_Ext_r12 carrierFreqListUTRA_FDD_Ext_r12_,
      CarrierFreqListUTRA_TDD_Ext_r12 carrierFreqListUTRA_TDD_Ext_r12_
   ) {
      super();
      carrierFreqListUTRA_FDD = carrierFreqListUTRA_FDD_;
      carrierFreqListUTRA_TDD = carrierFreqListUTRA_TDD_;
      t_ReselectionUTRA = new T_Reselection (t_ReselectionUTRA_);
      t_ReselectionUTRA_SF = t_ReselectionUTRA_SF_;
      lateNonCriticalExtension = lateNonCriticalExtension_;
      carrierFreqListUTRA_FDD_v1250 = carrierFreqListUTRA_FDD_v1250_;
      carrierFreqListUTRA_TDD_v1250 = carrierFreqListUTRA_TDD_v1250_;
      carrierFreqListUTRA_FDD_Ext_r12 = carrierFreqListUTRA_FDD_Ext_r12_;
      carrierFreqListUTRA_TDD_Ext_r12 = carrierFreqListUTRA_TDD_Ext_r12_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public SystemInformationBlockType6 (
      long t_ReselectionUTRA_
   ) {
      super();
      t_ReselectionUTRA = new T_Reselection (t_ReselectionUTRA_);
   }

   public void init () {
      carrierFreqListUTRA_FDD = null;
      carrierFreqListUTRA_TDD = null;
      t_ReselectionUTRA = null;
      t_ReselectionUTRA_SF = null;
      lateNonCriticalExtension = null;
      carrierFreqListUTRA_FDD_v1250 = null;
      carrierFreqListUTRA_TDD_v1250 = null;
      carrierFreqListUTRA_FDD_Ext_r12 = null;
      carrierFreqListUTRA_TDD_Ext_r12 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 10; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return carrierFreqListUTRA_FDD;
         case 1: return carrierFreqListUTRA_TDD;
         case 2: return t_ReselectionUTRA;
         case 3: return t_ReselectionUTRA_SF;
         case 4: return lateNonCriticalExtension;
         case 5: return carrierFreqListUTRA_FDD_v1250;
         case 6: return carrierFreqListUTRA_TDD_v1250;
         case 7: return carrierFreqListUTRA_FDD_Ext_r12;
         case 8: return carrierFreqListUTRA_TDD_Ext_r12;
         case 9: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "carrierFreqListUTRA-FDD";
         case 1: return "carrierFreqListUTRA-TDD";
         case 2: return "t-ReselectionUTRA";
         case 3: return "t-ReselectionUTRA-SF";
         case 4: return "lateNonCriticalExtension";
         case 5: return "carrierFreqListUTRA-FDD-v1250";
         case 6: return "carrierFreqListUTRA-TDD-v1250";
         case 7: return "carrierFreqListUTRA-FDD-Ext-r12";
         case 8: return "carrierFreqListUTRA-TDD-Ext-r12";
         case 9: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean carrierFreqListUTRA_FDDPresent = buffer.decodeBit ("carrierFreqListUTRA_FDDPresent");
      boolean carrierFreqListUTRA_TDDPresent = buffer.decodeBit ("carrierFreqListUTRA_TDDPresent");
      boolean t_ReselectionUTRA_SFPresent = buffer.decodeBit ("t_ReselectionUTRA_SFPresent");

      // decode carrierFreqListUTRA_FDD

      if (carrierFreqListUTRA_FDDPresent) {
         buffer.getContext().eventDispatcher.startElement("carrierFreqListUTRA_FDD", -1);

         carrierFreqListUTRA_FDD = new CarrierFreqListUTRA_FDD();
         carrierFreqListUTRA_FDD.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("carrierFreqListUTRA_FDD", -1);
      }
      else {
         carrierFreqListUTRA_FDD = null;
      }

      // decode carrierFreqListUTRA_TDD

      if (carrierFreqListUTRA_TDDPresent) {
         buffer.getContext().eventDispatcher.startElement("carrierFreqListUTRA_TDD", -1);

         carrierFreqListUTRA_TDD = new CarrierFreqListUTRA_TDD();
         carrierFreqListUTRA_TDD.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("carrierFreqListUTRA_TDD", -1);
      }
      else {
         carrierFreqListUTRA_TDD = null;
      }

      // decode t_ReselectionUTRA

      buffer.getContext().eventDispatcher.startElement("t_ReselectionUTRA", -1);

      t_ReselectionUTRA = new T_Reselection();
      t_ReselectionUTRA.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("t_ReselectionUTRA", -1);

      // decode t_ReselectionUTRA_SF

      if (t_ReselectionUTRA_SFPresent) {
         buffer.getContext().eventDispatcher.startElement("t_ReselectionUTRA_SF", -1);

         t_ReselectionUTRA_SF = new SpeedStateScaleFactors();
         t_ReselectionUTRA_SF.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("t_ReselectionUTRA_SF", -1);
      }
      else {
         t_ReselectionUTRA_SF = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("lateNonCriticalExtensionPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV3ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode lateNonCriticalExtension

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("lateNonCriticalExtension", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            /* decode contained type */
            Asn1OctetString lateNonCriticalExtension_outer = new Asn1OctetString();
            lateNonCriticalExtension_outer.decode (buffer);

            if (lateNonCriticalExtension_outer.value == null) {
               throw new Asn1Exception("contained type's complete encoding is empty");
            }

            Asn1PerDecodeBuffer savedBuffer = buffer;
            buffer = new Asn1PerDecodeBuffer (lateNonCriticalExtension_outer.value, buffer.isAligned());
            buffer.setEventHandlerList( savedBuffer );

            lateNonCriticalExtension = new SystemInformationBlockType6_v8h0_IEs();
            lateNonCriticalExtension.decode (buffer);

            buffer = savedBuffer;
            buffer.moveBitCursor (bitidx);

            buffer.getContext().eventDispatcher.endElement("lateNonCriticalExtension", -1);

         }
         else {
            lateNonCriticalExtension = null;
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV3ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean carrierFreqListUTRA_FDD_v1250Present = buffer.decodeBit ("carrierFreqListUTRA_FDD_v1250Present");

            boolean carrierFreqListUTRA_TDD_v1250Present = buffer.decodeBit ("carrierFreqListUTRA_TDD_v1250Present");

            boolean carrierFreqListUTRA_FDD_Ext_r12Present = buffer.decodeBit ("carrierFreqListUTRA_FDD_Ext_r12Present");

            boolean carrierFreqListUTRA_TDD_Ext_r12Present = buffer.decodeBit ("carrierFreqListUTRA_TDD_Ext_r12Present");

            // decode carrierFreqListUTRA_FDD_v1250

            if (carrierFreqListUTRA_FDD_v1250Present) {
               buffer.getContext().eventDispatcher.startElement("carrierFreqListUTRA_FDD_v1250", -1);

               carrierFreqListUTRA_FDD_v1250 = new SystemInformationBlockType6_carrierFreqListUTRA_FDD_v1250();
               carrierFreqListUTRA_FDD_v1250.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("carrierFreqListUTRA_FDD_v1250", -1);
            }
            else {
               carrierFreqListUTRA_FDD_v1250 = null;
            }

            // decode carrierFreqListUTRA_TDD_v1250

            if (carrierFreqListUTRA_TDD_v1250Present) {
               buffer.getContext().eventDispatcher.startElement("carrierFreqListUTRA_TDD_v1250", -1);

               carrierFreqListUTRA_TDD_v1250 = new SystemInformationBlockType6_carrierFreqListUTRA_TDD_v1250();
               carrierFreqListUTRA_TDD_v1250.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("carrierFreqListUTRA_TDD_v1250", -1);
            }
            else {
               carrierFreqListUTRA_TDD_v1250 = null;
            }

            // decode carrierFreqListUTRA_FDD_Ext_r12

            if (carrierFreqListUTRA_FDD_Ext_r12Present) {
               buffer.getContext().eventDispatcher.startElement("carrierFreqListUTRA_FDD_Ext_r12", -1);

               carrierFreqListUTRA_FDD_Ext_r12 = new CarrierFreqListUTRA_FDD_Ext_r12();
               carrierFreqListUTRA_FDD_Ext_r12.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("carrierFreqListUTRA_FDD_Ext_r12", -1);
            }
            else {
               carrierFreqListUTRA_FDD_Ext_r12 = null;
            }

            // decode carrierFreqListUTRA_TDD_Ext_r12

            if (carrierFreqListUTRA_TDD_Ext_r12Present) {
               buffer.getContext().eventDispatcher.startElement("carrierFreqListUTRA_TDD_Ext_r12", -1);

               carrierFreqListUTRA_TDD_Ext_r12 = new CarrierFreqListUTRA_TDD_Ext_r12();
               carrierFreqListUTRA_TDD_Ext_r12.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("carrierFreqListUTRA_TDD_Ext_r12", -1);
            }
            else {
               carrierFreqListUTRA_TDD_Ext_r12 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (carrierFreqListUTRA_FDD != null) carrierFreqListUTRA_FDD.print (_sb, "carrierFreqListUTRA_FDD", _level+1);
      if (carrierFreqListUTRA_TDD != null) carrierFreqListUTRA_TDD.print (_sb, "carrierFreqListUTRA_TDD", _level+1);
      if (t_ReselectionUTRA != null) t_ReselectionUTRA.print (_sb, "t_ReselectionUTRA", _level+1);
      if (t_ReselectionUTRA_SF != null) t_ReselectionUTRA_SF.print (_sb, "t_ReselectionUTRA_SF", _level+1);
      if (lateNonCriticalExtension != null) lateNonCriticalExtension.print (_sb, "lateNonCriticalExtension", _level+1);
      if (carrierFreqListUTRA_FDD_v1250 != null) carrierFreqListUTRA_FDD_v1250.print (_sb, "carrierFreqListUTRA_FDD_v1250", _level+1);
      if (carrierFreqListUTRA_TDD_v1250 != null) carrierFreqListUTRA_TDD_v1250.print (_sb, "carrierFreqListUTRA_TDD_v1250", _level+1);
      if (carrierFreqListUTRA_FDD_Ext_r12 != null) carrierFreqListUTRA_FDD_Ext_r12.print (_sb, "carrierFreqListUTRA_FDD_Ext_r12", _level+1);
      if (carrierFreqListUTRA_TDD_Ext_r12 != null) carrierFreqListUTRA_TDD_Ext_r12.print (_sb, "carrierFreqListUTRA_TDD_Ext_r12", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
