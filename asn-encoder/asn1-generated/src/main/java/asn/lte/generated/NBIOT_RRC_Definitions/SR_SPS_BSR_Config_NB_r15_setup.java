/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.C_RNTI;

public class SR_SPS_BSR_Config_NB_r15_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public C_RNTI semiPersistSchedC_RNTI_r15;
   public SR_SPS_BSR_Config_NB_r15_setup_semiPersistSchedIntervalUL_r15 semiPersistSchedIntervalUL_r15 = null;

   public SR_SPS_BSR_Config_NB_r15_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SR_SPS_BSR_Config_NB_r15_setup (
      C_RNTI semiPersistSchedC_RNTI_r15_,
      SR_SPS_BSR_Config_NB_r15_setup_semiPersistSchedIntervalUL_r15 semiPersistSchedIntervalUL_r15_
   ) {
      super();
      semiPersistSchedC_RNTI_r15 = semiPersistSchedC_RNTI_r15_;
      semiPersistSchedIntervalUL_r15 = semiPersistSchedIntervalUL_r15_;
   }

   public void init () {
      semiPersistSchedC_RNTI_r15 = null;
      semiPersistSchedIntervalUL_r15 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return semiPersistSchedC_RNTI_r15;
         case 1: return semiPersistSchedIntervalUL_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "semiPersistSchedC-RNTI-r15";
         case 1: return "semiPersistSchedIntervalUL-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode semiPersistSchedC_RNTI_r15

      buffer.getContext().eventDispatcher.startElement("semiPersistSchedC_RNTI_r15", -1);

      semiPersistSchedC_RNTI_r15 = new C_RNTI();
      semiPersistSchedC_RNTI_r15.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("semiPersistSchedC_RNTI_r15", -1);

      // decode semiPersistSchedIntervalUL_r15

      buffer.getContext().eventDispatcher.startElement("semiPersistSchedIntervalUL_r15", -1);

      {
         int tval = SR_SPS_BSR_Config_NB_r15_setup_semiPersistSchedIntervalUL_r15.decodeEnumValue (buffer);
         semiPersistSchedIntervalUL_r15 = SR_SPS_BSR_Config_NB_r15_setup_semiPersistSchedIntervalUL_r15.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("semiPersistSchedIntervalUL_r15", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (semiPersistSchedC_RNTI_r15 != null) semiPersistSchedC_RNTI_r15.print (_sb, "semiPersistSchedC_RNTI_r15", _level+1);
      if (semiPersistSchedIntervalUL_r15 != null) semiPersistSchedIntervalUL_r15.print (_sb, "semiPersistSchedIntervalUL_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
