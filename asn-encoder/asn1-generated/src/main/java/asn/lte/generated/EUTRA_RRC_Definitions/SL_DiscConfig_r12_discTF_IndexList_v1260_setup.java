/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_DiscConfig_r12_discTF_IndexList_v1260_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public SL_TF_IndexPairList_r12b discTF_IndexList_r12b;

   public SL_DiscConfig_r12_discTF_IndexList_v1260_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_DiscConfig_r12_discTF_IndexList_v1260_setup (
      SL_TF_IndexPairList_r12b discTF_IndexList_r12b_
   ) {
      super();
      discTF_IndexList_r12b = discTF_IndexList_r12b_;
   }

   public void init () {
      discTF_IndexList_r12b = null;
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return discTF_IndexList_r12b;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "discTF-IndexList-r12b";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode discTF_IndexList_r12b

      buffer.getContext().eventDispatcher.startElement("discTF_IndexList_r12b", -1);

      discTF_IndexList_r12b = new SL_TF_IndexPairList_r12b();
      discTF_IndexList_r12b.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("discTF_IndexList_r12b", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (discTF_IndexList_r12b != null) discTF_IndexList_r12b.print (_sb, "discTF_IndexList_r12b", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
