/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CellsToAddModNR_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CellsToAddModNR-r15";
   }

   public Asn1Integer cellIndex_r15;
   public PhysCellIdNR_r15 physCellId_r15;

   public CellsToAddModNR_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CellsToAddModNR_r15 (
      Asn1Integer cellIndex_r15_,
      PhysCellIdNR_r15 physCellId_r15_
   ) {
      super();
      cellIndex_r15 = cellIndex_r15_;
      physCellId_r15 = physCellId_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CellsToAddModNR_r15 (long cellIndex_r15_,
      long physCellId_r15_
   ) {
      super();
      cellIndex_r15 = new Asn1Integer (cellIndex_r15_);
      physCellId_r15 = new PhysCellIdNR_r15 (physCellId_r15_);
   }

   public void init () {
      cellIndex_r15 = null;
      physCellId_r15 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return cellIndex_r15;
         case 1: return physCellId_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "cellIndex-r15";
         case 1: return "physCellId-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode cellIndex_r15

      buffer.getContext().eventDispatcher.startElement("cellIndex_r15", -1);

      cellIndex_r15 = new Asn1Integer();
      cellIndex_r15.decode (buffer, 1, 32);

      buffer.invokeCharacters(cellIndex_r15.toString());
      buffer.getContext().eventDispatcher.endElement("cellIndex_r15", -1);

      // decode physCellId_r15

      buffer.getContext().eventDispatcher.startElement("physCellId_r15", -1);

      physCellId_r15 = new PhysCellIdNR_r15();
      physCellId_r15.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("physCellId_r15", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (cellIndex_r15 != null) cellIndex_r15.print (_sb, "cellIndex_r15", _level+1);
      if (physCellId_r15 != null) physCellId_r15.print (_sb, "physCellId_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
