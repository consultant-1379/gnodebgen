/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SIB_TypeInfo extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SIB-TypeInfo";
   }

   public SIB_TypeInfo_type type = null;
   public Asn1Integer valueTag;  // optional
   public SIB_TypeInfo_areaScope areaScope = null;  // optional

   public SIB_TypeInfo () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SIB_TypeInfo (
      SIB_TypeInfo_type type_,
      Asn1Integer valueTag_,
      SIB_TypeInfo_areaScope areaScope_
   ) {
      super();
      type = type_;
      valueTag = valueTag_;
      areaScope = areaScope_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SIB_TypeInfo (
      SIB_TypeInfo_type type_
   ) {
      super();
      type = type_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SIB_TypeInfo (SIB_TypeInfo_type type_,
      long valueTag_,
      SIB_TypeInfo_areaScope areaScope_
   ) {
      super();
      type = type_;
      valueTag = new Asn1Integer (valueTag_);
      areaScope = areaScope_;
   }

   public void init () {
      type = null;
      valueTag = null;
      areaScope = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return type;
         case 1: return valueTag;
         case 2: return areaScope;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "type";
         case 1: return "valueTag";
         case 2: return "areaScope";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean valueTagPresent = buffer.decodeBit ("valueTagPresent");
      boolean areaScopePresent = buffer.decodeBit ("areaScopePresent");

      // decode type

      buffer.getContext().eventDispatcher.startElement("type", -1);

      {
         int tval = SIB_TypeInfo_type.decodeEnumValue (buffer);
         type = SIB_TypeInfo_type.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("type", -1);

      // decode valueTag

      if (valueTagPresent) {
         buffer.getContext().eventDispatcher.startElement("valueTag", -1);

         valueTag = new Asn1Integer();
         valueTag.decode (buffer, 0, 31);

         buffer.invokeCharacters(valueTag.toString());
         buffer.getContext().eventDispatcher.endElement("valueTag", -1);
      }
      else {
         valueTag = null;
      }

      // decode areaScope

      if (areaScopePresent) {
         buffer.getContext().eventDispatcher.startElement("areaScope", -1);

         int tval = SIB_TypeInfo_areaScope.decodeEnumValue (buffer);
         areaScope = SIB_TypeInfo_areaScope.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("areaScope", -1);
      }
      else {
         areaScope = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (type != null) type.print (_sb, "type", _level+1);
      if (valueTag != null) valueTag.print (_sb, "valueTag", _level+1);
      if (areaScope != null) areaScope.print (_sb, "areaScope", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
