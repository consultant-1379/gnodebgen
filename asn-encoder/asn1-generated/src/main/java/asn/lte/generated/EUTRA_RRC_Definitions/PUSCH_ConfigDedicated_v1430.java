/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PUSCH_ConfigDedicated_v1430 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PUSCH-ConfigDedicated-v1430";
   }

   public PUSCH_ConfigDedicated_v1430_ce_PUSCH_NB_MaxTBS_r14 ce_PUSCH_NB_MaxTBS_r14 = null;  // optional
   public PUSCH_ConfigDedicated_v1430_ce_PUSCH_MaxBandwidth_r14 ce_PUSCH_MaxBandwidth_r14 = null;  // optional
   public TDD_PUSCH_UpPTS_r14 tdd_PUSCH_UpPTS_r14;  // optional
   public Asn1Boolean ul_DMRS_IFDMA_r14;
   public Enable256QAM_r14 enable256QAM_r14;  // optional

   public PUSCH_ConfigDedicated_v1430 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PUSCH_ConfigDedicated_v1430 (
      PUSCH_ConfigDedicated_v1430_ce_PUSCH_NB_MaxTBS_r14 ce_PUSCH_NB_MaxTBS_r14_,
      PUSCH_ConfigDedicated_v1430_ce_PUSCH_MaxBandwidth_r14 ce_PUSCH_MaxBandwidth_r14_,
      TDD_PUSCH_UpPTS_r14 tdd_PUSCH_UpPTS_r14_,
      Asn1Boolean ul_DMRS_IFDMA_r14_,
      Enable256QAM_r14 enable256QAM_r14_
   ) {
      super();
      ce_PUSCH_NB_MaxTBS_r14 = ce_PUSCH_NB_MaxTBS_r14_;
      ce_PUSCH_MaxBandwidth_r14 = ce_PUSCH_MaxBandwidth_r14_;
      tdd_PUSCH_UpPTS_r14 = tdd_PUSCH_UpPTS_r14_;
      ul_DMRS_IFDMA_r14 = ul_DMRS_IFDMA_r14_;
      enable256QAM_r14 = enable256QAM_r14_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public PUSCH_ConfigDedicated_v1430 (
      Asn1Boolean ul_DMRS_IFDMA_r14_
   ) {
      super();
      ul_DMRS_IFDMA_r14 = ul_DMRS_IFDMA_r14_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PUSCH_ConfigDedicated_v1430 (PUSCH_ConfigDedicated_v1430_ce_PUSCH_NB_MaxTBS_r14 ce_PUSCH_NB_MaxTBS_r14_,
      PUSCH_ConfigDedicated_v1430_ce_PUSCH_MaxBandwidth_r14 ce_PUSCH_MaxBandwidth_r14_,
      TDD_PUSCH_UpPTS_r14 tdd_PUSCH_UpPTS_r14_,
      boolean ul_DMRS_IFDMA_r14_,
      Enable256QAM_r14 enable256QAM_r14_
   ) {
      super();
      ce_PUSCH_NB_MaxTBS_r14 = ce_PUSCH_NB_MaxTBS_r14_;
      ce_PUSCH_MaxBandwidth_r14 = ce_PUSCH_MaxBandwidth_r14_;
      tdd_PUSCH_UpPTS_r14 = tdd_PUSCH_UpPTS_r14_;
      ul_DMRS_IFDMA_r14 = new Asn1Boolean (ul_DMRS_IFDMA_r14_);
      enable256QAM_r14 = enable256QAM_r14_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public PUSCH_ConfigDedicated_v1430 (
      boolean ul_DMRS_IFDMA_r14_
   ) {
      super();
      ul_DMRS_IFDMA_r14 = new Asn1Boolean (ul_DMRS_IFDMA_r14_);
   }

   public void init () {
      ce_PUSCH_NB_MaxTBS_r14 = null;
      ce_PUSCH_MaxBandwidth_r14 = null;
      tdd_PUSCH_UpPTS_r14 = null;
      ul_DMRS_IFDMA_r14 = null;
      enable256QAM_r14 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ce_PUSCH_NB_MaxTBS_r14;
         case 1: return ce_PUSCH_MaxBandwidth_r14;
         case 2: return tdd_PUSCH_UpPTS_r14;
         case 3: return ul_DMRS_IFDMA_r14;
         case 4: return enable256QAM_r14;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ce-PUSCH-NB-MaxTBS-r14";
         case 1: return "ce-PUSCH-MaxBandwidth-r14";
         case 2: return "tdd-PUSCH-UpPTS-r14";
         case 3: return "ul-DMRS-IFDMA-r14";
         case 4: return "enable256QAM-r14";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean ce_PUSCH_NB_MaxTBS_r14Present = buffer.decodeBit ("ce_PUSCH_NB_MaxTBS_r14Present");
      boolean ce_PUSCH_MaxBandwidth_r14Present = buffer.decodeBit ("ce_PUSCH_MaxBandwidth_r14Present");
      boolean tdd_PUSCH_UpPTS_r14Present = buffer.decodeBit ("tdd_PUSCH_UpPTS_r14Present");
      boolean enable256QAM_r14Present = buffer.decodeBit ("enable256QAM_r14Present");

      // decode ce_PUSCH_NB_MaxTBS_r14

      if (ce_PUSCH_NB_MaxTBS_r14Present) {
         buffer.getContext().eventDispatcher.startElement("ce_PUSCH_NB_MaxTBS_r14", -1);

         int tval = PUSCH_ConfigDedicated_v1430_ce_PUSCH_NB_MaxTBS_r14.decodeEnumValue (buffer);
         ce_PUSCH_NB_MaxTBS_r14 = PUSCH_ConfigDedicated_v1430_ce_PUSCH_NB_MaxTBS_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ce_PUSCH_NB_MaxTBS_r14", -1);
      }
      else {
         ce_PUSCH_NB_MaxTBS_r14 = null;
      }

      // decode ce_PUSCH_MaxBandwidth_r14

      if (ce_PUSCH_MaxBandwidth_r14Present) {
         buffer.getContext().eventDispatcher.startElement("ce_PUSCH_MaxBandwidth_r14", -1);

         int tval = PUSCH_ConfigDedicated_v1430_ce_PUSCH_MaxBandwidth_r14.decodeEnumValue (buffer);
         ce_PUSCH_MaxBandwidth_r14 = PUSCH_ConfigDedicated_v1430_ce_PUSCH_MaxBandwidth_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ce_PUSCH_MaxBandwidth_r14", -1);
      }
      else {
         ce_PUSCH_MaxBandwidth_r14 = null;
      }

      // decode tdd_PUSCH_UpPTS_r14

      if (tdd_PUSCH_UpPTS_r14Present) {
         buffer.getContext().eventDispatcher.startElement("tdd_PUSCH_UpPTS_r14", -1);

         tdd_PUSCH_UpPTS_r14 = new TDD_PUSCH_UpPTS_r14();
         tdd_PUSCH_UpPTS_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tdd_PUSCH_UpPTS_r14", -1);
      }
      else {
         tdd_PUSCH_UpPTS_r14 = null;
      }

      // decode ul_DMRS_IFDMA_r14

      buffer.getContext().eventDispatcher.startElement("ul_DMRS_IFDMA_r14", -1);

      ul_DMRS_IFDMA_r14 = new Asn1Boolean();
      ul_DMRS_IFDMA_r14.decode (buffer);

      buffer.invokeCharacters(ul_DMRS_IFDMA_r14.toString());
      buffer.getContext().eventDispatcher.endElement("ul_DMRS_IFDMA_r14", -1);

      // decode enable256QAM_r14

      if (enable256QAM_r14Present) {
         buffer.getContext().eventDispatcher.startElement("enable256QAM_r14", -1);

         enable256QAM_r14 = new Enable256QAM_r14();
         enable256QAM_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("enable256QAM_r14", -1);
      }
      else {
         enable256QAM_r14 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ce_PUSCH_NB_MaxTBS_r14 != null) ce_PUSCH_NB_MaxTBS_r14.print (_sb, "ce_PUSCH_NB_MaxTBS_r14", _level+1);
      if (ce_PUSCH_MaxBandwidth_r14 != null) ce_PUSCH_MaxBandwidth_r14.print (_sb, "ce_PUSCH_MaxBandwidth_r14", _level+1);
      if (tdd_PUSCH_UpPTS_r14 != null) tdd_PUSCH_UpPTS_r14.print (_sb, "tdd_PUSCH_UpPTS_r14", _level+1);
      if (ul_DMRS_IFDMA_r14 != null) ul_DMRS_IFDMA_r14.print (_sb, "ul_DMRS_IFDMA_r14", _level+1);
      if (enable256QAM_r14 != null) enable256QAM_r14.print (_sb, "enable256QAM_r14", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
