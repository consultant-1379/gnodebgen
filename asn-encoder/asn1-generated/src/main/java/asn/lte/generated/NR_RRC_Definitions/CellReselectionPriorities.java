/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CellReselectionPriorities extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CellReselectionPriorities";
   }

   public FreqPriorityListEUTRA freqPriorityListEUTRA;  // optional
   public FreqPriorityListNR freqPriorityListNR;  // optional
   public CellReselectionPriorities_t320 t320 = null;  // optional
   public Asn1OpenExt extElem1;

   public CellReselectionPriorities () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CellReselectionPriorities (
      FreqPriorityListEUTRA freqPriorityListEUTRA_,
      FreqPriorityListNR freqPriorityListNR_,
      CellReselectionPriorities_t320 t320_
   ) {
      super();
      freqPriorityListEUTRA = freqPriorityListEUTRA_;
      freqPriorityListNR = freqPriorityListNR_;
      t320 = t320_;
   }

   public void init () {
      freqPriorityListEUTRA = null;
      freqPriorityListNR = null;
      t320 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return freqPriorityListEUTRA;
         case 1: return freqPriorityListNR;
         case 2: return t320;
         case 3: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "freqPriorityListEUTRA";
         case 1: return "freqPriorityListNR";
         case 2: return "t320";
         case 3: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean freqPriorityListEUTRAPresent = buffer.decodeBit ("freqPriorityListEUTRAPresent");
      boolean freqPriorityListNRPresent = buffer.decodeBit ("freqPriorityListNRPresent");
      boolean t320Present = buffer.decodeBit ("t320Present");

      // decode freqPriorityListEUTRA

      if (freqPriorityListEUTRAPresent) {
         buffer.getContext().eventDispatcher.startElement("freqPriorityListEUTRA", -1);

         freqPriorityListEUTRA = new FreqPriorityListEUTRA();
         freqPriorityListEUTRA.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("freqPriorityListEUTRA", -1);
      }
      else {
         freqPriorityListEUTRA = null;
      }

      // decode freqPriorityListNR

      if (freqPriorityListNRPresent) {
         buffer.getContext().eventDispatcher.startElement("freqPriorityListNR", -1);

         freqPriorityListNR = new FreqPriorityListNR();
         freqPriorityListNR.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("freqPriorityListNR", -1);
      }
      else {
         freqPriorityListNR = null;
      }

      // decode t320

      if (t320Present) {
         buffer.getContext().eventDispatcher.startElement("t320", -1);

         int tval = CellReselectionPriorities_t320.decodeEnumValue (buffer);
         t320 = CellReselectionPriorities_t320.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("t320", -1);
      }
      else {
         t320 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (freqPriorityListEUTRA != null) freqPriorityListEUTRA.print (_sb, "freqPriorityListEUTRA", _level+1);
      if (freqPriorityListNR != null) freqPriorityListNR.print (_sb, "freqPriorityListNR", _level+1);
      if (t320 != null) t320.print (_sb, "t320", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
