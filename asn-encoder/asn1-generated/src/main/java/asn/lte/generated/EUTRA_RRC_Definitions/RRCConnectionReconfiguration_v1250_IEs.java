/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RRCConnectionReconfiguration_v1250_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RRCConnectionReconfiguration-v1250-IEs";
   }

   public RRCConnectionReconfiguration_v1250_IEs_wlan_OffloadInfo_r12 wlan_OffloadInfo_r12;  // optional
   public SCG_Configuration_r12 scg_Configuration_r12;  // optional
   public SL_SyncTxControl_r12 sl_SyncTxControl_r12;  // optional
   public SL_DiscConfig_r12 sl_DiscConfig_r12;  // optional
   public SL_CommConfig_r12 sl_CommConfig_r12;  // optional
   public RRCConnectionReconfiguration_v1310_IEs nonCriticalExtension;  // optional

   public RRCConnectionReconfiguration_v1250_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RRCConnectionReconfiguration_v1250_IEs (
      RRCConnectionReconfiguration_v1250_IEs_wlan_OffloadInfo_r12 wlan_OffloadInfo_r12_,
      SCG_Configuration_r12 scg_Configuration_r12_,
      SL_SyncTxControl_r12 sl_SyncTxControl_r12_,
      SL_DiscConfig_r12 sl_DiscConfig_r12_,
      SL_CommConfig_r12 sl_CommConfig_r12_,
      RRCConnectionReconfiguration_v1310_IEs nonCriticalExtension_
   ) {
      super();
      wlan_OffloadInfo_r12 = wlan_OffloadInfo_r12_;
      scg_Configuration_r12 = scg_Configuration_r12_;
      sl_SyncTxControl_r12 = sl_SyncTxControl_r12_;
      sl_DiscConfig_r12 = sl_DiscConfig_r12_;
      sl_CommConfig_r12 = sl_CommConfig_r12_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      wlan_OffloadInfo_r12 = null;
      scg_Configuration_r12 = null;
      sl_SyncTxControl_r12 = null;
      sl_DiscConfig_r12 = null;
      sl_CommConfig_r12 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return wlan_OffloadInfo_r12;
         case 1: return scg_Configuration_r12;
         case 2: return sl_SyncTxControl_r12;
         case 3: return sl_DiscConfig_r12;
         case 4: return sl_CommConfig_r12;
         case 5: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "wlan-OffloadInfo-r12";
         case 1: return "scg-Configuration-r12";
         case 2: return "sl-SyncTxControl-r12";
         case 3: return "sl-DiscConfig-r12";
         case 4: return "sl-CommConfig-r12";
         case 5: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean wlan_OffloadInfo_r12Present = buffer.decodeBit ("wlan_OffloadInfo_r12Present");
      boolean scg_Configuration_r12Present = buffer.decodeBit ("scg_Configuration_r12Present");
      boolean sl_SyncTxControl_r12Present = buffer.decodeBit ("sl_SyncTxControl_r12Present");
      boolean sl_DiscConfig_r12Present = buffer.decodeBit ("sl_DiscConfig_r12Present");
      boolean sl_CommConfig_r12Present = buffer.decodeBit ("sl_CommConfig_r12Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode wlan_OffloadInfo_r12

      if (wlan_OffloadInfo_r12Present) {
         buffer.getContext().eventDispatcher.startElement("wlan_OffloadInfo_r12", -1);

         wlan_OffloadInfo_r12 = new RRCConnectionReconfiguration_v1250_IEs_wlan_OffloadInfo_r12();
         wlan_OffloadInfo_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("wlan_OffloadInfo_r12", -1);
      }
      else {
         wlan_OffloadInfo_r12 = null;
      }

      // decode scg_Configuration_r12

      if (scg_Configuration_r12Present) {
         buffer.getContext().eventDispatcher.startElement("scg_Configuration_r12", -1);

         scg_Configuration_r12 = new SCG_Configuration_r12();
         scg_Configuration_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("scg_Configuration_r12", -1);
      }
      else {
         scg_Configuration_r12 = null;
      }

      // decode sl_SyncTxControl_r12

      if (sl_SyncTxControl_r12Present) {
         buffer.getContext().eventDispatcher.startElement("sl_SyncTxControl_r12", -1);

         sl_SyncTxControl_r12 = new SL_SyncTxControl_r12();
         sl_SyncTxControl_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sl_SyncTxControl_r12", -1);
      }
      else {
         sl_SyncTxControl_r12 = null;
      }

      // decode sl_DiscConfig_r12

      if (sl_DiscConfig_r12Present) {
         buffer.getContext().eventDispatcher.startElement("sl_DiscConfig_r12", -1);

         sl_DiscConfig_r12 = new SL_DiscConfig_r12();
         sl_DiscConfig_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sl_DiscConfig_r12", -1);
      }
      else {
         sl_DiscConfig_r12 = null;
      }

      // decode sl_CommConfig_r12

      if (sl_CommConfig_r12Present) {
         buffer.getContext().eventDispatcher.startElement("sl_CommConfig_r12", -1);

         sl_CommConfig_r12 = new SL_CommConfig_r12();
         sl_CommConfig_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sl_CommConfig_r12", -1);
      }
      else {
         sl_CommConfig_r12 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new RRCConnectionReconfiguration_v1310_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (wlan_OffloadInfo_r12 != null) wlan_OffloadInfo_r12.print (_sb, "wlan_OffloadInfo_r12", _level+1);
      if (scg_Configuration_r12 != null) scg_Configuration_r12.print (_sb, "scg_Configuration_r12", _level+1);
      if (sl_SyncTxControl_r12 != null) sl_SyncTxControl_r12.print (_sb, "sl_SyncTxControl_r12", _level+1);
      if (sl_DiscConfig_r12 != null) sl_DiscConfig_r12.print (_sb, "sl_DiscConfig_r12", _level+1);
      if (sl_CommConfig_r12 != null) sl_CommConfig_r12.print (_sb, "sl_CommConfig_r12", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
