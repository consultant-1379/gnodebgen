/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PDCP_Parameters_supportedROHC_Profiles extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Boolean profile0x0000;
   public Asn1Boolean profile0x0001;
   public Asn1Boolean profile0x0002;
   public Asn1Boolean profile0x0003;
   public Asn1Boolean profile0x0004;
   public Asn1Boolean profile0x0006;
   public Asn1Boolean profile0x0101;
   public Asn1Boolean profile0x0102;
   public Asn1Boolean profile0x0103;
   public Asn1Boolean profile0x0104;

   public PDCP_Parameters_supportedROHC_Profiles () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PDCP_Parameters_supportedROHC_Profiles (
      Asn1Boolean profile0x0000_,
      Asn1Boolean profile0x0001_,
      Asn1Boolean profile0x0002_,
      Asn1Boolean profile0x0003_,
      Asn1Boolean profile0x0004_,
      Asn1Boolean profile0x0006_,
      Asn1Boolean profile0x0101_,
      Asn1Boolean profile0x0102_,
      Asn1Boolean profile0x0103_,
      Asn1Boolean profile0x0104_
   ) {
      super();
      profile0x0000 = profile0x0000_;
      profile0x0001 = profile0x0001_;
      profile0x0002 = profile0x0002_;
      profile0x0003 = profile0x0003_;
      profile0x0004 = profile0x0004_;
      profile0x0006 = profile0x0006_;
      profile0x0101 = profile0x0101_;
      profile0x0102 = profile0x0102_;
      profile0x0103 = profile0x0103_;
      profile0x0104 = profile0x0104_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PDCP_Parameters_supportedROHC_Profiles (boolean profile0x0000_,
      boolean profile0x0001_,
      boolean profile0x0002_,
      boolean profile0x0003_,
      boolean profile0x0004_,
      boolean profile0x0006_,
      boolean profile0x0101_,
      boolean profile0x0102_,
      boolean profile0x0103_,
      boolean profile0x0104_
   ) {
      super();
      profile0x0000 = new Asn1Boolean (profile0x0000_);
      profile0x0001 = new Asn1Boolean (profile0x0001_);
      profile0x0002 = new Asn1Boolean (profile0x0002_);
      profile0x0003 = new Asn1Boolean (profile0x0003_);
      profile0x0004 = new Asn1Boolean (profile0x0004_);
      profile0x0006 = new Asn1Boolean (profile0x0006_);
      profile0x0101 = new Asn1Boolean (profile0x0101_);
      profile0x0102 = new Asn1Boolean (profile0x0102_);
      profile0x0103 = new Asn1Boolean (profile0x0103_);
      profile0x0104 = new Asn1Boolean (profile0x0104_);
   }

   public void init () {
      profile0x0000 = null;
      profile0x0001 = null;
      profile0x0002 = null;
      profile0x0003 = null;
      profile0x0004 = null;
      profile0x0006 = null;
      profile0x0101 = null;
      profile0x0102 = null;
      profile0x0103 = null;
      profile0x0104 = null;
   }

   public int getElementCount() { return 10; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return profile0x0000;
         case 1: return profile0x0001;
         case 2: return profile0x0002;
         case 3: return profile0x0003;
         case 4: return profile0x0004;
         case 5: return profile0x0006;
         case 6: return profile0x0101;
         case 7: return profile0x0102;
         case 8: return profile0x0103;
         case 9: return profile0x0104;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "profile0x0000";
         case 1: return "profile0x0001";
         case 2: return "profile0x0002";
         case 3: return "profile0x0003";
         case 4: return "profile0x0004";
         case 5: return "profile0x0006";
         case 6: return "profile0x0101";
         case 7: return "profile0x0102";
         case 8: return "profile0x0103";
         case 9: return "profile0x0104";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode profile0x0000

      buffer.getContext().eventDispatcher.startElement("profile0x0000", -1);

      profile0x0000 = new Asn1Boolean();
      profile0x0000.decode (buffer);

      buffer.invokeCharacters(profile0x0000.toString());
      buffer.getContext().eventDispatcher.endElement("profile0x0000", -1);

      // decode profile0x0001

      buffer.getContext().eventDispatcher.startElement("profile0x0001", -1);

      profile0x0001 = new Asn1Boolean();
      profile0x0001.decode (buffer);

      buffer.invokeCharacters(profile0x0001.toString());
      buffer.getContext().eventDispatcher.endElement("profile0x0001", -1);

      // decode profile0x0002

      buffer.getContext().eventDispatcher.startElement("profile0x0002", -1);

      profile0x0002 = new Asn1Boolean();
      profile0x0002.decode (buffer);

      buffer.invokeCharacters(profile0x0002.toString());
      buffer.getContext().eventDispatcher.endElement("profile0x0002", -1);

      // decode profile0x0003

      buffer.getContext().eventDispatcher.startElement("profile0x0003", -1);

      profile0x0003 = new Asn1Boolean();
      profile0x0003.decode (buffer);

      buffer.invokeCharacters(profile0x0003.toString());
      buffer.getContext().eventDispatcher.endElement("profile0x0003", -1);

      // decode profile0x0004

      buffer.getContext().eventDispatcher.startElement("profile0x0004", -1);

      profile0x0004 = new Asn1Boolean();
      profile0x0004.decode (buffer);

      buffer.invokeCharacters(profile0x0004.toString());
      buffer.getContext().eventDispatcher.endElement("profile0x0004", -1);

      // decode profile0x0006

      buffer.getContext().eventDispatcher.startElement("profile0x0006", -1);

      profile0x0006 = new Asn1Boolean();
      profile0x0006.decode (buffer);

      buffer.invokeCharacters(profile0x0006.toString());
      buffer.getContext().eventDispatcher.endElement("profile0x0006", -1);

      // decode profile0x0101

      buffer.getContext().eventDispatcher.startElement("profile0x0101", -1);

      profile0x0101 = new Asn1Boolean();
      profile0x0101.decode (buffer);

      buffer.invokeCharacters(profile0x0101.toString());
      buffer.getContext().eventDispatcher.endElement("profile0x0101", -1);

      // decode profile0x0102

      buffer.getContext().eventDispatcher.startElement("profile0x0102", -1);

      profile0x0102 = new Asn1Boolean();
      profile0x0102.decode (buffer);

      buffer.invokeCharacters(profile0x0102.toString());
      buffer.getContext().eventDispatcher.endElement("profile0x0102", -1);

      // decode profile0x0103

      buffer.getContext().eventDispatcher.startElement("profile0x0103", -1);

      profile0x0103 = new Asn1Boolean();
      profile0x0103.decode (buffer);

      buffer.invokeCharacters(profile0x0103.toString());
      buffer.getContext().eventDispatcher.endElement("profile0x0103", -1);

      // decode profile0x0104

      buffer.getContext().eventDispatcher.startElement("profile0x0104", -1);

      profile0x0104 = new Asn1Boolean();
      profile0x0104.decode (buffer);

      buffer.invokeCharacters(profile0x0104.toString());
      buffer.getContext().eventDispatcher.endElement("profile0x0104", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (profile0x0000 != null) profile0x0000.print (_sb, "profile0x0000", _level+1);
      if (profile0x0001 != null) profile0x0001.print (_sb, "profile0x0001", _level+1);
      if (profile0x0002 != null) profile0x0002.print (_sb, "profile0x0002", _level+1);
      if (profile0x0003 != null) profile0x0003.print (_sb, "profile0x0003", _level+1);
      if (profile0x0004 != null) profile0x0004.print (_sb, "profile0x0004", _level+1);
      if (profile0x0006 != null) profile0x0006.print (_sb, "profile0x0006", _level+1);
      if (profile0x0101 != null) profile0x0101.print (_sb, "profile0x0101", _level+1);
      if (profile0x0102 != null) profile0x0102.print (_sb, "profile0x0102", _level+1);
      if (profile0x0103 != null) profile0x0103.print (_sb, "profile0x0103", _level+1);
      if (profile0x0104 != null) profile0x0104.print (_sb, "profile0x0104", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
