/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_nzp_CSI_RS_ResourceSetList nzp_CSI_RS_ResourceSetList;  // optional
   public CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_csi_SSB_ResourceSetList csi_SSB_ResourceSetList;  // optional

   public CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB (
      CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_nzp_CSI_RS_ResourceSetList nzp_CSI_RS_ResourceSetList_,
      CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_csi_SSB_ResourceSetList csi_SSB_ResourceSetList_
   ) {
      super();
      nzp_CSI_RS_ResourceSetList = nzp_CSI_RS_ResourceSetList_;
      csi_SSB_ResourceSetList = csi_SSB_ResourceSetList_;
   }

   public void init () {
      nzp_CSI_RS_ResourceSetList = null;
      csi_SSB_ResourceSetList = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return nzp_CSI_RS_ResourceSetList;
         case 1: return csi_SSB_ResourceSetList;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "nzp-CSI-RS-ResourceSetList";
         case 1: return "csi-SSB-ResourceSetList";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean nzp_CSI_RS_ResourceSetListPresent = buffer.decodeBit ("nzp_CSI_RS_ResourceSetListPresent");
      boolean csi_SSB_ResourceSetListPresent = buffer.decodeBit ("csi_SSB_ResourceSetListPresent");

      // decode nzp_CSI_RS_ResourceSetList

      if (nzp_CSI_RS_ResourceSetListPresent) {
         buffer.getContext().eventDispatcher.startElement("nzp_CSI_RS_ResourceSetList", -1);

         nzp_CSI_RS_ResourceSetList = new CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_nzp_CSI_RS_ResourceSetList();
         nzp_CSI_RS_ResourceSetList.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nzp_CSI_RS_ResourceSetList", -1);
      }
      else {
         nzp_CSI_RS_ResourceSetList = null;
      }

      // decode csi_SSB_ResourceSetList

      if (csi_SSB_ResourceSetListPresent) {
         buffer.getContext().eventDispatcher.startElement("csi_SSB_ResourceSetList", -1);

         csi_SSB_ResourceSetList = new CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_csi_SSB_ResourceSetList();
         csi_SSB_ResourceSetList.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("csi_SSB_ResourceSetList", -1);
      }
      else {
         csi_SSB_ResourceSetList = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (nzp_CSI_RS_ResourceSetList != null) nzp_CSI_RS_ResourceSetList.print (_sb, "nzp_CSI_RS_ResourceSetList", _level+1);
      if (csi_SSB_ResourceSetList != null) csi_SSB_ResourceSetList.print (_sb, "csi_SSB_ResourceSetList", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
