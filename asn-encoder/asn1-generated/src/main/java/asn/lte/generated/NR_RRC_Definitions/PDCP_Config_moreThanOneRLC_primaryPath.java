/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PDCP_Config_moreThanOneRLC_primaryPath extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CellGroupId cellGroup;  // optional
   public LogicalChannelIdentity logicalChannel;  // optional

   public PDCP_Config_moreThanOneRLC_primaryPath () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PDCP_Config_moreThanOneRLC_primaryPath (
      CellGroupId cellGroup_,
      LogicalChannelIdentity logicalChannel_
   ) {
      super();
      cellGroup = cellGroup_;
      logicalChannel = logicalChannel_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PDCP_Config_moreThanOneRLC_primaryPath (long cellGroup_,
      long logicalChannel_
   ) {
      super();
      cellGroup = new CellGroupId (cellGroup_);
      logicalChannel = new LogicalChannelIdentity (logicalChannel_);
   }

   public void init () {
      cellGroup = null;
      logicalChannel = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return cellGroup;
         case 1: return logicalChannel;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "cellGroup";
         case 1: return "logicalChannel";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean cellGroupPresent = buffer.decodeBit ("cellGroupPresent");
      boolean logicalChannelPresent = buffer.decodeBit ("logicalChannelPresent");

      // decode cellGroup

      if (cellGroupPresent) {
         buffer.getContext().eventDispatcher.startElement("cellGroup", -1);

         cellGroup = new CellGroupId();
         cellGroup.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cellGroup", -1);
      }
      else {
         cellGroup = null;
      }

      // decode logicalChannel

      if (logicalChannelPresent) {
         buffer.getContext().eventDispatcher.startElement("logicalChannel", -1);

         logicalChannel = new LogicalChannelIdentity();
         logicalChannel.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("logicalChannel", -1);
      }
      else {
         logicalChannel = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (cellGroup != null) cellGroup.print (_sb, "cellGroup", _level+1);
      if (logicalChannel != null) logicalChannel.print (_sb, "logicalChannel", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
