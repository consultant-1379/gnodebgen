/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CodebookConfig_codebookType_type1_subType_typeI_MultiPanel extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2 ng_n1_n2;
   public Asn1BitString ri_Restriction;

   public CodebookConfig_codebookType_type1_subType_typeI_MultiPanel () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CodebookConfig_codebookType_type1_subType_typeI_MultiPanel (
      CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2 ng_n1_n2_,
      Asn1BitString ri_Restriction_
   ) {
      super();
      ng_n1_n2 = ng_n1_n2_;
      ri_Restriction = ri_Restriction_;
   }

   public void init () {
      ng_n1_n2 = null;
      ri_Restriction = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ng_n1_n2;
         case 1: return ri_Restriction;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ng-n1-n2";
         case 1: return "ri-Restriction";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode ng_n1_n2

      buffer.getContext().eventDispatcher.startElement("ng_n1_n2", -1);

      ng_n1_n2 = new CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2();
      ng_n1_n2.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ng_n1_n2", -1);

      // decode ri_Restriction

      buffer.getContext().eventDispatcher.startElement("ri_Restriction", -1);

      ri_Restriction = new Asn1BitString();
      ri_Restriction.decode (buffer, 4, 4);

      buffer.invokeCharacters(ri_Restriction.toString());
      buffer.getContext().eventDispatcher.endElement("ri_Restriction", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ng_n1_n2 != null) ng_n1_n2.print (_sb, "ng_n1_n2", _level+1);
      if (ri_Restriction != null) ri_Restriction.print (_sb, "ri_Restriction", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
