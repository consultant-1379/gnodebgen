/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class DRX_Config_setup_drx_RetransmissionTimer extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _PSF1 = 0;
   public static final int _PSF2 = 1;
   public static final int _PSF4 = 2;
   public static final int _PSF6 = 3;
   public static final int _PSF8 = 4;
   public static final int _PSF16 = 5;
   public static final int _PSF24 = 6;
   public static final int _PSF33 = 7;

   // Singleton instances of DRX_Config_setup_drx_RetransmissionTimer
   protected static final DRX_Config_setup_drx_RetransmissionTimer _psf1 = new DRX_Config_setup_drx_RetransmissionTimer(0);
   protected static final DRX_Config_setup_drx_RetransmissionTimer _psf2 = new DRX_Config_setup_drx_RetransmissionTimer(1);
   protected static final DRX_Config_setup_drx_RetransmissionTimer _psf4 = new DRX_Config_setup_drx_RetransmissionTimer(2);
   protected static final DRX_Config_setup_drx_RetransmissionTimer _psf6 = new DRX_Config_setup_drx_RetransmissionTimer(3);
   protected static final DRX_Config_setup_drx_RetransmissionTimer _psf8 = new DRX_Config_setup_drx_RetransmissionTimer(4);
   protected static final DRX_Config_setup_drx_RetransmissionTimer _psf16 = new DRX_Config_setup_drx_RetransmissionTimer(5);
   protected static final DRX_Config_setup_drx_RetransmissionTimer _psf24 = new DRX_Config_setup_drx_RetransmissionTimer(6);
   protected static final DRX_Config_setup_drx_RetransmissionTimer _psf33 = new DRX_Config_setup_drx_RetransmissionTimer(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected DRX_Config_setup_drx_RetransmissionTimer (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for psf1.
    */
   public static DRX_Config_setup_drx_RetransmissionTimer psf1() {
      return _psf1;
   }

   /**
    * Singleton accessor method for psf2.
    */
   public static DRX_Config_setup_drx_RetransmissionTimer psf2() {
      return _psf2;
   }

   /**
    * Singleton accessor method for psf4.
    */
   public static DRX_Config_setup_drx_RetransmissionTimer psf4() {
      return _psf4;
   }

   /**
    * Singleton accessor method for psf6.
    */
   public static DRX_Config_setup_drx_RetransmissionTimer psf6() {
      return _psf6;
   }

   /**
    * Singleton accessor method for psf8.
    */
   public static DRX_Config_setup_drx_RetransmissionTimer psf8() {
      return _psf8;
   }

   /**
    * Singleton accessor method for psf16.
    */
   public static DRX_Config_setup_drx_RetransmissionTimer psf16() {
      return _psf16;
   }

   /**
    * Singleton accessor method for psf24.
    */
   public static DRX_Config_setup_drx_RetransmissionTimer psf24() {
      return _psf24;
   }

   /**
    * Singleton accessor method for psf33.
    */
   public static DRX_Config_setup_drx_RetransmissionTimer psf33() {
      return _psf33;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return DRX_Config_setup_drx_RetransmissionTimer.valueOf( DRX_Config_setup_drx_RetransmissionTimer.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static DRX_Config_setup_drx_RetransmissionTimer valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return psf1();
         case 1: return psf2();
         case 2: return psf4();
         case 3: return psf6();
         case 4: return psf8();
         case 5: return psf16();
         case 6: return psf24();
         case 7: return psf33();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (DRX_Config_setup_drx_RetransmissionTimer.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("psf1");
         case 1: return ("psf2");
         case 2: return ("psf4");
         case 3: return ("psf6");
         case 4: return ("psf8");
         case 5: return ("psf16");
         case 6: return ("psf24");
         case 7: return ("psf33");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
