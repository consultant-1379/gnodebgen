/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SSB_MTC3_r16_periodicityAndOffset_r16 extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _SF5_R16 = 1;
   public final static byte _SF10_R16 = 2;
   public final static byte _SF20_R16 = 3;
   public final static byte _SF40_R16 = 4;
   public final static byte _SF80_R16 = 5;
   public final static byte _SF160_R16 = 6;
   public final static byte _SF320_R16 = 7;
   public final static byte _SF640_R16 = 8;
   public final static byte _SF1280_R16 = 9;

   public SSB_MTC3_r16_periodicityAndOffset_r16 () {
      super();
   }

   public SSB_MTC3_r16_periodicityAndOffset_r16 (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _SF5_R16: return "sf5_r16";
      case _SF10_R16: return "sf10_r16";
      case _SF20_R16: return "sf20_r16";
      case _SF40_R16: return "sf40_r16";
      case _SF80_R16: return "sf80_r16";
      case _SF160_R16: return "sf160_r16";
      case _SF320_R16: return "sf320_r16";
      case _SF640_R16: return "sf640_r16";
      case _SF1280_R16: return "sf1280_r16";
      default: return "UNDEFINED";
      }
   }

   public void set_sf5_r16 (Asn1Integer value) {
      setElement (_SF5_R16, value);
   }

   public void set_sf10_r16 (Asn1Integer value) {
      setElement (_SF10_R16, value);
   }

   public void set_sf20_r16 (Asn1Integer value) {
      setElement (_SF20_R16, value);
   }

   public void set_sf40_r16 (Asn1Integer value) {
      setElement (_SF40_R16, value);
   }

   public void set_sf80_r16 (Asn1Integer value) {
      setElement (_SF80_R16, value);
   }

   public void set_sf160_r16 (Asn1Integer value) {
      setElement (_SF160_R16, value);
   }

   public void set_sf320_r16 (Asn1Integer value) {
      setElement (_SF320_R16, value);
   }

   public void set_sf640_r16 (Asn1Integer value) {
      setElement (_SF640_R16, value);
   }

   public void set_sf1280_r16 (Asn1Integer value) {
      setElement (_SF1280_R16, value);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (9, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // sf5_r16
         case 0: { 
            Asn1Integer sf5_r16;
            element = sf5_r16 = new Asn1Integer();
            sf5_r16.decode (buffer, 0, 4);

            buffer.invokeCharacters(sf5_r16.toString());
            break;
         }

         // sf10_r16
         case 1: { 
            Asn1Integer sf10_r16;
            element = sf10_r16 = new Asn1Integer();
            sf10_r16.decode (buffer, 0, 9);

            buffer.invokeCharacters(sf10_r16.toString());
            break;
         }

         // sf20_r16
         case 2: { 
            Asn1Integer sf20_r16;
            element = sf20_r16 = new Asn1Integer();
            sf20_r16.decode (buffer, 0, 19);

            buffer.invokeCharacters(sf20_r16.toString());
            break;
         }

         // sf40_r16
         case 3: { 
            Asn1Integer sf40_r16;
            element = sf40_r16 = new Asn1Integer();
            sf40_r16.decode (buffer, 0, 39);

            buffer.invokeCharacters(sf40_r16.toString());
            break;
         }

         // sf80_r16
         case 4: { 
            Asn1Integer sf80_r16;
            element = sf80_r16 = new Asn1Integer();
            sf80_r16.decode (buffer, 0, 79);

            buffer.invokeCharacters(sf80_r16.toString());
            break;
         }

         // sf160_r16
         case 5: { 
            Asn1Integer sf160_r16;
            element = sf160_r16 = new Asn1Integer();
            sf160_r16.decode (buffer, 0, 159);

            buffer.invokeCharacters(sf160_r16.toString());
            break;
         }

         // sf320_r16
         case 6: { 
            Asn1Integer sf320_r16;
            element = sf320_r16 = new Asn1Integer();
            sf320_r16.decode (buffer, 0, 319);

            buffer.invokeCharacters(sf320_r16.toString());
            break;
         }

         // sf640_r16
         case 7: { 
            Asn1Integer sf640_r16;
            element = sf640_r16 = new Asn1Integer();
            sf640_r16.decode (buffer, 0, 639);

            buffer.invokeCharacters(sf640_r16.toString());
            break;
         }

         // sf1280_r16
         case 8: { 
            Asn1Integer sf1280_r16;
            element = sf1280_r16 = new Asn1Integer();
            sf1280_r16.decode (buffer, 0, 1279);

            buffer.invokeCharacters(sf1280_r16.toString());
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
