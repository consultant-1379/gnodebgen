/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PSCellToAddMod_r12 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PSCellToAddMod-r12";
   }

   public SCellIndex_r10 sCellIndex_r12;
   public PSCellToAddMod_r12_cellIdentification_r12 cellIdentification_r12;  // optional
   public RadioResourceConfigCommonPSCell_r12 radioResourceConfigCommonPSCell_r12;  // optional
   public RadioResourceConfigDedicatedPSCell_r12 radioResourceConfigDedicatedPSCell_r12;  // optional
   public boolean mV2ExtPresent;
   public AntennaInfoDedicated_v10i0 antennaInfoDedicatedPSCell_v1280;  // optional
   public boolean mV3ExtPresent;
   public SCellIndex_r13 sCellIndex_r13;  // optional
   public boolean mV4ExtPresent;
   public RadioResourceConfigDedicatedPSCell_v1370 radioResourceConfigDedicatedPSCell_v1370;  // optional
   public boolean mV5ExtPresent;
   public RadioResourceConfigDedicatedPSCell_v13c0 radioResourceConfigDedicatedPSCell_v13c0;  // optional
   public Asn1OpenExt extElem1;

   public PSCellToAddMod_r12 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PSCellToAddMod_r12 (
      SCellIndex_r10 sCellIndex_r12_,
      PSCellToAddMod_r12_cellIdentification_r12 cellIdentification_r12_,
      RadioResourceConfigCommonPSCell_r12 radioResourceConfigCommonPSCell_r12_,
      RadioResourceConfigDedicatedPSCell_r12 radioResourceConfigDedicatedPSCell_r12_,
      AntennaInfoDedicated_v10i0 antennaInfoDedicatedPSCell_v1280_,
      SCellIndex_r13 sCellIndex_r13_,
      RadioResourceConfigDedicatedPSCell_v1370 radioResourceConfigDedicatedPSCell_v1370_,
      RadioResourceConfigDedicatedPSCell_v13c0 radioResourceConfigDedicatedPSCell_v13c0_
   ) {
      super();
      sCellIndex_r12 = sCellIndex_r12_;
      cellIdentification_r12 = cellIdentification_r12_;
      radioResourceConfigCommonPSCell_r12 = radioResourceConfigCommonPSCell_r12_;
      radioResourceConfigDedicatedPSCell_r12 = radioResourceConfigDedicatedPSCell_r12_;
      antennaInfoDedicatedPSCell_v1280 = antennaInfoDedicatedPSCell_v1280_;
      sCellIndex_r13 = sCellIndex_r13_;
      radioResourceConfigDedicatedPSCell_v1370 = radioResourceConfigDedicatedPSCell_v1370_;
      radioResourceConfigDedicatedPSCell_v13c0 = radioResourceConfigDedicatedPSCell_v13c0_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public PSCellToAddMod_r12 (
      SCellIndex_r10 sCellIndex_r12_
   ) {
      super();
      sCellIndex_r12 = sCellIndex_r12_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PSCellToAddMod_r12 (long sCellIndex_r12_,
      PSCellToAddMod_r12_cellIdentification_r12 cellIdentification_r12_,
      RadioResourceConfigCommonPSCell_r12 radioResourceConfigCommonPSCell_r12_,
      RadioResourceConfigDedicatedPSCell_r12 radioResourceConfigDedicatedPSCell_r12_,
      AntennaInfoDedicated_v10i0 antennaInfoDedicatedPSCell_v1280_,
      long sCellIndex_r13_,
      RadioResourceConfigDedicatedPSCell_v1370 radioResourceConfigDedicatedPSCell_v1370_,
      RadioResourceConfigDedicatedPSCell_v13c0 radioResourceConfigDedicatedPSCell_v13c0_
   ) {
      super();
      sCellIndex_r12 = new SCellIndex_r10 (sCellIndex_r12_);
      cellIdentification_r12 = cellIdentification_r12_;
      radioResourceConfigCommonPSCell_r12 = radioResourceConfigCommonPSCell_r12_;
      radioResourceConfigDedicatedPSCell_r12 = radioResourceConfigDedicatedPSCell_r12_;
      antennaInfoDedicatedPSCell_v1280 = antennaInfoDedicatedPSCell_v1280_;
      sCellIndex_r13 = new SCellIndex_r13 (sCellIndex_r13_);
      radioResourceConfigDedicatedPSCell_v1370 = radioResourceConfigDedicatedPSCell_v1370_;
      radioResourceConfigDedicatedPSCell_v13c0 = radioResourceConfigDedicatedPSCell_v13c0_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public PSCellToAddMod_r12 (
      long sCellIndex_r12_
   ) {
      super();
      sCellIndex_r12 = new SCellIndex_r10 (sCellIndex_r12_);
   }

   public void init () {
      sCellIndex_r12 = null;
      cellIdentification_r12 = null;
      radioResourceConfigCommonPSCell_r12 = null;
      radioResourceConfigDedicatedPSCell_r12 = null;
      antennaInfoDedicatedPSCell_v1280 = null;
      sCellIndex_r13 = null;
      radioResourceConfigDedicatedPSCell_v1370 = null;
      radioResourceConfigDedicatedPSCell_v13c0 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 9; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return sCellIndex_r12;
         case 1: return cellIdentification_r12;
         case 2: return radioResourceConfigCommonPSCell_r12;
         case 3: return radioResourceConfigDedicatedPSCell_r12;
         case 4: return antennaInfoDedicatedPSCell_v1280;
         case 5: return sCellIndex_r13;
         case 6: return radioResourceConfigDedicatedPSCell_v1370;
         case 7: return radioResourceConfigDedicatedPSCell_v13c0;
         case 8: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "sCellIndex-r12";
         case 1: return "cellIdentification-r12";
         case 2: return "radioResourceConfigCommonPSCell-r12";
         case 3: return "radioResourceConfigDedicatedPSCell-r12";
         case 4: return "antennaInfoDedicatedPSCell-v1280";
         case 5: return "sCellIndex-r13";
         case 6: return "radioResourceConfigDedicatedPSCell-v1370";
         case 7: return "radioResourceConfigDedicatedPSCell-v13c0";
         case 8: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean cellIdentification_r12Present = buffer.decodeBit ("cellIdentification_r12Present");
      boolean radioResourceConfigCommonPSCell_r12Present = buffer.decodeBit ("radioResourceConfigCommonPSCell_r12Present");
      boolean radioResourceConfigDedicatedPSCell_r12Present = buffer.decodeBit ("radioResourceConfigDedicatedPSCell_r12Present");

      // decode sCellIndex_r12

      buffer.getContext().eventDispatcher.startElement("sCellIndex_r12", -1);

      sCellIndex_r12 = new SCellIndex_r10();
      sCellIndex_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("sCellIndex_r12", -1);

      // decode cellIdentification_r12

      if (cellIdentification_r12Present) {
         buffer.getContext().eventDispatcher.startElement("cellIdentification_r12", -1);

         cellIdentification_r12 = new PSCellToAddMod_r12_cellIdentification_r12();
         cellIdentification_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cellIdentification_r12", -1);
      }
      else {
         cellIdentification_r12 = null;
      }

      // decode radioResourceConfigCommonPSCell_r12

      if (radioResourceConfigCommonPSCell_r12Present) {
         buffer.getContext().eventDispatcher.startElement("radioResourceConfigCommonPSCell_r12", -1);

         radioResourceConfigCommonPSCell_r12 = new RadioResourceConfigCommonPSCell_r12();
         radioResourceConfigCommonPSCell_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("radioResourceConfigCommonPSCell_r12", -1);
      }
      else {
         radioResourceConfigCommonPSCell_r12 = null;
      }

      // decode radioResourceConfigDedicatedPSCell_r12

      if (radioResourceConfigDedicatedPSCell_r12Present) {
         buffer.getContext().eventDispatcher.startElement("radioResourceConfigDedicatedPSCell_r12", -1);

         radioResourceConfigDedicatedPSCell_r12 = new RadioResourceConfigDedicatedPSCell_r12();
         radioResourceConfigDedicatedPSCell_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("radioResourceConfigDedicatedPSCell_r12", -1);
      }
      else {
         radioResourceConfigDedicatedPSCell_r12 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV3ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV4ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV5ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean antennaInfoDedicatedPSCell_v1280Present = buffer.decodeBit ("antennaInfoDedicatedPSCell_v1280Present");

            // decode antennaInfoDedicatedPSCell_v1280

            if (antennaInfoDedicatedPSCell_v1280Present) {
               buffer.getContext().eventDispatcher.startElement("antennaInfoDedicatedPSCell_v1280", -1);

               antennaInfoDedicatedPSCell_v1280 = new AntennaInfoDedicated_v10i0();
               antennaInfoDedicatedPSCell_v1280.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("antennaInfoDedicatedPSCell_v1280", -1);
            }
            else {
               antennaInfoDedicatedPSCell_v1280 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV3ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean sCellIndex_r13Present = buffer.decodeBit ("sCellIndex_r13Present");

            // decode sCellIndex_r13

            if (sCellIndex_r13Present) {
               buffer.getContext().eventDispatcher.startElement("sCellIndex_r13", -1);

               sCellIndex_r13 = new SCellIndex_r13();
               sCellIndex_r13.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("sCellIndex_r13", -1);
            }
            else {
               sCellIndex_r13 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV4ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean radioResourceConfigDedicatedPSCell_v1370Present = buffer.decodeBit ("radioResourceConfigDedicatedPSCell_v1370Present");

            // decode radioResourceConfigDedicatedPSCell_v1370

            if (radioResourceConfigDedicatedPSCell_v1370Present) {
               buffer.getContext().eventDispatcher.startElement("radioResourceConfigDedicatedPSCell_v1370", -1);

               radioResourceConfigDedicatedPSCell_v1370 = new RadioResourceConfigDedicatedPSCell_v1370();
               radioResourceConfigDedicatedPSCell_v1370.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("radioResourceConfigDedicatedPSCell_v1370", -1);
            }
            else {
               radioResourceConfigDedicatedPSCell_v1370 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV5ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean radioResourceConfigDedicatedPSCell_v13c0Present = buffer.decodeBit ("radioResourceConfigDedicatedPSCell_v13c0Present");

            // decode radioResourceConfigDedicatedPSCell_v13c0

            if (radioResourceConfigDedicatedPSCell_v13c0Present) {
               buffer.getContext().eventDispatcher.startElement("radioResourceConfigDedicatedPSCell_v13c0", -1);

               radioResourceConfigDedicatedPSCell_v13c0 = new RadioResourceConfigDedicatedPSCell_v13c0();
               radioResourceConfigDedicatedPSCell_v13c0.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("radioResourceConfigDedicatedPSCell_v13c0", -1);
            }
            else {
               radioResourceConfigDedicatedPSCell_v13c0 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (sCellIndex_r12 != null) sCellIndex_r12.print (_sb, "sCellIndex_r12", _level+1);
      if (cellIdentification_r12 != null) cellIdentification_r12.print (_sb, "cellIdentification_r12", _level+1);
      if (radioResourceConfigCommonPSCell_r12 != null) radioResourceConfigCommonPSCell_r12.print (_sb, "radioResourceConfigCommonPSCell_r12", _level+1);
      if (radioResourceConfigDedicatedPSCell_r12 != null) radioResourceConfigDedicatedPSCell_r12.print (_sb, "radioResourceConfigDedicatedPSCell_r12", _level+1);
      if (antennaInfoDedicatedPSCell_v1280 != null) antennaInfoDedicatedPSCell_v1280.print (_sb, "antennaInfoDedicatedPSCell_v1280", _level+1);
      if (sCellIndex_r13 != null) sCellIndex_r13.print (_sb, "sCellIndex_r13", _level+1);
      if (radioResourceConfigDedicatedPSCell_v1370 != null) radioResourceConfigDedicatedPSCell_v1370.print (_sb, "radioResourceConfigDedicatedPSCell_v1370", _level+1);
      if (radioResourceConfigDedicatedPSCell_v13c0 != null) radioResourceConfigDedicatedPSCell_v13c0.print (_sb, "radioResourceConfigDedicatedPSCell_v13c0", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
