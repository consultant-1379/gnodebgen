/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class BandCombination_UplinkTxSwitch_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "BandCombination-UplinkTxSwitch-r16";
   }

   public BandCombination bandCombination_r16;
   public BandCombination_v1540 bandCombination_v1540;  // optional
   public BandCombination_v1560 bandCombination_v1560;  // optional
   public BandCombination_v1570 bandCombination_v1570;  // optional
   public BandCombination_v1580 bandCombination_v1580;  // optional
   public BandCombination_v1590 bandCombination_v1590;  // optional
   public BandCombination_v1610 bandCombination_v1610;  // optional
   public BandCombination_UplinkTxSwitch_r16_supportedBandPairListNR_r16 supportedBandPairListNR_r16;
   public BandCombination_UplinkTxSwitch_r16_uplinkTxSwitching_OptionSupport_r16 uplinkTxSwitching_OptionSupport_r16 = null;  // optional
   public BandCombination_UplinkTxSwitch_r16_uplinkTxSwitching_PowerBoosting_r16 uplinkTxSwitching_PowerBoosting_r16 = null;  // optional
   public Asn1OpenExt extElem1;

   public BandCombination_UplinkTxSwitch_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public BandCombination_UplinkTxSwitch_r16 (
      BandCombination bandCombination_r16_,
      BandCombination_v1540 bandCombination_v1540_,
      BandCombination_v1560 bandCombination_v1560_,
      BandCombination_v1570 bandCombination_v1570_,
      BandCombination_v1580 bandCombination_v1580_,
      BandCombination_v1590 bandCombination_v1590_,
      BandCombination_v1610 bandCombination_v1610_,
      BandCombination_UplinkTxSwitch_r16_supportedBandPairListNR_r16 supportedBandPairListNR_r16_,
      BandCombination_UplinkTxSwitch_r16_uplinkTxSwitching_OptionSupport_r16 uplinkTxSwitching_OptionSupport_r16_,
      BandCombination_UplinkTxSwitch_r16_uplinkTxSwitching_PowerBoosting_r16 uplinkTxSwitching_PowerBoosting_r16_
   ) {
      super();
      bandCombination_r16 = bandCombination_r16_;
      bandCombination_v1540 = bandCombination_v1540_;
      bandCombination_v1560 = bandCombination_v1560_;
      bandCombination_v1570 = bandCombination_v1570_;
      bandCombination_v1580 = bandCombination_v1580_;
      bandCombination_v1590 = bandCombination_v1590_;
      bandCombination_v1610 = bandCombination_v1610_;
      supportedBandPairListNR_r16 = supportedBandPairListNR_r16_;
      uplinkTxSwitching_OptionSupport_r16 = uplinkTxSwitching_OptionSupport_r16_;
      uplinkTxSwitching_PowerBoosting_r16 = uplinkTxSwitching_PowerBoosting_r16_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public BandCombination_UplinkTxSwitch_r16 (
      BandCombination bandCombination_r16_,
      BandCombination_UplinkTxSwitch_r16_supportedBandPairListNR_r16 supportedBandPairListNR_r16_
   ) {
      super();
      bandCombination_r16 = bandCombination_r16_;
      supportedBandPairListNR_r16 = supportedBandPairListNR_r16_;
   }

   public void init () {
      bandCombination_r16 = null;
      bandCombination_v1540 = null;
      bandCombination_v1560 = null;
      bandCombination_v1570 = null;
      bandCombination_v1580 = null;
      bandCombination_v1590 = null;
      bandCombination_v1610 = null;
      supportedBandPairListNR_r16 = null;
      uplinkTxSwitching_OptionSupport_r16 = null;
      uplinkTxSwitching_PowerBoosting_r16 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 11; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return bandCombination_r16;
         case 1: return bandCombination_v1540;
         case 2: return bandCombination_v1560;
         case 3: return bandCombination_v1570;
         case 4: return bandCombination_v1580;
         case 5: return bandCombination_v1590;
         case 6: return bandCombination_v1610;
         case 7: return supportedBandPairListNR_r16;
         case 8: return uplinkTxSwitching_OptionSupport_r16;
         case 9: return uplinkTxSwitching_PowerBoosting_r16;
         case 10: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "bandCombination-r16";
         case 1: return "bandCombination-v1540";
         case 2: return "bandCombination-v1560";
         case 3: return "bandCombination-v1570";
         case 4: return "bandCombination-v1580";
         case 5: return "bandCombination-v1590";
         case 6: return "bandCombination-v1610";
         case 7: return "supportedBandPairListNR-r16";
         case 8: return "uplinkTxSwitching-OptionSupport-r16";
         case 9: return "uplinkTxSwitching-PowerBoosting-r16";
         case 10: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean bandCombination_v1540Present = buffer.decodeBit ("bandCombination_v1540Present");
      boolean bandCombination_v1560Present = buffer.decodeBit ("bandCombination_v1560Present");
      boolean bandCombination_v1570Present = buffer.decodeBit ("bandCombination_v1570Present");
      boolean bandCombination_v1580Present = buffer.decodeBit ("bandCombination_v1580Present");
      boolean bandCombination_v1590Present = buffer.decodeBit ("bandCombination_v1590Present");
      boolean bandCombination_v1610Present = buffer.decodeBit ("bandCombination_v1610Present");
      boolean uplinkTxSwitching_OptionSupport_r16Present = buffer.decodeBit ("uplinkTxSwitching_OptionSupport_r16Present");
      boolean uplinkTxSwitching_PowerBoosting_r16Present = buffer.decodeBit ("uplinkTxSwitching_PowerBoosting_r16Present");

      // decode bandCombination_r16

      buffer.getContext().eventDispatcher.startElement("bandCombination_r16", -1);

      bandCombination_r16 = new BandCombination();
      bandCombination_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("bandCombination_r16", -1);

      // decode bandCombination_v1540

      if (bandCombination_v1540Present) {
         buffer.getContext().eventDispatcher.startElement("bandCombination_v1540", -1);

         bandCombination_v1540 = new BandCombination_v1540();
         bandCombination_v1540.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bandCombination_v1540", -1);
      }
      else {
         bandCombination_v1540 = null;
      }

      // decode bandCombination_v1560

      if (bandCombination_v1560Present) {
         buffer.getContext().eventDispatcher.startElement("bandCombination_v1560", -1);

         bandCombination_v1560 = new BandCombination_v1560();
         bandCombination_v1560.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bandCombination_v1560", -1);
      }
      else {
         bandCombination_v1560 = null;
      }

      // decode bandCombination_v1570

      if (bandCombination_v1570Present) {
         buffer.getContext().eventDispatcher.startElement("bandCombination_v1570", -1);

         bandCombination_v1570 = new BandCombination_v1570();
         bandCombination_v1570.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bandCombination_v1570", -1);
      }
      else {
         bandCombination_v1570 = null;
      }

      // decode bandCombination_v1580

      if (bandCombination_v1580Present) {
         buffer.getContext().eventDispatcher.startElement("bandCombination_v1580", -1);

         bandCombination_v1580 = new BandCombination_v1580();
         bandCombination_v1580.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bandCombination_v1580", -1);
      }
      else {
         bandCombination_v1580 = null;
      }

      // decode bandCombination_v1590

      if (bandCombination_v1590Present) {
         buffer.getContext().eventDispatcher.startElement("bandCombination_v1590", -1);

         bandCombination_v1590 = new BandCombination_v1590();
         bandCombination_v1590.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bandCombination_v1590", -1);
      }
      else {
         bandCombination_v1590 = null;
      }

      // decode bandCombination_v1610

      if (bandCombination_v1610Present) {
         buffer.getContext().eventDispatcher.startElement("bandCombination_v1610", -1);

         bandCombination_v1610 = new BandCombination_v1610();
         bandCombination_v1610.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bandCombination_v1610", -1);
      }
      else {
         bandCombination_v1610 = null;
      }

      // decode supportedBandPairListNR_r16

      buffer.getContext().eventDispatcher.startElement("supportedBandPairListNR_r16", -1);

      supportedBandPairListNR_r16 = new BandCombination_UplinkTxSwitch_r16_supportedBandPairListNR_r16();
      supportedBandPairListNR_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("supportedBandPairListNR_r16", -1);

      // decode uplinkTxSwitching_OptionSupport_r16

      if (uplinkTxSwitching_OptionSupport_r16Present) {
         buffer.getContext().eventDispatcher.startElement("uplinkTxSwitching_OptionSupport_r16", -1);

         int tval = BandCombination_UplinkTxSwitch_r16_uplinkTxSwitching_OptionSupport_r16.decodeEnumValue (buffer);
         uplinkTxSwitching_OptionSupport_r16 = BandCombination_UplinkTxSwitch_r16_uplinkTxSwitching_OptionSupport_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("uplinkTxSwitching_OptionSupport_r16", -1);
      }
      else {
         uplinkTxSwitching_OptionSupport_r16 = null;
      }

      // decode uplinkTxSwitching_PowerBoosting_r16

      if (uplinkTxSwitching_PowerBoosting_r16Present) {
         buffer.getContext().eventDispatcher.startElement("uplinkTxSwitching_PowerBoosting_r16", -1);

         int tval = BandCombination_UplinkTxSwitch_r16_uplinkTxSwitching_PowerBoosting_r16.decodeEnumValue (buffer);
         uplinkTxSwitching_PowerBoosting_r16 = BandCombination_UplinkTxSwitch_r16_uplinkTxSwitching_PowerBoosting_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("uplinkTxSwitching_PowerBoosting_r16", -1);
      }
      else {
         uplinkTxSwitching_PowerBoosting_r16 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (bandCombination_r16 != null) bandCombination_r16.print (_sb, "bandCombination_r16", _level+1);
      if (bandCombination_v1540 != null) bandCombination_v1540.print (_sb, "bandCombination_v1540", _level+1);
      if (bandCombination_v1560 != null) bandCombination_v1560.print (_sb, "bandCombination_v1560", _level+1);
      if (bandCombination_v1570 != null) bandCombination_v1570.print (_sb, "bandCombination_v1570", _level+1);
      if (bandCombination_v1580 != null) bandCombination_v1580.print (_sb, "bandCombination_v1580", _level+1);
      if (bandCombination_v1590 != null) bandCombination_v1590.print (_sb, "bandCombination_v1590", _level+1);
      if (bandCombination_v1610 != null) bandCombination_v1610.print (_sb, "bandCombination_v1610", _level+1);
      if (supportedBandPairListNR_r16 != null) supportedBandPairListNR_r16.print (_sb, "supportedBandPairListNR_r16", _level+1);
      if (uplinkTxSwitching_OptionSupport_r16 != null) uplinkTxSwitching_OptionSupport_r16.print (_sb, "uplinkTxSwitching_OptionSupport_r16", _level+1);
      if (uplinkTxSwitching_PowerBoosting_r16 != null) uplinkTxSwitching_PowerBoosting_r16.print (_sb, "uplinkTxSwitching_PowerBoosting_r16", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
