/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.SecurityModeCommand;

public class DL_DCCH_MessageType_NB_c1 extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _DLINFORMATIONTRANSFER_R13 = 1;
   public final static byte _RRCCONNECTIONRECONFIGURATION_R13 = 2;
   public final static byte _RRCCONNECTIONRELEASE_R13 = 3;
   public final static byte _SECURITYMODECOMMAND_R13 = 4;
   public final static byte _UECAPABILITYENQUIRY_R13 = 5;
   public final static byte _RRCCONNECTIONRESUME_R13 = 6;
   public final static byte _SPARE2 = 7;
   public final static byte _SPARE1 = 8;

   public DL_DCCH_MessageType_NB_c1 () {
      super();
   }

   public DL_DCCH_MessageType_NB_c1 (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _DLINFORMATIONTRANSFER_R13: return "dlInformationTransfer_r13";
      case _RRCCONNECTIONRECONFIGURATION_R13: return "rrcConnectionReconfiguration_r13";
      case _RRCCONNECTIONRELEASE_R13: return "rrcConnectionRelease_r13";
      case _SECURITYMODECOMMAND_R13: return "securityModeCommand_r13";
      case _UECAPABILITYENQUIRY_R13: return "ueCapabilityEnquiry_r13";
      case _RRCCONNECTIONRESUME_R13: return "rrcConnectionResume_r13";
      case _SPARE2: return "spare2";
      case _SPARE1: return "spare1";
      default: return "UNDEFINED";
      }
   }

   public void set_dlInformationTransfer_r13 (DLInformationTransfer_NB value) {
      setElement (_DLINFORMATIONTRANSFER_R13, value);
   }

   public void set_rrcConnectionReconfiguration_r13 (RRCConnectionReconfiguration_NB value) {
      setElement (_RRCCONNECTIONRECONFIGURATION_R13, value);
   }

   public void set_rrcConnectionRelease_r13 (RRCConnectionRelease_NB value) {
      setElement (_RRCCONNECTIONRELEASE_R13, value);
   }

   public void set_securityModeCommand_r13 (SecurityModeCommand value) {
      setElement (_SECURITYMODECOMMAND_R13, value);
   }

   public void set_ueCapabilityEnquiry_r13 (UECapabilityEnquiry_NB value) {
      setElement (_UECAPABILITYENQUIRY_R13, value);
   }

   public void set_rrcConnectionResume_r13 (RRCConnectionResume_NB value) {
      setElement (_RRCCONNECTIONRESUME_R13, value);
   }

   public void set_spare2 () {
      setElement (_SPARE2, Asn1Null.NULL_VALUE);
   }

   public void set_spare1 () {
      setElement (_SPARE1, Asn1Null.NULL_VALUE);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (8, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // dlInformationTransfer_r13
         case 0: { 
            DLInformationTransfer_NB dlInformationTransfer_r13;
            element = dlInformationTransfer_r13 = new DLInformationTransfer_NB();
            dlInformationTransfer_r13.decode (buffer);
            break;
         }

         // rrcConnectionReconfiguration_r13
         case 1: { 
            RRCConnectionReconfiguration_NB rrcConnectionReconfiguration_r13;
            element = rrcConnectionReconfiguration_r13 = new RRCConnectionReconfiguration_NB();
            rrcConnectionReconfiguration_r13.decode (buffer);
            break;
         }

         // rrcConnectionRelease_r13
         case 2: { 
            RRCConnectionRelease_NB rrcConnectionRelease_r13;
            element = rrcConnectionRelease_r13 = new RRCConnectionRelease_NB();
            rrcConnectionRelease_r13.decode (buffer);
            break;
         }

         // securityModeCommand_r13
         case 3: { 
            SecurityModeCommand securityModeCommand_r13;
            element = securityModeCommand_r13 = new SecurityModeCommand();
            securityModeCommand_r13.decode (buffer);
            break;
         }

         // ueCapabilityEnquiry_r13
         case 4: { 
            UECapabilityEnquiry_NB ueCapabilityEnquiry_r13;
            element = ueCapabilityEnquiry_r13 = new UECapabilityEnquiry_NB();
            ueCapabilityEnquiry_r13.decode (buffer);
            break;
         }

         // rrcConnectionResume_r13
         case 5: { 
            RRCConnectionResume_NB rrcConnectionResume_r13;
            element = rrcConnectionResume_r13 = new RRCConnectionResume_NB();
            rrcConnectionResume_r13.decode (buffer);
            break;
         }

         // spare2
         case 6: { 
            Asn1Null spare2;
            element = spare2 = Asn1Null.NULL_VALUE;
            spare2.decode (buffer);

            buffer.invokeCharacters(spare2.toString());
            break;
         }

         // spare1
         case 7: { 
            Asn1Null spare1;
            element = spare1 = Asn1Null.NULL_VALUE;
            spare1.decode (buffer);

            buffer.invokeCharacters(spare1.toString());
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
