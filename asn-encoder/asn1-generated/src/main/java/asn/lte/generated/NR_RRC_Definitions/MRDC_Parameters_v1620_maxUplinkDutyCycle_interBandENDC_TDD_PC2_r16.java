/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config0_r16 eutra_TDD_Config0_r16 = null;  // optional
   public MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config1_r16 eutra_TDD_Config1_r16 = null;  // optional
   public MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config2_r16 eutra_TDD_Config2_r16 = null;  // optional
   public MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config3_r16 eutra_TDD_Config3_r16 = null;  // optional
   public MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config4_r16 eutra_TDD_Config4_r16 = null;  // optional
   public MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config5_r16 eutra_TDD_Config5_r16 = null;  // optional
   public MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config6_r16 eutra_TDD_Config6_r16 = null;  // optional

   public MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16 (
      MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config0_r16 eutra_TDD_Config0_r16_,
      MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config1_r16 eutra_TDD_Config1_r16_,
      MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config2_r16 eutra_TDD_Config2_r16_,
      MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config3_r16 eutra_TDD_Config3_r16_,
      MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config4_r16 eutra_TDD_Config4_r16_,
      MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config5_r16 eutra_TDD_Config5_r16_,
      MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config6_r16 eutra_TDD_Config6_r16_
   ) {
      super();
      eutra_TDD_Config0_r16 = eutra_TDD_Config0_r16_;
      eutra_TDD_Config1_r16 = eutra_TDD_Config1_r16_;
      eutra_TDD_Config2_r16 = eutra_TDD_Config2_r16_;
      eutra_TDD_Config3_r16 = eutra_TDD_Config3_r16_;
      eutra_TDD_Config4_r16 = eutra_TDD_Config4_r16_;
      eutra_TDD_Config5_r16 = eutra_TDD_Config5_r16_;
      eutra_TDD_Config6_r16 = eutra_TDD_Config6_r16_;
   }

   public void init () {
      eutra_TDD_Config0_r16 = null;
      eutra_TDD_Config1_r16 = null;
      eutra_TDD_Config2_r16 = null;
      eutra_TDD_Config3_r16 = null;
      eutra_TDD_Config4_r16 = null;
      eutra_TDD_Config5_r16 = null;
      eutra_TDD_Config6_r16 = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return eutra_TDD_Config0_r16;
         case 1: return eutra_TDD_Config1_r16;
         case 2: return eutra_TDD_Config2_r16;
         case 3: return eutra_TDD_Config3_r16;
         case 4: return eutra_TDD_Config4_r16;
         case 5: return eutra_TDD_Config5_r16;
         case 6: return eutra_TDD_Config6_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "eutra-TDD-Config0-r16";
         case 1: return "eutra-TDD-Config1-r16";
         case 2: return "eutra-TDD-Config2-r16";
         case 3: return "eutra-TDD-Config3-r16";
         case 4: return "eutra-TDD-Config4-r16";
         case 5: return "eutra-TDD-Config5-r16";
         case 6: return "eutra-TDD-Config6-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean eutra_TDD_Config0_r16Present = buffer.decodeBit ("eutra_TDD_Config0_r16Present");
      boolean eutra_TDD_Config1_r16Present = buffer.decodeBit ("eutra_TDD_Config1_r16Present");
      boolean eutra_TDD_Config2_r16Present = buffer.decodeBit ("eutra_TDD_Config2_r16Present");
      boolean eutra_TDD_Config3_r16Present = buffer.decodeBit ("eutra_TDD_Config3_r16Present");
      boolean eutra_TDD_Config4_r16Present = buffer.decodeBit ("eutra_TDD_Config4_r16Present");
      boolean eutra_TDD_Config5_r16Present = buffer.decodeBit ("eutra_TDD_Config5_r16Present");
      boolean eutra_TDD_Config6_r16Present = buffer.decodeBit ("eutra_TDD_Config6_r16Present");

      // decode eutra_TDD_Config0_r16

      if (eutra_TDD_Config0_r16Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_TDD_Config0_r16", -1);

         int tval = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config0_r16.decodeEnumValue (buffer);
         eutra_TDD_Config0_r16 = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config0_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_TDD_Config0_r16", -1);
      }
      else {
         eutra_TDD_Config0_r16 = null;
      }

      // decode eutra_TDD_Config1_r16

      if (eutra_TDD_Config1_r16Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_TDD_Config1_r16", -1);

         int tval = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config1_r16.decodeEnumValue (buffer);
         eutra_TDD_Config1_r16 = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config1_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_TDD_Config1_r16", -1);
      }
      else {
         eutra_TDD_Config1_r16 = null;
      }

      // decode eutra_TDD_Config2_r16

      if (eutra_TDD_Config2_r16Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_TDD_Config2_r16", -1);

         int tval = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config2_r16.decodeEnumValue (buffer);
         eutra_TDD_Config2_r16 = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config2_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_TDD_Config2_r16", -1);
      }
      else {
         eutra_TDD_Config2_r16 = null;
      }

      // decode eutra_TDD_Config3_r16

      if (eutra_TDD_Config3_r16Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_TDD_Config3_r16", -1);

         int tval = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config3_r16.decodeEnumValue (buffer);
         eutra_TDD_Config3_r16 = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config3_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_TDD_Config3_r16", -1);
      }
      else {
         eutra_TDD_Config3_r16 = null;
      }

      // decode eutra_TDD_Config4_r16

      if (eutra_TDD_Config4_r16Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_TDD_Config4_r16", -1);

         int tval = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config4_r16.decodeEnumValue (buffer);
         eutra_TDD_Config4_r16 = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config4_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_TDD_Config4_r16", -1);
      }
      else {
         eutra_TDD_Config4_r16 = null;
      }

      // decode eutra_TDD_Config5_r16

      if (eutra_TDD_Config5_r16Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_TDD_Config5_r16", -1);

         int tval = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config5_r16.decodeEnumValue (buffer);
         eutra_TDD_Config5_r16 = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config5_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_TDD_Config5_r16", -1);
      }
      else {
         eutra_TDD_Config5_r16 = null;
      }

      // decode eutra_TDD_Config6_r16

      if (eutra_TDD_Config6_r16Present) {
         buffer.getContext().eventDispatcher.startElement("eutra_TDD_Config6_r16", -1);

         int tval = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config6_r16.decodeEnumValue (buffer);
         eutra_TDD_Config6_r16 = MRDC_Parameters_v1620_maxUplinkDutyCycle_interBandENDC_TDD_PC2_r16_eutra_TDD_Config6_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eutra_TDD_Config6_r16", -1);
      }
      else {
         eutra_TDD_Config6_r16 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (eutra_TDD_Config0_r16 != null) eutra_TDD_Config0_r16.print (_sb, "eutra_TDD_Config0_r16", _level+1);
      if (eutra_TDD_Config1_r16 != null) eutra_TDD_Config1_r16.print (_sb, "eutra_TDD_Config1_r16", _level+1);
      if (eutra_TDD_Config2_r16 != null) eutra_TDD_Config2_r16.print (_sb, "eutra_TDD_Config2_r16", _level+1);
      if (eutra_TDD_Config3_r16 != null) eutra_TDD_Config3_r16.print (_sb, "eutra_TDD_Config3_r16", _level+1);
      if (eutra_TDD_Config4_r16 != null) eutra_TDD_Config4_r16.print (_sb, "eutra_TDD_Config4_r16", _level+1);
      if (eutra_TDD_Config5_r16 != null) eutra_TDD_Config5_r16.print (_sb, "eutra_TDD_Config5_r16", _level+1);
      if (eutra_TDD_Config6_r16 != null) eutra_TDD_Config6_r16.print (_sb, "eutra_TDD_Config6_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
