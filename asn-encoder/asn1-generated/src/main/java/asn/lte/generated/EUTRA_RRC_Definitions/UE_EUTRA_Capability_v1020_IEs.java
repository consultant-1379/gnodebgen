/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UE_EUTRA_Capability_v1020_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UE-EUTRA-Capability-v1020-IEs";
   }

   public Asn1Integer ue_Category_v1020;  // optional
   public PhyLayerParameters_v1020 phyLayerParameters_v1020;  // optional
   public RF_Parameters_v1020 rf_Parameters_v1020;  // optional
   public MeasParameters_v1020 measParameters_v1020;  // optional
   public Asn1BitString featureGroupIndRel10_r10;  // optional
   public IRAT_ParametersCDMA2000_1XRTT_v1020 interRAT_ParametersCDMA2000_v1020;  // optional
   public UE_BasedNetwPerfMeasParameters_r10 ue_BasedNetwPerfMeasParameters_r10;  // optional
   public IRAT_ParametersUTRA_TDD_v1020 interRAT_ParametersUTRA_TDD_v1020;  // optional
   public UE_EUTRA_Capability_v1060_IEs nonCriticalExtension;  // optional

   public UE_EUTRA_Capability_v1020_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UE_EUTRA_Capability_v1020_IEs (
      Asn1Integer ue_Category_v1020_,
      PhyLayerParameters_v1020 phyLayerParameters_v1020_,
      RF_Parameters_v1020 rf_Parameters_v1020_,
      MeasParameters_v1020 measParameters_v1020_,
      Asn1BitString featureGroupIndRel10_r10_,
      IRAT_ParametersCDMA2000_1XRTT_v1020 interRAT_ParametersCDMA2000_v1020_,
      UE_BasedNetwPerfMeasParameters_r10 ue_BasedNetwPerfMeasParameters_r10_,
      IRAT_ParametersUTRA_TDD_v1020 interRAT_ParametersUTRA_TDD_v1020_,
      UE_EUTRA_Capability_v1060_IEs nonCriticalExtension_
   ) {
      super();
      ue_Category_v1020 = ue_Category_v1020_;
      phyLayerParameters_v1020 = phyLayerParameters_v1020_;
      rf_Parameters_v1020 = rf_Parameters_v1020_;
      measParameters_v1020 = measParameters_v1020_;
      featureGroupIndRel10_r10 = featureGroupIndRel10_r10_;
      interRAT_ParametersCDMA2000_v1020 = interRAT_ParametersCDMA2000_v1020_;
      ue_BasedNetwPerfMeasParameters_r10 = ue_BasedNetwPerfMeasParameters_r10_;
      interRAT_ParametersUTRA_TDD_v1020 = interRAT_ParametersUTRA_TDD_v1020_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public UE_EUTRA_Capability_v1020_IEs (long ue_Category_v1020_,
      PhyLayerParameters_v1020 phyLayerParameters_v1020_,
      RF_Parameters_v1020 rf_Parameters_v1020_,
      MeasParameters_v1020 measParameters_v1020_,
      Asn1BitString featureGroupIndRel10_r10_,
      IRAT_ParametersCDMA2000_1XRTT_v1020 interRAT_ParametersCDMA2000_v1020_,
      UE_BasedNetwPerfMeasParameters_r10 ue_BasedNetwPerfMeasParameters_r10_,
      IRAT_ParametersUTRA_TDD_v1020 interRAT_ParametersUTRA_TDD_v1020_,
      UE_EUTRA_Capability_v1060_IEs nonCriticalExtension_
   ) {
      super();
      ue_Category_v1020 = new Asn1Integer (ue_Category_v1020_);
      phyLayerParameters_v1020 = phyLayerParameters_v1020_;
      rf_Parameters_v1020 = rf_Parameters_v1020_;
      measParameters_v1020 = measParameters_v1020_;
      featureGroupIndRel10_r10 = featureGroupIndRel10_r10_;
      interRAT_ParametersCDMA2000_v1020 = interRAT_ParametersCDMA2000_v1020_;
      ue_BasedNetwPerfMeasParameters_r10 = ue_BasedNetwPerfMeasParameters_r10_;
      interRAT_ParametersUTRA_TDD_v1020 = interRAT_ParametersUTRA_TDD_v1020_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      ue_Category_v1020 = null;
      phyLayerParameters_v1020 = null;
      rf_Parameters_v1020 = null;
      measParameters_v1020 = null;
      featureGroupIndRel10_r10 = null;
      interRAT_ParametersCDMA2000_v1020 = null;
      ue_BasedNetwPerfMeasParameters_r10 = null;
      interRAT_ParametersUTRA_TDD_v1020 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 9; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ue_Category_v1020;
         case 1: return phyLayerParameters_v1020;
         case 2: return rf_Parameters_v1020;
         case 3: return measParameters_v1020;
         case 4: return featureGroupIndRel10_r10;
         case 5: return interRAT_ParametersCDMA2000_v1020;
         case 6: return ue_BasedNetwPerfMeasParameters_r10;
         case 7: return interRAT_ParametersUTRA_TDD_v1020;
         case 8: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ue-Category-v1020";
         case 1: return "phyLayerParameters-v1020";
         case 2: return "rf-Parameters-v1020";
         case 3: return "measParameters-v1020";
         case 4: return "featureGroupIndRel10-r10";
         case 5: return "interRAT-ParametersCDMA2000-v1020";
         case 6: return "ue-BasedNetwPerfMeasParameters-r10";
         case 7: return "interRAT-ParametersUTRA-TDD-v1020";
         case 8: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean ue_Category_v1020Present = buffer.decodeBit ("ue_Category_v1020Present");
      boolean phyLayerParameters_v1020Present = buffer.decodeBit ("phyLayerParameters_v1020Present");
      boolean rf_Parameters_v1020Present = buffer.decodeBit ("rf_Parameters_v1020Present");
      boolean measParameters_v1020Present = buffer.decodeBit ("measParameters_v1020Present");
      boolean featureGroupIndRel10_r10Present = buffer.decodeBit ("featureGroupIndRel10_r10Present");
      boolean interRAT_ParametersCDMA2000_v1020Present = buffer.decodeBit ("interRAT_ParametersCDMA2000_v1020Present");
      boolean ue_BasedNetwPerfMeasParameters_r10Present = buffer.decodeBit ("ue_BasedNetwPerfMeasParameters_r10Present");
      boolean interRAT_ParametersUTRA_TDD_v1020Present = buffer.decodeBit ("interRAT_ParametersUTRA_TDD_v1020Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode ue_Category_v1020

      if (ue_Category_v1020Present) {
         buffer.getContext().eventDispatcher.startElement("ue_Category_v1020", -1);

         ue_Category_v1020 = new Asn1Integer();
         ue_Category_v1020.decode (buffer, 6, 8);

         buffer.invokeCharacters(ue_Category_v1020.toString());
         buffer.getContext().eventDispatcher.endElement("ue_Category_v1020", -1);
      }
      else {
         ue_Category_v1020 = null;
      }

      // decode phyLayerParameters_v1020

      if (phyLayerParameters_v1020Present) {
         buffer.getContext().eventDispatcher.startElement("phyLayerParameters_v1020", -1);

         phyLayerParameters_v1020 = new PhyLayerParameters_v1020();
         phyLayerParameters_v1020.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("phyLayerParameters_v1020", -1);
      }
      else {
         phyLayerParameters_v1020 = null;
      }

      // decode rf_Parameters_v1020

      if (rf_Parameters_v1020Present) {
         buffer.getContext().eventDispatcher.startElement("rf_Parameters_v1020", -1);

         rf_Parameters_v1020 = new RF_Parameters_v1020();
         rf_Parameters_v1020.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("rf_Parameters_v1020", -1);
      }
      else {
         rf_Parameters_v1020 = null;
      }

      // decode measParameters_v1020

      if (measParameters_v1020Present) {
         buffer.getContext().eventDispatcher.startElement("measParameters_v1020", -1);

         measParameters_v1020 = new MeasParameters_v1020();
         measParameters_v1020.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measParameters_v1020", -1);
      }
      else {
         measParameters_v1020 = null;
      }

      // decode featureGroupIndRel10_r10

      if (featureGroupIndRel10_r10Present) {
         buffer.getContext().eventDispatcher.startElement("featureGroupIndRel10_r10", -1);

         featureGroupIndRel10_r10 = new Asn1BitString();
         featureGroupIndRel10_r10.decode (buffer, 32, 32);

         buffer.invokeCharacters(featureGroupIndRel10_r10.toString());
         buffer.getContext().eventDispatcher.endElement("featureGroupIndRel10_r10", -1);
      }
      else {
         featureGroupIndRel10_r10 = null;
      }

      // decode interRAT_ParametersCDMA2000_v1020

      if (interRAT_ParametersCDMA2000_v1020Present) {
         buffer.getContext().eventDispatcher.startElement("interRAT_ParametersCDMA2000_v1020", -1);

         interRAT_ParametersCDMA2000_v1020 = new IRAT_ParametersCDMA2000_1XRTT_v1020();
         interRAT_ParametersCDMA2000_v1020.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("interRAT_ParametersCDMA2000_v1020", -1);
      }
      else {
         interRAT_ParametersCDMA2000_v1020 = null;
      }

      // decode ue_BasedNetwPerfMeasParameters_r10

      if (ue_BasedNetwPerfMeasParameters_r10Present) {
         buffer.getContext().eventDispatcher.startElement("ue_BasedNetwPerfMeasParameters_r10", -1);

         ue_BasedNetwPerfMeasParameters_r10 = new UE_BasedNetwPerfMeasParameters_r10();
         ue_BasedNetwPerfMeasParameters_r10.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ue_BasedNetwPerfMeasParameters_r10", -1);
      }
      else {
         ue_BasedNetwPerfMeasParameters_r10 = null;
      }

      // decode interRAT_ParametersUTRA_TDD_v1020

      if (interRAT_ParametersUTRA_TDD_v1020Present) {
         buffer.getContext().eventDispatcher.startElement("interRAT_ParametersUTRA_TDD_v1020", -1);

         interRAT_ParametersUTRA_TDD_v1020 = new IRAT_ParametersUTRA_TDD_v1020();
         interRAT_ParametersUTRA_TDD_v1020.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("interRAT_ParametersUTRA_TDD_v1020", -1);
      }
      else {
         interRAT_ParametersUTRA_TDD_v1020 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new UE_EUTRA_Capability_v1060_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ue_Category_v1020 != null) ue_Category_v1020.print (_sb, "ue_Category_v1020", _level+1);
      if (phyLayerParameters_v1020 != null) phyLayerParameters_v1020.print (_sb, "phyLayerParameters_v1020", _level+1);
      if (rf_Parameters_v1020 != null) rf_Parameters_v1020.print (_sb, "rf_Parameters_v1020", _level+1);
      if (measParameters_v1020 != null) measParameters_v1020.print (_sb, "measParameters_v1020", _level+1);
      if (featureGroupIndRel10_r10 != null) featureGroupIndRel10_r10.print (_sb, "featureGroupIndRel10_r10", _level+1);
      if (interRAT_ParametersCDMA2000_v1020 != null) interRAT_ParametersCDMA2000_v1020.print (_sb, "interRAT_ParametersCDMA2000_v1020", _level+1);
      if (ue_BasedNetwPerfMeasParameters_r10 != null) ue_BasedNetwPerfMeasParameters_r10.print (_sb, "ue_BasedNetwPerfMeasParameters_r10", _level+1);
      if (interRAT_ParametersUTRA_TDD_v1020 != null) interRAT_ParametersUTRA_TDD_v1020.print (_sb, "interRAT_ParametersUTRA_TDD_v1020", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
