/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CQI_ReportPeriodicProcExt_r11_csi_ConfigIndex_r11_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer cqi_pmi_ConfigIndex2_r11;
   public Asn1Integer ri_ConfigIndex2_r11;  // optional

   public CQI_ReportPeriodicProcExt_r11_csi_ConfigIndex_r11_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CQI_ReportPeriodicProcExt_r11_csi_ConfigIndex_r11_setup (
      Asn1Integer cqi_pmi_ConfigIndex2_r11_,
      Asn1Integer ri_ConfigIndex2_r11_
   ) {
      super();
      cqi_pmi_ConfigIndex2_r11 = cqi_pmi_ConfigIndex2_r11_;
      ri_ConfigIndex2_r11 = ri_ConfigIndex2_r11_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public CQI_ReportPeriodicProcExt_r11_csi_ConfigIndex_r11_setup (
      Asn1Integer cqi_pmi_ConfigIndex2_r11_
   ) {
      super();
      cqi_pmi_ConfigIndex2_r11 = cqi_pmi_ConfigIndex2_r11_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CQI_ReportPeriodicProcExt_r11_csi_ConfigIndex_r11_setup (long cqi_pmi_ConfigIndex2_r11_,
      long ri_ConfigIndex2_r11_
   ) {
      super();
      cqi_pmi_ConfigIndex2_r11 = new Asn1Integer (cqi_pmi_ConfigIndex2_r11_);
      ri_ConfigIndex2_r11 = new Asn1Integer (ri_ConfigIndex2_r11_);
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public CQI_ReportPeriodicProcExt_r11_csi_ConfigIndex_r11_setup (
      long cqi_pmi_ConfigIndex2_r11_
   ) {
      super();
      cqi_pmi_ConfigIndex2_r11 = new Asn1Integer (cqi_pmi_ConfigIndex2_r11_);
   }

   public void init () {
      cqi_pmi_ConfigIndex2_r11 = null;
      ri_ConfigIndex2_r11 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return cqi_pmi_ConfigIndex2_r11;
         case 1: return ri_ConfigIndex2_r11;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "cqi-pmi-ConfigIndex2-r11";
         case 1: return "ri-ConfigIndex2-r11";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean ri_ConfigIndex2_r11Present = buffer.decodeBit ("ri_ConfigIndex2_r11Present");

      // decode cqi_pmi_ConfigIndex2_r11

      buffer.getContext().eventDispatcher.startElement("cqi_pmi_ConfigIndex2_r11", -1);

      cqi_pmi_ConfigIndex2_r11 = new Asn1Integer();
      cqi_pmi_ConfigIndex2_r11.decode (buffer, 0, 1023);

      buffer.invokeCharacters(cqi_pmi_ConfigIndex2_r11.toString());
      buffer.getContext().eventDispatcher.endElement("cqi_pmi_ConfigIndex2_r11", -1);

      // decode ri_ConfigIndex2_r11

      if (ri_ConfigIndex2_r11Present) {
         buffer.getContext().eventDispatcher.startElement("ri_ConfigIndex2_r11", -1);

         ri_ConfigIndex2_r11 = new Asn1Integer();
         ri_ConfigIndex2_r11.decode (buffer, 0, 1023);

         buffer.invokeCharacters(ri_ConfigIndex2_r11.toString());
         buffer.getContext().eventDispatcher.endElement("ri_ConfigIndex2_r11", -1);
      }
      else {
         ri_ConfigIndex2_r11 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (cqi_pmi_ConfigIndex2_r11 != null) cqi_pmi_ConfigIndex2_r11.print (_sb, "cqi_pmi_ConfigIndex2_r11", _level+1);
      if (ri_ConfigIndex2_r11 != null) ri_ConfigIndex2_r11.print (_sb, "ri_ConfigIndex2_r11", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
