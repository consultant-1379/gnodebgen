/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CQI_ReportConfigSCell_r10 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CQI-ReportConfigSCell-r10";
   }

   public CQI_ReportModeAperiodic cqi_ReportModeAperiodic_r10 = null;  // optional
   public Asn1Integer nomPDSCH_RS_EPRE_Offset_r10;
   public CQI_ReportPeriodic_r10 cqi_ReportPeriodicSCell_r10;  // optional
   public CQI_ReportConfigSCell_r10_pmi_RI_Report_r10 pmi_RI_Report_r10 = null;  // optional

   public CQI_ReportConfigSCell_r10 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CQI_ReportConfigSCell_r10 (
      CQI_ReportModeAperiodic cqi_ReportModeAperiodic_r10_,
      Asn1Integer nomPDSCH_RS_EPRE_Offset_r10_,
      CQI_ReportPeriodic_r10 cqi_ReportPeriodicSCell_r10_,
      CQI_ReportConfigSCell_r10_pmi_RI_Report_r10 pmi_RI_Report_r10_
   ) {
      super();
      cqi_ReportModeAperiodic_r10 = cqi_ReportModeAperiodic_r10_;
      nomPDSCH_RS_EPRE_Offset_r10 = nomPDSCH_RS_EPRE_Offset_r10_;
      cqi_ReportPeriodicSCell_r10 = cqi_ReportPeriodicSCell_r10_;
      pmi_RI_Report_r10 = pmi_RI_Report_r10_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public CQI_ReportConfigSCell_r10 (
      Asn1Integer nomPDSCH_RS_EPRE_Offset_r10_
   ) {
      super();
      nomPDSCH_RS_EPRE_Offset_r10 = nomPDSCH_RS_EPRE_Offset_r10_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CQI_ReportConfigSCell_r10 (CQI_ReportModeAperiodic cqi_ReportModeAperiodic_r10_,
      long nomPDSCH_RS_EPRE_Offset_r10_,
      CQI_ReportPeriodic_r10 cqi_ReportPeriodicSCell_r10_,
      CQI_ReportConfigSCell_r10_pmi_RI_Report_r10 pmi_RI_Report_r10_
   ) {
      super();
      cqi_ReportModeAperiodic_r10 = cqi_ReportModeAperiodic_r10_;
      nomPDSCH_RS_EPRE_Offset_r10 = new Asn1Integer (nomPDSCH_RS_EPRE_Offset_r10_);
      cqi_ReportPeriodicSCell_r10 = cqi_ReportPeriodicSCell_r10_;
      pmi_RI_Report_r10 = pmi_RI_Report_r10_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public CQI_ReportConfigSCell_r10 (
      long nomPDSCH_RS_EPRE_Offset_r10_
   ) {
      super();
      nomPDSCH_RS_EPRE_Offset_r10 = new Asn1Integer (nomPDSCH_RS_EPRE_Offset_r10_);
   }

   public void init () {
      cqi_ReportModeAperiodic_r10 = null;
      nomPDSCH_RS_EPRE_Offset_r10 = null;
      cqi_ReportPeriodicSCell_r10 = null;
      pmi_RI_Report_r10 = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return cqi_ReportModeAperiodic_r10;
         case 1: return nomPDSCH_RS_EPRE_Offset_r10;
         case 2: return cqi_ReportPeriodicSCell_r10;
         case 3: return pmi_RI_Report_r10;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "cqi-ReportModeAperiodic-r10";
         case 1: return "nomPDSCH-RS-EPRE-Offset-r10";
         case 2: return "cqi-ReportPeriodicSCell-r10";
         case 3: return "pmi-RI-Report-r10";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean cqi_ReportModeAperiodic_r10Present = buffer.decodeBit ("cqi_ReportModeAperiodic_r10Present");
      boolean cqi_ReportPeriodicSCell_r10Present = buffer.decodeBit ("cqi_ReportPeriodicSCell_r10Present");
      boolean pmi_RI_Report_r10Present = buffer.decodeBit ("pmi_RI_Report_r10Present");

      // decode cqi_ReportModeAperiodic_r10

      if (cqi_ReportModeAperiodic_r10Present) {
         buffer.getContext().eventDispatcher.startElement("cqi_ReportModeAperiodic_r10", -1);

         int tval = CQI_ReportModeAperiodic.decodeEnumValue (buffer);
         cqi_ReportModeAperiodic_r10 = CQI_ReportModeAperiodic.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("cqi_ReportModeAperiodic_r10", -1);
      }
      else {
         cqi_ReportModeAperiodic_r10 = null;
      }

      // decode nomPDSCH_RS_EPRE_Offset_r10

      buffer.getContext().eventDispatcher.startElement("nomPDSCH_RS_EPRE_Offset_r10", -1);

      nomPDSCH_RS_EPRE_Offset_r10 = new Asn1Integer();
      nomPDSCH_RS_EPRE_Offset_r10.decode (buffer, -1, 6);

      buffer.invokeCharacters(nomPDSCH_RS_EPRE_Offset_r10.toString());
      buffer.getContext().eventDispatcher.endElement("nomPDSCH_RS_EPRE_Offset_r10", -1);

      // decode cqi_ReportPeriodicSCell_r10

      if (cqi_ReportPeriodicSCell_r10Present) {
         buffer.getContext().eventDispatcher.startElement("cqi_ReportPeriodicSCell_r10", -1);

         cqi_ReportPeriodicSCell_r10 = new CQI_ReportPeriodic_r10();
         cqi_ReportPeriodicSCell_r10.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cqi_ReportPeriodicSCell_r10", -1);
      }
      else {
         cqi_ReportPeriodicSCell_r10 = null;
      }

      // decode pmi_RI_Report_r10

      if (pmi_RI_Report_r10Present) {
         buffer.getContext().eventDispatcher.startElement("pmi_RI_Report_r10", -1);

         int tval = CQI_ReportConfigSCell_r10_pmi_RI_Report_r10.decodeEnumValue (buffer);
         pmi_RI_Report_r10 = CQI_ReportConfigSCell_r10_pmi_RI_Report_r10.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("pmi_RI_Report_r10", -1);
      }
      else {
         pmi_RI_Report_r10 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (cqi_ReportModeAperiodic_r10 != null) cqi_ReportModeAperiodic_r10.print (_sb, "cqi_ReportModeAperiodic_r10", _level+1);
      if (nomPDSCH_RS_EPRE_Offset_r10 != null) nomPDSCH_RS_EPRE_Offset_r10.print (_sb, "nomPDSCH_RS_EPRE_Offset_r10", _level+1);
      if (cqi_ReportPeriodicSCell_r10 != null) cqi_ReportPeriodicSCell_r10.print (_sb, "cqi_ReportPeriodicSCell_r10", _level+1);
      if (pmi_RI_Report_r10 != null) pmi_RI_Report_r10.print (_sb, "pmi_RI_Report_r10", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
