/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class BandParametersSidelinkEUTRA_NR_r16_eutra extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1OctetString bandParametersSidelinkEUTRA1_r16;  // optional
   public Asn1OctetString bandParametersSidelinkEUTRA2_r16;  // optional

   public BandParametersSidelinkEUTRA_NR_r16_eutra () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public BandParametersSidelinkEUTRA_NR_r16_eutra (
      Asn1OctetString bandParametersSidelinkEUTRA1_r16_,
      Asn1OctetString bandParametersSidelinkEUTRA2_r16_
   ) {
      super();
      bandParametersSidelinkEUTRA1_r16 = bandParametersSidelinkEUTRA1_r16_;
      bandParametersSidelinkEUTRA2_r16 = bandParametersSidelinkEUTRA2_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public BandParametersSidelinkEUTRA_NR_r16_eutra (byte[] bandParametersSidelinkEUTRA1_r16_,
      byte[] bandParametersSidelinkEUTRA2_r16_
   ) {
      super();
      bandParametersSidelinkEUTRA1_r16 = new Asn1OctetString (bandParametersSidelinkEUTRA1_r16_);
      bandParametersSidelinkEUTRA2_r16 = new Asn1OctetString (bandParametersSidelinkEUTRA2_r16_);
   }

   public void init () {
      bandParametersSidelinkEUTRA1_r16 = null;
      bandParametersSidelinkEUTRA2_r16 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return bandParametersSidelinkEUTRA1_r16;
         case 1: return bandParametersSidelinkEUTRA2_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "bandParametersSidelinkEUTRA1-r16";
         case 1: return "bandParametersSidelinkEUTRA2-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean bandParametersSidelinkEUTRA1_r16Present = buffer.decodeBit ("bandParametersSidelinkEUTRA1_r16Present");
      boolean bandParametersSidelinkEUTRA2_r16Present = buffer.decodeBit ("bandParametersSidelinkEUTRA2_r16Present");

      // decode bandParametersSidelinkEUTRA1_r16

      if (bandParametersSidelinkEUTRA1_r16Present) {
         buffer.getContext().eventDispatcher.startElement("bandParametersSidelinkEUTRA1_r16", -1);

         bandParametersSidelinkEUTRA1_r16 = new Asn1OctetString();
         bandParametersSidelinkEUTRA1_r16.decode (buffer);

         buffer.invokeCharacters(bandParametersSidelinkEUTRA1_r16.toString());
         buffer.getContext().eventDispatcher.endElement("bandParametersSidelinkEUTRA1_r16", -1);
      }
      else {
         bandParametersSidelinkEUTRA1_r16 = null;
      }

      // decode bandParametersSidelinkEUTRA2_r16

      if (bandParametersSidelinkEUTRA2_r16Present) {
         buffer.getContext().eventDispatcher.startElement("bandParametersSidelinkEUTRA2_r16", -1);

         bandParametersSidelinkEUTRA2_r16 = new Asn1OctetString();
         bandParametersSidelinkEUTRA2_r16.decode (buffer);

         buffer.invokeCharacters(bandParametersSidelinkEUTRA2_r16.toString());
         buffer.getContext().eventDispatcher.endElement("bandParametersSidelinkEUTRA2_r16", -1);
      }
      else {
         bandParametersSidelinkEUTRA2_r16 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (bandParametersSidelinkEUTRA1_r16 != null) bandParametersSidelinkEUTRA1_r16.print (_sb, "bandParametersSidelinkEUTRA1_r16", _level+1);
      if (bandParametersSidelinkEUTRA2_r16 != null) bandParametersSidelinkEUTRA2_r16.print (_sb, "bandParametersSidelinkEUTRA2_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
