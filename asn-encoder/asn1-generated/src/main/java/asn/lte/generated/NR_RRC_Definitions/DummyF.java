/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class DummyF extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "DummyF";
   }

   public Asn1Integer maxNumberPeriodicCSI_ReportPerBWP;
   public Asn1Integer maxNumberAperiodicCSI_ReportPerBWP;
   public Asn1Integer maxNumberSemiPersistentCSI_ReportPerBWP;
   public Asn1Integer simultaneousCSI_ReportsAllCC;

   public DummyF () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public DummyF (
      Asn1Integer maxNumberPeriodicCSI_ReportPerBWP_,
      Asn1Integer maxNumberAperiodicCSI_ReportPerBWP_,
      Asn1Integer maxNumberSemiPersistentCSI_ReportPerBWP_,
      Asn1Integer simultaneousCSI_ReportsAllCC_
   ) {
      super();
      maxNumberPeriodicCSI_ReportPerBWP = maxNumberPeriodicCSI_ReportPerBWP_;
      maxNumberAperiodicCSI_ReportPerBWP = maxNumberAperiodicCSI_ReportPerBWP_;
      maxNumberSemiPersistentCSI_ReportPerBWP = maxNumberSemiPersistentCSI_ReportPerBWP_;
      simultaneousCSI_ReportsAllCC = simultaneousCSI_ReportsAllCC_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public DummyF (long maxNumberPeriodicCSI_ReportPerBWP_,
      long maxNumberAperiodicCSI_ReportPerBWP_,
      long maxNumberSemiPersistentCSI_ReportPerBWP_,
      long simultaneousCSI_ReportsAllCC_
   ) {
      super();
      maxNumberPeriodicCSI_ReportPerBWP = new Asn1Integer (maxNumberPeriodicCSI_ReportPerBWP_);
      maxNumberAperiodicCSI_ReportPerBWP = new Asn1Integer (maxNumberAperiodicCSI_ReportPerBWP_);
      maxNumberSemiPersistentCSI_ReportPerBWP = new Asn1Integer (maxNumberSemiPersistentCSI_ReportPerBWP_);
      simultaneousCSI_ReportsAllCC = new Asn1Integer (simultaneousCSI_ReportsAllCC_);
   }

   public void init () {
      maxNumberPeriodicCSI_ReportPerBWP = null;
      maxNumberAperiodicCSI_ReportPerBWP = null;
      maxNumberSemiPersistentCSI_ReportPerBWP = null;
      simultaneousCSI_ReportsAllCC = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return maxNumberPeriodicCSI_ReportPerBWP;
         case 1: return maxNumberAperiodicCSI_ReportPerBWP;
         case 2: return maxNumberSemiPersistentCSI_ReportPerBWP;
         case 3: return simultaneousCSI_ReportsAllCC;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "maxNumberPeriodicCSI-ReportPerBWP";
         case 1: return "maxNumberAperiodicCSI-ReportPerBWP";
         case 2: return "maxNumberSemiPersistentCSI-ReportPerBWP";
         case 3: return "simultaneousCSI-ReportsAllCC";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode maxNumberPeriodicCSI_ReportPerBWP

      buffer.getContext().eventDispatcher.startElement("maxNumberPeriodicCSI_ReportPerBWP", -1);

      maxNumberPeriodicCSI_ReportPerBWP = new Asn1Integer();
      maxNumberPeriodicCSI_ReportPerBWP.decode (buffer, 1, 4);

      buffer.invokeCharacters(maxNumberPeriodicCSI_ReportPerBWP.toString());
      buffer.getContext().eventDispatcher.endElement("maxNumberPeriodicCSI_ReportPerBWP", -1);

      // decode maxNumberAperiodicCSI_ReportPerBWP

      buffer.getContext().eventDispatcher.startElement("maxNumberAperiodicCSI_ReportPerBWP", -1);

      maxNumberAperiodicCSI_ReportPerBWP = new Asn1Integer();
      maxNumberAperiodicCSI_ReportPerBWP.decode (buffer, 1, 4);

      buffer.invokeCharacters(maxNumberAperiodicCSI_ReportPerBWP.toString());
      buffer.getContext().eventDispatcher.endElement("maxNumberAperiodicCSI_ReportPerBWP", -1);

      // decode maxNumberSemiPersistentCSI_ReportPerBWP

      buffer.getContext().eventDispatcher.startElement("maxNumberSemiPersistentCSI_ReportPerBWP", -1);

      maxNumberSemiPersistentCSI_ReportPerBWP = new Asn1Integer();
      maxNumberSemiPersistentCSI_ReportPerBWP.decode (buffer, 0, 4);

      buffer.invokeCharacters(maxNumberSemiPersistentCSI_ReportPerBWP.toString());
      buffer.getContext().eventDispatcher.endElement("maxNumberSemiPersistentCSI_ReportPerBWP", -1);

      // decode simultaneousCSI_ReportsAllCC

      buffer.getContext().eventDispatcher.startElement("simultaneousCSI_ReportsAllCC", -1);

      simultaneousCSI_ReportsAllCC = new Asn1Integer();
      simultaneousCSI_ReportsAllCC.decode (buffer, 5, 32);

      buffer.invokeCharacters(simultaneousCSI_ReportsAllCC.toString());
      buffer.getContext().eventDispatcher.endElement("simultaneousCSI_ReportsAllCC", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (maxNumberPeriodicCSI_ReportPerBWP != null) maxNumberPeriodicCSI_ReportPerBWP.print (_sb, "maxNumberPeriodicCSI_ReportPerBWP", _level+1);
      if (maxNumberAperiodicCSI_ReportPerBWP != null) maxNumberAperiodicCSI_ReportPerBWP.print (_sb, "maxNumberAperiodicCSI_ReportPerBWP", _level+1);
      if (maxNumberSemiPersistentCSI_ReportPerBWP != null) maxNumberSemiPersistentCSI_ReportPerBWP.print (_sb, "maxNumberSemiPersistentCSI_ReportPerBWP", _level+1);
      if (simultaneousCSI_ReportsAllCC != null) simultaneousCSI_ReportsAllCC.print (_sb, "simultaneousCSI_ReportsAllCC", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
