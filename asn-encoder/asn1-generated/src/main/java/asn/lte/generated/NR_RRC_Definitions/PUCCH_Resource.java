/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PUCCH_Resource extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PUCCH-Resource";
   }

   public PUCCH_ResourceId pucch_ResourceId;
   public PRB_Id startingPRB;
   public PUCCH_Resource_intraSlotFrequencyHopping intraSlotFrequencyHopping = null;  // optional
   public PRB_Id secondHopPRB;  // optional
   public PUCCH_Resource_format format;

   public PUCCH_Resource () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PUCCH_Resource (
      PUCCH_ResourceId pucch_ResourceId_,
      PRB_Id startingPRB_,
      PUCCH_Resource_intraSlotFrequencyHopping intraSlotFrequencyHopping_,
      PRB_Id secondHopPRB_,
      PUCCH_Resource_format format_
   ) {
      super();
      pucch_ResourceId = pucch_ResourceId_;
      startingPRB = startingPRB_;
      intraSlotFrequencyHopping = intraSlotFrequencyHopping_;
      secondHopPRB = secondHopPRB_;
      format = format_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public PUCCH_Resource (
      PUCCH_ResourceId pucch_ResourceId_,
      PRB_Id startingPRB_,
      PUCCH_Resource_format format_
   ) {
      super();
      pucch_ResourceId = pucch_ResourceId_;
      startingPRB = startingPRB_;
      format = format_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PUCCH_Resource (long pucch_ResourceId_,
      long startingPRB_,
      PUCCH_Resource_intraSlotFrequencyHopping intraSlotFrequencyHopping_,
      long secondHopPRB_,
      PUCCH_Resource_format format_
   ) {
      super();
      pucch_ResourceId = new PUCCH_ResourceId (pucch_ResourceId_);
      startingPRB = new PRB_Id (startingPRB_);
      intraSlotFrequencyHopping = intraSlotFrequencyHopping_;
      secondHopPRB = new PRB_Id (secondHopPRB_);
      format = format_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public PUCCH_Resource (
      long pucch_ResourceId_,
      long startingPRB_,
      PUCCH_Resource_format format_
   ) {
      super();
      pucch_ResourceId = new PUCCH_ResourceId (pucch_ResourceId_);
      startingPRB = new PRB_Id (startingPRB_);
      format = format_;
   }

   public void init () {
      pucch_ResourceId = null;
      startingPRB = null;
      intraSlotFrequencyHopping = null;
      secondHopPRB = null;
      format = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return pucch_ResourceId;
         case 1: return startingPRB;
         case 2: return intraSlotFrequencyHopping;
         case 3: return secondHopPRB;
         case 4: return format;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "pucch-ResourceId";
         case 1: return "startingPRB";
         case 2: return "intraSlotFrequencyHopping";
         case 3: return "secondHopPRB";
         case 4: return "format";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean intraSlotFrequencyHoppingPresent = buffer.decodeBit ("intraSlotFrequencyHoppingPresent");
      boolean secondHopPRBPresent = buffer.decodeBit ("secondHopPRBPresent");

      // decode pucch_ResourceId

      buffer.getContext().eventDispatcher.startElement("pucch_ResourceId", -1);

      pucch_ResourceId = new PUCCH_ResourceId();
      pucch_ResourceId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("pucch_ResourceId", -1);

      // decode startingPRB

      buffer.getContext().eventDispatcher.startElement("startingPRB", -1);

      startingPRB = new PRB_Id();
      startingPRB.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("startingPRB", -1);

      // decode intraSlotFrequencyHopping

      if (intraSlotFrequencyHoppingPresent) {
         buffer.getContext().eventDispatcher.startElement("intraSlotFrequencyHopping", -1);

         int tval = PUCCH_Resource_intraSlotFrequencyHopping.decodeEnumValue (buffer);
         intraSlotFrequencyHopping = PUCCH_Resource_intraSlotFrequencyHopping.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("intraSlotFrequencyHopping", -1);
      }
      else {
         intraSlotFrequencyHopping = null;
      }

      // decode secondHopPRB

      if (secondHopPRBPresent) {
         buffer.getContext().eventDispatcher.startElement("secondHopPRB", -1);

         secondHopPRB = new PRB_Id();
         secondHopPRB.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("secondHopPRB", -1);
      }
      else {
         secondHopPRB = null;
      }

      // decode format

      buffer.getContext().eventDispatcher.startElement("format", -1);

      format = new PUCCH_Resource_format();
      format.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("format", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (pucch_ResourceId != null) pucch_ResourceId.print (_sb, "pucch_ResourceId", _level+1);
      if (startingPRB != null) startingPRB.print (_sb, "startingPRB", _level+1);
      if (intraSlotFrequencyHopping != null) intraSlotFrequencyHopping.print (_sb, "intraSlotFrequencyHopping", _level+1);
      if (secondHopPRB != null) secondHopPRB.print (_sb, "secondHopPRB", _level+1);
      if (format != null) format.print (_sb, "format", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
