/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class TPC_PDCCH_Config_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1BitString tpc_RNTI;
   public TPC_Index tpc_Index;

   public TPC_PDCCH_Config_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public TPC_PDCCH_Config_setup (
      Asn1BitString tpc_RNTI_,
      TPC_Index tpc_Index_
   ) {
      super();
      tpc_RNTI = tpc_RNTI_;
      tpc_Index = tpc_Index_;
   }

   public void init () {
      tpc_RNTI = null;
      tpc_Index = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return tpc_RNTI;
         case 1: return tpc_Index;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "tpc-RNTI";
         case 1: return "tpc-Index";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode tpc_RNTI

      buffer.getContext().eventDispatcher.startElement("tpc_RNTI", -1);

      tpc_RNTI = new Asn1BitString();
      tpc_RNTI.decode (buffer, 16, 16);

      buffer.invokeCharacters(tpc_RNTI.toString());
      buffer.getContext().eventDispatcher.endElement("tpc_RNTI", -1);

      // decode tpc_Index

      buffer.getContext().eventDispatcher.startElement("tpc_Index", -1);

      tpc_Index = new TPC_Index();
      tpc_Index.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("tpc_Index", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (tpc_RNTI != null) tpc_RNTI.print (_sb, "tpc_RNTI", _level+1);
      if (tpc_Index != null) tpc_Index.print (_sb, "tpc_Index", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
