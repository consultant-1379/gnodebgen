/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class INT_ConfigurationPerServingCell extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "INT-ConfigurationPerServingCell";
   }

   public ServCellIndex servingCellId;
   public Asn1Integer positionInDCI;

   public INT_ConfigurationPerServingCell () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public INT_ConfigurationPerServingCell (
      ServCellIndex servingCellId_,
      Asn1Integer positionInDCI_
   ) {
      super();
      servingCellId = servingCellId_;
      positionInDCI = positionInDCI_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public INT_ConfigurationPerServingCell (long servingCellId_,
      long positionInDCI_
   ) {
      super();
      servingCellId = new ServCellIndex (servingCellId_);
      positionInDCI = new Asn1Integer (positionInDCI_);
   }

   public void init () {
      servingCellId = null;
      positionInDCI = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return servingCellId;
         case 1: return positionInDCI;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "servingCellId";
         case 1: return "positionInDCI";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode servingCellId

      buffer.getContext().eventDispatcher.startElement("servingCellId", -1);

      servingCellId = new ServCellIndex();
      servingCellId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("servingCellId", -1);

      // decode positionInDCI

      buffer.getContext().eventDispatcher.startElement("positionInDCI", -1);

      positionInDCI = new Asn1Integer();
      positionInDCI.decode (buffer, 0, 125);

      buffer.invokeCharacters(positionInDCI.toString());
      buffer.getContext().eventDispatcher.endElement("positionInDCI", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (servingCellId != null) servingCellId.print (_sb, "servingCellId", _level+1);
      if (positionInDCI != null) positionInDCI.print (_sb, "positionInDCI", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
