/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformationBlockType22_NB_r14 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SystemInformationBlockType22-NB-r14";
   }

   public DL_ConfigCommonList_NB_r14 dl_ConfigList_r14;  // optional
   public UL_ConfigCommonList_NB_r14 ul_ConfigList_r14;  // optional
   public PagingWeight_NB_r14 pagingWeightAnchor_r14 = null;  // optional
   public NPRACH_ProbabilityAnchorList_NB_r14 nprach_ProbabilityAnchorList_r14;  // optional
   public Asn1OctetString lateNonCriticalExtension;  // optional
   public boolean mV2ExtPresent;
   public SystemInformationBlockType22_NB_r14_mixedOperationModeConfig_r15 mixedOperationModeConfig_r15;  // optional
   public UL_ConfigCommonListTDD_NB_r15 ul_ConfigList_r15;  // optional
   public Asn1OpenExt extElem1;

   public SystemInformationBlockType22_NB_r14 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SystemInformationBlockType22_NB_r14 (
      DL_ConfigCommonList_NB_r14 dl_ConfigList_r14_,
      UL_ConfigCommonList_NB_r14 ul_ConfigList_r14_,
      PagingWeight_NB_r14 pagingWeightAnchor_r14_,
      NPRACH_ProbabilityAnchorList_NB_r14 nprach_ProbabilityAnchorList_r14_,
      Asn1OctetString lateNonCriticalExtension_,
      SystemInformationBlockType22_NB_r14_mixedOperationModeConfig_r15 mixedOperationModeConfig_r15_,
      UL_ConfigCommonListTDD_NB_r15 ul_ConfigList_r15_
   ) {
      super();
      dl_ConfigList_r14 = dl_ConfigList_r14_;
      ul_ConfigList_r14 = ul_ConfigList_r14_;
      pagingWeightAnchor_r14 = pagingWeightAnchor_r14_;
      nprach_ProbabilityAnchorList_r14 = nprach_ProbabilityAnchorList_r14_;
      lateNonCriticalExtension = lateNonCriticalExtension_;
      mixedOperationModeConfig_r15 = mixedOperationModeConfig_r15_;
      ul_ConfigList_r15 = ul_ConfigList_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SystemInformationBlockType22_NB_r14 (DL_ConfigCommonList_NB_r14 dl_ConfigList_r14_,
      UL_ConfigCommonList_NB_r14 ul_ConfigList_r14_,
      PagingWeight_NB_r14 pagingWeightAnchor_r14_,
      NPRACH_ProbabilityAnchorList_NB_r14 nprach_ProbabilityAnchorList_r14_,
      byte[] lateNonCriticalExtension_,
      SystemInformationBlockType22_NB_r14_mixedOperationModeConfig_r15 mixedOperationModeConfig_r15_,
      UL_ConfigCommonListTDD_NB_r15 ul_ConfigList_r15_
   ) {
      super();
      dl_ConfigList_r14 = dl_ConfigList_r14_;
      ul_ConfigList_r14 = ul_ConfigList_r14_;
      pagingWeightAnchor_r14 = pagingWeightAnchor_r14_;
      nprach_ProbabilityAnchorList_r14 = nprach_ProbabilityAnchorList_r14_;
      lateNonCriticalExtension = new Asn1OctetString (lateNonCriticalExtension_);
      mixedOperationModeConfig_r15 = mixedOperationModeConfig_r15_;
      ul_ConfigList_r15 = ul_ConfigList_r15_;
   }

   public void init () {
      dl_ConfigList_r14 = null;
      ul_ConfigList_r14 = null;
      pagingWeightAnchor_r14 = null;
      nprach_ProbabilityAnchorList_r14 = null;
      lateNonCriticalExtension = null;
      mixedOperationModeConfig_r15 = null;
      ul_ConfigList_r15 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 8; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return dl_ConfigList_r14;
         case 1: return ul_ConfigList_r14;
         case 2: return pagingWeightAnchor_r14;
         case 3: return nprach_ProbabilityAnchorList_r14;
         case 4: return lateNonCriticalExtension;
         case 5: return mixedOperationModeConfig_r15;
         case 6: return ul_ConfigList_r15;
         case 7: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "dl-ConfigList-r14";
         case 1: return "ul-ConfigList-r14";
         case 2: return "pagingWeightAnchor-r14";
         case 3: return "nprach-ProbabilityAnchorList-r14";
         case 4: return "lateNonCriticalExtension";
         case 5: return "mixedOperationModeConfig-r15";
         case 6: return "ul-ConfigList-r15";
         case 7: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean dl_ConfigList_r14Present = buffer.decodeBit ("dl_ConfigList_r14Present");
      boolean ul_ConfigList_r14Present = buffer.decodeBit ("ul_ConfigList_r14Present");
      boolean pagingWeightAnchor_r14Present = buffer.decodeBit ("pagingWeightAnchor_r14Present");
      boolean nprach_ProbabilityAnchorList_r14Present = buffer.decodeBit ("nprach_ProbabilityAnchorList_r14Present");
      boolean lateNonCriticalExtensionPresent = buffer.decodeBit ("lateNonCriticalExtensionPresent");

      // decode dl_ConfigList_r14

      if (dl_ConfigList_r14Present) {
         buffer.getContext().eventDispatcher.startElement("dl_ConfigList_r14", -1);

         dl_ConfigList_r14 = new DL_ConfigCommonList_NB_r14();
         dl_ConfigList_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("dl_ConfigList_r14", -1);
      }
      else {
         dl_ConfigList_r14 = null;
      }

      // decode ul_ConfigList_r14

      if (ul_ConfigList_r14Present) {
         buffer.getContext().eventDispatcher.startElement("ul_ConfigList_r14", -1);

         ul_ConfigList_r14 = new UL_ConfigCommonList_NB_r14();
         ul_ConfigList_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ul_ConfigList_r14", -1);
      }
      else {
         ul_ConfigList_r14 = null;
      }

      // decode pagingWeightAnchor_r14

      if (pagingWeightAnchor_r14Present) {
         buffer.getContext().eventDispatcher.startElement("pagingWeightAnchor_r14", -1);

         int tval = PagingWeight_NB_r14.decodeEnumValue (buffer);
         pagingWeightAnchor_r14 = PagingWeight_NB_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("pagingWeightAnchor_r14", -1);
      }
      else {
         pagingWeightAnchor_r14 = null;
      }

      // decode nprach_ProbabilityAnchorList_r14

      if (nprach_ProbabilityAnchorList_r14Present) {
         buffer.getContext().eventDispatcher.startElement("nprach_ProbabilityAnchorList_r14", -1);

         nprach_ProbabilityAnchorList_r14 = new NPRACH_ProbabilityAnchorList_NB_r14();
         nprach_ProbabilityAnchorList_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nprach_ProbabilityAnchorList_r14", -1);
      }
      else {
         nprach_ProbabilityAnchorList_r14 = null;
      }

      // decode lateNonCriticalExtension

      if (lateNonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("lateNonCriticalExtension", -1);

         lateNonCriticalExtension = new Asn1OctetString();
         lateNonCriticalExtension.decode (buffer);

         buffer.invokeCharacters(lateNonCriticalExtension.toString());
         buffer.getContext().eventDispatcher.endElement("lateNonCriticalExtension", -1);
      }
      else {
         lateNonCriticalExtension = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean mixedOperationModeConfig_r15Present = buffer.decodeBit ("mixedOperationModeConfig_r15Present");

            boolean ul_ConfigList_r15Present = buffer.decodeBit ("ul_ConfigList_r15Present");

            // decode mixedOperationModeConfig_r15

            if (mixedOperationModeConfig_r15Present) {
               buffer.getContext().eventDispatcher.startElement("mixedOperationModeConfig_r15", -1);

               mixedOperationModeConfig_r15 = new SystemInformationBlockType22_NB_r14_mixedOperationModeConfig_r15();
               mixedOperationModeConfig_r15.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("mixedOperationModeConfig_r15", -1);
            }
            else {
               mixedOperationModeConfig_r15 = null;
            }

            // decode ul_ConfigList_r15

            if (ul_ConfigList_r15Present) {
               buffer.getContext().eventDispatcher.startElement("ul_ConfigList_r15", -1);

               ul_ConfigList_r15 = new UL_ConfigCommonListTDD_NB_r15();
               ul_ConfigList_r15.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("ul_ConfigList_r15", -1);
            }
            else {
               ul_ConfigList_r15 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (dl_ConfigList_r14 != null) dl_ConfigList_r14.print (_sb, "dl_ConfigList_r14", _level+1);
      if (ul_ConfigList_r14 != null) ul_ConfigList_r14.print (_sb, "ul_ConfigList_r14", _level+1);
      if (pagingWeightAnchor_r14 != null) pagingWeightAnchor_r14.print (_sb, "pagingWeightAnchor_r14", _level+1);
      if (nprach_ProbabilityAnchorList_r14 != null) nprach_ProbabilityAnchorList_r14.print (_sb, "nprach_ProbabilityAnchorList_r14", _level+1);
      if (lateNonCriticalExtension != null) lateNonCriticalExtension.print (_sb, "lateNonCriticalExtension", _level+1);
      if (mixedOperationModeConfig_r15 != null) mixedOperationModeConfig_r15.print (_sb, "mixedOperationModeConfig_r15", _level+1);
      if (ul_ConfigList_r15 != null) ul_ConfigList_r15.print (_sb, "ul_ConfigList_r15", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
