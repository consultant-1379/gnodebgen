/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_Sidelink_Preconf;

import com.objsys.asn1j.runtime.*;

public class SL_Preconfiguration_r12_preconfigComm_v1310 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_Sidelink_PreconfRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public SL_PreconfigCommRxPoolList_r13 commRxPoolList_r13;
   public SL_PreconfigCommTxPoolList_r13 commTxPoolList_r13;  // optional

   public SL_Preconfiguration_r12_preconfigComm_v1310 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_Preconfiguration_r12_preconfigComm_v1310 (
      SL_PreconfigCommRxPoolList_r13 commRxPoolList_r13_,
      SL_PreconfigCommTxPoolList_r13 commTxPoolList_r13_
   ) {
      super();
      commRxPoolList_r13 = commRxPoolList_r13_;
      commTxPoolList_r13 = commTxPoolList_r13_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SL_Preconfiguration_r12_preconfigComm_v1310 (
      SL_PreconfigCommRxPoolList_r13 commRxPoolList_r13_
   ) {
      super();
      commRxPoolList_r13 = commRxPoolList_r13_;
   }

   public void init () {
      commRxPoolList_r13 = null;
      commTxPoolList_r13 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return commRxPoolList_r13;
         case 1: return commTxPoolList_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "commRxPoolList-r13";
         case 1: return "commTxPoolList-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean commTxPoolList_r13Present = buffer.decodeBit ("commTxPoolList_r13Present");

      // decode commRxPoolList_r13

      buffer.getContext().eventDispatcher.startElement("commRxPoolList_r13", -1);

      commRxPoolList_r13 = new SL_PreconfigCommRxPoolList_r13();
      commRxPoolList_r13.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("commRxPoolList_r13", -1);

      // decode commTxPoolList_r13

      if (commTxPoolList_r13Present) {
         buffer.getContext().eventDispatcher.startElement("commTxPoolList_r13", -1);

         commTxPoolList_r13 = new SL_PreconfigCommTxPoolList_r13();
         commTxPoolList_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("commTxPoolList_r13", -1);
      }
      else {
         commTxPoolList_r13 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (commRxPoolList_r13 != null) commRxPoolList_r13.print (_sb, "commRxPoolList_r13", _level+1);
      if (commTxPoolList_r13 != null) commTxPoolList_r13.print (_sb, "commTxPoolList_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
