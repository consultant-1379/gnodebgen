/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.M3AP_IEs;

import com.objsys.asn1j.runtime.*;

public class TimeToWait extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_M3AP_IEsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "TimeToWait";
   }

   // Integer constants for switch-case
   public static final int _V1S = 0;
   public static final int _V2S = 1;
   public static final int _V5S = 2;
   public static final int _V10S = 3;
   public static final int _V20S = 4;
   public static final int _V60S = 5;

   // Singleton instances of TimeToWait
   protected static final TimeToWait _v1s = new TimeToWait(0);
   protected static final TimeToWait _v2s = new TimeToWait(1);
   protected static final TimeToWait _v5s = new TimeToWait(2);
   protected static final TimeToWait _v10s = new TimeToWait(3);
   protected static final TimeToWait _v20s = new TimeToWait(4);
   protected static final TimeToWait _v60s = new TimeToWait(5);
   private static TimeToWait __undefined = new TimeToWait(-999);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    */
   protected TimeToWait (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for v1s.
    */
   public static TimeToWait v1s() {
      return _v1s;
   }

   /**
    * Singleton accessor method for v2s.
    */
   public static TimeToWait v2s() {
      return _v2s;
   }

   /**
    * Singleton accessor method for v5s.
    */
   public static TimeToWait v5s() {
      return _v5s;
   }

   /**
    * Singleton accessor method for v10s.
    */
   public static TimeToWait v10s() {
      return _v10s;
   }

   /**
    * Singleton accessor method for v20s.
    */
   public static TimeToWait v20s() {
      return _v20s;
   }

   /**
    * Singleton accessor method for v60s.
    */
   public static TimeToWait v60s() {
      return _v60s;
   }

   /** Undefined value. */
   protected static TimeToWait __undefined_() { return __undefined; }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return TimeToWait.valueOf( TimeToWait.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static TimeToWait valueOf (int _value)
   {
      switch ((int)_value) {
         case 0: return v1s();
         case 1: return v2s();
         case 2: return v5s();
         case 3: return v10s();
         case 4: return v20s();
         case 5: return v60s();
         default: return __undefined_();
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      boolean extbit = buffer.decodeBit ("extbit");

      if (extbit) {
         ui = buffer.decodeSmallNonNegWholeNumber ();

         return 0x7fffffff;
      }
      else {
         ui = (int) buffer.decodeConsWholeNumber (6);

         switch (ui) {
            case 0: ret =  0; break;
            case 1: ret =  1; break;
            case 2: ret =  2; break;
            case 3: ret =  3; break;
            case 4: ret =  4; break;
            case 5: ret =  5; break;
            default: throw new Asn1InvalidEnumException (ui);
         }
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (TimeToWait.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("v1s");
         case 1: return ("v2s");
         case 2: return ("v5s");
         case 3: return ("v10s");
         case 4: return ("v20s");
         case 5: return ("v60s");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
