/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SRS_ResourceSet_srs_PowerControlAdjustmentStates extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _SAMEASFCI2 = 0;
   public static final int _SEPARATECLOSEDLOOP = 1;

   // Singleton instances of SRS_ResourceSet_srs_PowerControlAdjustmentStates
   protected static final SRS_ResourceSet_srs_PowerControlAdjustmentStates _sameAsFci2 = new SRS_ResourceSet_srs_PowerControlAdjustmentStates(0);
   protected static final SRS_ResourceSet_srs_PowerControlAdjustmentStates _separateClosedLoop = new SRS_ResourceSet_srs_PowerControlAdjustmentStates(1);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    */
   protected SRS_ResourceSet_srs_PowerControlAdjustmentStates (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for sameAsFci2.
    */
   public static SRS_ResourceSet_srs_PowerControlAdjustmentStates sameAsFci2() {
      return _sameAsFci2;
   }

   /**
    * Singleton accessor method for separateClosedLoop.
    */
   public static SRS_ResourceSet_srs_PowerControlAdjustmentStates separateClosedLoop() {
      return _separateClosedLoop;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return SRS_ResourceSet_srs_PowerControlAdjustmentStates.valueOf( SRS_ResourceSet_srs_PowerControlAdjustmentStates.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static SRS_ResourceSet_srs_PowerControlAdjustmentStates valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return sameAsFci2();
         case 1: return separateClosedLoop();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (2);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (SRS_ResourceSet_srs_PowerControlAdjustmentStates.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("sameAsFci2");
         case 1: return ("separateClosedLoop");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
