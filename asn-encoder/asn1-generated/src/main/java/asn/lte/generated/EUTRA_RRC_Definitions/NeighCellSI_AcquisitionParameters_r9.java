/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class NeighCellSI_AcquisitionParameters_r9 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "NeighCellSI-AcquisitionParameters-r9";
   }

   public NeighCellSI_AcquisitionParameters_r9_intraFreqSI_AcquisitionForHO_r9 intraFreqSI_AcquisitionForHO_r9 = null;  // optional
   public NeighCellSI_AcquisitionParameters_r9_interFreqSI_AcquisitionForHO_r9 interFreqSI_AcquisitionForHO_r9 = null;  // optional
   public NeighCellSI_AcquisitionParameters_r9_utran_SI_AcquisitionForHO_r9 utran_SI_AcquisitionForHO_r9 = null;  // optional

   public NeighCellSI_AcquisitionParameters_r9 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public NeighCellSI_AcquisitionParameters_r9 (
      NeighCellSI_AcquisitionParameters_r9_intraFreqSI_AcquisitionForHO_r9 intraFreqSI_AcquisitionForHO_r9_,
      NeighCellSI_AcquisitionParameters_r9_interFreqSI_AcquisitionForHO_r9 interFreqSI_AcquisitionForHO_r9_,
      NeighCellSI_AcquisitionParameters_r9_utran_SI_AcquisitionForHO_r9 utran_SI_AcquisitionForHO_r9_
   ) {
      super();
      intraFreqSI_AcquisitionForHO_r9 = intraFreqSI_AcquisitionForHO_r9_;
      interFreqSI_AcquisitionForHO_r9 = interFreqSI_AcquisitionForHO_r9_;
      utran_SI_AcquisitionForHO_r9 = utran_SI_AcquisitionForHO_r9_;
   }

   public void init () {
      intraFreqSI_AcquisitionForHO_r9 = null;
      interFreqSI_AcquisitionForHO_r9 = null;
      utran_SI_AcquisitionForHO_r9 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return intraFreqSI_AcquisitionForHO_r9;
         case 1: return interFreqSI_AcquisitionForHO_r9;
         case 2: return utran_SI_AcquisitionForHO_r9;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "intraFreqSI-AcquisitionForHO-r9";
         case 1: return "interFreqSI-AcquisitionForHO-r9";
         case 2: return "utran-SI-AcquisitionForHO-r9";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean intraFreqSI_AcquisitionForHO_r9Present = buffer.decodeBit ("intraFreqSI_AcquisitionForHO_r9Present");
      boolean interFreqSI_AcquisitionForHO_r9Present = buffer.decodeBit ("interFreqSI_AcquisitionForHO_r9Present");
      boolean utran_SI_AcquisitionForHO_r9Present = buffer.decodeBit ("utran_SI_AcquisitionForHO_r9Present");

      // decode intraFreqSI_AcquisitionForHO_r9

      if (intraFreqSI_AcquisitionForHO_r9Present) {
         buffer.getContext().eventDispatcher.startElement("intraFreqSI_AcquisitionForHO_r9", -1);

         int tval = NeighCellSI_AcquisitionParameters_r9_intraFreqSI_AcquisitionForHO_r9.decodeEnumValue (buffer);
         intraFreqSI_AcquisitionForHO_r9 = NeighCellSI_AcquisitionParameters_r9_intraFreqSI_AcquisitionForHO_r9.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("intraFreqSI_AcquisitionForHO_r9", -1);
      }
      else {
         intraFreqSI_AcquisitionForHO_r9 = null;
      }

      // decode interFreqSI_AcquisitionForHO_r9

      if (interFreqSI_AcquisitionForHO_r9Present) {
         buffer.getContext().eventDispatcher.startElement("interFreqSI_AcquisitionForHO_r9", -1);

         int tval = NeighCellSI_AcquisitionParameters_r9_interFreqSI_AcquisitionForHO_r9.decodeEnumValue (buffer);
         interFreqSI_AcquisitionForHO_r9 = NeighCellSI_AcquisitionParameters_r9_interFreqSI_AcquisitionForHO_r9.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("interFreqSI_AcquisitionForHO_r9", -1);
      }
      else {
         interFreqSI_AcquisitionForHO_r9 = null;
      }

      // decode utran_SI_AcquisitionForHO_r9

      if (utran_SI_AcquisitionForHO_r9Present) {
         buffer.getContext().eventDispatcher.startElement("utran_SI_AcquisitionForHO_r9", -1);

         int tval = NeighCellSI_AcquisitionParameters_r9_utran_SI_AcquisitionForHO_r9.decodeEnumValue (buffer);
         utran_SI_AcquisitionForHO_r9 = NeighCellSI_AcquisitionParameters_r9_utran_SI_AcquisitionForHO_r9.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("utran_SI_AcquisitionForHO_r9", -1);
      }
      else {
         utran_SI_AcquisitionForHO_r9 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (intraFreqSI_AcquisitionForHO_r9 != null) intraFreqSI_AcquisitionForHO_r9.print (_sb, "intraFreqSI_AcquisitionForHO_r9", _level+1);
      if (interFreqSI_AcquisitionForHO_r9 != null) interFreqSI_AcquisitionForHO_r9.print (_sb, "interFreqSI_AcquisitionForHO_r9", _level+1);
      if (utran_SI_AcquisitionForHO_r9 != null) utran_SI_AcquisitionForHO_r9.print (_sb, "utran_SI_AcquisitionForHO_r9", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
