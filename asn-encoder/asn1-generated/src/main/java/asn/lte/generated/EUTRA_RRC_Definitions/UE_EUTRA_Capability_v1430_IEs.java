/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UE_EUTRA_Capability_v1430_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UE-EUTRA-Capability-v1430-IEs";
   }

   public PhyLayerParameters_v1430 phyLayerParameters_v1430;
   public UE_EUTRA_Capability_v1430_IEs_ue_CategoryDL_v1430 ue_CategoryDL_v1430 = null;  // optional
   public UE_EUTRA_Capability_v1430_IEs_ue_CategoryUL_v1430 ue_CategoryUL_v1430 = null;  // optional
   public UE_EUTRA_Capability_v1430_IEs_ue_CategoryUL_v1430b ue_CategoryUL_v1430b = null;  // optional
   public MAC_Parameters_v1430 mac_Parameters_v1430;  // optional
   public MeasParameters_v1430 measParameters_v1430;  // optional
   public PDCP_Parameters_v1430 pdcp_Parameters_v1430;  // optional
   public RLC_Parameters_v1430 rlc_Parameters_v1430;
   public RF_Parameters_v1430 rf_Parameters_v1430;  // optional
   public LAA_Parameters_v1430 laa_Parameters_v1430;  // optional
   public LWA_Parameters_v1430 lwa_Parameters_v1430;  // optional
   public LWIP_Parameters_v1430 lwip_Parameters_v1430;  // optional
   public Other_Parameters_v1430 otherParameters_v1430;
   public MMTEL_Parameters_r14 mmtel_Parameters_r14;  // optional
   public MobilityParameters_r14 mobilityParameters_r14;  // optional
   public CE_Parameters_v1430 ce_Parameters_v1430;
   public UE_EUTRA_CapabilityAddXDD_Mode_v1430 fdd_Add_UE_EUTRA_Capabilities_v1430;  // optional
   public UE_EUTRA_CapabilityAddXDD_Mode_v1430 tdd_Add_UE_EUTRA_Capabilities_v1430;  // optional
   public MBMS_Parameters_v1430 mbms_Parameters_v1430;  // optional
   public SL_Parameters_v1430 sl_Parameters_v1430;  // optional
   public UE_BasedNetwPerfMeasParameters_v1430 ue_BasedNetwPerfMeasParameters_v1430;  // optional
   public HighSpeedEnhParameters_r14 highSpeedEnhParameters_r14;  // optional
   public UE_EUTRA_Capability_v1440_IEs nonCriticalExtension;  // optional

   public UE_EUTRA_Capability_v1430_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UE_EUTRA_Capability_v1430_IEs (
      PhyLayerParameters_v1430 phyLayerParameters_v1430_,
      UE_EUTRA_Capability_v1430_IEs_ue_CategoryDL_v1430 ue_CategoryDL_v1430_,
      UE_EUTRA_Capability_v1430_IEs_ue_CategoryUL_v1430 ue_CategoryUL_v1430_,
      UE_EUTRA_Capability_v1430_IEs_ue_CategoryUL_v1430b ue_CategoryUL_v1430b_,
      MAC_Parameters_v1430 mac_Parameters_v1430_,
      MeasParameters_v1430 measParameters_v1430_,
      PDCP_Parameters_v1430 pdcp_Parameters_v1430_,
      RLC_Parameters_v1430 rlc_Parameters_v1430_,
      RF_Parameters_v1430 rf_Parameters_v1430_,
      LAA_Parameters_v1430 laa_Parameters_v1430_,
      LWA_Parameters_v1430 lwa_Parameters_v1430_,
      LWIP_Parameters_v1430 lwip_Parameters_v1430_,
      Other_Parameters_v1430 otherParameters_v1430_,
      MMTEL_Parameters_r14 mmtel_Parameters_r14_,
      MobilityParameters_r14 mobilityParameters_r14_,
      CE_Parameters_v1430 ce_Parameters_v1430_,
      UE_EUTRA_CapabilityAddXDD_Mode_v1430 fdd_Add_UE_EUTRA_Capabilities_v1430_,
      UE_EUTRA_CapabilityAddXDD_Mode_v1430 tdd_Add_UE_EUTRA_Capabilities_v1430_,
      MBMS_Parameters_v1430 mbms_Parameters_v1430_,
      SL_Parameters_v1430 sl_Parameters_v1430_,
      UE_BasedNetwPerfMeasParameters_v1430 ue_BasedNetwPerfMeasParameters_v1430_,
      HighSpeedEnhParameters_r14 highSpeedEnhParameters_r14_,
      UE_EUTRA_Capability_v1440_IEs nonCriticalExtension_
   ) {
      super();
      phyLayerParameters_v1430 = phyLayerParameters_v1430_;
      ue_CategoryDL_v1430 = ue_CategoryDL_v1430_;
      ue_CategoryUL_v1430 = ue_CategoryUL_v1430_;
      ue_CategoryUL_v1430b = ue_CategoryUL_v1430b_;
      mac_Parameters_v1430 = mac_Parameters_v1430_;
      measParameters_v1430 = measParameters_v1430_;
      pdcp_Parameters_v1430 = pdcp_Parameters_v1430_;
      rlc_Parameters_v1430 = rlc_Parameters_v1430_;
      rf_Parameters_v1430 = rf_Parameters_v1430_;
      laa_Parameters_v1430 = laa_Parameters_v1430_;
      lwa_Parameters_v1430 = lwa_Parameters_v1430_;
      lwip_Parameters_v1430 = lwip_Parameters_v1430_;
      otherParameters_v1430 = otherParameters_v1430_;
      mmtel_Parameters_r14 = mmtel_Parameters_r14_;
      mobilityParameters_r14 = mobilityParameters_r14_;
      ce_Parameters_v1430 = ce_Parameters_v1430_;
      fdd_Add_UE_EUTRA_Capabilities_v1430 = fdd_Add_UE_EUTRA_Capabilities_v1430_;
      tdd_Add_UE_EUTRA_Capabilities_v1430 = tdd_Add_UE_EUTRA_Capabilities_v1430_;
      mbms_Parameters_v1430 = mbms_Parameters_v1430_;
      sl_Parameters_v1430 = sl_Parameters_v1430_;
      ue_BasedNetwPerfMeasParameters_v1430 = ue_BasedNetwPerfMeasParameters_v1430_;
      highSpeedEnhParameters_r14 = highSpeedEnhParameters_r14_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public UE_EUTRA_Capability_v1430_IEs (
      PhyLayerParameters_v1430 phyLayerParameters_v1430_,
      RLC_Parameters_v1430 rlc_Parameters_v1430_,
      Other_Parameters_v1430 otherParameters_v1430_,
      CE_Parameters_v1430 ce_Parameters_v1430_
   ) {
      super();
      phyLayerParameters_v1430 = phyLayerParameters_v1430_;
      rlc_Parameters_v1430 = rlc_Parameters_v1430_;
      otherParameters_v1430 = otherParameters_v1430_;
      ce_Parameters_v1430 = ce_Parameters_v1430_;
   }

   public void init () {
      phyLayerParameters_v1430 = null;
      ue_CategoryDL_v1430 = null;
      ue_CategoryUL_v1430 = null;
      ue_CategoryUL_v1430b = null;
      mac_Parameters_v1430 = null;
      measParameters_v1430 = null;
      pdcp_Parameters_v1430 = null;
      rlc_Parameters_v1430 = null;
      rf_Parameters_v1430 = null;
      laa_Parameters_v1430 = null;
      lwa_Parameters_v1430 = null;
      lwip_Parameters_v1430 = null;
      otherParameters_v1430 = null;
      mmtel_Parameters_r14 = null;
      mobilityParameters_r14 = null;
      ce_Parameters_v1430 = null;
      fdd_Add_UE_EUTRA_Capabilities_v1430 = null;
      tdd_Add_UE_EUTRA_Capabilities_v1430 = null;
      mbms_Parameters_v1430 = null;
      sl_Parameters_v1430 = null;
      ue_BasedNetwPerfMeasParameters_v1430 = null;
      highSpeedEnhParameters_r14 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 23; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return phyLayerParameters_v1430;
         case 1: return ue_CategoryDL_v1430;
         case 2: return ue_CategoryUL_v1430;
         case 3: return ue_CategoryUL_v1430b;
         case 4: return mac_Parameters_v1430;
         case 5: return measParameters_v1430;
         case 6: return pdcp_Parameters_v1430;
         case 7: return rlc_Parameters_v1430;
         case 8: return rf_Parameters_v1430;
         case 9: return laa_Parameters_v1430;
         case 10: return lwa_Parameters_v1430;
         case 11: return lwip_Parameters_v1430;
         case 12: return otherParameters_v1430;
         case 13: return mmtel_Parameters_r14;
         case 14: return mobilityParameters_r14;
         case 15: return ce_Parameters_v1430;
         case 16: return fdd_Add_UE_EUTRA_Capabilities_v1430;
         case 17: return tdd_Add_UE_EUTRA_Capabilities_v1430;
         case 18: return mbms_Parameters_v1430;
         case 19: return sl_Parameters_v1430;
         case 20: return ue_BasedNetwPerfMeasParameters_v1430;
         case 21: return highSpeedEnhParameters_r14;
         case 22: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "phyLayerParameters-v1430";
         case 1: return "ue-CategoryDL-v1430";
         case 2: return "ue-CategoryUL-v1430";
         case 3: return "ue-CategoryUL-v1430b";
         case 4: return "mac-Parameters-v1430";
         case 5: return "measParameters-v1430";
         case 6: return "pdcp-Parameters-v1430";
         case 7: return "rlc-Parameters-v1430";
         case 8: return "rf-Parameters-v1430";
         case 9: return "laa-Parameters-v1430";
         case 10: return "lwa-Parameters-v1430";
         case 11: return "lwip-Parameters-v1430";
         case 12: return "otherParameters-v1430";
         case 13: return "mmtel-Parameters-r14";
         case 14: return "mobilityParameters-r14";
         case 15: return "ce-Parameters-v1430";
         case 16: return "fdd-Add-UE-EUTRA-Capabilities-v1430";
         case 17: return "tdd-Add-UE-EUTRA-Capabilities-v1430";
         case 18: return "mbms-Parameters-v1430";
         case 19: return "sl-Parameters-v1430";
         case 20: return "ue-BasedNetwPerfMeasParameters-v1430";
         case 21: return "highSpeedEnhParameters-r14";
         case 22: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean ue_CategoryDL_v1430Present = buffer.decodeBit ("ue_CategoryDL_v1430Present");
      boolean ue_CategoryUL_v1430Present = buffer.decodeBit ("ue_CategoryUL_v1430Present");
      boolean ue_CategoryUL_v1430bPresent = buffer.decodeBit ("ue_CategoryUL_v1430bPresent");
      boolean mac_Parameters_v1430Present = buffer.decodeBit ("mac_Parameters_v1430Present");
      boolean measParameters_v1430Present = buffer.decodeBit ("measParameters_v1430Present");
      boolean pdcp_Parameters_v1430Present = buffer.decodeBit ("pdcp_Parameters_v1430Present");
      boolean rf_Parameters_v1430Present = buffer.decodeBit ("rf_Parameters_v1430Present");
      boolean laa_Parameters_v1430Present = buffer.decodeBit ("laa_Parameters_v1430Present");
      boolean lwa_Parameters_v1430Present = buffer.decodeBit ("lwa_Parameters_v1430Present");
      boolean lwip_Parameters_v1430Present = buffer.decodeBit ("lwip_Parameters_v1430Present");
      boolean mmtel_Parameters_r14Present = buffer.decodeBit ("mmtel_Parameters_r14Present");
      boolean mobilityParameters_r14Present = buffer.decodeBit ("mobilityParameters_r14Present");
      boolean fdd_Add_UE_EUTRA_Capabilities_v1430Present = buffer.decodeBit ("fdd_Add_UE_EUTRA_Capabilities_v1430Present");
      boolean tdd_Add_UE_EUTRA_Capabilities_v1430Present = buffer.decodeBit ("tdd_Add_UE_EUTRA_Capabilities_v1430Present");
      boolean mbms_Parameters_v1430Present = buffer.decodeBit ("mbms_Parameters_v1430Present");
      boolean sl_Parameters_v1430Present = buffer.decodeBit ("sl_Parameters_v1430Present");
      boolean ue_BasedNetwPerfMeasParameters_v1430Present = buffer.decodeBit ("ue_BasedNetwPerfMeasParameters_v1430Present");
      boolean highSpeedEnhParameters_r14Present = buffer.decodeBit ("highSpeedEnhParameters_r14Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode phyLayerParameters_v1430

      buffer.getContext().eventDispatcher.startElement("phyLayerParameters_v1430", -1);

      phyLayerParameters_v1430 = new PhyLayerParameters_v1430();
      phyLayerParameters_v1430.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("phyLayerParameters_v1430", -1);

      // decode ue_CategoryDL_v1430

      if (ue_CategoryDL_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("ue_CategoryDL_v1430", -1);

         int tval = UE_EUTRA_Capability_v1430_IEs_ue_CategoryDL_v1430.decodeEnumValue (buffer);
         ue_CategoryDL_v1430 = UE_EUTRA_Capability_v1430_IEs_ue_CategoryDL_v1430.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ue_CategoryDL_v1430", -1);
      }
      else {
         ue_CategoryDL_v1430 = null;
      }

      // decode ue_CategoryUL_v1430

      if (ue_CategoryUL_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("ue_CategoryUL_v1430", -1);

         int tval = UE_EUTRA_Capability_v1430_IEs_ue_CategoryUL_v1430.decodeEnumValue (buffer);
         ue_CategoryUL_v1430 = UE_EUTRA_Capability_v1430_IEs_ue_CategoryUL_v1430.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ue_CategoryUL_v1430", -1);
      }
      else {
         ue_CategoryUL_v1430 = null;
      }

      // decode ue_CategoryUL_v1430b

      if (ue_CategoryUL_v1430bPresent) {
         buffer.getContext().eventDispatcher.startElement("ue_CategoryUL_v1430b", -1);

         int tval = UE_EUTRA_Capability_v1430_IEs_ue_CategoryUL_v1430b.decodeEnumValue (buffer);
         ue_CategoryUL_v1430b = UE_EUTRA_Capability_v1430_IEs_ue_CategoryUL_v1430b.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ue_CategoryUL_v1430b", -1);
      }
      else {
         ue_CategoryUL_v1430b = null;
      }

      // decode mac_Parameters_v1430

      if (mac_Parameters_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("mac_Parameters_v1430", -1);

         mac_Parameters_v1430 = new MAC_Parameters_v1430();
         mac_Parameters_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mac_Parameters_v1430", -1);
      }
      else {
         mac_Parameters_v1430 = null;
      }

      // decode measParameters_v1430

      if (measParameters_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("measParameters_v1430", -1);

         measParameters_v1430 = new MeasParameters_v1430();
         measParameters_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measParameters_v1430", -1);
      }
      else {
         measParameters_v1430 = null;
      }

      // decode pdcp_Parameters_v1430

      if (pdcp_Parameters_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("pdcp_Parameters_v1430", -1);

         pdcp_Parameters_v1430 = new PDCP_Parameters_v1430();
         pdcp_Parameters_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("pdcp_Parameters_v1430", -1);
      }
      else {
         pdcp_Parameters_v1430 = null;
      }

      // decode rlc_Parameters_v1430

      buffer.getContext().eventDispatcher.startElement("rlc_Parameters_v1430", -1);

      rlc_Parameters_v1430 = new RLC_Parameters_v1430();
      rlc_Parameters_v1430.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("rlc_Parameters_v1430", -1);

      // decode rf_Parameters_v1430

      if (rf_Parameters_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("rf_Parameters_v1430", -1);

         rf_Parameters_v1430 = new RF_Parameters_v1430();
         rf_Parameters_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("rf_Parameters_v1430", -1);
      }
      else {
         rf_Parameters_v1430 = null;
      }

      // decode laa_Parameters_v1430

      if (laa_Parameters_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("laa_Parameters_v1430", -1);

         laa_Parameters_v1430 = new LAA_Parameters_v1430();
         laa_Parameters_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("laa_Parameters_v1430", -1);
      }
      else {
         laa_Parameters_v1430 = null;
      }

      // decode lwa_Parameters_v1430

      if (lwa_Parameters_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("lwa_Parameters_v1430", -1);

         lwa_Parameters_v1430 = new LWA_Parameters_v1430();
         lwa_Parameters_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("lwa_Parameters_v1430", -1);
      }
      else {
         lwa_Parameters_v1430 = null;
      }

      // decode lwip_Parameters_v1430

      if (lwip_Parameters_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("lwip_Parameters_v1430", -1);

         lwip_Parameters_v1430 = new LWIP_Parameters_v1430();
         lwip_Parameters_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("lwip_Parameters_v1430", -1);
      }
      else {
         lwip_Parameters_v1430 = null;
      }

      // decode otherParameters_v1430

      buffer.getContext().eventDispatcher.startElement("otherParameters_v1430", -1);

      otherParameters_v1430 = new Other_Parameters_v1430();
      otherParameters_v1430.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("otherParameters_v1430", -1);

      // decode mmtel_Parameters_r14

      if (mmtel_Parameters_r14Present) {
         buffer.getContext().eventDispatcher.startElement("mmtel_Parameters_r14", -1);

         mmtel_Parameters_r14 = new MMTEL_Parameters_r14();
         mmtel_Parameters_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mmtel_Parameters_r14", -1);
      }
      else {
         mmtel_Parameters_r14 = null;
      }

      // decode mobilityParameters_r14

      if (mobilityParameters_r14Present) {
         buffer.getContext().eventDispatcher.startElement("mobilityParameters_r14", -1);

         mobilityParameters_r14 = new MobilityParameters_r14();
         mobilityParameters_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mobilityParameters_r14", -1);
      }
      else {
         mobilityParameters_r14 = null;
      }

      // decode ce_Parameters_v1430

      buffer.getContext().eventDispatcher.startElement("ce_Parameters_v1430", -1);

      ce_Parameters_v1430 = new CE_Parameters_v1430();
      ce_Parameters_v1430.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ce_Parameters_v1430", -1);

      // decode fdd_Add_UE_EUTRA_Capabilities_v1430

      if (fdd_Add_UE_EUTRA_Capabilities_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("fdd_Add_UE_EUTRA_Capabilities_v1430", -1);

         fdd_Add_UE_EUTRA_Capabilities_v1430 = new UE_EUTRA_CapabilityAddXDD_Mode_v1430();
         fdd_Add_UE_EUTRA_Capabilities_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("fdd_Add_UE_EUTRA_Capabilities_v1430", -1);
      }
      else {
         fdd_Add_UE_EUTRA_Capabilities_v1430 = null;
      }

      // decode tdd_Add_UE_EUTRA_Capabilities_v1430

      if (tdd_Add_UE_EUTRA_Capabilities_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("tdd_Add_UE_EUTRA_Capabilities_v1430", -1);

         tdd_Add_UE_EUTRA_Capabilities_v1430 = new UE_EUTRA_CapabilityAddXDD_Mode_v1430();
         tdd_Add_UE_EUTRA_Capabilities_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tdd_Add_UE_EUTRA_Capabilities_v1430", -1);
      }
      else {
         tdd_Add_UE_EUTRA_Capabilities_v1430 = null;
      }

      // decode mbms_Parameters_v1430

      if (mbms_Parameters_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("mbms_Parameters_v1430", -1);

         mbms_Parameters_v1430 = new MBMS_Parameters_v1430();
         mbms_Parameters_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mbms_Parameters_v1430", -1);
      }
      else {
         mbms_Parameters_v1430 = null;
      }

      // decode sl_Parameters_v1430

      if (sl_Parameters_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("sl_Parameters_v1430", -1);

         sl_Parameters_v1430 = new SL_Parameters_v1430();
         sl_Parameters_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sl_Parameters_v1430", -1);
      }
      else {
         sl_Parameters_v1430 = null;
      }

      // decode ue_BasedNetwPerfMeasParameters_v1430

      if (ue_BasedNetwPerfMeasParameters_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("ue_BasedNetwPerfMeasParameters_v1430", -1);

         ue_BasedNetwPerfMeasParameters_v1430 = new UE_BasedNetwPerfMeasParameters_v1430();
         ue_BasedNetwPerfMeasParameters_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ue_BasedNetwPerfMeasParameters_v1430", -1);
      }
      else {
         ue_BasedNetwPerfMeasParameters_v1430 = null;
      }

      // decode highSpeedEnhParameters_r14

      if (highSpeedEnhParameters_r14Present) {
         buffer.getContext().eventDispatcher.startElement("highSpeedEnhParameters_r14", -1);

         highSpeedEnhParameters_r14 = new HighSpeedEnhParameters_r14();
         highSpeedEnhParameters_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("highSpeedEnhParameters_r14", -1);
      }
      else {
         highSpeedEnhParameters_r14 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new UE_EUTRA_Capability_v1440_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (phyLayerParameters_v1430 != null) phyLayerParameters_v1430.print (_sb, "phyLayerParameters_v1430", _level+1);
      if (ue_CategoryDL_v1430 != null) ue_CategoryDL_v1430.print (_sb, "ue_CategoryDL_v1430", _level+1);
      if (ue_CategoryUL_v1430 != null) ue_CategoryUL_v1430.print (_sb, "ue_CategoryUL_v1430", _level+1);
      if (ue_CategoryUL_v1430b != null) ue_CategoryUL_v1430b.print (_sb, "ue_CategoryUL_v1430b", _level+1);
      if (mac_Parameters_v1430 != null) mac_Parameters_v1430.print (_sb, "mac_Parameters_v1430", _level+1);
      if (measParameters_v1430 != null) measParameters_v1430.print (_sb, "measParameters_v1430", _level+1);
      if (pdcp_Parameters_v1430 != null) pdcp_Parameters_v1430.print (_sb, "pdcp_Parameters_v1430", _level+1);
      if (rlc_Parameters_v1430 != null) rlc_Parameters_v1430.print (_sb, "rlc_Parameters_v1430", _level+1);
      if (rf_Parameters_v1430 != null) rf_Parameters_v1430.print (_sb, "rf_Parameters_v1430", _level+1);
      if (laa_Parameters_v1430 != null) laa_Parameters_v1430.print (_sb, "laa_Parameters_v1430", _level+1);
      if (lwa_Parameters_v1430 != null) lwa_Parameters_v1430.print (_sb, "lwa_Parameters_v1430", _level+1);
      if (lwip_Parameters_v1430 != null) lwip_Parameters_v1430.print (_sb, "lwip_Parameters_v1430", _level+1);
      if (otherParameters_v1430 != null) otherParameters_v1430.print (_sb, "otherParameters_v1430", _level+1);
      if (mmtel_Parameters_r14 != null) mmtel_Parameters_r14.print (_sb, "mmtel_Parameters_r14", _level+1);
      if (mobilityParameters_r14 != null) mobilityParameters_r14.print (_sb, "mobilityParameters_r14", _level+1);
      if (ce_Parameters_v1430 != null) ce_Parameters_v1430.print (_sb, "ce_Parameters_v1430", _level+1);
      if (fdd_Add_UE_EUTRA_Capabilities_v1430 != null) fdd_Add_UE_EUTRA_Capabilities_v1430.print (_sb, "fdd_Add_UE_EUTRA_Capabilities_v1430", _level+1);
      if (tdd_Add_UE_EUTRA_Capabilities_v1430 != null) tdd_Add_UE_EUTRA_Capabilities_v1430.print (_sb, "tdd_Add_UE_EUTRA_Capabilities_v1430", _level+1);
      if (mbms_Parameters_v1430 != null) mbms_Parameters_v1430.print (_sb, "mbms_Parameters_v1430", _level+1);
      if (sl_Parameters_v1430 != null) sl_Parameters_v1430.print (_sb, "sl_Parameters_v1430", _level+1);
      if (ue_BasedNetwPerfMeasParameters_v1430 != null) ue_BasedNetwPerfMeasParameters_v1430.print (_sb, "ue_BasedNetwPerfMeasParameters_v1430", _level+1);
      if (highSpeedEnhParameters_r14 != null) highSpeedEnhParameters_r14.print (_sb, "highSpeedEnhParameters_r14", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
