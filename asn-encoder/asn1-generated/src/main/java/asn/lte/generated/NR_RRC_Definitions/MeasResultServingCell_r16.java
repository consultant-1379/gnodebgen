/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MeasResultServingCell_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MeasResultServingCell-r16";
   }

   public MeasQuantityResults resultsSSB_Cell;
   public MeasResultServingCell_r16_resultsSSB resultsSSB;  // optional

   public MeasResultServingCell_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasResultServingCell_r16 (
      MeasQuantityResults resultsSSB_Cell_,
      MeasResultServingCell_r16_resultsSSB resultsSSB_
   ) {
      super();
      resultsSSB_Cell = resultsSSB_Cell_;
      resultsSSB = resultsSSB_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public MeasResultServingCell_r16 (
      MeasQuantityResults resultsSSB_Cell_
   ) {
      super();
      resultsSSB_Cell = resultsSSB_Cell_;
   }

   public void init () {
      resultsSSB_Cell = null;
      resultsSSB = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return resultsSSB_Cell;
         case 1: return resultsSSB;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "resultsSSB-Cell";
         case 1: return "resultsSSB";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean resultsSSBPresent = buffer.decodeBit ("resultsSSBPresent");

      // decode resultsSSB_Cell

      buffer.getContext().eventDispatcher.startElement("resultsSSB_Cell", -1);

      resultsSSB_Cell = new MeasQuantityResults();
      resultsSSB_Cell.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("resultsSSB_Cell", -1);

      // decode resultsSSB

      if (resultsSSBPresent) {
         buffer.getContext().eventDispatcher.startElement("resultsSSB", -1);

         resultsSSB = new MeasResultServingCell_r16_resultsSSB();
         resultsSSB.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("resultsSSB", -1);
      }
      else {
         resultsSSB = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (resultsSSB_Cell != null) resultsSSB_Cell.print (_sb, "resultsSSB_Cell", _level+1);
      if (resultsSSB != null) resultsSSB.print (_sb, "resultsSSB", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
