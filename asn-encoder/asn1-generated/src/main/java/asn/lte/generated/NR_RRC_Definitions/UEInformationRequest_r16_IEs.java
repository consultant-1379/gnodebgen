/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UEInformationRequest_r16_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UEInformationRequest-r16-IEs";
   }

   public UEInformationRequest_r16_IEs_idleModeMeasurementReq_r16 idleModeMeasurementReq_r16 = null;  // optional
   public UEInformationRequest_r16_IEs_logMeasReportReq_r16 logMeasReportReq_r16 = null;  // optional
   public UEInformationRequest_r16_IEs_connEstFailReportReq_r16 connEstFailReportReq_r16 = null;  // optional
   public UEInformationRequest_r16_IEs_ra_ReportReq_r16 ra_ReportReq_r16 = null;  // optional
   public UEInformationRequest_r16_IEs_rlf_ReportReq_r16 rlf_ReportReq_r16 = null;  // optional
   public UEInformationRequest_r16_IEs_mobilityHistoryReportReq_r16 mobilityHistoryReportReq_r16 = null;  // optional
   public Asn1OctetString lateNonCriticalExtension;  // optional
   public UEInformationRequest_r16_IEs_nonCriticalExtension nonCriticalExtension;  // optional

   public UEInformationRequest_r16_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UEInformationRequest_r16_IEs (
      UEInformationRequest_r16_IEs_idleModeMeasurementReq_r16 idleModeMeasurementReq_r16_,
      UEInformationRequest_r16_IEs_logMeasReportReq_r16 logMeasReportReq_r16_,
      UEInformationRequest_r16_IEs_connEstFailReportReq_r16 connEstFailReportReq_r16_,
      UEInformationRequest_r16_IEs_ra_ReportReq_r16 ra_ReportReq_r16_,
      UEInformationRequest_r16_IEs_rlf_ReportReq_r16 rlf_ReportReq_r16_,
      UEInformationRequest_r16_IEs_mobilityHistoryReportReq_r16 mobilityHistoryReportReq_r16_,
      Asn1OctetString lateNonCriticalExtension_,
      UEInformationRequest_r16_IEs_nonCriticalExtension nonCriticalExtension_
   ) {
      super();
      idleModeMeasurementReq_r16 = idleModeMeasurementReq_r16_;
      logMeasReportReq_r16 = logMeasReportReq_r16_;
      connEstFailReportReq_r16 = connEstFailReportReq_r16_;
      ra_ReportReq_r16 = ra_ReportReq_r16_;
      rlf_ReportReq_r16 = rlf_ReportReq_r16_;
      mobilityHistoryReportReq_r16 = mobilityHistoryReportReq_r16_;
      lateNonCriticalExtension = lateNonCriticalExtension_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public UEInformationRequest_r16_IEs (UEInformationRequest_r16_IEs_idleModeMeasurementReq_r16 idleModeMeasurementReq_r16_,
      UEInformationRequest_r16_IEs_logMeasReportReq_r16 logMeasReportReq_r16_,
      UEInformationRequest_r16_IEs_connEstFailReportReq_r16 connEstFailReportReq_r16_,
      UEInformationRequest_r16_IEs_ra_ReportReq_r16 ra_ReportReq_r16_,
      UEInformationRequest_r16_IEs_rlf_ReportReq_r16 rlf_ReportReq_r16_,
      UEInformationRequest_r16_IEs_mobilityHistoryReportReq_r16 mobilityHistoryReportReq_r16_,
      byte[] lateNonCriticalExtension_,
      UEInformationRequest_r16_IEs_nonCriticalExtension nonCriticalExtension_
   ) {
      super();
      idleModeMeasurementReq_r16 = idleModeMeasurementReq_r16_;
      logMeasReportReq_r16 = logMeasReportReq_r16_;
      connEstFailReportReq_r16 = connEstFailReportReq_r16_;
      ra_ReportReq_r16 = ra_ReportReq_r16_;
      rlf_ReportReq_r16 = rlf_ReportReq_r16_;
      mobilityHistoryReportReq_r16 = mobilityHistoryReportReq_r16_;
      lateNonCriticalExtension = new Asn1OctetString (lateNonCriticalExtension_);
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      idleModeMeasurementReq_r16 = null;
      logMeasReportReq_r16 = null;
      connEstFailReportReq_r16 = null;
      ra_ReportReq_r16 = null;
      rlf_ReportReq_r16 = null;
      mobilityHistoryReportReq_r16 = null;
      lateNonCriticalExtension = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 8; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return idleModeMeasurementReq_r16;
         case 1: return logMeasReportReq_r16;
         case 2: return connEstFailReportReq_r16;
         case 3: return ra_ReportReq_r16;
         case 4: return rlf_ReportReq_r16;
         case 5: return mobilityHistoryReportReq_r16;
         case 6: return lateNonCriticalExtension;
         case 7: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "idleModeMeasurementReq-r16";
         case 1: return "logMeasReportReq-r16";
         case 2: return "connEstFailReportReq-r16";
         case 3: return "ra-ReportReq-r16";
         case 4: return "rlf-ReportReq-r16";
         case 5: return "mobilityHistoryReportReq-r16";
         case 6: return "lateNonCriticalExtension";
         case 7: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean idleModeMeasurementReq_r16Present = buffer.decodeBit ("idleModeMeasurementReq_r16Present");
      boolean logMeasReportReq_r16Present = buffer.decodeBit ("logMeasReportReq_r16Present");
      boolean connEstFailReportReq_r16Present = buffer.decodeBit ("connEstFailReportReq_r16Present");
      boolean ra_ReportReq_r16Present = buffer.decodeBit ("ra_ReportReq_r16Present");
      boolean rlf_ReportReq_r16Present = buffer.decodeBit ("rlf_ReportReq_r16Present");
      boolean mobilityHistoryReportReq_r16Present = buffer.decodeBit ("mobilityHistoryReportReq_r16Present");
      boolean lateNonCriticalExtensionPresent = buffer.decodeBit ("lateNonCriticalExtensionPresent");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode idleModeMeasurementReq_r16

      if (idleModeMeasurementReq_r16Present) {
         buffer.getContext().eventDispatcher.startElement("idleModeMeasurementReq_r16", -1);

         int tval = UEInformationRequest_r16_IEs_idleModeMeasurementReq_r16.decodeEnumValue (buffer);
         idleModeMeasurementReq_r16 = UEInformationRequest_r16_IEs_idleModeMeasurementReq_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("idleModeMeasurementReq_r16", -1);
      }
      else {
         idleModeMeasurementReq_r16 = null;
      }

      // decode logMeasReportReq_r16

      if (logMeasReportReq_r16Present) {
         buffer.getContext().eventDispatcher.startElement("logMeasReportReq_r16", -1);

         int tval = UEInformationRequest_r16_IEs_logMeasReportReq_r16.decodeEnumValue (buffer);
         logMeasReportReq_r16 = UEInformationRequest_r16_IEs_logMeasReportReq_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("logMeasReportReq_r16", -1);
      }
      else {
         logMeasReportReq_r16 = null;
      }

      // decode connEstFailReportReq_r16

      if (connEstFailReportReq_r16Present) {
         buffer.getContext().eventDispatcher.startElement("connEstFailReportReq_r16", -1);

         int tval = UEInformationRequest_r16_IEs_connEstFailReportReq_r16.decodeEnumValue (buffer);
         connEstFailReportReq_r16 = UEInformationRequest_r16_IEs_connEstFailReportReq_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("connEstFailReportReq_r16", -1);
      }
      else {
         connEstFailReportReq_r16 = null;
      }

      // decode ra_ReportReq_r16

      if (ra_ReportReq_r16Present) {
         buffer.getContext().eventDispatcher.startElement("ra_ReportReq_r16", -1);

         int tval = UEInformationRequest_r16_IEs_ra_ReportReq_r16.decodeEnumValue (buffer);
         ra_ReportReq_r16 = UEInformationRequest_r16_IEs_ra_ReportReq_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ra_ReportReq_r16", -1);
      }
      else {
         ra_ReportReq_r16 = null;
      }

      // decode rlf_ReportReq_r16

      if (rlf_ReportReq_r16Present) {
         buffer.getContext().eventDispatcher.startElement("rlf_ReportReq_r16", -1);

         int tval = UEInformationRequest_r16_IEs_rlf_ReportReq_r16.decodeEnumValue (buffer);
         rlf_ReportReq_r16 = UEInformationRequest_r16_IEs_rlf_ReportReq_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("rlf_ReportReq_r16", -1);
      }
      else {
         rlf_ReportReq_r16 = null;
      }

      // decode mobilityHistoryReportReq_r16

      if (mobilityHistoryReportReq_r16Present) {
         buffer.getContext().eventDispatcher.startElement("mobilityHistoryReportReq_r16", -1);

         int tval = UEInformationRequest_r16_IEs_mobilityHistoryReportReq_r16.decodeEnumValue (buffer);
         mobilityHistoryReportReq_r16 = UEInformationRequest_r16_IEs_mobilityHistoryReportReq_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("mobilityHistoryReportReq_r16", -1);
      }
      else {
         mobilityHistoryReportReq_r16 = null;
      }

      // decode lateNonCriticalExtension

      if (lateNonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("lateNonCriticalExtension", -1);

         lateNonCriticalExtension = new Asn1OctetString();
         lateNonCriticalExtension.decode (buffer);

         buffer.invokeCharacters(lateNonCriticalExtension.toString());
         buffer.getContext().eventDispatcher.endElement("lateNonCriticalExtension", -1);
      }
      else {
         lateNonCriticalExtension = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new UEInformationRequest_r16_IEs_nonCriticalExtension();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (idleModeMeasurementReq_r16 != null) idleModeMeasurementReq_r16.print (_sb, "idleModeMeasurementReq_r16", _level+1);
      if (logMeasReportReq_r16 != null) logMeasReportReq_r16.print (_sb, "logMeasReportReq_r16", _level+1);
      if (connEstFailReportReq_r16 != null) connEstFailReportReq_r16.print (_sb, "connEstFailReportReq_r16", _level+1);
      if (ra_ReportReq_r16 != null) ra_ReportReq_r16.print (_sb, "ra_ReportReq_r16", _level+1);
      if (rlf_ReportReq_r16 != null) rlf_ReportReq_r16.print (_sb, "rlf_ReportReq_r16", _level+1);
      if (mobilityHistoryReportReq_r16 != null) mobilityHistoryReportReq_r16.print (_sb, "mobilityHistoryReportReq_r16", _level+1);
      if (lateNonCriticalExtension != null) lateNonCriticalExtension.print (_sb, "lateNonCriticalExtension", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
