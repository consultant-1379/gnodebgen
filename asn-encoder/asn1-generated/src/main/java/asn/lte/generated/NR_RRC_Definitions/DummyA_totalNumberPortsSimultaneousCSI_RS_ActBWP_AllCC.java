/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _P8 = 0;
   public static final int _P12 = 1;
   public static final int _P16 = 2;
   public static final int _P24 = 3;
   public static final int _P32 = 4;
   public static final int _P40 = 5;
   public static final int _P48 = 6;
   public static final int _P56 = 7;
   public static final int _P64 = 8;
   public static final int _P72 = 9;
   public static final int _P80 = 10;
   public static final int _P88 = 11;
   public static final int _P96 = 12;
   public static final int _P104 = 13;
   public static final int _P112 = 14;
   public static final int _P120 = 15;
   public static final int _P128 = 16;
   public static final int _P136 = 17;
   public static final int _P144 = 18;
   public static final int _P152 = 19;
   public static final int _P160 = 20;
   public static final int _P168 = 21;
   public static final int _P176 = 22;
   public static final int _P184 = 23;
   public static final int _P192 = 24;
   public static final int _P200 = 25;
   public static final int _P208 = 26;
   public static final int _P216 = 27;
   public static final int _P224 = 28;
   public static final int _P232 = 29;
   public static final int _P240 = 30;
   public static final int _P248 = 31;
   public static final int _P256 = 32;

   // Singleton instances of DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p8 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(0);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p12 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(1);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p16 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(2);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p24 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(3);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p32 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(4);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p40 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(5);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p48 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(6);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p56 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(7);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p64 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(8);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p72 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(9);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p80 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(10);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p88 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(11);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p96 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(12);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p104 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(13);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p112 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(14);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p120 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(15);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p128 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(16);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p136 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(17);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p144 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(18);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p152 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(19);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p160 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(20);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p168 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(21);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p176 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(22);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p184 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(23);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p192 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(24);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p200 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(25);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p208 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(26);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p216 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(27);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p224 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(28);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p232 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(29);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p240 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(30);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p248 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(31);
   protected static final DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC _p256 = new DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC(32);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    *   16
    *   17
    *   18
    *   19
    *   20
    *   21
    *   22
    *   23
    *   24
    *   25
    *   26
    *   27
    *   28
    *   29
    *   30
    *   31
    *   32
    */
   protected DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for p8.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p8() {
      return _p8;
   }

   /**
    * Singleton accessor method for p12.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p12() {
      return _p12;
   }

   /**
    * Singleton accessor method for p16.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p16() {
      return _p16;
   }

   /**
    * Singleton accessor method for p24.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p24() {
      return _p24;
   }

   /**
    * Singleton accessor method for p32.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p32() {
      return _p32;
   }

   /**
    * Singleton accessor method for p40.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p40() {
      return _p40;
   }

   /**
    * Singleton accessor method for p48.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p48() {
      return _p48;
   }

   /**
    * Singleton accessor method for p56.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p56() {
      return _p56;
   }

   /**
    * Singleton accessor method for p64.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p64() {
      return _p64;
   }

   /**
    * Singleton accessor method for p72.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p72() {
      return _p72;
   }

   /**
    * Singleton accessor method for p80.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p80() {
      return _p80;
   }

   /**
    * Singleton accessor method for p88.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p88() {
      return _p88;
   }

   /**
    * Singleton accessor method for p96.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p96() {
      return _p96;
   }

   /**
    * Singleton accessor method for p104.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p104() {
      return _p104;
   }

   /**
    * Singleton accessor method for p112.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p112() {
      return _p112;
   }

   /**
    * Singleton accessor method for p120.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p120() {
      return _p120;
   }

   /**
    * Singleton accessor method for p128.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p128() {
      return _p128;
   }

   /**
    * Singleton accessor method for p136.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p136() {
      return _p136;
   }

   /**
    * Singleton accessor method for p144.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p144() {
      return _p144;
   }

   /**
    * Singleton accessor method for p152.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p152() {
      return _p152;
   }

   /**
    * Singleton accessor method for p160.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p160() {
      return _p160;
   }

   /**
    * Singleton accessor method for p168.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p168() {
      return _p168;
   }

   /**
    * Singleton accessor method for p176.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p176() {
      return _p176;
   }

   /**
    * Singleton accessor method for p184.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p184() {
      return _p184;
   }

   /**
    * Singleton accessor method for p192.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p192() {
      return _p192;
   }

   /**
    * Singleton accessor method for p200.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p200() {
      return _p200;
   }

   /**
    * Singleton accessor method for p208.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p208() {
      return _p208;
   }

   /**
    * Singleton accessor method for p216.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p216() {
      return _p216;
   }

   /**
    * Singleton accessor method for p224.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p224() {
      return _p224;
   }

   /**
    * Singleton accessor method for p232.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p232() {
      return _p232;
   }

   /**
    * Singleton accessor method for p240.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p240() {
      return _p240;
   }

   /**
    * Singleton accessor method for p248.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p248() {
      return _p248;
   }

   /**
    * Singleton accessor method for p256.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC p256() {
      return _p256;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC.valueOf( DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return p8();
         case 1: return p12();
         case 2: return p16();
         case 3: return p24();
         case 4: return p32();
         case 5: return p40();
         case 6: return p48();
         case 7: return p56();
         case 8: return p64();
         case 9: return p72();
         case 10: return p80();
         case 11: return p88();
         case 12: return p96();
         case 13: return p104();
         case 14: return p112();
         case 15: return p120();
         case 16: return p128();
         case 17: return p136();
         case 18: return p144();
         case 19: return p152();
         case 20: return p160();
         case 21: return p168();
         case 22: return p176();
         case 23: return p184();
         case 24: return p192();
         case 25: return p200();
         case 26: return p208();
         case 27: return p216();
         case 28: return p224();
         case 29: return p232();
         case 30: return p240();
         case 31: return p248();
         case 32: return p256();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (33);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         case 16: ret =  16; break;
         case 17: ret =  17; break;
         case 18: ret =  18; break;
         case 19: ret =  19; break;
         case 20: ret =  20; break;
         case 21: ret =  21; break;
         case 22: ret =  22; break;
         case 23: ret =  23; break;
         case 24: ret =  24; break;
         case 25: ret =  25; break;
         case 26: ret =  26; break;
         case 27: ret =  27; break;
         case 28: ret =  28; break;
         case 29: ret =  29; break;
         case 30: ret =  30; break;
         case 31: ret =  31; break;
         case 32: ret =  32; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (DummyA_totalNumberPortsSimultaneousCSI_RS_ActBWP_AllCC.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("p8");
         case 1: return ("p12");
         case 2: return ("p16");
         case 3: return ("p24");
         case 4: return ("p32");
         case 5: return ("p40");
         case 6: return ("p48");
         case 7: return ("p56");
         case 8: return ("p64");
         case 9: return ("p72");
         case 10: return ("p80");
         case 11: return ("p88");
         case 12: return ("p96");
         case 13: return ("p104");
         case 14: return ("p112");
         case 15: return ("p120");
         case 16: return ("p128");
         case 17: return ("p136");
         case 18: return ("p144");
         case 19: return ("p152");
         case 20: return ("p160");
         case 21: return ("p168");
         case 22: return ("p176");
         case 23: return ("p184");
         case 24: return ("p192");
         case 25: return ("p200");
         case 26: return ("p208");
         case 27: return ("p216");
         case 28: return ("p224");
         case 29: return ("p232");
         case 30: return ("p240");
         case 31: return ("p248");
         case 32: return ("p256");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
