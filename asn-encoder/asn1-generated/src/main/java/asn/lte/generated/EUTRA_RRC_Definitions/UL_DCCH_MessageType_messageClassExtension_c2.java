/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UL_DCCH_MessageType_messageClassExtension_c2 extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _UEASSISTANCEINFORMATION_R11 = 1;
   public final static byte _INDEVICECOEXINDICATION_R11 = 2;
   public final static byte _MBMSINTERESTINDICATION_R11 = 3;
   public final static byte _SCGFAILUREINFORMATION_R12 = 4;
   public final static byte _SIDELINKUEINFORMATION_R12 = 5;
   public final static byte _WLANCONNECTIONSTATUSREPORT_R13 = 6;
   public final static byte _RRCCONNECTIONRESUMECOMPLETE_R13 = 7;
   public final static byte _ULINFORMATIONTRANSFERMRDC_R15 = 8;
   public final static byte _SCGFAILUREINFORMATIONNR_R15 = 9;
   public final static byte _MEASREPORTAPPLAYER_R15 = 10;
   public final static byte _FAILUREINFORMATION_R15 = 11;
   public final static byte _SPARE5 = 12;
   public final static byte _SPARE4 = 13;
   public final static byte _SPARE3 = 14;
   public final static byte _SPARE2 = 15;
   public final static byte _SPARE1 = 16;

   public UL_DCCH_MessageType_messageClassExtension_c2 () {
      super();
   }

   public UL_DCCH_MessageType_messageClassExtension_c2 (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _UEASSISTANCEINFORMATION_R11: return "ueAssistanceInformation_r11";
      case _INDEVICECOEXINDICATION_R11: return "inDeviceCoexIndication_r11";
      case _MBMSINTERESTINDICATION_R11: return "mbmsInterestIndication_r11";
      case _SCGFAILUREINFORMATION_R12: return "scgFailureInformation_r12";
      case _SIDELINKUEINFORMATION_R12: return "sidelinkUEInformation_r12";
      case _WLANCONNECTIONSTATUSREPORT_R13: return "wlanConnectionStatusReport_r13";
      case _RRCCONNECTIONRESUMECOMPLETE_R13: return "rrcConnectionResumeComplete_r13";
      case _ULINFORMATIONTRANSFERMRDC_R15: return "ulInformationTransferMRDC_r15";
      case _SCGFAILUREINFORMATIONNR_R15: return "scgFailureInformationNR_r15";
      case _MEASREPORTAPPLAYER_R15: return "measReportAppLayer_r15";
      case _FAILUREINFORMATION_R15: return "failureInformation_r15";
      case _SPARE5: return "spare5";
      case _SPARE4: return "spare4";
      case _SPARE3: return "spare3";
      case _SPARE2: return "spare2";
      case _SPARE1: return "spare1";
      default: return "UNDEFINED";
      }
   }

   public void set_ueAssistanceInformation_r11 (UEAssistanceInformation_r11 value) {
      setElement (_UEASSISTANCEINFORMATION_R11, value);
   }

   public void set_inDeviceCoexIndication_r11 (InDeviceCoexIndication_r11 value) {
      setElement (_INDEVICECOEXINDICATION_R11, value);
   }

   public void set_mbmsInterestIndication_r11 (MBMSInterestIndication_r11 value) {
      setElement (_MBMSINTERESTINDICATION_R11, value);
   }

   public void set_scgFailureInformation_r12 (SCGFailureInformation_r12 value) {
      setElement (_SCGFAILUREINFORMATION_R12, value);
   }

   public void set_sidelinkUEInformation_r12 (SidelinkUEInformation_r12 value) {
      setElement (_SIDELINKUEINFORMATION_R12, value);
   }

   public void set_wlanConnectionStatusReport_r13 (WLANConnectionStatusReport_r13 value) {
      setElement (_WLANCONNECTIONSTATUSREPORT_R13, value);
   }

   public void set_rrcConnectionResumeComplete_r13 (RRCConnectionResumeComplete_r13 value) {
      setElement (_RRCCONNECTIONRESUMECOMPLETE_R13, value);
   }

   public void set_ulInformationTransferMRDC_r15 (ULInformationTransferMRDC_r15 value) {
      setElement (_ULINFORMATIONTRANSFERMRDC_R15, value);
   }

   public void set_scgFailureInformationNR_r15 (SCGFailureInformationNR_r15 value) {
      setElement (_SCGFAILUREINFORMATIONNR_R15, value);
   }

   public void set_measReportAppLayer_r15 (MeasReportAppLayer_r15 value) {
      setElement (_MEASREPORTAPPLAYER_R15, value);
   }

   public void set_failureInformation_r15 (FailureInformation_r15 value) {
      setElement (_FAILUREINFORMATION_R15, value);
   }

   public void set_spare5 () {
      setElement (_SPARE5, Asn1Null.NULL_VALUE);
   }

   public void set_spare4 () {
      setElement (_SPARE4, Asn1Null.NULL_VALUE);
   }

   public void set_spare3 () {
      setElement (_SPARE3, Asn1Null.NULL_VALUE);
   }

   public void set_spare2 () {
      setElement (_SPARE2, Asn1Null.NULL_VALUE);
   }

   public void set_spare1 () {
      setElement (_SPARE1, Asn1Null.NULL_VALUE);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (16, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // ueAssistanceInformation_r11
         case 0: { 
            UEAssistanceInformation_r11 ueAssistanceInformation_r11;
            element = ueAssistanceInformation_r11 = new UEAssistanceInformation_r11();
            ueAssistanceInformation_r11.decode (buffer);
            break;
         }

         // inDeviceCoexIndication_r11
         case 1: { 
            InDeviceCoexIndication_r11 inDeviceCoexIndication_r11;
            element = inDeviceCoexIndication_r11 = new InDeviceCoexIndication_r11();
            inDeviceCoexIndication_r11.decode (buffer);
            break;
         }

         // mbmsInterestIndication_r11
         case 2: { 
            MBMSInterestIndication_r11 mbmsInterestIndication_r11;
            element = mbmsInterestIndication_r11 = new MBMSInterestIndication_r11();
            mbmsInterestIndication_r11.decode (buffer);
            break;
         }

         // scgFailureInformation_r12
         case 3: { 
            SCGFailureInformation_r12 scgFailureInformation_r12;
            element = scgFailureInformation_r12 = new SCGFailureInformation_r12();
            scgFailureInformation_r12.decode (buffer);
            break;
         }

         // sidelinkUEInformation_r12
         case 4: { 
            SidelinkUEInformation_r12 sidelinkUEInformation_r12;
            element = sidelinkUEInformation_r12 = new SidelinkUEInformation_r12();
            sidelinkUEInformation_r12.decode (buffer);
            break;
         }

         // wlanConnectionStatusReport_r13
         case 5: { 
            WLANConnectionStatusReport_r13 wlanConnectionStatusReport_r13;
            element = wlanConnectionStatusReport_r13 = new WLANConnectionStatusReport_r13();
            wlanConnectionStatusReport_r13.decode (buffer);
            break;
         }

         // rrcConnectionResumeComplete_r13
         case 6: { 
            RRCConnectionResumeComplete_r13 rrcConnectionResumeComplete_r13;
            element = rrcConnectionResumeComplete_r13 = new RRCConnectionResumeComplete_r13();
            rrcConnectionResumeComplete_r13.decode (buffer);
            break;
         }

         // ulInformationTransferMRDC_r15
         case 7: { 
            ULInformationTransferMRDC_r15 ulInformationTransferMRDC_r15;
            element = ulInformationTransferMRDC_r15 = new ULInformationTransferMRDC_r15();
            ulInformationTransferMRDC_r15.decode (buffer);
            break;
         }

         // scgFailureInformationNR_r15
         case 8: { 
            SCGFailureInformationNR_r15 scgFailureInformationNR_r15;
            element = scgFailureInformationNR_r15 = new SCGFailureInformationNR_r15();
            scgFailureInformationNR_r15.decode (buffer);
            break;
         }

         // measReportAppLayer_r15
         case 9: { 
            MeasReportAppLayer_r15 measReportAppLayer_r15;
            element = measReportAppLayer_r15 = new MeasReportAppLayer_r15();
            measReportAppLayer_r15.decode (buffer);
            break;
         }

         // failureInformation_r15
         case 10: { 
            FailureInformation_r15 failureInformation_r15;
            element = failureInformation_r15 = new FailureInformation_r15();
            failureInformation_r15.decode (buffer);
            break;
         }

         // spare5
         case 11: { 
            Asn1Null spare5;
            element = spare5 = Asn1Null.NULL_VALUE;
            spare5.decode (buffer);

            buffer.invokeCharacters(spare5.toString());
            break;
         }

         // spare4
         case 12: { 
            Asn1Null spare4;
            element = spare4 = Asn1Null.NULL_VALUE;
            spare4.decode (buffer);

            buffer.invokeCharacters(spare4.toString());
            break;
         }

         // spare3
         case 13: { 
            Asn1Null spare3;
            element = spare3 = Asn1Null.NULL_VALUE;
            spare3.decode (buffer);

            buffer.invokeCharacters(spare3.toString());
            break;
         }

         // spare2
         case 14: { 
            Asn1Null spare2;
            element = spare2 = Asn1Null.NULL_VALUE;
            spare2.decode (buffer);

            buffer.invokeCharacters(spare2.toString());
            break;
         }

         // spare1
         case 15: { 
            Asn1Null spare1;
            element = spare1 = Asn1Null.NULL_VALUE;
            spare1.decode (buffer);

            buffer.invokeCharacters(spare1.toString());
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
