/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MIMO_UE_ParametersPerTM_v1430 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MIMO-UE-ParametersPerTM-v1430";
   }

   public MIMO_UE_ParametersPerTM_v1430_nzp_CSI_RS_AperiodicInfo_r14 nzp_CSI_RS_AperiodicInfo_r14;  // optional
   public MIMO_UE_ParametersPerTM_v1430_nzp_CSI_RS_PeriodicInfo_r14 nzp_CSI_RS_PeriodicInfo_r14;  // optional
   public MIMO_UE_ParametersPerTM_v1430_zp_CSI_RS_AperiodicInfo_r14 zp_CSI_RS_AperiodicInfo_r14 = null;  // optional
   public MIMO_UE_ParametersPerTM_v1430_ul_dmrs_Enhancements_r14 ul_dmrs_Enhancements_r14 = null;  // optional
   public MIMO_UE_ParametersPerTM_v1430_densityReductionNP_r14 densityReductionNP_r14 = null;  // optional
   public MIMO_UE_ParametersPerTM_v1430_densityReductionBF_r14 densityReductionBF_r14 = null;  // optional
   public MIMO_UE_ParametersPerTM_v1430_hybridCSI_r14 hybridCSI_r14 = null;  // optional
   public MIMO_UE_ParametersPerTM_v1430_semiOL_r14 semiOL_r14 = null;  // optional
   public MIMO_UE_ParametersPerTM_v1430_csi_ReportingNP_r14 csi_ReportingNP_r14 = null;  // optional
   public MIMO_UE_ParametersPerTM_v1430_csi_ReportingAdvanced_r14 csi_ReportingAdvanced_r14 = null;  // optional

   public MIMO_UE_ParametersPerTM_v1430 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MIMO_UE_ParametersPerTM_v1430 (
      MIMO_UE_ParametersPerTM_v1430_nzp_CSI_RS_AperiodicInfo_r14 nzp_CSI_RS_AperiodicInfo_r14_,
      MIMO_UE_ParametersPerTM_v1430_nzp_CSI_RS_PeriodicInfo_r14 nzp_CSI_RS_PeriodicInfo_r14_,
      MIMO_UE_ParametersPerTM_v1430_zp_CSI_RS_AperiodicInfo_r14 zp_CSI_RS_AperiodicInfo_r14_,
      MIMO_UE_ParametersPerTM_v1430_ul_dmrs_Enhancements_r14 ul_dmrs_Enhancements_r14_,
      MIMO_UE_ParametersPerTM_v1430_densityReductionNP_r14 densityReductionNP_r14_,
      MIMO_UE_ParametersPerTM_v1430_densityReductionBF_r14 densityReductionBF_r14_,
      MIMO_UE_ParametersPerTM_v1430_hybridCSI_r14 hybridCSI_r14_,
      MIMO_UE_ParametersPerTM_v1430_semiOL_r14 semiOL_r14_,
      MIMO_UE_ParametersPerTM_v1430_csi_ReportingNP_r14 csi_ReportingNP_r14_,
      MIMO_UE_ParametersPerTM_v1430_csi_ReportingAdvanced_r14 csi_ReportingAdvanced_r14_
   ) {
      super();
      nzp_CSI_RS_AperiodicInfo_r14 = nzp_CSI_RS_AperiodicInfo_r14_;
      nzp_CSI_RS_PeriodicInfo_r14 = nzp_CSI_RS_PeriodicInfo_r14_;
      zp_CSI_RS_AperiodicInfo_r14 = zp_CSI_RS_AperiodicInfo_r14_;
      ul_dmrs_Enhancements_r14 = ul_dmrs_Enhancements_r14_;
      densityReductionNP_r14 = densityReductionNP_r14_;
      densityReductionBF_r14 = densityReductionBF_r14_;
      hybridCSI_r14 = hybridCSI_r14_;
      semiOL_r14 = semiOL_r14_;
      csi_ReportingNP_r14 = csi_ReportingNP_r14_;
      csi_ReportingAdvanced_r14 = csi_ReportingAdvanced_r14_;
   }

   public void init () {
      nzp_CSI_RS_AperiodicInfo_r14 = null;
      nzp_CSI_RS_PeriodicInfo_r14 = null;
      zp_CSI_RS_AperiodicInfo_r14 = null;
      ul_dmrs_Enhancements_r14 = null;
      densityReductionNP_r14 = null;
      densityReductionBF_r14 = null;
      hybridCSI_r14 = null;
      semiOL_r14 = null;
      csi_ReportingNP_r14 = null;
      csi_ReportingAdvanced_r14 = null;
   }

   public int getElementCount() { return 10; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return nzp_CSI_RS_AperiodicInfo_r14;
         case 1: return nzp_CSI_RS_PeriodicInfo_r14;
         case 2: return zp_CSI_RS_AperiodicInfo_r14;
         case 3: return ul_dmrs_Enhancements_r14;
         case 4: return densityReductionNP_r14;
         case 5: return densityReductionBF_r14;
         case 6: return hybridCSI_r14;
         case 7: return semiOL_r14;
         case 8: return csi_ReportingNP_r14;
         case 9: return csi_ReportingAdvanced_r14;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "nzp-CSI-RS-AperiodicInfo-r14";
         case 1: return "nzp-CSI-RS-PeriodicInfo-r14";
         case 2: return "zp-CSI-RS-AperiodicInfo-r14";
         case 3: return "ul-dmrs-Enhancements-r14";
         case 4: return "densityReductionNP-r14";
         case 5: return "densityReductionBF-r14";
         case 6: return "hybridCSI-r14";
         case 7: return "semiOL-r14";
         case 8: return "csi-ReportingNP-r14";
         case 9: return "csi-ReportingAdvanced-r14";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean nzp_CSI_RS_AperiodicInfo_r14Present = buffer.decodeBit ("nzp_CSI_RS_AperiodicInfo_r14Present");
      boolean nzp_CSI_RS_PeriodicInfo_r14Present = buffer.decodeBit ("nzp_CSI_RS_PeriodicInfo_r14Present");
      boolean zp_CSI_RS_AperiodicInfo_r14Present = buffer.decodeBit ("zp_CSI_RS_AperiodicInfo_r14Present");
      boolean ul_dmrs_Enhancements_r14Present = buffer.decodeBit ("ul_dmrs_Enhancements_r14Present");
      boolean densityReductionNP_r14Present = buffer.decodeBit ("densityReductionNP_r14Present");
      boolean densityReductionBF_r14Present = buffer.decodeBit ("densityReductionBF_r14Present");
      boolean hybridCSI_r14Present = buffer.decodeBit ("hybridCSI_r14Present");
      boolean semiOL_r14Present = buffer.decodeBit ("semiOL_r14Present");
      boolean csi_ReportingNP_r14Present = buffer.decodeBit ("csi_ReportingNP_r14Present");
      boolean csi_ReportingAdvanced_r14Present = buffer.decodeBit ("csi_ReportingAdvanced_r14Present");

      // decode nzp_CSI_RS_AperiodicInfo_r14

      if (nzp_CSI_RS_AperiodicInfo_r14Present) {
         buffer.getContext().eventDispatcher.startElement("nzp_CSI_RS_AperiodicInfo_r14", -1);

         nzp_CSI_RS_AperiodicInfo_r14 = new MIMO_UE_ParametersPerTM_v1430_nzp_CSI_RS_AperiodicInfo_r14();
         nzp_CSI_RS_AperiodicInfo_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nzp_CSI_RS_AperiodicInfo_r14", -1);
      }
      else {
         nzp_CSI_RS_AperiodicInfo_r14 = null;
      }

      // decode nzp_CSI_RS_PeriodicInfo_r14

      if (nzp_CSI_RS_PeriodicInfo_r14Present) {
         buffer.getContext().eventDispatcher.startElement("nzp_CSI_RS_PeriodicInfo_r14", -1);

         nzp_CSI_RS_PeriodicInfo_r14 = new MIMO_UE_ParametersPerTM_v1430_nzp_CSI_RS_PeriodicInfo_r14();
         nzp_CSI_RS_PeriodicInfo_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nzp_CSI_RS_PeriodicInfo_r14", -1);
      }
      else {
         nzp_CSI_RS_PeriodicInfo_r14 = null;
      }

      // decode zp_CSI_RS_AperiodicInfo_r14

      if (zp_CSI_RS_AperiodicInfo_r14Present) {
         buffer.getContext().eventDispatcher.startElement("zp_CSI_RS_AperiodicInfo_r14", -1);

         int tval = MIMO_UE_ParametersPerTM_v1430_zp_CSI_RS_AperiodicInfo_r14.decodeEnumValue (buffer);
         zp_CSI_RS_AperiodicInfo_r14 = MIMO_UE_ParametersPerTM_v1430_zp_CSI_RS_AperiodicInfo_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("zp_CSI_RS_AperiodicInfo_r14", -1);
      }
      else {
         zp_CSI_RS_AperiodicInfo_r14 = null;
      }

      // decode ul_dmrs_Enhancements_r14

      if (ul_dmrs_Enhancements_r14Present) {
         buffer.getContext().eventDispatcher.startElement("ul_dmrs_Enhancements_r14", -1);

         int tval = MIMO_UE_ParametersPerTM_v1430_ul_dmrs_Enhancements_r14.decodeEnumValue (buffer);
         ul_dmrs_Enhancements_r14 = MIMO_UE_ParametersPerTM_v1430_ul_dmrs_Enhancements_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ul_dmrs_Enhancements_r14", -1);
      }
      else {
         ul_dmrs_Enhancements_r14 = null;
      }

      // decode densityReductionNP_r14

      if (densityReductionNP_r14Present) {
         buffer.getContext().eventDispatcher.startElement("densityReductionNP_r14", -1);

         int tval = MIMO_UE_ParametersPerTM_v1430_densityReductionNP_r14.decodeEnumValue (buffer);
         densityReductionNP_r14 = MIMO_UE_ParametersPerTM_v1430_densityReductionNP_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("densityReductionNP_r14", -1);
      }
      else {
         densityReductionNP_r14 = null;
      }

      // decode densityReductionBF_r14

      if (densityReductionBF_r14Present) {
         buffer.getContext().eventDispatcher.startElement("densityReductionBF_r14", -1);

         int tval = MIMO_UE_ParametersPerTM_v1430_densityReductionBF_r14.decodeEnumValue (buffer);
         densityReductionBF_r14 = MIMO_UE_ParametersPerTM_v1430_densityReductionBF_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("densityReductionBF_r14", -1);
      }
      else {
         densityReductionBF_r14 = null;
      }

      // decode hybridCSI_r14

      if (hybridCSI_r14Present) {
         buffer.getContext().eventDispatcher.startElement("hybridCSI_r14", -1);

         int tval = MIMO_UE_ParametersPerTM_v1430_hybridCSI_r14.decodeEnumValue (buffer);
         hybridCSI_r14 = MIMO_UE_ParametersPerTM_v1430_hybridCSI_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("hybridCSI_r14", -1);
      }
      else {
         hybridCSI_r14 = null;
      }

      // decode semiOL_r14

      if (semiOL_r14Present) {
         buffer.getContext().eventDispatcher.startElement("semiOL_r14", -1);

         int tval = MIMO_UE_ParametersPerTM_v1430_semiOL_r14.decodeEnumValue (buffer);
         semiOL_r14 = MIMO_UE_ParametersPerTM_v1430_semiOL_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("semiOL_r14", -1);
      }
      else {
         semiOL_r14 = null;
      }

      // decode csi_ReportingNP_r14

      if (csi_ReportingNP_r14Present) {
         buffer.getContext().eventDispatcher.startElement("csi_ReportingNP_r14", -1);

         int tval = MIMO_UE_ParametersPerTM_v1430_csi_ReportingNP_r14.decodeEnumValue (buffer);
         csi_ReportingNP_r14 = MIMO_UE_ParametersPerTM_v1430_csi_ReportingNP_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("csi_ReportingNP_r14", -1);
      }
      else {
         csi_ReportingNP_r14 = null;
      }

      // decode csi_ReportingAdvanced_r14

      if (csi_ReportingAdvanced_r14Present) {
         buffer.getContext().eventDispatcher.startElement("csi_ReportingAdvanced_r14", -1);

         int tval = MIMO_UE_ParametersPerTM_v1430_csi_ReportingAdvanced_r14.decodeEnumValue (buffer);
         csi_ReportingAdvanced_r14 = MIMO_UE_ParametersPerTM_v1430_csi_ReportingAdvanced_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("csi_ReportingAdvanced_r14", -1);
      }
      else {
         csi_ReportingAdvanced_r14 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (nzp_CSI_RS_AperiodicInfo_r14 != null) nzp_CSI_RS_AperiodicInfo_r14.print (_sb, "nzp_CSI_RS_AperiodicInfo_r14", _level+1);
      if (nzp_CSI_RS_PeriodicInfo_r14 != null) nzp_CSI_RS_PeriodicInfo_r14.print (_sb, "nzp_CSI_RS_PeriodicInfo_r14", _level+1);
      if (zp_CSI_RS_AperiodicInfo_r14 != null) zp_CSI_RS_AperiodicInfo_r14.print (_sb, "zp_CSI_RS_AperiodicInfo_r14", _level+1);
      if (ul_dmrs_Enhancements_r14 != null) ul_dmrs_Enhancements_r14.print (_sb, "ul_dmrs_Enhancements_r14", _level+1);
      if (densityReductionNP_r14 != null) densityReductionNP_r14.print (_sb, "densityReductionNP_r14", _level+1);
      if (densityReductionBF_r14 != null) densityReductionBF_r14.print (_sb, "densityReductionBF_r14", _level+1);
      if (hybridCSI_r14 != null) hybridCSI_r14.print (_sb, "hybridCSI_r14", _level+1);
      if (semiOL_r14 != null) semiOL_r14.print (_sb, "semiOL_r14", _level+1);
      if (csi_ReportingNP_r14 != null) csi_ReportingNP_r14.print (_sb, "csi_ReportingNP_r14", _level+1);
      if (csi_ReportingAdvanced_r14 != null) csi_ReportingAdvanced_r14.print (_sb, "csi_ReportingAdvanced_r14", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
