/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CA_MIMO_ParametersDL_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CA-MIMO-ParametersDL-r13";
   }

   public CA_BandwidthClass_r10 ca_BandwidthClassDL_r13 = null;
   public MIMO_CapabilityDL_r10 supportedMIMO_CapabilityDL_r13 = null;  // optional
   public CA_MIMO_ParametersDL_r13_fourLayerTM3_TM4_r13 fourLayerTM3_TM4_r13 = null;  // optional
   public CA_MIMO_ParametersDL_r13_intraBandContiguousCC_InfoList_r13 intraBandContiguousCC_InfoList_r13;

   public CA_MIMO_ParametersDL_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CA_MIMO_ParametersDL_r13 (
      CA_BandwidthClass_r10 ca_BandwidthClassDL_r13_,
      MIMO_CapabilityDL_r10 supportedMIMO_CapabilityDL_r13_,
      CA_MIMO_ParametersDL_r13_fourLayerTM3_TM4_r13 fourLayerTM3_TM4_r13_,
      CA_MIMO_ParametersDL_r13_intraBandContiguousCC_InfoList_r13 intraBandContiguousCC_InfoList_r13_
   ) {
      super();
      ca_BandwidthClassDL_r13 = ca_BandwidthClassDL_r13_;
      supportedMIMO_CapabilityDL_r13 = supportedMIMO_CapabilityDL_r13_;
      fourLayerTM3_TM4_r13 = fourLayerTM3_TM4_r13_;
      intraBandContiguousCC_InfoList_r13 = intraBandContiguousCC_InfoList_r13_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public CA_MIMO_ParametersDL_r13 (
      CA_BandwidthClass_r10 ca_BandwidthClassDL_r13_,
      CA_MIMO_ParametersDL_r13_intraBandContiguousCC_InfoList_r13 intraBandContiguousCC_InfoList_r13_
   ) {
      super();
      ca_BandwidthClassDL_r13 = ca_BandwidthClassDL_r13_;
      intraBandContiguousCC_InfoList_r13 = intraBandContiguousCC_InfoList_r13_;
   }

   public void init () {
      ca_BandwidthClassDL_r13 = null;
      supportedMIMO_CapabilityDL_r13 = null;
      fourLayerTM3_TM4_r13 = null;
      intraBandContiguousCC_InfoList_r13 = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ca_BandwidthClassDL_r13;
         case 1: return supportedMIMO_CapabilityDL_r13;
         case 2: return fourLayerTM3_TM4_r13;
         case 3: return intraBandContiguousCC_InfoList_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ca-BandwidthClassDL-r13";
         case 1: return "supportedMIMO-CapabilityDL-r13";
         case 2: return "fourLayerTM3-TM4-r13";
         case 3: return "intraBandContiguousCC-InfoList-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean supportedMIMO_CapabilityDL_r13Present = buffer.decodeBit ("supportedMIMO_CapabilityDL_r13Present");
      boolean fourLayerTM3_TM4_r13Present = buffer.decodeBit ("fourLayerTM3_TM4_r13Present");

      // decode ca_BandwidthClassDL_r13

      buffer.getContext().eventDispatcher.startElement("ca_BandwidthClassDL_r13", -1);

      {
         int tval = CA_BandwidthClass_r10.decodeEnumValue (buffer);
         ca_BandwidthClassDL_r13 = CA_BandwidthClass_r10.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("ca_BandwidthClassDL_r13", -1);

      // decode supportedMIMO_CapabilityDL_r13

      if (supportedMIMO_CapabilityDL_r13Present) {
         buffer.getContext().eventDispatcher.startElement("supportedMIMO_CapabilityDL_r13", -1);

         int tval = MIMO_CapabilityDL_r10.decodeEnumValue (buffer);
         supportedMIMO_CapabilityDL_r13 = MIMO_CapabilityDL_r10.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("supportedMIMO_CapabilityDL_r13", -1);
      }
      else {
         supportedMIMO_CapabilityDL_r13 = null;
      }

      // decode fourLayerTM3_TM4_r13

      if (fourLayerTM3_TM4_r13Present) {
         buffer.getContext().eventDispatcher.startElement("fourLayerTM3_TM4_r13", -1);

         int tval = CA_MIMO_ParametersDL_r13_fourLayerTM3_TM4_r13.decodeEnumValue (buffer);
         fourLayerTM3_TM4_r13 = CA_MIMO_ParametersDL_r13_fourLayerTM3_TM4_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("fourLayerTM3_TM4_r13", -1);
      }
      else {
         fourLayerTM3_TM4_r13 = null;
      }

      // decode intraBandContiguousCC_InfoList_r13

      buffer.getContext().eventDispatcher.startElement("intraBandContiguousCC_InfoList_r13", -1);

      intraBandContiguousCC_InfoList_r13 = new CA_MIMO_ParametersDL_r13_intraBandContiguousCC_InfoList_r13();
      intraBandContiguousCC_InfoList_r13.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("intraBandContiguousCC_InfoList_r13", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ca_BandwidthClassDL_r13 != null) ca_BandwidthClassDL_r13.print (_sb, "ca_BandwidthClassDL_r13", _level+1);
      if (supportedMIMO_CapabilityDL_r13 != null) supportedMIMO_CapabilityDL_r13.print (_sb, "supportedMIMO_CapabilityDL_r13", _level+1);
      if (fourLayerTM3_TM4_r13 != null) fourLayerTM3_TM4_r13.print (_sb, "fourLayerTM3_TM4_r13", _level+1);
      if (intraBandContiguousCC_InfoList_r13 != null) intraBandContiguousCC_InfoList_r13.print (_sb, "intraBandContiguousCC_InfoList_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
