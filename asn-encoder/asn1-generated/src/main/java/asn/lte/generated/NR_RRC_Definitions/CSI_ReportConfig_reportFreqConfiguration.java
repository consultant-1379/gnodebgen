/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CSI_ReportConfig_reportFreqConfiguration extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CSI_ReportConfig_reportFreqConfiguration_cqi_FormatIndicator cqi_FormatIndicator = null;  // optional
   public CSI_ReportConfig_reportFreqConfiguration_pmi_FormatIndicator pmi_FormatIndicator = null;  // optional
   public CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand csi_ReportingBand;  // optional

   public CSI_ReportConfig_reportFreqConfiguration () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CSI_ReportConfig_reportFreqConfiguration (
      CSI_ReportConfig_reportFreqConfiguration_cqi_FormatIndicator cqi_FormatIndicator_,
      CSI_ReportConfig_reportFreqConfiguration_pmi_FormatIndicator pmi_FormatIndicator_,
      CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand csi_ReportingBand_
   ) {
      super();
      cqi_FormatIndicator = cqi_FormatIndicator_;
      pmi_FormatIndicator = pmi_FormatIndicator_;
      csi_ReportingBand = csi_ReportingBand_;
   }

   public void init () {
      cqi_FormatIndicator = null;
      pmi_FormatIndicator = null;
      csi_ReportingBand = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return cqi_FormatIndicator;
         case 1: return pmi_FormatIndicator;
         case 2: return csi_ReportingBand;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "cqi-FormatIndicator";
         case 1: return "pmi-FormatIndicator";
         case 2: return "csi-ReportingBand";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean cqi_FormatIndicatorPresent = buffer.decodeBit ("cqi_FormatIndicatorPresent");
      boolean pmi_FormatIndicatorPresent = buffer.decodeBit ("pmi_FormatIndicatorPresent");
      boolean csi_ReportingBandPresent = buffer.decodeBit ("csi_ReportingBandPresent");

      // decode cqi_FormatIndicator

      if (cqi_FormatIndicatorPresent) {
         buffer.getContext().eventDispatcher.startElement("cqi_FormatIndicator", -1);

         int tval = CSI_ReportConfig_reportFreqConfiguration_cqi_FormatIndicator.decodeEnumValue (buffer);
         cqi_FormatIndicator = CSI_ReportConfig_reportFreqConfiguration_cqi_FormatIndicator.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("cqi_FormatIndicator", -1);
      }
      else {
         cqi_FormatIndicator = null;
      }

      // decode pmi_FormatIndicator

      if (pmi_FormatIndicatorPresent) {
         buffer.getContext().eventDispatcher.startElement("pmi_FormatIndicator", -1);

         int tval = CSI_ReportConfig_reportFreqConfiguration_pmi_FormatIndicator.decodeEnumValue (buffer);
         pmi_FormatIndicator = CSI_ReportConfig_reportFreqConfiguration_pmi_FormatIndicator.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("pmi_FormatIndicator", -1);
      }
      else {
         pmi_FormatIndicator = null;
      }

      // decode csi_ReportingBand

      if (csi_ReportingBandPresent) {
         buffer.getContext().eventDispatcher.startElement("csi_ReportingBand", -1);

         csi_ReportingBand = new CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand();
         csi_ReportingBand.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("csi_ReportingBand", -1);
      }
      else {
         csi_ReportingBand = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (cqi_FormatIndicator != null) cqi_FormatIndicator.print (_sb, "cqi_FormatIndicator", _level+1);
      if (pmi_FormatIndicator != null) pmi_FormatIndicator.print (_sb, "pmi_FormatIndicator", _level+1);
      if (csi_ReportingBand != null) csi_ReportingBand.print (_sb, "csi_ReportingBand", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
