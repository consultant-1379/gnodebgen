/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class InterFreqTargetInfo_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "InterFreqTargetInfo-r16";
   }

   public ARFCN_ValueNR dl_CarrierFreq;
   public InterFreqTargetInfo_r16_cellList cellList;  // optional

   public InterFreqTargetInfo_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public InterFreqTargetInfo_r16 (
      ARFCN_ValueNR dl_CarrierFreq_,
      InterFreqTargetInfo_r16_cellList cellList_
   ) {
      super();
      dl_CarrierFreq = dl_CarrierFreq_;
      cellList = cellList_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public InterFreqTargetInfo_r16 (
      ARFCN_ValueNR dl_CarrierFreq_
   ) {
      super();
      dl_CarrierFreq = dl_CarrierFreq_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public InterFreqTargetInfo_r16 (long dl_CarrierFreq_,
      InterFreqTargetInfo_r16_cellList cellList_
   ) {
      super();
      dl_CarrierFreq = new ARFCN_ValueNR (dl_CarrierFreq_);
      cellList = cellList_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public InterFreqTargetInfo_r16 (
      long dl_CarrierFreq_
   ) {
      super();
      dl_CarrierFreq = new ARFCN_ValueNR (dl_CarrierFreq_);
   }

   public void init () {
      dl_CarrierFreq = null;
      cellList = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return dl_CarrierFreq;
         case 1: return cellList;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "dl-CarrierFreq";
         case 1: return "cellList";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean cellListPresent = buffer.decodeBit ("cellListPresent");

      // decode dl_CarrierFreq

      buffer.getContext().eventDispatcher.startElement("dl_CarrierFreq", -1);

      dl_CarrierFreq = new ARFCN_ValueNR();
      dl_CarrierFreq.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("dl_CarrierFreq", -1);

      // decode cellList

      if (cellListPresent) {
         buffer.getContext().eventDispatcher.startElement("cellList", -1);

         cellList = new InterFreqTargetInfo_r16_cellList();
         cellList.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cellList", -1);
      }
      else {
         cellList = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (dl_CarrierFreq != null) dl_CarrierFreq.print (_sb, "dl_CarrierFreq", _level+1);
      if (cellList != null) cellList.print (_sb, "cellList", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
