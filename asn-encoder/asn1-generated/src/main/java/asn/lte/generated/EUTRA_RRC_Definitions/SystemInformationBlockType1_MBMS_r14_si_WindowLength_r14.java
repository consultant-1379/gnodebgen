/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _MS1 = 0;
   public static final int _MS2 = 1;
   public static final int _MS5 = 2;
   public static final int _MS10 = 3;
   public static final int _MS15 = 4;
   public static final int _MS20 = 5;
   public static final int _MS40 = 6;
   public static final int _MS80 = 7;

   // Singleton instances of SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14
   protected static final SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 _ms1 = new SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14(0);
   protected static final SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 _ms2 = new SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14(1);
   protected static final SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 _ms5 = new SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14(2);
   protected static final SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 _ms10 = new SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14(3);
   protected static final SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 _ms15 = new SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14(4);
   protected static final SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 _ms20 = new SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14(5);
   protected static final SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 _ms40 = new SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14(6);
   protected static final SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 _ms80 = new SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14(7);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for ms1.
    */
   public static SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 ms1() {
      return _ms1;
   }

   /**
    * Singleton accessor method for ms2.
    */
   public static SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 ms2() {
      return _ms2;
   }

   /**
    * Singleton accessor method for ms5.
    */
   public static SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 ms5() {
      return _ms5;
   }

   /**
    * Singleton accessor method for ms10.
    */
   public static SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 ms10() {
      return _ms10;
   }

   /**
    * Singleton accessor method for ms15.
    */
   public static SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 ms15() {
      return _ms15;
   }

   /**
    * Singleton accessor method for ms20.
    */
   public static SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 ms20() {
      return _ms20;
   }

   /**
    * Singleton accessor method for ms40.
    */
   public static SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 ms40() {
      return _ms40;
   }

   /**
    * Singleton accessor method for ms80.
    */
   public static SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 ms80() {
      return _ms80;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14.valueOf( SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return ms1();
         case 1: return ms2();
         case 2: return ms5();
         case 3: return ms10();
         case 4: return ms15();
         case 5: return ms20();
         case 6: return ms40();
         case 7: return ms80();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (8);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("ms1");
         case 1: return ("ms2");
         case 2: return ("ms5");
         case 3: return ("ms10");
         case 4: return ("ms15");
         case 5: return ("ms20");
         case 6: return ("ms40");
         case 7: return ("ms80");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
