/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class AntennaInfoDedicated_codebookSubsetRestriction extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _N2TXANTENNA_TM3 = 1;
   public final static byte _N4TXANTENNA_TM3 = 2;
   public final static byte _N2TXANTENNA_TM4 = 3;
   public final static byte _N4TXANTENNA_TM4 = 4;
   public final static byte _N2TXANTENNA_TM5 = 5;
   public final static byte _N4TXANTENNA_TM5 = 6;
   public final static byte _N2TXANTENNA_TM6 = 7;
   public final static byte _N4TXANTENNA_TM6 = 8;

   public AntennaInfoDedicated_codebookSubsetRestriction () {
      super();
   }

   public AntennaInfoDedicated_codebookSubsetRestriction (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _N2TXANTENNA_TM3: return "n2TxAntenna_tm3";
      case _N4TXANTENNA_TM3: return "n4TxAntenna_tm3";
      case _N2TXANTENNA_TM4: return "n2TxAntenna_tm4";
      case _N4TXANTENNA_TM4: return "n4TxAntenna_tm4";
      case _N2TXANTENNA_TM5: return "n2TxAntenna_tm5";
      case _N4TXANTENNA_TM5: return "n4TxAntenna_tm5";
      case _N2TXANTENNA_TM6: return "n2TxAntenna_tm6";
      case _N4TXANTENNA_TM6: return "n4TxAntenna_tm6";
      default: return "UNDEFINED";
      }
   }

   public void set_n2TxAntenna_tm3 (Asn1BitString value) {
      setElement (_N2TXANTENNA_TM3, value);
   }

   public void set_n4TxAntenna_tm3 (Asn1BitString value) {
      setElement (_N4TXANTENNA_TM3, value);
   }

   public void set_n2TxAntenna_tm4 (Asn1BitString value) {
      setElement (_N2TXANTENNA_TM4, value);
   }

   public void set_n4TxAntenna_tm4 (Asn1BitString value) {
      setElement (_N4TXANTENNA_TM4, value);
   }

   public void set_n2TxAntenna_tm5 (Asn1BitString value) {
      setElement (_N2TXANTENNA_TM5, value);
   }

   public void set_n4TxAntenna_tm5 (Asn1BitString value) {
      setElement (_N4TXANTENNA_TM5, value);
   }

   public void set_n2TxAntenna_tm6 (Asn1BitString value) {
      setElement (_N2TXANTENNA_TM6, value);
   }

   public void set_n4TxAntenna_tm6 (Asn1BitString value) {
      setElement (_N4TXANTENNA_TM6, value);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (8, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // n2TxAntenna_tm3
         case 0: { 
            Asn1BitString n2TxAntenna_tm3;
            element = n2TxAntenna_tm3 = new Asn1BitString();
            n2TxAntenna_tm3.decode (buffer, 2, 2);

            buffer.invokeCharacters(n2TxAntenna_tm3.toString());
            break;
         }

         // n4TxAntenna_tm3
         case 1: { 
            Asn1BitString n4TxAntenna_tm3;
            element = n4TxAntenna_tm3 = new Asn1BitString();
            n4TxAntenna_tm3.decode (buffer, 4, 4);

            buffer.invokeCharacters(n4TxAntenna_tm3.toString());
            break;
         }

         // n2TxAntenna_tm4
         case 2: { 
            Asn1BitString n2TxAntenna_tm4;
            element = n2TxAntenna_tm4 = new Asn1BitString();
            n2TxAntenna_tm4.decode (buffer, 6, 6);

            buffer.invokeCharacters(n2TxAntenna_tm4.toString());
            break;
         }

         // n4TxAntenna_tm4
         case 3: { 
            Asn1BitString n4TxAntenna_tm4;
            element = n4TxAntenna_tm4 = new Asn1BitString();
            n4TxAntenna_tm4.decode (buffer, 64, 64);

            buffer.invokeCharacters(n4TxAntenna_tm4.toString());
            break;
         }

         // n2TxAntenna_tm5
         case 4: { 
            Asn1BitString n2TxAntenna_tm5;
            element = n2TxAntenna_tm5 = new Asn1BitString();
            n2TxAntenna_tm5.decode (buffer, 4, 4);

            buffer.invokeCharacters(n2TxAntenna_tm5.toString());
            break;
         }

         // n4TxAntenna_tm5
         case 5: { 
            Asn1BitString n4TxAntenna_tm5;
            element = n4TxAntenna_tm5 = new Asn1BitString();
            n4TxAntenna_tm5.decode (buffer, 16, 16);

            buffer.invokeCharacters(n4TxAntenna_tm5.toString());
            break;
         }

         // n2TxAntenna_tm6
         case 6: { 
            Asn1BitString n2TxAntenna_tm6;
            element = n2TxAntenna_tm6 = new Asn1BitString();
            n2TxAntenna_tm6.decode (buffer, 4, 4);

            buffer.invokeCharacters(n2TxAntenna_tm6.toString());
            break;
         }

         // n4TxAntenna_tm6
         case 7: { 
            Asn1BitString n4TxAntenna_tm6;
            element = n4TxAntenna_tm6 = new Asn1BitString();
            n4TxAntenna_tm6.decode (buffer, 16, 16);

            buffer.invokeCharacters(n4TxAntenna_tm6.toString());
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
