/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformationBlockType3_cellReselectionServingFreqInfo extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public ReselectionThreshold s_NonIntraSearch;  // optional
   public ReselectionThreshold threshServingLow;
   public CellReselectionPriority cellReselectionPriority;

   public SystemInformationBlockType3_cellReselectionServingFreqInfo () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SystemInformationBlockType3_cellReselectionServingFreqInfo (
      ReselectionThreshold s_NonIntraSearch_,
      ReselectionThreshold threshServingLow_,
      CellReselectionPriority cellReselectionPriority_
   ) {
      super();
      s_NonIntraSearch = s_NonIntraSearch_;
      threshServingLow = threshServingLow_;
      cellReselectionPriority = cellReselectionPriority_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SystemInformationBlockType3_cellReselectionServingFreqInfo (
      ReselectionThreshold threshServingLow_,
      CellReselectionPriority cellReselectionPriority_
   ) {
      super();
      threshServingLow = threshServingLow_;
      cellReselectionPriority = cellReselectionPriority_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SystemInformationBlockType3_cellReselectionServingFreqInfo (long s_NonIntraSearch_,
      long threshServingLow_,
      long cellReselectionPriority_
   ) {
      super();
      s_NonIntraSearch = new ReselectionThreshold (s_NonIntraSearch_);
      threshServingLow = new ReselectionThreshold (threshServingLow_);
      cellReselectionPriority = new CellReselectionPriority (cellReselectionPriority_);
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public SystemInformationBlockType3_cellReselectionServingFreqInfo (
      long threshServingLow_,
      long cellReselectionPriority_
   ) {
      super();
      threshServingLow = new ReselectionThreshold (threshServingLow_);
      cellReselectionPriority = new CellReselectionPriority (cellReselectionPriority_);
   }

   public void init () {
      s_NonIntraSearch = null;
      threshServingLow = null;
      cellReselectionPriority = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return s_NonIntraSearch;
         case 1: return threshServingLow;
         case 2: return cellReselectionPriority;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "s-NonIntraSearch";
         case 1: return "threshServingLow";
         case 2: return "cellReselectionPriority";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean s_NonIntraSearchPresent = buffer.decodeBit ("s_NonIntraSearchPresent");

      // decode s_NonIntraSearch

      if (s_NonIntraSearchPresent) {
         buffer.getContext().eventDispatcher.startElement("s_NonIntraSearch", -1);

         s_NonIntraSearch = new ReselectionThreshold();
         s_NonIntraSearch.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("s_NonIntraSearch", -1);
      }
      else {
         s_NonIntraSearch = null;
      }

      // decode threshServingLow

      buffer.getContext().eventDispatcher.startElement("threshServingLow", -1);

      threshServingLow = new ReselectionThreshold();
      threshServingLow.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("threshServingLow", -1);

      // decode cellReselectionPriority

      buffer.getContext().eventDispatcher.startElement("cellReselectionPriority", -1);

      cellReselectionPriority = new CellReselectionPriority();
      cellReselectionPriority.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("cellReselectionPriority", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (s_NonIntraSearch != null) s_NonIntraSearch.print (_sb, "s_NonIntraSearch", _level+1);
      if (threshServingLow != null) threshServingLow.print (_sb, "threshServingLow", _level+1);
      if (cellReselectionPriority != null) cellReselectionPriority.print (_sb, "cellReselectionPriority", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
