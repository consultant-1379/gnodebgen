/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.S1AP_IEs;

import com.objsys.asn1j.runtime.*;

public class RRC_Establishment_Cause extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_S1AP_IEsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RRC-Establishment-Cause";
   }

   // Integer constants for switch-case
   public static final int _EMERGENCY = 0;
   public static final int _HIGHPRIORITYACCESS = 1;
   public static final int _MT_ACCESS = 2;
   public static final int _MO_SIGNALLING = 3;
   public static final int _MO_DATA = 4;
   public static final int _DELAY_TOLERANTACCESS = 5;
   public static final int _MO_VOICECALL = 6;
   public static final int _MO_EXCEPTIONDATA = 7;

   // Singleton instances of RRC_Establishment_Cause
   protected static final RRC_Establishment_Cause _emergency = new RRC_Establishment_Cause(0);
   protected static final RRC_Establishment_Cause _highPriorityAccess = new RRC_Establishment_Cause(1);
   protected static final RRC_Establishment_Cause _mt_Access = new RRC_Establishment_Cause(2);
   protected static final RRC_Establishment_Cause _mo_Signalling = new RRC_Establishment_Cause(3);
   protected static final RRC_Establishment_Cause _mo_Data = new RRC_Establishment_Cause(4);
   protected static final RRC_Establishment_Cause _delay_TolerantAccess = new RRC_Establishment_Cause(5);
   protected static final RRC_Establishment_Cause _mo_VoiceCall = new RRC_Establishment_Cause(6);
   protected static final RRC_Establishment_Cause _mo_ExceptionData = new RRC_Establishment_Cause(7);
   private static RRC_Establishment_Cause __undefined = new RRC_Establishment_Cause(-999);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected RRC_Establishment_Cause (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for emergency.
    */
   public static RRC_Establishment_Cause emergency() {
      return _emergency;
   }

   /**
    * Singleton accessor method for highPriorityAccess.
    */
   public static RRC_Establishment_Cause highPriorityAccess() {
      return _highPriorityAccess;
   }

   /**
    * Singleton accessor method for mt_Access.
    */
   public static RRC_Establishment_Cause mt_Access() {
      return _mt_Access;
   }

   /**
    * Singleton accessor method for mo_Signalling.
    */
   public static RRC_Establishment_Cause mo_Signalling() {
      return _mo_Signalling;
   }

   /**
    * Singleton accessor method for mo_Data.
    */
   public static RRC_Establishment_Cause mo_Data() {
      return _mo_Data;
   }

   /**
    * Singleton accessor method for delay_TolerantAccess.
    */
   public static RRC_Establishment_Cause delay_TolerantAccess() {
      return _delay_TolerantAccess;
   }

   /**
    * Singleton accessor method for mo_VoiceCall.
    */
   public static RRC_Establishment_Cause mo_VoiceCall() {
      return _mo_VoiceCall;
   }

   /**
    * Singleton accessor method for mo_ExceptionData.
    */
   public static RRC_Establishment_Cause mo_ExceptionData() {
      return _mo_ExceptionData;
   }

   /** Undefined value. */
   protected static RRC_Establishment_Cause __undefined_() { return __undefined; }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return RRC_Establishment_Cause.valueOf( RRC_Establishment_Cause.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static RRC_Establishment_Cause valueOf (int _value)
   {
      switch ((int)_value) {
         case 0: return emergency();
         case 1: return highPriorityAccess();
         case 2: return mt_Access();
         case 3: return mo_Signalling();
         case 4: return mo_Data();
         case 5: return delay_TolerantAccess();
         case 6: return mo_VoiceCall();
         case 7: return mo_ExceptionData();
         default: return __undefined_();
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      boolean extbit = buffer.decodeBit ("extbit");

      if (extbit) {
         ui = buffer.decodeSmallNonNegWholeNumber ();

         switch (ui) {
            case 0: ret = 5; break;
            case 1: ret = 6; break;
            case 2: ret = 7; break;
            default: ret = 0x7fffffff; break;
         }
      }
      else {
         ui = (int) buffer.decodeConsWholeNumber (5);

         switch (ui) {
            case 0: ret =  0; break;
            case 1: ret =  1; break;
            case 2: ret =  2; break;
            case 3: ret =  3; break;
            case 4: ret =  4; break;
            default: throw new Asn1InvalidEnumException (ui);
         }
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (RRC_Establishment_Cause.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("emergency");
         case 1: return ("highPriorityAccess");
         case 2: return ("mt-Access");
         case 3: return ("mo-Signalling");
         case 4: return ("mo-Data");
         case 5: return ("delay-TolerantAccess");
         case 6: return ("mo-VoiceCall");
         case 7: return ("mo-ExceptionData");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
