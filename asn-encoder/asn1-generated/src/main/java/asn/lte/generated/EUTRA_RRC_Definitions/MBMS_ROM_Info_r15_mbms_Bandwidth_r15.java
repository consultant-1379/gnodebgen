/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MBMS_ROM_Info_r15_mbms_Bandwidth_r15 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _N6 = 0;
   public static final int _N15 = 1;
   public static final int _N25 = 2;
   public static final int _N50 = 3;
   public static final int _N75 = 4;
   public static final int _N100 = 5;

   // Singleton instances of MBMS_ROM_Info_r15_mbms_Bandwidth_r15
   protected static final MBMS_ROM_Info_r15_mbms_Bandwidth_r15 _n6 = new MBMS_ROM_Info_r15_mbms_Bandwidth_r15(0);
   protected static final MBMS_ROM_Info_r15_mbms_Bandwidth_r15 _n15 = new MBMS_ROM_Info_r15_mbms_Bandwidth_r15(1);
   protected static final MBMS_ROM_Info_r15_mbms_Bandwidth_r15 _n25 = new MBMS_ROM_Info_r15_mbms_Bandwidth_r15(2);
   protected static final MBMS_ROM_Info_r15_mbms_Bandwidth_r15 _n50 = new MBMS_ROM_Info_r15_mbms_Bandwidth_r15(3);
   protected static final MBMS_ROM_Info_r15_mbms_Bandwidth_r15 _n75 = new MBMS_ROM_Info_r15_mbms_Bandwidth_r15(4);
   protected static final MBMS_ROM_Info_r15_mbms_Bandwidth_r15 _n100 = new MBMS_ROM_Info_r15_mbms_Bandwidth_r15(5);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    */
   protected MBMS_ROM_Info_r15_mbms_Bandwidth_r15 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for n6.
    */
   public static MBMS_ROM_Info_r15_mbms_Bandwidth_r15 n6() {
      return _n6;
   }

   /**
    * Singleton accessor method for n15.
    */
   public static MBMS_ROM_Info_r15_mbms_Bandwidth_r15 n15() {
      return _n15;
   }

   /**
    * Singleton accessor method for n25.
    */
   public static MBMS_ROM_Info_r15_mbms_Bandwidth_r15 n25() {
      return _n25;
   }

   /**
    * Singleton accessor method for n50.
    */
   public static MBMS_ROM_Info_r15_mbms_Bandwidth_r15 n50() {
      return _n50;
   }

   /**
    * Singleton accessor method for n75.
    */
   public static MBMS_ROM_Info_r15_mbms_Bandwidth_r15 n75() {
      return _n75;
   }

   /**
    * Singleton accessor method for n100.
    */
   public static MBMS_ROM_Info_r15_mbms_Bandwidth_r15 n100() {
      return _n100;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return MBMS_ROM_Info_r15_mbms_Bandwidth_r15.valueOf( MBMS_ROM_Info_r15_mbms_Bandwidth_r15.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static MBMS_ROM_Info_r15_mbms_Bandwidth_r15 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return n6();
         case 1: return n15();
         case 2: return n25();
         case 3: return n50();
         case 4: return n75();
         case 5: return n100();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (6);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (MBMS_ROM_Info_r15_mbms_Bandwidth_r15.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("n6");
         case 1: return ("n15");
         case 2: return ("n25");
         case 3: return ("n50");
         case 4: return ("n75");
         case 5: return ("n100");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
