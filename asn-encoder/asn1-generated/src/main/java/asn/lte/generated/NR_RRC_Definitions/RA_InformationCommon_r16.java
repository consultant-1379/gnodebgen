/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RA_InformationCommon_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RA-InformationCommon-r16";
   }

   public ARFCN_ValueNR absoluteFrequencyPointA_r16;
   public Asn1Integer locationAndBandwidth_r16;
   public SubcarrierSpacing subcarrierSpacing_r16 = null;
   public Asn1Integer msg1_FrequencyStart_r16;  // optional
   public Asn1Integer msg1_FrequencyStartCFRA_r16;  // optional
   public SubcarrierSpacing msg1_SubcarrierSpacing_r16 = null;  // optional
   public SubcarrierSpacing msg1_SubcarrierSpacingCFRA_r16 = null;  // optional
   public RA_InformationCommon_r16_msg1_FDM_r16 msg1_FDM_r16 = null;  // optional
   public RA_InformationCommon_r16_msg1_FDMCFRA_r16 msg1_FDMCFRA_r16 = null;  // optional
   public PerRAInfoList_r16 perRAInfoList_r16;

   public RA_InformationCommon_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RA_InformationCommon_r16 (
      ARFCN_ValueNR absoluteFrequencyPointA_r16_,
      Asn1Integer locationAndBandwidth_r16_,
      SubcarrierSpacing subcarrierSpacing_r16_,
      Asn1Integer msg1_FrequencyStart_r16_,
      Asn1Integer msg1_FrequencyStartCFRA_r16_,
      SubcarrierSpacing msg1_SubcarrierSpacing_r16_,
      SubcarrierSpacing msg1_SubcarrierSpacingCFRA_r16_,
      RA_InformationCommon_r16_msg1_FDM_r16 msg1_FDM_r16_,
      RA_InformationCommon_r16_msg1_FDMCFRA_r16 msg1_FDMCFRA_r16_,
      PerRAInfoList_r16 perRAInfoList_r16_
   ) {
      super();
      absoluteFrequencyPointA_r16 = absoluteFrequencyPointA_r16_;
      locationAndBandwidth_r16 = locationAndBandwidth_r16_;
      subcarrierSpacing_r16 = subcarrierSpacing_r16_;
      msg1_FrequencyStart_r16 = msg1_FrequencyStart_r16_;
      msg1_FrequencyStartCFRA_r16 = msg1_FrequencyStartCFRA_r16_;
      msg1_SubcarrierSpacing_r16 = msg1_SubcarrierSpacing_r16_;
      msg1_SubcarrierSpacingCFRA_r16 = msg1_SubcarrierSpacingCFRA_r16_;
      msg1_FDM_r16 = msg1_FDM_r16_;
      msg1_FDMCFRA_r16 = msg1_FDMCFRA_r16_;
      perRAInfoList_r16 = perRAInfoList_r16_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public RA_InformationCommon_r16 (
      ARFCN_ValueNR absoluteFrequencyPointA_r16_,
      Asn1Integer locationAndBandwidth_r16_,
      SubcarrierSpacing subcarrierSpacing_r16_,
      PerRAInfoList_r16 perRAInfoList_r16_
   ) {
      super();
      absoluteFrequencyPointA_r16 = absoluteFrequencyPointA_r16_;
      locationAndBandwidth_r16 = locationAndBandwidth_r16_;
      subcarrierSpacing_r16 = subcarrierSpacing_r16_;
      perRAInfoList_r16 = perRAInfoList_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public RA_InformationCommon_r16 (long absoluteFrequencyPointA_r16_,
      long locationAndBandwidth_r16_,
      SubcarrierSpacing subcarrierSpacing_r16_,
      long msg1_FrequencyStart_r16_,
      long msg1_FrequencyStartCFRA_r16_,
      SubcarrierSpacing msg1_SubcarrierSpacing_r16_,
      SubcarrierSpacing msg1_SubcarrierSpacingCFRA_r16_,
      RA_InformationCommon_r16_msg1_FDM_r16 msg1_FDM_r16_,
      RA_InformationCommon_r16_msg1_FDMCFRA_r16 msg1_FDMCFRA_r16_,
      PerRAInfoList_r16 perRAInfoList_r16_
   ) {
      super();
      absoluteFrequencyPointA_r16 = new ARFCN_ValueNR (absoluteFrequencyPointA_r16_);
      locationAndBandwidth_r16 = new Asn1Integer (locationAndBandwidth_r16_);
      subcarrierSpacing_r16 = subcarrierSpacing_r16_;
      msg1_FrequencyStart_r16 = new Asn1Integer (msg1_FrequencyStart_r16_);
      msg1_FrequencyStartCFRA_r16 = new Asn1Integer (msg1_FrequencyStartCFRA_r16_);
      msg1_SubcarrierSpacing_r16 = msg1_SubcarrierSpacing_r16_;
      msg1_SubcarrierSpacingCFRA_r16 = msg1_SubcarrierSpacingCFRA_r16_;
      msg1_FDM_r16 = msg1_FDM_r16_;
      msg1_FDMCFRA_r16 = msg1_FDMCFRA_r16_;
      perRAInfoList_r16 = perRAInfoList_r16_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public RA_InformationCommon_r16 (
      long absoluteFrequencyPointA_r16_,
      long locationAndBandwidth_r16_,
      SubcarrierSpacing subcarrierSpacing_r16_,
      PerRAInfoList_r16 perRAInfoList_r16_
   ) {
      super();
      absoluteFrequencyPointA_r16 = new ARFCN_ValueNR (absoluteFrequencyPointA_r16_);
      locationAndBandwidth_r16 = new Asn1Integer (locationAndBandwidth_r16_);
      subcarrierSpacing_r16 = subcarrierSpacing_r16_;
      perRAInfoList_r16 = perRAInfoList_r16_;
   }

   public void init () {
      absoluteFrequencyPointA_r16 = null;
      locationAndBandwidth_r16 = null;
      subcarrierSpacing_r16 = null;
      msg1_FrequencyStart_r16 = null;
      msg1_FrequencyStartCFRA_r16 = null;
      msg1_SubcarrierSpacing_r16 = null;
      msg1_SubcarrierSpacingCFRA_r16 = null;
      msg1_FDM_r16 = null;
      msg1_FDMCFRA_r16 = null;
      perRAInfoList_r16 = null;
   }

   public int getElementCount() { return 10; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return absoluteFrequencyPointA_r16;
         case 1: return locationAndBandwidth_r16;
         case 2: return subcarrierSpacing_r16;
         case 3: return msg1_FrequencyStart_r16;
         case 4: return msg1_FrequencyStartCFRA_r16;
         case 5: return msg1_SubcarrierSpacing_r16;
         case 6: return msg1_SubcarrierSpacingCFRA_r16;
         case 7: return msg1_FDM_r16;
         case 8: return msg1_FDMCFRA_r16;
         case 9: return perRAInfoList_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "absoluteFrequencyPointA-r16";
         case 1: return "locationAndBandwidth-r16";
         case 2: return "subcarrierSpacing-r16";
         case 3: return "msg1-FrequencyStart-r16";
         case 4: return "msg1-FrequencyStartCFRA-r16";
         case 5: return "msg1-SubcarrierSpacing-r16";
         case 6: return "msg1-SubcarrierSpacingCFRA-r16";
         case 7: return "msg1-FDM-r16";
         case 8: return "msg1-FDMCFRA-r16";
         case 9: return "perRAInfoList-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean msg1_FrequencyStart_r16Present = buffer.decodeBit ("msg1_FrequencyStart_r16Present");
      boolean msg1_FrequencyStartCFRA_r16Present = buffer.decodeBit ("msg1_FrequencyStartCFRA_r16Present");
      boolean msg1_SubcarrierSpacing_r16Present = buffer.decodeBit ("msg1_SubcarrierSpacing_r16Present");
      boolean msg1_SubcarrierSpacingCFRA_r16Present = buffer.decodeBit ("msg1_SubcarrierSpacingCFRA_r16Present");
      boolean msg1_FDM_r16Present = buffer.decodeBit ("msg1_FDM_r16Present");
      boolean msg1_FDMCFRA_r16Present = buffer.decodeBit ("msg1_FDMCFRA_r16Present");

      // decode absoluteFrequencyPointA_r16

      buffer.getContext().eventDispatcher.startElement("absoluteFrequencyPointA_r16", -1);

      absoluteFrequencyPointA_r16 = new ARFCN_ValueNR();
      absoluteFrequencyPointA_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("absoluteFrequencyPointA_r16", -1);

      // decode locationAndBandwidth_r16

      buffer.getContext().eventDispatcher.startElement("locationAndBandwidth_r16", -1);

      locationAndBandwidth_r16 = new Asn1Integer();
      locationAndBandwidth_r16.decode (buffer, 0, 37949);

      buffer.invokeCharacters(locationAndBandwidth_r16.toString());
      buffer.getContext().eventDispatcher.endElement("locationAndBandwidth_r16", -1);

      // decode subcarrierSpacing_r16

      buffer.getContext().eventDispatcher.startElement("subcarrierSpacing_r16", -1);

      {
         int tval = SubcarrierSpacing.decodeEnumValue (buffer);
         subcarrierSpacing_r16 = SubcarrierSpacing.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("subcarrierSpacing_r16", -1);

      // decode msg1_FrequencyStart_r16

      if (msg1_FrequencyStart_r16Present) {
         buffer.getContext().eventDispatcher.startElement("msg1_FrequencyStart_r16", -1);

         msg1_FrequencyStart_r16 = new Asn1Integer();
         msg1_FrequencyStart_r16.decode (buffer, 0, 274);

         buffer.invokeCharacters(msg1_FrequencyStart_r16.toString());
         buffer.getContext().eventDispatcher.endElement("msg1_FrequencyStart_r16", -1);
      }
      else {
         msg1_FrequencyStart_r16 = null;
      }

      // decode msg1_FrequencyStartCFRA_r16

      if (msg1_FrequencyStartCFRA_r16Present) {
         buffer.getContext().eventDispatcher.startElement("msg1_FrequencyStartCFRA_r16", -1);

         msg1_FrequencyStartCFRA_r16 = new Asn1Integer();
         msg1_FrequencyStartCFRA_r16.decode (buffer, 0, 274);

         buffer.invokeCharacters(msg1_FrequencyStartCFRA_r16.toString());
         buffer.getContext().eventDispatcher.endElement("msg1_FrequencyStartCFRA_r16", -1);
      }
      else {
         msg1_FrequencyStartCFRA_r16 = null;
      }

      // decode msg1_SubcarrierSpacing_r16

      if (msg1_SubcarrierSpacing_r16Present) {
         buffer.getContext().eventDispatcher.startElement("msg1_SubcarrierSpacing_r16", -1);

         int tval = SubcarrierSpacing.decodeEnumValue (buffer);
         msg1_SubcarrierSpacing_r16 = SubcarrierSpacing.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("msg1_SubcarrierSpacing_r16", -1);
      }
      else {
         msg1_SubcarrierSpacing_r16 = null;
      }

      // decode msg1_SubcarrierSpacingCFRA_r16

      if (msg1_SubcarrierSpacingCFRA_r16Present) {
         buffer.getContext().eventDispatcher.startElement("msg1_SubcarrierSpacingCFRA_r16", -1);

         int tval = SubcarrierSpacing.decodeEnumValue (buffer);
         msg1_SubcarrierSpacingCFRA_r16 = SubcarrierSpacing.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("msg1_SubcarrierSpacingCFRA_r16", -1);
      }
      else {
         msg1_SubcarrierSpacingCFRA_r16 = null;
      }

      // decode msg1_FDM_r16

      if (msg1_FDM_r16Present) {
         buffer.getContext().eventDispatcher.startElement("msg1_FDM_r16", -1);

         int tval = RA_InformationCommon_r16_msg1_FDM_r16.decodeEnumValue (buffer);
         msg1_FDM_r16 = RA_InformationCommon_r16_msg1_FDM_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("msg1_FDM_r16", -1);
      }
      else {
         msg1_FDM_r16 = null;
      }

      // decode msg1_FDMCFRA_r16

      if (msg1_FDMCFRA_r16Present) {
         buffer.getContext().eventDispatcher.startElement("msg1_FDMCFRA_r16", -1);

         int tval = RA_InformationCommon_r16_msg1_FDMCFRA_r16.decodeEnumValue (buffer);
         msg1_FDMCFRA_r16 = RA_InformationCommon_r16_msg1_FDMCFRA_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("msg1_FDMCFRA_r16", -1);
      }
      else {
         msg1_FDMCFRA_r16 = null;
      }

      // decode perRAInfoList_r16

      buffer.getContext().eventDispatcher.startElement("perRAInfoList_r16", -1);

      perRAInfoList_r16 = new PerRAInfoList_r16();
      perRAInfoList_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("perRAInfoList_r16", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (absoluteFrequencyPointA_r16 != null) absoluteFrequencyPointA_r16.print (_sb, "absoluteFrequencyPointA_r16", _level+1);
      if (locationAndBandwidth_r16 != null) locationAndBandwidth_r16.print (_sb, "locationAndBandwidth_r16", _level+1);
      if (subcarrierSpacing_r16 != null) subcarrierSpacing_r16.print (_sb, "subcarrierSpacing_r16", _level+1);
      if (msg1_FrequencyStart_r16 != null) msg1_FrequencyStart_r16.print (_sb, "msg1_FrequencyStart_r16", _level+1);
      if (msg1_FrequencyStartCFRA_r16 != null) msg1_FrequencyStartCFRA_r16.print (_sb, "msg1_FrequencyStartCFRA_r16", _level+1);
      if (msg1_SubcarrierSpacing_r16 != null) msg1_SubcarrierSpacing_r16.print (_sb, "msg1_SubcarrierSpacing_r16", _level+1);
      if (msg1_SubcarrierSpacingCFRA_r16 != null) msg1_SubcarrierSpacingCFRA_r16.print (_sb, "msg1_SubcarrierSpacingCFRA_r16", _level+1);
      if (msg1_FDM_r16 != null) msg1_FDM_r16.print (_sb, "msg1_FDM_r16", _level+1);
      if (msg1_FDMCFRA_r16 != null) msg1_FDMCFRA_r16.print (_sb, "msg1_FDMCFRA_r16", _level+1);
      if (perRAInfoList_r16 != null) perRAInfoList_r16.print (_sb, "perRAInfoList_r16", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
