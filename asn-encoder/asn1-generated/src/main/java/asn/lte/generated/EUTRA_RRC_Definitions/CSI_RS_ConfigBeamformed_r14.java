/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CSI_RS_ConfigBeamformed_r14 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CSI-RS-ConfigBeamformed-r14";
   }

   public CSI_RS_ConfigBeamformed_r14_csi_RS_ConfigNZPIdListExt_r14 csi_RS_ConfigNZPIdListExt_r14;  // optional
   public CSI_RS_ConfigBeamformed_r14_csi_IM_ConfigIdList_r14 csi_IM_ConfigIdList_r14;  // optional
   public CSI_RS_ConfigBeamformed_r14_p_C_AndCBSR_PerResourceConfigList_r14 p_C_AndCBSR_PerResourceConfigList_r14;  // optional
   public CSI_RS_ConfigBeamformed_r14_ace_For4Tx_PerResourceConfigList_r14 ace_For4Tx_PerResourceConfigList_r14;  // optional
   public CSI_RS_ConfigBeamformed_r14_alternativeCodebookEnabledBeamformed_r14 alternativeCodebookEnabledBeamformed_r14 = null;  // optional
   public CSI_RS_ConfigBeamformed_r14_channelMeasRestriction_r14 channelMeasRestriction_r14 = null;  // optional
   public CSI_RS_ConfigBeamformed_r14_csi_RS_ConfigNZP_ApList_r14 csi_RS_ConfigNZP_ApList_r14;  // optional
   public CSI_RS_Config_NZP_v1430 nzp_ResourceConfigOriginal_v1430;  // optional
   public CSI_RS_ConfigNZP_Activation_r14 csi_RS_NZP_Activation_r14;  // optional

   public CSI_RS_ConfigBeamformed_r14 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CSI_RS_ConfigBeamformed_r14 (
      CSI_RS_ConfigBeamformed_r14_csi_RS_ConfigNZPIdListExt_r14 csi_RS_ConfigNZPIdListExt_r14_,
      CSI_RS_ConfigBeamformed_r14_csi_IM_ConfigIdList_r14 csi_IM_ConfigIdList_r14_,
      CSI_RS_ConfigBeamformed_r14_p_C_AndCBSR_PerResourceConfigList_r14 p_C_AndCBSR_PerResourceConfigList_r14_,
      CSI_RS_ConfigBeamformed_r14_ace_For4Tx_PerResourceConfigList_r14 ace_For4Tx_PerResourceConfigList_r14_,
      CSI_RS_ConfigBeamformed_r14_alternativeCodebookEnabledBeamformed_r14 alternativeCodebookEnabledBeamformed_r14_,
      CSI_RS_ConfigBeamformed_r14_channelMeasRestriction_r14 channelMeasRestriction_r14_,
      CSI_RS_ConfigBeamformed_r14_csi_RS_ConfigNZP_ApList_r14 csi_RS_ConfigNZP_ApList_r14_,
      CSI_RS_Config_NZP_v1430 nzp_ResourceConfigOriginal_v1430_,
      CSI_RS_ConfigNZP_Activation_r14 csi_RS_NZP_Activation_r14_
   ) {
      super();
      csi_RS_ConfigNZPIdListExt_r14 = csi_RS_ConfigNZPIdListExt_r14_;
      csi_IM_ConfigIdList_r14 = csi_IM_ConfigIdList_r14_;
      p_C_AndCBSR_PerResourceConfigList_r14 = p_C_AndCBSR_PerResourceConfigList_r14_;
      ace_For4Tx_PerResourceConfigList_r14 = ace_For4Tx_PerResourceConfigList_r14_;
      alternativeCodebookEnabledBeamformed_r14 = alternativeCodebookEnabledBeamformed_r14_;
      channelMeasRestriction_r14 = channelMeasRestriction_r14_;
      csi_RS_ConfigNZP_ApList_r14 = csi_RS_ConfigNZP_ApList_r14_;
      nzp_ResourceConfigOriginal_v1430 = nzp_ResourceConfigOriginal_v1430_;
      csi_RS_NZP_Activation_r14 = csi_RS_NZP_Activation_r14_;
   }

   public void init () {
      csi_RS_ConfigNZPIdListExt_r14 = null;
      csi_IM_ConfigIdList_r14 = null;
      p_C_AndCBSR_PerResourceConfigList_r14 = null;
      ace_For4Tx_PerResourceConfigList_r14 = null;
      alternativeCodebookEnabledBeamformed_r14 = null;
      channelMeasRestriction_r14 = null;
      csi_RS_ConfigNZP_ApList_r14 = null;
      nzp_ResourceConfigOriginal_v1430 = null;
      csi_RS_NZP_Activation_r14 = null;
   }

   public int getElementCount() { return 9; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return csi_RS_ConfigNZPIdListExt_r14;
         case 1: return csi_IM_ConfigIdList_r14;
         case 2: return p_C_AndCBSR_PerResourceConfigList_r14;
         case 3: return ace_For4Tx_PerResourceConfigList_r14;
         case 4: return alternativeCodebookEnabledBeamformed_r14;
         case 5: return channelMeasRestriction_r14;
         case 6: return csi_RS_ConfigNZP_ApList_r14;
         case 7: return nzp_ResourceConfigOriginal_v1430;
         case 8: return csi_RS_NZP_Activation_r14;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "csi-RS-ConfigNZPIdListExt-r14";
         case 1: return "csi-IM-ConfigIdList-r14";
         case 2: return "p-C-AndCBSR-PerResourceConfigList-r14";
         case 3: return "ace-For4Tx-PerResourceConfigList-r14";
         case 4: return "alternativeCodebookEnabledBeamformed-r14";
         case 5: return "channelMeasRestriction-r14";
         case 6: return "csi-RS-ConfigNZP-ApList-r14";
         case 7: return "nzp-ResourceConfigOriginal-v1430";
         case 8: return "csi-RS-NZP-Activation-r14";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean csi_RS_ConfigNZPIdListExt_r14Present = buffer.decodeBit ("csi_RS_ConfigNZPIdListExt_r14Present");
      boolean csi_IM_ConfigIdList_r14Present = buffer.decodeBit ("csi_IM_ConfigIdList_r14Present");
      boolean p_C_AndCBSR_PerResourceConfigList_r14Present = buffer.decodeBit ("p_C_AndCBSR_PerResourceConfigList_r14Present");
      boolean ace_For4Tx_PerResourceConfigList_r14Present = buffer.decodeBit ("ace_For4Tx_PerResourceConfigList_r14Present");
      boolean alternativeCodebookEnabledBeamformed_r14Present = buffer.decodeBit ("alternativeCodebookEnabledBeamformed_r14Present");
      boolean channelMeasRestriction_r14Present = buffer.decodeBit ("channelMeasRestriction_r14Present");
      boolean csi_RS_ConfigNZP_ApList_r14Present = buffer.decodeBit ("csi_RS_ConfigNZP_ApList_r14Present");
      boolean nzp_ResourceConfigOriginal_v1430Present = buffer.decodeBit ("nzp_ResourceConfigOriginal_v1430Present");
      boolean csi_RS_NZP_Activation_r14Present = buffer.decodeBit ("csi_RS_NZP_Activation_r14Present");

      // decode csi_RS_ConfigNZPIdListExt_r14

      if (csi_RS_ConfigNZPIdListExt_r14Present) {
         buffer.getContext().eventDispatcher.startElement("csi_RS_ConfigNZPIdListExt_r14", -1);

         csi_RS_ConfigNZPIdListExt_r14 = new CSI_RS_ConfigBeamformed_r14_csi_RS_ConfigNZPIdListExt_r14();
         csi_RS_ConfigNZPIdListExt_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("csi_RS_ConfigNZPIdListExt_r14", -1);
      }
      else {
         csi_RS_ConfigNZPIdListExt_r14 = null;
      }

      // decode csi_IM_ConfigIdList_r14

      if (csi_IM_ConfigIdList_r14Present) {
         buffer.getContext().eventDispatcher.startElement("csi_IM_ConfigIdList_r14", -1);

         csi_IM_ConfigIdList_r14 = new CSI_RS_ConfigBeamformed_r14_csi_IM_ConfigIdList_r14();
         csi_IM_ConfigIdList_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("csi_IM_ConfigIdList_r14", -1);
      }
      else {
         csi_IM_ConfigIdList_r14 = null;
      }

      // decode p_C_AndCBSR_PerResourceConfigList_r14

      if (p_C_AndCBSR_PerResourceConfigList_r14Present) {
         buffer.getContext().eventDispatcher.startElement("p_C_AndCBSR_PerResourceConfigList_r14", -1);

         p_C_AndCBSR_PerResourceConfigList_r14 = new CSI_RS_ConfigBeamformed_r14_p_C_AndCBSR_PerResourceConfigList_r14();
         p_C_AndCBSR_PerResourceConfigList_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("p_C_AndCBSR_PerResourceConfigList_r14", -1);
      }
      else {
         p_C_AndCBSR_PerResourceConfigList_r14 = null;
      }

      // decode ace_For4Tx_PerResourceConfigList_r14

      if (ace_For4Tx_PerResourceConfigList_r14Present) {
         buffer.getContext().eventDispatcher.startElement("ace_For4Tx_PerResourceConfigList_r14", -1);

         ace_For4Tx_PerResourceConfigList_r14 = new CSI_RS_ConfigBeamformed_r14_ace_For4Tx_PerResourceConfigList_r14();
         ace_For4Tx_PerResourceConfigList_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ace_For4Tx_PerResourceConfigList_r14", -1);
      }
      else {
         ace_For4Tx_PerResourceConfigList_r14 = null;
      }

      // decode alternativeCodebookEnabledBeamformed_r14

      if (alternativeCodebookEnabledBeamformed_r14Present) {
         buffer.getContext().eventDispatcher.startElement("alternativeCodebookEnabledBeamformed_r14", -1);

         int tval = CSI_RS_ConfigBeamformed_r14_alternativeCodebookEnabledBeamformed_r14.decodeEnumValue (buffer);
         alternativeCodebookEnabledBeamformed_r14 = CSI_RS_ConfigBeamformed_r14_alternativeCodebookEnabledBeamformed_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("alternativeCodebookEnabledBeamformed_r14", -1);
      }
      else {
         alternativeCodebookEnabledBeamformed_r14 = null;
      }

      // decode channelMeasRestriction_r14

      if (channelMeasRestriction_r14Present) {
         buffer.getContext().eventDispatcher.startElement("channelMeasRestriction_r14", -1);

         int tval = CSI_RS_ConfigBeamformed_r14_channelMeasRestriction_r14.decodeEnumValue (buffer);
         channelMeasRestriction_r14 = CSI_RS_ConfigBeamformed_r14_channelMeasRestriction_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("channelMeasRestriction_r14", -1);
      }
      else {
         channelMeasRestriction_r14 = null;
      }

      // decode csi_RS_ConfigNZP_ApList_r14

      if (csi_RS_ConfigNZP_ApList_r14Present) {
         buffer.getContext().eventDispatcher.startElement("csi_RS_ConfigNZP_ApList_r14", -1);

         csi_RS_ConfigNZP_ApList_r14 = new CSI_RS_ConfigBeamformed_r14_csi_RS_ConfigNZP_ApList_r14();
         csi_RS_ConfigNZP_ApList_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("csi_RS_ConfigNZP_ApList_r14", -1);
      }
      else {
         csi_RS_ConfigNZP_ApList_r14 = null;
      }

      // decode nzp_ResourceConfigOriginal_v1430

      if (nzp_ResourceConfigOriginal_v1430Present) {
         buffer.getContext().eventDispatcher.startElement("nzp_ResourceConfigOriginal_v1430", -1);

         nzp_ResourceConfigOriginal_v1430 = new CSI_RS_Config_NZP_v1430();
         nzp_ResourceConfigOriginal_v1430.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nzp_ResourceConfigOriginal_v1430", -1);
      }
      else {
         nzp_ResourceConfigOriginal_v1430 = null;
      }

      // decode csi_RS_NZP_Activation_r14

      if (csi_RS_NZP_Activation_r14Present) {
         buffer.getContext().eventDispatcher.startElement("csi_RS_NZP_Activation_r14", -1);

         csi_RS_NZP_Activation_r14 = new CSI_RS_ConfigNZP_Activation_r14();
         csi_RS_NZP_Activation_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("csi_RS_NZP_Activation_r14", -1);
      }
      else {
         csi_RS_NZP_Activation_r14 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (csi_RS_ConfigNZPIdListExt_r14 != null) csi_RS_ConfigNZPIdListExt_r14.print (_sb, "csi_RS_ConfigNZPIdListExt_r14", _level+1);
      if (csi_IM_ConfigIdList_r14 != null) csi_IM_ConfigIdList_r14.print (_sb, "csi_IM_ConfigIdList_r14", _level+1);
      if (p_C_AndCBSR_PerResourceConfigList_r14 != null) p_C_AndCBSR_PerResourceConfigList_r14.print (_sb, "p_C_AndCBSR_PerResourceConfigList_r14", _level+1);
      if (ace_For4Tx_PerResourceConfigList_r14 != null) ace_For4Tx_PerResourceConfigList_r14.print (_sb, "ace_For4Tx_PerResourceConfigList_r14", _level+1);
      if (alternativeCodebookEnabledBeamformed_r14 != null) alternativeCodebookEnabledBeamformed_r14.print (_sb, "alternativeCodebookEnabledBeamformed_r14", _level+1);
      if (channelMeasRestriction_r14 != null) channelMeasRestriction_r14.print (_sb, "channelMeasRestriction_r14", _level+1);
      if (csi_RS_ConfigNZP_ApList_r14 != null) csi_RS_ConfigNZP_ApList_r14.print (_sb, "csi_RS_ConfigNZP_ApList_r14", _level+1);
      if (nzp_ResourceConfigOriginal_v1430 != null) nzp_ResourceConfigOriginal_v1430.print (_sb, "nzp_ResourceConfigOriginal_v1430", _level+1);
      if (csi_RS_NZP_Activation_r14 != null) csi_RS_NZP_Activation_r14.print (_sb, "csi_RS_NZP_Activation_r14", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
