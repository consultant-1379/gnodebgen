/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SCellToAddModExt_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SCellToAddModExt-r13";
   }

   public SCellIndex_r13 sCellIndex_r13;
   public SCellToAddModExt_r13_cellIdentification_r13 cellIdentification_r13;  // optional
   public RadioResourceConfigCommonSCell_r10 radioResourceConfigCommonSCell_r13;  // optional
   public RadioResourceConfigDedicatedSCell_r10 radioResourceConfigDedicatedSCell_r13;  // optional
   public AntennaInfoDedicated_v10i0 antennaInfoDedicatedSCell_r13;  // optional

   public SCellToAddModExt_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SCellToAddModExt_r13 (
      SCellIndex_r13 sCellIndex_r13_,
      SCellToAddModExt_r13_cellIdentification_r13 cellIdentification_r13_,
      RadioResourceConfigCommonSCell_r10 radioResourceConfigCommonSCell_r13_,
      RadioResourceConfigDedicatedSCell_r10 radioResourceConfigDedicatedSCell_r13_,
      AntennaInfoDedicated_v10i0 antennaInfoDedicatedSCell_r13_
   ) {
      super();
      sCellIndex_r13 = sCellIndex_r13_;
      cellIdentification_r13 = cellIdentification_r13_;
      radioResourceConfigCommonSCell_r13 = radioResourceConfigCommonSCell_r13_;
      radioResourceConfigDedicatedSCell_r13 = radioResourceConfigDedicatedSCell_r13_;
      antennaInfoDedicatedSCell_r13 = antennaInfoDedicatedSCell_r13_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SCellToAddModExt_r13 (
      SCellIndex_r13 sCellIndex_r13_
   ) {
      super();
      sCellIndex_r13 = sCellIndex_r13_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SCellToAddModExt_r13 (long sCellIndex_r13_,
      SCellToAddModExt_r13_cellIdentification_r13 cellIdentification_r13_,
      RadioResourceConfigCommonSCell_r10 radioResourceConfigCommonSCell_r13_,
      RadioResourceConfigDedicatedSCell_r10 radioResourceConfigDedicatedSCell_r13_,
      AntennaInfoDedicated_v10i0 antennaInfoDedicatedSCell_r13_
   ) {
      super();
      sCellIndex_r13 = new SCellIndex_r13 (sCellIndex_r13_);
      cellIdentification_r13 = cellIdentification_r13_;
      radioResourceConfigCommonSCell_r13 = radioResourceConfigCommonSCell_r13_;
      radioResourceConfigDedicatedSCell_r13 = radioResourceConfigDedicatedSCell_r13_;
      antennaInfoDedicatedSCell_r13 = antennaInfoDedicatedSCell_r13_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public SCellToAddModExt_r13 (
      long sCellIndex_r13_
   ) {
      super();
      sCellIndex_r13 = new SCellIndex_r13 (sCellIndex_r13_);
   }

   public void init () {
      sCellIndex_r13 = null;
      cellIdentification_r13 = null;
      radioResourceConfigCommonSCell_r13 = null;
      radioResourceConfigDedicatedSCell_r13 = null;
      antennaInfoDedicatedSCell_r13 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return sCellIndex_r13;
         case 1: return cellIdentification_r13;
         case 2: return radioResourceConfigCommonSCell_r13;
         case 3: return radioResourceConfigDedicatedSCell_r13;
         case 4: return antennaInfoDedicatedSCell_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "sCellIndex-r13";
         case 1: return "cellIdentification-r13";
         case 2: return "radioResourceConfigCommonSCell-r13";
         case 3: return "radioResourceConfigDedicatedSCell-r13";
         case 4: return "antennaInfoDedicatedSCell-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean cellIdentification_r13Present = buffer.decodeBit ("cellIdentification_r13Present");
      boolean radioResourceConfigCommonSCell_r13Present = buffer.decodeBit ("radioResourceConfigCommonSCell_r13Present");
      boolean radioResourceConfigDedicatedSCell_r13Present = buffer.decodeBit ("radioResourceConfigDedicatedSCell_r13Present");
      boolean antennaInfoDedicatedSCell_r13Present = buffer.decodeBit ("antennaInfoDedicatedSCell_r13Present");

      // decode sCellIndex_r13

      buffer.getContext().eventDispatcher.startElement("sCellIndex_r13", -1);

      sCellIndex_r13 = new SCellIndex_r13();
      sCellIndex_r13.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("sCellIndex_r13", -1);

      // decode cellIdentification_r13

      if (cellIdentification_r13Present) {
         buffer.getContext().eventDispatcher.startElement("cellIdentification_r13", -1);

         cellIdentification_r13 = new SCellToAddModExt_r13_cellIdentification_r13();
         cellIdentification_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cellIdentification_r13", -1);
      }
      else {
         cellIdentification_r13 = null;
      }

      // decode radioResourceConfigCommonSCell_r13

      if (radioResourceConfigCommonSCell_r13Present) {
         buffer.getContext().eventDispatcher.startElement("radioResourceConfigCommonSCell_r13", -1);

         radioResourceConfigCommonSCell_r13 = new RadioResourceConfigCommonSCell_r10();
         radioResourceConfigCommonSCell_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("radioResourceConfigCommonSCell_r13", -1);
      }
      else {
         radioResourceConfigCommonSCell_r13 = null;
      }

      // decode radioResourceConfigDedicatedSCell_r13

      if (radioResourceConfigDedicatedSCell_r13Present) {
         buffer.getContext().eventDispatcher.startElement("radioResourceConfigDedicatedSCell_r13", -1);

         radioResourceConfigDedicatedSCell_r13 = new RadioResourceConfigDedicatedSCell_r10();
         radioResourceConfigDedicatedSCell_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("radioResourceConfigDedicatedSCell_r13", -1);
      }
      else {
         radioResourceConfigDedicatedSCell_r13 = null;
      }

      // decode antennaInfoDedicatedSCell_r13

      if (antennaInfoDedicatedSCell_r13Present) {
         buffer.getContext().eventDispatcher.startElement("antennaInfoDedicatedSCell_r13", -1);

         antennaInfoDedicatedSCell_r13 = new AntennaInfoDedicated_v10i0();
         antennaInfoDedicatedSCell_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("antennaInfoDedicatedSCell_r13", -1);
      }
      else {
         antennaInfoDedicatedSCell_r13 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (sCellIndex_r13 != null) sCellIndex_r13.print (_sb, "sCellIndex_r13", _level+1);
      if (cellIdentification_r13 != null) cellIdentification_r13.print (_sb, "cellIdentification_r13", _level+1);
      if (radioResourceConfigCommonSCell_r13 != null) radioResourceConfigCommonSCell_r13.print (_sb, "radioResourceConfigCommonSCell_r13", _level+1);
      if (radioResourceConfigDedicatedSCell_r13 != null) radioResourceConfigDedicatedSCell_r13.print (_sb, "radioResourceConfigDedicatedSCell_r13", _level+1);
      if (antennaInfoDedicatedSCell_r13 != null) antennaInfoDedicatedSCell_r13.print (_sb, "antennaInfoDedicatedSCell_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
