/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MCS_PSSCH_Range_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MCS-PSSCH-Range-r15";
   }

   public Asn1Integer minMCS_PSSCH_r15;
   public Asn1Integer maxMCS_PSSCH_r15;

   public MCS_PSSCH_Range_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MCS_PSSCH_Range_r15 (
      Asn1Integer minMCS_PSSCH_r15_,
      Asn1Integer maxMCS_PSSCH_r15_
   ) {
      super();
      minMCS_PSSCH_r15 = minMCS_PSSCH_r15_;
      maxMCS_PSSCH_r15 = maxMCS_PSSCH_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public MCS_PSSCH_Range_r15 (long minMCS_PSSCH_r15_,
      long maxMCS_PSSCH_r15_
   ) {
      super();
      minMCS_PSSCH_r15 = new Asn1Integer (minMCS_PSSCH_r15_);
      maxMCS_PSSCH_r15 = new Asn1Integer (maxMCS_PSSCH_r15_);
   }

   public void init () {
      minMCS_PSSCH_r15 = null;
      maxMCS_PSSCH_r15 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return minMCS_PSSCH_r15;
         case 1: return maxMCS_PSSCH_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "minMCS-PSSCH-r15";
         case 1: return "maxMCS-PSSCH-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode minMCS_PSSCH_r15

      buffer.getContext().eventDispatcher.startElement("minMCS_PSSCH_r15", -1);

      minMCS_PSSCH_r15 = new Asn1Integer();
      minMCS_PSSCH_r15.decode (buffer, 0, 31);

      buffer.invokeCharacters(minMCS_PSSCH_r15.toString());
      buffer.getContext().eventDispatcher.endElement("minMCS_PSSCH_r15", -1);

      // decode maxMCS_PSSCH_r15

      buffer.getContext().eventDispatcher.startElement("maxMCS_PSSCH_r15", -1);

      maxMCS_PSSCH_r15 = new Asn1Integer();
      maxMCS_PSSCH_r15.decode (buffer, 0, 31);

      buffer.invokeCharacters(maxMCS_PSSCH_r15.toString());
      buffer.getContext().eventDispatcher.endElement("maxMCS_PSSCH_r15", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (minMCS_PSSCH_r15 != null) minMCS_PSSCH_r15.print (_sb, "minMCS_PSSCH_r15", _level+1);
      if (maxMCS_PSSCH_r15 != null) maxMCS_PSSCH_r15.print (_sb, "maxMCS_PSSCH_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
