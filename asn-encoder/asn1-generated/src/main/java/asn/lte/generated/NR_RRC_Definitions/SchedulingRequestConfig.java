/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SchedulingRequestConfig extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SchedulingRequestConfig";
   }

   public SchedulingRequestConfig_schedulingRequestToAddModList schedulingRequestToAddModList;  // optional
   public SchedulingRequestConfig_schedulingRequestToReleaseList schedulingRequestToReleaseList;  // optional

   public SchedulingRequestConfig () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SchedulingRequestConfig (
      SchedulingRequestConfig_schedulingRequestToAddModList schedulingRequestToAddModList_,
      SchedulingRequestConfig_schedulingRequestToReleaseList schedulingRequestToReleaseList_
   ) {
      super();
      schedulingRequestToAddModList = schedulingRequestToAddModList_;
      schedulingRequestToReleaseList = schedulingRequestToReleaseList_;
   }

   public void init () {
      schedulingRequestToAddModList = null;
      schedulingRequestToReleaseList = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return schedulingRequestToAddModList;
         case 1: return schedulingRequestToReleaseList;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "schedulingRequestToAddModList";
         case 1: return "schedulingRequestToReleaseList";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean schedulingRequestToAddModListPresent = buffer.decodeBit ("schedulingRequestToAddModListPresent");
      boolean schedulingRequestToReleaseListPresent = buffer.decodeBit ("schedulingRequestToReleaseListPresent");

      // decode schedulingRequestToAddModList

      if (schedulingRequestToAddModListPresent) {
         buffer.getContext().eventDispatcher.startElement("schedulingRequestToAddModList", -1);

         schedulingRequestToAddModList = new SchedulingRequestConfig_schedulingRequestToAddModList();
         schedulingRequestToAddModList.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("schedulingRequestToAddModList", -1);
      }
      else {
         schedulingRequestToAddModList = null;
      }

      // decode schedulingRequestToReleaseList

      if (schedulingRequestToReleaseListPresent) {
         buffer.getContext().eventDispatcher.startElement("schedulingRequestToReleaseList", -1);

         schedulingRequestToReleaseList = new SchedulingRequestConfig_schedulingRequestToReleaseList();
         schedulingRequestToReleaseList.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("schedulingRequestToReleaseList", -1);
      }
      else {
         schedulingRequestToReleaseList = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (schedulingRequestToAddModList != null) schedulingRequestToAddModList.print (_sb, "schedulingRequestToAddModList", _level+1);
      if (schedulingRequestToReleaseList != null) schedulingRequestToReleaseList.print (_sb, "schedulingRequestToReleaseList", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
