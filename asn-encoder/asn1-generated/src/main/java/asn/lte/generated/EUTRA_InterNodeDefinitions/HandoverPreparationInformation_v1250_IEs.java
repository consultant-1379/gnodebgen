/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.ARFCN_ValueEUTRA_r9;

public class HandoverPreparationInformation_v1250_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "HandoverPreparationInformation-v1250-IEs";
   }

   public ARFCN_ValueEUTRA_r9 ue_SupportedEARFCN_r12;  // optional
   public AS_Config_v1250 as_Config_v1250;  // optional
   public HandoverPreparationInformation_v1320_IEs nonCriticalExtension;  // optional

   public HandoverPreparationInformation_v1250_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public HandoverPreparationInformation_v1250_IEs (
      ARFCN_ValueEUTRA_r9 ue_SupportedEARFCN_r12_,
      AS_Config_v1250 as_Config_v1250_,
      HandoverPreparationInformation_v1320_IEs nonCriticalExtension_
   ) {
      super();
      ue_SupportedEARFCN_r12 = ue_SupportedEARFCN_r12_;
      as_Config_v1250 = as_Config_v1250_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public HandoverPreparationInformation_v1250_IEs (long ue_SupportedEARFCN_r12_,
      AS_Config_v1250 as_Config_v1250_,
      HandoverPreparationInformation_v1320_IEs nonCriticalExtension_
   ) {
      super();
      ue_SupportedEARFCN_r12 = new ARFCN_ValueEUTRA_r9 (ue_SupportedEARFCN_r12_);
      as_Config_v1250 = as_Config_v1250_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      ue_SupportedEARFCN_r12 = null;
      as_Config_v1250 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ue_SupportedEARFCN_r12;
         case 1: return as_Config_v1250;
         case 2: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ue-SupportedEARFCN-r12";
         case 1: return "as-Config-v1250";
         case 2: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean ue_SupportedEARFCN_r12Present = buffer.decodeBit ("ue_SupportedEARFCN_r12Present");
      boolean as_Config_v1250Present = buffer.decodeBit ("as_Config_v1250Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode ue_SupportedEARFCN_r12

      if (ue_SupportedEARFCN_r12Present) {
         buffer.getContext().eventDispatcher.startElement("ue_SupportedEARFCN_r12", -1);

         ue_SupportedEARFCN_r12 = new ARFCN_ValueEUTRA_r9();
         ue_SupportedEARFCN_r12.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ue_SupportedEARFCN_r12", -1);
      }
      else {
         ue_SupportedEARFCN_r12 = null;
      }

      // decode as_Config_v1250

      if (as_Config_v1250Present) {
         buffer.getContext().eventDispatcher.startElement("as_Config_v1250", -1);

         as_Config_v1250 = new AS_Config_v1250();
         as_Config_v1250.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("as_Config_v1250", -1);
      }
      else {
         as_Config_v1250 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new HandoverPreparationInformation_v1320_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (ue_SupportedEARFCN_r12 != null) ue_SupportedEARFCN_r12.print (_sb, "ue_SupportedEARFCN_r12", _level+1);
      if (as_Config_v1250 != null) as_Config_v1250.print (_sb, "as_Config_v1250", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
