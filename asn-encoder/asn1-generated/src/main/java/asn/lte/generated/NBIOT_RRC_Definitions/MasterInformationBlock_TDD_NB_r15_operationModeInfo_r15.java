/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MasterInformationBlock_TDD_NB_r15_operationModeInfo_r15 extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _INBAND_SAMEPCI_R15 = 1;
   public final static byte _INBAND_DIFFERENTPCI_R15 = 2;
   public final static byte _GUARDBAND_R15 = 3;
   public final static byte _STANDALONE_R15 = 4;

   public MasterInformationBlock_TDD_NB_r15_operationModeInfo_r15 () {
      super();
   }

   public MasterInformationBlock_TDD_NB_r15_operationModeInfo_r15 (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _INBAND_SAMEPCI_R15: return "inband_SamePCI_r15";
      case _INBAND_DIFFERENTPCI_R15: return "inband_DifferentPCI_r15";
      case _GUARDBAND_R15: return "guardband_r15";
      case _STANDALONE_R15: return "standalone_r15";
      default: return "UNDEFINED";
      }
   }

   public void set_inband_SamePCI_r15 (Inband_SamePCI_TDD_NB_r15 value) {
      setElement (_INBAND_SAMEPCI_R15, value);
   }

   public void set_inband_DifferentPCI_r15 (Inband_DifferentPCI_TDD_NB_r15 value) {
      setElement (_INBAND_DIFFERENTPCI_R15, value);
   }

   public void set_guardband_r15 (GuardbandTDD_NB_r15 value) {
      setElement (_GUARDBAND_R15, value);
   }

   public void set_standalone_r15 (StandaloneTDD_NB_r15 value) {
      setElement (_STANDALONE_R15, value);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (4, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // inband_SamePCI_r15
         case 0: { 
            Inband_SamePCI_TDD_NB_r15 inband_SamePCI_r15;
            element = inband_SamePCI_r15 = new Inband_SamePCI_TDD_NB_r15();
            inband_SamePCI_r15.decode (buffer);
            break;
         }

         // inband_DifferentPCI_r15
         case 1: { 
            Inband_DifferentPCI_TDD_NB_r15 inband_DifferentPCI_r15;
            element = inband_DifferentPCI_r15 = new Inband_DifferentPCI_TDD_NB_r15();
            inband_DifferentPCI_r15.decode (buffer);
            break;
         }

         // guardband_r15
         case 2: { 
            GuardbandTDD_NB_r15 guardband_r15;
            element = guardband_r15 = new GuardbandTDD_NB_r15();
            guardband_r15.decode (buffer);
            break;
         }

         // standalone_r15
         case 3: { 
            StandaloneTDD_NB_r15 standalone_r15;
            element = standalone_r15 = new StandaloneTDD_NB_r15();
            standalone_r15.decode (buffer);
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
