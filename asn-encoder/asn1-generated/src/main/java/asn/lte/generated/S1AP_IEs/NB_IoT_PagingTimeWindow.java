/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.S1AP_IEs;

import com.objsys.asn1j.runtime.*;

public class NB_IoT_PagingTimeWindow extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_S1AP_IEsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "NB-IoT-PagingTimeWindow";
   }

   // Integer constants for switch-case
   public static final int _S1 = 0;
   public static final int _S2 = 1;
   public static final int _S3 = 2;
   public static final int _S4 = 3;
   public static final int _S5 = 4;
   public static final int _S6 = 5;
   public static final int _S7 = 6;
   public static final int _S8 = 7;
   public static final int _S9 = 8;
   public static final int _S10 = 9;
   public static final int _S11 = 10;
   public static final int _S12 = 11;
   public static final int _S13 = 12;
   public static final int _S14 = 13;
   public static final int _S15 = 14;
   public static final int _S16 = 15;

   // Singleton instances of NB_IoT_PagingTimeWindow
   protected static final NB_IoT_PagingTimeWindow _s1 = new NB_IoT_PagingTimeWindow(0);
   protected static final NB_IoT_PagingTimeWindow _s2 = new NB_IoT_PagingTimeWindow(1);
   protected static final NB_IoT_PagingTimeWindow _s3 = new NB_IoT_PagingTimeWindow(2);
   protected static final NB_IoT_PagingTimeWindow _s4 = new NB_IoT_PagingTimeWindow(3);
   protected static final NB_IoT_PagingTimeWindow _s5 = new NB_IoT_PagingTimeWindow(4);
   protected static final NB_IoT_PagingTimeWindow _s6 = new NB_IoT_PagingTimeWindow(5);
   protected static final NB_IoT_PagingTimeWindow _s7 = new NB_IoT_PagingTimeWindow(6);
   protected static final NB_IoT_PagingTimeWindow _s8 = new NB_IoT_PagingTimeWindow(7);
   protected static final NB_IoT_PagingTimeWindow _s9 = new NB_IoT_PagingTimeWindow(8);
   protected static final NB_IoT_PagingTimeWindow _s10 = new NB_IoT_PagingTimeWindow(9);
   protected static final NB_IoT_PagingTimeWindow _s11 = new NB_IoT_PagingTimeWindow(10);
   protected static final NB_IoT_PagingTimeWindow _s12 = new NB_IoT_PagingTimeWindow(11);
   protected static final NB_IoT_PagingTimeWindow _s13 = new NB_IoT_PagingTimeWindow(12);
   protected static final NB_IoT_PagingTimeWindow _s14 = new NB_IoT_PagingTimeWindow(13);
   protected static final NB_IoT_PagingTimeWindow _s15 = new NB_IoT_PagingTimeWindow(14);
   protected static final NB_IoT_PagingTimeWindow _s16 = new NB_IoT_PagingTimeWindow(15);
   private static NB_IoT_PagingTimeWindow __undefined = new NB_IoT_PagingTimeWindow(-999);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    */
   protected NB_IoT_PagingTimeWindow (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for s1.
    */
   public static NB_IoT_PagingTimeWindow s1() {
      return _s1;
   }

   /**
    * Singleton accessor method for s2.
    */
   public static NB_IoT_PagingTimeWindow s2() {
      return _s2;
   }

   /**
    * Singleton accessor method for s3.
    */
   public static NB_IoT_PagingTimeWindow s3() {
      return _s3;
   }

   /**
    * Singleton accessor method for s4.
    */
   public static NB_IoT_PagingTimeWindow s4() {
      return _s4;
   }

   /**
    * Singleton accessor method for s5.
    */
   public static NB_IoT_PagingTimeWindow s5() {
      return _s5;
   }

   /**
    * Singleton accessor method for s6.
    */
   public static NB_IoT_PagingTimeWindow s6() {
      return _s6;
   }

   /**
    * Singleton accessor method for s7.
    */
   public static NB_IoT_PagingTimeWindow s7() {
      return _s7;
   }

   /**
    * Singleton accessor method for s8.
    */
   public static NB_IoT_PagingTimeWindow s8() {
      return _s8;
   }

   /**
    * Singleton accessor method for s9.
    */
   public static NB_IoT_PagingTimeWindow s9() {
      return _s9;
   }

   /**
    * Singleton accessor method for s10.
    */
   public static NB_IoT_PagingTimeWindow s10() {
      return _s10;
   }

   /**
    * Singleton accessor method for s11.
    */
   public static NB_IoT_PagingTimeWindow s11() {
      return _s11;
   }

   /**
    * Singleton accessor method for s12.
    */
   public static NB_IoT_PagingTimeWindow s12() {
      return _s12;
   }

   /**
    * Singleton accessor method for s13.
    */
   public static NB_IoT_PagingTimeWindow s13() {
      return _s13;
   }

   /**
    * Singleton accessor method for s14.
    */
   public static NB_IoT_PagingTimeWindow s14() {
      return _s14;
   }

   /**
    * Singleton accessor method for s15.
    */
   public static NB_IoT_PagingTimeWindow s15() {
      return _s15;
   }

   /**
    * Singleton accessor method for s16.
    */
   public static NB_IoT_PagingTimeWindow s16() {
      return _s16;
   }

   /** Undefined value. */
   protected static NB_IoT_PagingTimeWindow __undefined_() { return __undefined; }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return NB_IoT_PagingTimeWindow.valueOf( NB_IoT_PagingTimeWindow.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static NB_IoT_PagingTimeWindow valueOf (int _value)
   {
      switch ((int)_value) {
         case 0: return s1();
         case 1: return s2();
         case 2: return s3();
         case 3: return s4();
         case 4: return s5();
         case 5: return s6();
         case 6: return s7();
         case 7: return s8();
         case 8: return s9();
         case 9: return s10();
         case 10: return s11();
         case 11: return s12();
         case 12: return s13();
         case 13: return s14();
         case 14: return s15();
         case 15: return s16();
         default: return __undefined_();
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      boolean extbit = buffer.decodeBit ("extbit");

      if (extbit) {
         ui = buffer.decodeSmallNonNegWholeNumber ();

         return 0x7fffffff;
      }
      else {
         ui = (int) buffer.decodeConsWholeNumber (16);

         switch (ui) {
            case 0: ret =  0; break;
            case 1: ret =  1; break;
            case 2: ret =  2; break;
            case 3: ret =  3; break;
            case 4: ret =  4; break;
            case 5: ret =  5; break;
            case 6: ret =  6; break;
            case 7: ret =  7; break;
            case 8: ret =  8; break;
            case 9: ret =  9; break;
            case 10: ret =  10; break;
            case 11: ret =  11; break;
            case 12: ret =  12; break;
            case 13: ret =  13; break;
            case 14: ret =  14; break;
            case 15: ret =  15; break;
            default: throw new Asn1InvalidEnumException (ui);
         }
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (NB_IoT_PagingTimeWindow.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("s1");
         case 1: return ("s2");
         case 2: return ("s3");
         case 3: return ("s4");
         case 4: return ("s5");
         case 5: return ("s6");
         case 6: return ("s7");
         case 7: return ("s8");
         case 8: return ("s9");
         case 9: return ("s10");
         case 10: return ("s11");
         case 11: return ("s12");
         case 12: return ("s13");
         case 13: return ("s14");
         case 14: return ("s15");
         case 15: return ("s16");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
