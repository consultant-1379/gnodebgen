/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UE_MRDC_Capability_v1560 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UE-MRDC-Capability-v1560";
   }

   public UECapabilityEnquiry_v1560_IEs receivedFilters;  // optional
   public MeasAndMobParametersMRDC_v1560 measAndMobParametersMRDC_v1560;  // optional
   public UE_MRDC_CapabilityAddXDD_Mode_v1560 fdd_Add_UE_MRDC_Capabilities_v1560;  // optional
   public UE_MRDC_CapabilityAddXDD_Mode_v1560 tdd_Add_UE_MRDC_Capabilities_v1560;  // optional
   public UE_MRDC_Capability_v1610 nonCriticalExtension;  // optional

   public UE_MRDC_Capability_v1560 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UE_MRDC_Capability_v1560 (
      UECapabilityEnquiry_v1560_IEs receivedFilters_,
      MeasAndMobParametersMRDC_v1560 measAndMobParametersMRDC_v1560_,
      UE_MRDC_CapabilityAddXDD_Mode_v1560 fdd_Add_UE_MRDC_Capabilities_v1560_,
      UE_MRDC_CapabilityAddXDD_Mode_v1560 tdd_Add_UE_MRDC_Capabilities_v1560_,
      UE_MRDC_Capability_v1610 nonCriticalExtension_
   ) {
      super();
      receivedFilters = receivedFilters_;
      measAndMobParametersMRDC_v1560 = measAndMobParametersMRDC_v1560_;
      fdd_Add_UE_MRDC_Capabilities_v1560 = fdd_Add_UE_MRDC_Capabilities_v1560_;
      tdd_Add_UE_MRDC_Capabilities_v1560 = tdd_Add_UE_MRDC_Capabilities_v1560_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      receivedFilters = null;
      measAndMobParametersMRDC_v1560 = null;
      fdd_Add_UE_MRDC_Capabilities_v1560 = null;
      tdd_Add_UE_MRDC_Capabilities_v1560 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return receivedFilters;
         case 1: return measAndMobParametersMRDC_v1560;
         case 2: return fdd_Add_UE_MRDC_Capabilities_v1560;
         case 3: return tdd_Add_UE_MRDC_Capabilities_v1560;
         case 4: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "receivedFilters";
         case 1: return "measAndMobParametersMRDC-v1560";
         case 2: return "fdd-Add-UE-MRDC-Capabilities-v1560";
         case 3: return "tdd-Add-UE-MRDC-Capabilities-v1560";
         case 4: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean receivedFiltersPresent = buffer.decodeBit ("receivedFiltersPresent");
      boolean measAndMobParametersMRDC_v1560Present = buffer.decodeBit ("measAndMobParametersMRDC_v1560Present");
      boolean fdd_Add_UE_MRDC_Capabilities_v1560Present = buffer.decodeBit ("fdd_Add_UE_MRDC_Capabilities_v1560Present");
      boolean tdd_Add_UE_MRDC_Capabilities_v1560Present = buffer.decodeBit ("tdd_Add_UE_MRDC_Capabilities_v1560Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode receivedFilters

      if (receivedFiltersPresent) {
         buffer.getContext().eventDispatcher.startElement("receivedFilters", -1);

         Asn1OctetString receivedFilters_outer = new Asn1OctetString();
         receivedFilters_outer.decode (buffer);
         if (receivedFilters_outer.value == null) throw new Asn1Exception("contained type's complete encoding is empty");
         Asn1PerDecodeBuffer savedBuffer = buffer;
         buffer = new Asn1PerDecodeBuffer( receivedFilters_outer.value, buffer.isAligned());
         buffer.setEventHandlerList( savedBuffer );
         receivedFilters = new UECapabilityEnquiry_v1560_IEs();
         receivedFilters.decode (buffer);
         buffer = savedBuffer;
         buffer.getContext().eventDispatcher.endElement("receivedFilters", -1);
      }
      else {
         receivedFilters = null;
      }

      // decode measAndMobParametersMRDC_v1560

      if (measAndMobParametersMRDC_v1560Present) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersMRDC_v1560", -1);

         measAndMobParametersMRDC_v1560 = new MeasAndMobParametersMRDC_v1560();
         measAndMobParametersMRDC_v1560.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measAndMobParametersMRDC_v1560", -1);
      }
      else {
         measAndMobParametersMRDC_v1560 = null;
      }

      // decode fdd_Add_UE_MRDC_Capabilities_v1560

      if (fdd_Add_UE_MRDC_Capabilities_v1560Present) {
         buffer.getContext().eventDispatcher.startElement("fdd_Add_UE_MRDC_Capabilities_v1560", -1);

         fdd_Add_UE_MRDC_Capabilities_v1560 = new UE_MRDC_CapabilityAddXDD_Mode_v1560();
         fdd_Add_UE_MRDC_Capabilities_v1560.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("fdd_Add_UE_MRDC_Capabilities_v1560", -1);
      }
      else {
         fdd_Add_UE_MRDC_Capabilities_v1560 = null;
      }

      // decode tdd_Add_UE_MRDC_Capabilities_v1560

      if (tdd_Add_UE_MRDC_Capabilities_v1560Present) {
         buffer.getContext().eventDispatcher.startElement("tdd_Add_UE_MRDC_Capabilities_v1560", -1);

         tdd_Add_UE_MRDC_Capabilities_v1560 = new UE_MRDC_CapabilityAddXDD_Mode_v1560();
         tdd_Add_UE_MRDC_Capabilities_v1560.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tdd_Add_UE_MRDC_Capabilities_v1560", -1);
      }
      else {
         tdd_Add_UE_MRDC_Capabilities_v1560 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new UE_MRDC_Capability_v1610();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (receivedFilters != null) receivedFilters.print (_sb, "receivedFilters", _level+1);
      if (measAndMobParametersMRDC_v1560 != null) measAndMobParametersMRDC_v1560.print (_sb, "measAndMobParametersMRDC_v1560", _level+1);
      if (fdd_Add_UE_MRDC_Capabilities_v1560 != null) fdd_Add_UE_MRDC_Capabilities_v1560.print (_sb, "fdd_Add_UE_MRDC_Capabilities_v1560", _level+1);
      if (tdd_Add_UE_MRDC_Capabilities_v1560 != null) tdd_Add_UE_MRDC_Capabilities_v1560.print (_sb, "tdd_Add_UE_MRDC_Capabilities_v1560", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
