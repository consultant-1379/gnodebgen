/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformation_IEs_sib_TypeAndInfo_element extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _SIB2 = 1;
   public final static byte _SIB3 = 2;
   public final static byte _SIB4 = 3;
   public final static byte _SIB5 = 4;
   public final static byte _SIB6 = 5;
   public final static byte _SIB7 = 6;
   public final static byte _SIB8 = 7;
   public final static byte _SIB9 = 8;
   public final static byte _SIB10_V1610 = 9;
   public final static byte _SIB11_V1610 = 10;
   public final static byte _SIB12_V1610 = 11;
   public final static byte _SIB13_V1610 = 12;
   public final static byte _SIB14_V1610 = 13;
   public final static byte _EXTELEM1 = 14;

   public SystemInformation_IEs_sib_TypeAndInfo_element () {
      super();
   }

   public SystemInformation_IEs_sib_TypeAndInfo_element (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _SIB2: return "sib2";
      case _SIB3: return "sib3";
      case _SIB4: return "sib4";
      case _SIB5: return "sib5";
      case _SIB6: return "sib6";
      case _SIB7: return "sib7";
      case _SIB8: return "sib8";
      case _SIB9: return "sib9";
      case _SIB10_V1610: return "sib10_v1610";
      case _SIB11_V1610: return "sib11_v1610";
      case _SIB12_V1610: return "sib12_v1610";
      case _SIB13_V1610: return "sib13_v1610";
      case _SIB14_V1610: return "sib14_v1610";
      case _EXTELEM1: return "...";
      default: return "UNDEFINED";
      }
   }

   public void set_sib2 (SIB2 value) {
      setElement (_SIB2, value);
   }

   public void set_sib3 (SIB3 value) {
      setElement (_SIB3, value);
   }

   public void set_sib4 (SIB4 value) {
      setElement (_SIB4, value);
   }

   public void set_sib5 (SIB5 value) {
      setElement (_SIB5, value);
   }

   public void set_sib6 (SIB6 value) {
      setElement (_SIB6, value);
   }

   public void set_sib7 (SIB7 value) {
      setElement (_SIB7, value);
   }

   public void set_sib8 (SIB8 value) {
      setElement (_SIB8, value);
   }

   public void set_sib9 (SIB9 value) {
      setElement (_SIB9, value);
   }

   public void set_sib10_v1610 (SIB10_r16 value) {
      setElement (_SIB10_V1610, value);
   }

   public void set_sib11_v1610 (SIB11_r16 value) {
      setElement (_SIB11_V1610, value);
   }

   public void set_sib12_v1610 (SIB12_r16 value) {
      setElement (_SIB12_V1610, value);
   }

   public void set_sib13_v1610 (SIB13_r16 value) {
      setElement (_SIB13_V1610, value);
   }

   public void set_sib14_v1610 (SIB14_r16 value) {
      setElement (_SIB14_V1610, value);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      Asn1PerDecodeBuffer savedBuffer = null;
      boolean extbit = buffer.decodeBit ("extbit");

      if (!extbit) {
         int idx = (int) buffer.decodeConsWholeNumber (8, "index");
         choiceID = idx + 1;
         buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

         switch (idx) {
            // sib2
            case 0: { 
               SIB2 sib2;
               element = sib2 = new SIB2();
               sib2.decode (buffer);
               break;
            }

            // sib3
            case 1: { 
               SIB3 sib3;
               element = sib3 = new SIB3();
               sib3.decode (buffer);
               break;
            }

            // sib4
            case 2: { 
               SIB4 sib4;
               element = sib4 = new SIB4();
               sib4.decode (buffer);
               break;
            }

            // sib5
            case 3: { 
               SIB5 sib5;
               element = sib5 = new SIB5();
               sib5.decode (buffer);
               break;
            }

            // sib6
            case 4: { 
               SIB6 sib6;
               element = sib6 = new SIB6();
               sib6.decode (buffer);
               break;
            }

            // sib7
            case 5: { 
               SIB7 sib7;
               element = sib7 = new SIB7();
               sib7.decode (buffer);
               break;
            }

            // sib8
            case 6: { 
               SIB8 sib8;
               element = sib8 = new SIB8();
               sib8.decode (buffer);
               break;
            }

            // sib9
            case 7: { 
               SIB9 sib9;
               element = sib9 = new SIB9();
               sib9.decode (buffer);
               break;
            }

            default:
            throw new Asn1InvalidChoiceOptionException (buffer, idx);
         }
      }
      else {
         int idx = (int) buffer.decodeSmallNonNegWholeNumber ();
         choiceID = idx + 9;
         buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

         buffer.byteAlign();

         Asn1OpenType openType = new Asn1OpenType ();
         openType.decode (buffer);

         savedBuffer = buffer;
         buffer = new Asn1PerDecodeBuffer (openType.value, savedBuffer.isAligned());
         buffer.setEventHandlerList (savedBuffer);

         switch (idx) {
            // sib10_v1610
            case 0: { 
               SIB10_r16 sib10_v1610;
               element = sib10_v1610 = new SIB10_r16();
               sib10_v1610.decode (buffer);
               break;
            }

            // sib11_v1610
            case 1: { 
               SIB11_r16 sib11_v1610;
               element = sib11_v1610 = new SIB11_r16();
               sib11_v1610.decode (buffer);
               break;
            }

            // sib12_v1610
            case 2: { 
               SIB12_r16 sib12_v1610;
               element = sib12_v1610 = new SIB12_r16();
               sib12_v1610.decode (buffer);
               break;
            }

            // sib13_v1610
            case 3: { 
               SIB13_r16 sib13_v1610;
               element = sib13_v1610 = new SIB13_r16();
               sib13_v1610.decode (buffer);
               break;
            }

            // sib14_v1610
            case 4: { 
               SIB14_r16 sib14_v1610;
               element = sib14_v1610 = new SIB14_r16();
               sib14_v1610.decode (buffer);
               break;
            }

            // extElem1
            case 5: { 
               Asn1OpenType extElem1;
               element = extElem1 = new Asn1OpenType();
               extElem1.decode (buffer);

               buffer.invokeCharacters(extElem1.toString());
               break;
            }

            default:
               setElement (_EXTELEM1, openType);
               buffer.invokeCharacters (openType.toString());
         }

      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);

      if (savedBuffer != null) {
         buffer = savedBuffer;
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
