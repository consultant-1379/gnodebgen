/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PLMN_IdentityInfo extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PLMN-IdentityInfo";
   }

   public PLMN_IdentityInfo_plmn_IdentityList plmn_IdentityList;
   public TrackingAreaCode trackingAreaCode;  // optional
   public RAN_AreaCode ranac;  // optional
   public CellIdentity cellIdentity;
   public PLMN_IdentityInfo_cellReservedForOperatorUse cellReservedForOperatorUse = null;
   public boolean mV2ExtPresent;
   public PLMN_IdentityInfo_iab_Support_r16 iab_Support_r16 = null;  // optional
   public Asn1OpenExt extElem1;

   public PLMN_IdentityInfo () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PLMN_IdentityInfo (
      PLMN_IdentityInfo_plmn_IdentityList plmn_IdentityList_,
      TrackingAreaCode trackingAreaCode_,
      RAN_AreaCode ranac_,
      CellIdentity cellIdentity_,
      PLMN_IdentityInfo_cellReservedForOperatorUse cellReservedForOperatorUse_,
      PLMN_IdentityInfo_iab_Support_r16 iab_Support_r16_
   ) {
      super();
      plmn_IdentityList = plmn_IdentityList_;
      trackingAreaCode = trackingAreaCode_;
      ranac = ranac_;
      cellIdentity = cellIdentity_;
      cellReservedForOperatorUse = cellReservedForOperatorUse_;
      iab_Support_r16 = iab_Support_r16_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public PLMN_IdentityInfo (
      PLMN_IdentityInfo_plmn_IdentityList plmn_IdentityList_,
      CellIdentity cellIdentity_,
      PLMN_IdentityInfo_cellReservedForOperatorUse cellReservedForOperatorUse_
   ) {
      super();
      plmn_IdentityList = plmn_IdentityList_;
      cellIdentity = cellIdentity_;
      cellReservedForOperatorUse = cellReservedForOperatorUse_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PLMN_IdentityInfo (PLMN_IdentityInfo_plmn_IdentityList plmn_IdentityList_,
      TrackingAreaCode trackingAreaCode_,
      long ranac_,
      CellIdentity cellIdentity_,
      PLMN_IdentityInfo_cellReservedForOperatorUse cellReservedForOperatorUse_,
      PLMN_IdentityInfo_iab_Support_r16 iab_Support_r16_
   ) {
      super();
      plmn_IdentityList = plmn_IdentityList_;
      trackingAreaCode = trackingAreaCode_;
      ranac = new RAN_AreaCode (ranac_);
      cellIdentity = cellIdentity_;
      cellReservedForOperatorUse = cellReservedForOperatorUse_;
      iab_Support_r16 = iab_Support_r16_;
   }

   public void init () {
      plmn_IdentityList = null;
      trackingAreaCode = null;
      ranac = null;
      cellIdentity = null;
      cellReservedForOperatorUse = null;
      iab_Support_r16 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return plmn_IdentityList;
         case 1: return trackingAreaCode;
         case 2: return ranac;
         case 3: return cellIdentity;
         case 4: return cellReservedForOperatorUse;
         case 5: return iab_Support_r16;
         case 6: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "plmn-IdentityList";
         case 1: return "trackingAreaCode";
         case 2: return "ranac";
         case 3: return "cellIdentity";
         case 4: return "cellReservedForOperatorUse";
         case 5: return "iab-Support-r16";
         case 6: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean trackingAreaCodePresent = buffer.decodeBit ("trackingAreaCodePresent");
      boolean ranacPresent = buffer.decodeBit ("ranacPresent");

      // decode plmn_IdentityList

      buffer.getContext().eventDispatcher.startElement("plmn_IdentityList", -1);

      plmn_IdentityList = new PLMN_IdentityInfo_plmn_IdentityList();
      plmn_IdentityList.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("plmn_IdentityList", -1);

      // decode trackingAreaCode

      if (trackingAreaCodePresent) {
         buffer.getContext().eventDispatcher.startElement("trackingAreaCode", -1);

         trackingAreaCode = new TrackingAreaCode();
         trackingAreaCode.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("trackingAreaCode", -1);
      }
      else {
         trackingAreaCode = null;
      }

      // decode ranac

      if (ranacPresent) {
         buffer.getContext().eventDispatcher.startElement("ranac", -1);

         ranac = new RAN_AreaCode();
         ranac.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ranac", -1);
      }
      else {
         ranac = null;
      }

      // decode cellIdentity

      buffer.getContext().eventDispatcher.startElement("cellIdentity", -1);

      cellIdentity = new CellIdentity();
      cellIdentity.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("cellIdentity", -1);

      // decode cellReservedForOperatorUse

      buffer.getContext().eventDispatcher.startElement("cellReservedForOperatorUse", -1);

      {
         int tval = PLMN_IdentityInfo_cellReservedForOperatorUse.decodeEnumValue (buffer);
         cellReservedForOperatorUse = PLMN_IdentityInfo_cellReservedForOperatorUse.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("cellReservedForOperatorUse", -1);

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean iab_Support_r16Present = buffer.decodeBit ("iab_Support_r16Present");

            // decode iab_Support_r16

            if (iab_Support_r16Present) {
               buffer.getContext().eventDispatcher.startElement("iab_Support_r16", -1);

               int tval = PLMN_IdentityInfo_iab_Support_r16.decodeEnumValue (buffer);
               iab_Support_r16 = PLMN_IdentityInfo_iab_Support_r16.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("iab_Support_r16", -1);
            }
            else {
               iab_Support_r16 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (plmn_IdentityList != null) plmn_IdentityList.print (_sb, "plmn_IdentityList", _level+1);
      if (trackingAreaCode != null) trackingAreaCode.print (_sb, "trackingAreaCode", _level+1);
      if (ranac != null) ranac.print (_sb, "ranac", _level+1);
      if (cellIdentity != null) cellIdentity.print (_sb, "cellIdentity", _level+1);
      if (cellReservedForOperatorUse != null) cellReservedForOperatorUse.print (_sb, "cellReservedForOperatorUse", _level+1);
      if (iab_Support_r16 != null) iab_Support_r16.print (_sb, "iab_Support_r16", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
