/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class LAA_Parameters_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "LAA-Parameters-r13";
   }

   public LAA_Parameters_r13_crossCarrierSchedulingLAA_DL_r13 crossCarrierSchedulingLAA_DL_r13 = null;  // optional
   public LAA_Parameters_r13_csi_RS_DRS_RRM_MeasurementsLAA_r13 csi_RS_DRS_RRM_MeasurementsLAA_r13 = null;  // optional
   public LAA_Parameters_r13_downlinkLAA_r13 downlinkLAA_r13 = null;  // optional
   public LAA_Parameters_r13_endingDwPTS_r13 endingDwPTS_r13 = null;  // optional
   public LAA_Parameters_r13_secondSlotStartingPosition_r13 secondSlotStartingPosition_r13 = null;  // optional
   public LAA_Parameters_r13_tm9_LAA_r13 tm9_LAA_r13 = null;  // optional
   public LAA_Parameters_r13_tm10_LAA_r13 tm10_LAA_r13 = null;  // optional

   public LAA_Parameters_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public LAA_Parameters_r13 (
      LAA_Parameters_r13_crossCarrierSchedulingLAA_DL_r13 crossCarrierSchedulingLAA_DL_r13_,
      LAA_Parameters_r13_csi_RS_DRS_RRM_MeasurementsLAA_r13 csi_RS_DRS_RRM_MeasurementsLAA_r13_,
      LAA_Parameters_r13_downlinkLAA_r13 downlinkLAA_r13_,
      LAA_Parameters_r13_endingDwPTS_r13 endingDwPTS_r13_,
      LAA_Parameters_r13_secondSlotStartingPosition_r13 secondSlotStartingPosition_r13_,
      LAA_Parameters_r13_tm9_LAA_r13 tm9_LAA_r13_,
      LAA_Parameters_r13_tm10_LAA_r13 tm10_LAA_r13_
   ) {
      super();
      crossCarrierSchedulingLAA_DL_r13 = crossCarrierSchedulingLAA_DL_r13_;
      csi_RS_DRS_RRM_MeasurementsLAA_r13 = csi_RS_DRS_RRM_MeasurementsLAA_r13_;
      downlinkLAA_r13 = downlinkLAA_r13_;
      endingDwPTS_r13 = endingDwPTS_r13_;
      secondSlotStartingPosition_r13 = secondSlotStartingPosition_r13_;
      tm9_LAA_r13 = tm9_LAA_r13_;
      tm10_LAA_r13 = tm10_LAA_r13_;
   }

   public void init () {
      crossCarrierSchedulingLAA_DL_r13 = null;
      csi_RS_DRS_RRM_MeasurementsLAA_r13 = null;
      downlinkLAA_r13 = null;
      endingDwPTS_r13 = null;
      secondSlotStartingPosition_r13 = null;
      tm9_LAA_r13 = null;
      tm10_LAA_r13 = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return crossCarrierSchedulingLAA_DL_r13;
         case 1: return csi_RS_DRS_RRM_MeasurementsLAA_r13;
         case 2: return downlinkLAA_r13;
         case 3: return endingDwPTS_r13;
         case 4: return secondSlotStartingPosition_r13;
         case 5: return tm9_LAA_r13;
         case 6: return tm10_LAA_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "crossCarrierSchedulingLAA-DL-r13";
         case 1: return "csi-RS-DRS-RRM-MeasurementsLAA-r13";
         case 2: return "downlinkLAA-r13";
         case 3: return "endingDwPTS-r13";
         case 4: return "secondSlotStartingPosition-r13";
         case 5: return "tm9-LAA-r13";
         case 6: return "tm10-LAA-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean crossCarrierSchedulingLAA_DL_r13Present = buffer.decodeBit ("crossCarrierSchedulingLAA_DL_r13Present");
      boolean csi_RS_DRS_RRM_MeasurementsLAA_r13Present = buffer.decodeBit ("csi_RS_DRS_RRM_MeasurementsLAA_r13Present");
      boolean downlinkLAA_r13Present = buffer.decodeBit ("downlinkLAA_r13Present");
      boolean endingDwPTS_r13Present = buffer.decodeBit ("endingDwPTS_r13Present");
      boolean secondSlotStartingPosition_r13Present = buffer.decodeBit ("secondSlotStartingPosition_r13Present");
      boolean tm9_LAA_r13Present = buffer.decodeBit ("tm9_LAA_r13Present");
      boolean tm10_LAA_r13Present = buffer.decodeBit ("tm10_LAA_r13Present");

      // decode crossCarrierSchedulingLAA_DL_r13

      if (crossCarrierSchedulingLAA_DL_r13Present) {
         buffer.getContext().eventDispatcher.startElement("crossCarrierSchedulingLAA_DL_r13", -1);

         int tval = LAA_Parameters_r13_crossCarrierSchedulingLAA_DL_r13.decodeEnumValue (buffer);
         crossCarrierSchedulingLAA_DL_r13 = LAA_Parameters_r13_crossCarrierSchedulingLAA_DL_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("crossCarrierSchedulingLAA_DL_r13", -1);
      }
      else {
         crossCarrierSchedulingLAA_DL_r13 = null;
      }

      // decode csi_RS_DRS_RRM_MeasurementsLAA_r13

      if (csi_RS_DRS_RRM_MeasurementsLAA_r13Present) {
         buffer.getContext().eventDispatcher.startElement("csi_RS_DRS_RRM_MeasurementsLAA_r13", -1);

         int tval = LAA_Parameters_r13_csi_RS_DRS_RRM_MeasurementsLAA_r13.decodeEnumValue (buffer);
         csi_RS_DRS_RRM_MeasurementsLAA_r13 = LAA_Parameters_r13_csi_RS_DRS_RRM_MeasurementsLAA_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("csi_RS_DRS_RRM_MeasurementsLAA_r13", -1);
      }
      else {
         csi_RS_DRS_RRM_MeasurementsLAA_r13 = null;
      }

      // decode downlinkLAA_r13

      if (downlinkLAA_r13Present) {
         buffer.getContext().eventDispatcher.startElement("downlinkLAA_r13", -1);

         int tval = LAA_Parameters_r13_downlinkLAA_r13.decodeEnumValue (buffer);
         downlinkLAA_r13 = LAA_Parameters_r13_downlinkLAA_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("downlinkLAA_r13", -1);
      }
      else {
         downlinkLAA_r13 = null;
      }

      // decode endingDwPTS_r13

      if (endingDwPTS_r13Present) {
         buffer.getContext().eventDispatcher.startElement("endingDwPTS_r13", -1);

         int tval = LAA_Parameters_r13_endingDwPTS_r13.decodeEnumValue (buffer);
         endingDwPTS_r13 = LAA_Parameters_r13_endingDwPTS_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("endingDwPTS_r13", -1);
      }
      else {
         endingDwPTS_r13 = null;
      }

      // decode secondSlotStartingPosition_r13

      if (secondSlotStartingPosition_r13Present) {
         buffer.getContext().eventDispatcher.startElement("secondSlotStartingPosition_r13", -1);

         int tval = LAA_Parameters_r13_secondSlotStartingPosition_r13.decodeEnumValue (buffer);
         secondSlotStartingPosition_r13 = LAA_Parameters_r13_secondSlotStartingPosition_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("secondSlotStartingPosition_r13", -1);
      }
      else {
         secondSlotStartingPosition_r13 = null;
      }

      // decode tm9_LAA_r13

      if (tm9_LAA_r13Present) {
         buffer.getContext().eventDispatcher.startElement("tm9_LAA_r13", -1);

         int tval = LAA_Parameters_r13_tm9_LAA_r13.decodeEnumValue (buffer);
         tm9_LAA_r13 = LAA_Parameters_r13_tm9_LAA_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tm9_LAA_r13", -1);
      }
      else {
         tm9_LAA_r13 = null;
      }

      // decode tm10_LAA_r13

      if (tm10_LAA_r13Present) {
         buffer.getContext().eventDispatcher.startElement("tm10_LAA_r13", -1);

         int tval = LAA_Parameters_r13_tm10_LAA_r13.decodeEnumValue (buffer);
         tm10_LAA_r13 = LAA_Parameters_r13_tm10_LAA_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tm10_LAA_r13", -1);
      }
      else {
         tm10_LAA_r13 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (crossCarrierSchedulingLAA_DL_r13 != null) crossCarrierSchedulingLAA_DL_r13.print (_sb, "crossCarrierSchedulingLAA_DL_r13", _level+1);
      if (csi_RS_DRS_RRM_MeasurementsLAA_r13 != null) csi_RS_DRS_RRM_MeasurementsLAA_r13.print (_sb, "csi_RS_DRS_RRM_MeasurementsLAA_r13", _level+1);
      if (downlinkLAA_r13 != null) downlinkLAA_r13.print (_sb, "downlinkLAA_r13", _level+1);
      if (endingDwPTS_r13 != null) endingDwPTS_r13.print (_sb, "endingDwPTS_r13", _level+1);
      if (secondSlotStartingPosition_r13 != null) secondSlotStartingPosition_r13.print (_sb, "secondSlotStartingPosition_r13", _level+1);
      if (tm9_LAA_r13 != null) tm9_LAA_r13.print (_sb, "tm9_LAA_r13", _level+1);
      if (tm10_LAA_r13 != null) tm10_LAA_r13.print (_sb, "tm10_LAA_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
