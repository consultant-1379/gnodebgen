/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;

public class RRM_Config_ue_InactiveTime extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _S1 = 0;
   public static final int _S2 = 1;
   public static final int _S3 = 2;
   public static final int _S5 = 3;
   public static final int _S7 = 4;
   public static final int _S10 = 5;
   public static final int _S15 = 6;
   public static final int _S20 = 7;
   public static final int _S25 = 8;
   public static final int _S30 = 9;
   public static final int _S40 = 10;
   public static final int _S50 = 11;
   public static final int _MIN1 = 12;
   public static final int _MIN1S20C = 13;
   public static final int _MIN1S40 = 14;
   public static final int _MIN2 = 15;
   public static final int _MIN2S30 = 16;
   public static final int _MIN3 = 17;
   public static final int _MIN3S30 = 18;
   public static final int _MIN4 = 19;
   public static final int _MIN5 = 20;
   public static final int _MIN6 = 21;
   public static final int _MIN7 = 22;
   public static final int _MIN8 = 23;
   public static final int _MIN9 = 24;
   public static final int _MIN10 = 25;
   public static final int _MIN12 = 26;
   public static final int _MIN14 = 27;
   public static final int _MIN17 = 28;
   public static final int _MIN20 = 29;
   public static final int _MIN24 = 30;
   public static final int _MIN28 = 31;
   public static final int _MIN33 = 32;
   public static final int _MIN38 = 33;
   public static final int _MIN44 = 34;
   public static final int _MIN50 = 35;
   public static final int _HR1 = 36;
   public static final int _HR1MIN30 = 37;
   public static final int _HR2 = 38;
   public static final int _HR2MIN30 = 39;
   public static final int _HR3 = 40;
   public static final int _HR3MIN30 = 41;
   public static final int _HR4 = 42;
   public static final int _HR5 = 43;
   public static final int _HR6 = 44;
   public static final int _HR8 = 45;
   public static final int _HR10 = 46;
   public static final int _HR13 = 47;
   public static final int _HR16 = 48;
   public static final int _HR20 = 49;
   public static final int _DAY1 = 50;
   public static final int _DAY1HR12 = 51;
   public static final int _DAY2 = 52;
   public static final int _DAY2HR12 = 53;
   public static final int _DAY3 = 54;
   public static final int _DAY4 = 55;
   public static final int _DAY5 = 56;
   public static final int _DAY7 = 57;
   public static final int _DAY10 = 58;
   public static final int _DAY14 = 59;
   public static final int _DAY19 = 60;
   public static final int _DAY24 = 61;
   public static final int _DAY30 = 62;
   public static final int _DAYMORETHAN30 = 63;

   // Singleton instances of RRM_Config_ue_InactiveTime
   protected static final RRM_Config_ue_InactiveTime _s1 = new RRM_Config_ue_InactiveTime(0);
   protected static final RRM_Config_ue_InactiveTime _s2 = new RRM_Config_ue_InactiveTime(1);
   protected static final RRM_Config_ue_InactiveTime _s3 = new RRM_Config_ue_InactiveTime(2);
   protected static final RRM_Config_ue_InactiveTime _s5 = new RRM_Config_ue_InactiveTime(3);
   protected static final RRM_Config_ue_InactiveTime _s7 = new RRM_Config_ue_InactiveTime(4);
   protected static final RRM_Config_ue_InactiveTime _s10 = new RRM_Config_ue_InactiveTime(5);
   protected static final RRM_Config_ue_InactiveTime _s15 = new RRM_Config_ue_InactiveTime(6);
   protected static final RRM_Config_ue_InactiveTime _s20 = new RRM_Config_ue_InactiveTime(7);
   protected static final RRM_Config_ue_InactiveTime _s25 = new RRM_Config_ue_InactiveTime(8);
   protected static final RRM_Config_ue_InactiveTime _s30 = new RRM_Config_ue_InactiveTime(9);
   protected static final RRM_Config_ue_InactiveTime _s40 = new RRM_Config_ue_InactiveTime(10);
   protected static final RRM_Config_ue_InactiveTime _s50 = new RRM_Config_ue_InactiveTime(11);
   protected static final RRM_Config_ue_InactiveTime _min1 = new RRM_Config_ue_InactiveTime(12);
   protected static final RRM_Config_ue_InactiveTime _min1s20c = new RRM_Config_ue_InactiveTime(13);
   protected static final RRM_Config_ue_InactiveTime _min1s40 = new RRM_Config_ue_InactiveTime(14);
   protected static final RRM_Config_ue_InactiveTime _min2 = new RRM_Config_ue_InactiveTime(15);
   protected static final RRM_Config_ue_InactiveTime _min2s30 = new RRM_Config_ue_InactiveTime(16);
   protected static final RRM_Config_ue_InactiveTime _min3 = new RRM_Config_ue_InactiveTime(17);
   protected static final RRM_Config_ue_InactiveTime _min3s30 = new RRM_Config_ue_InactiveTime(18);
   protected static final RRM_Config_ue_InactiveTime _min4 = new RRM_Config_ue_InactiveTime(19);
   protected static final RRM_Config_ue_InactiveTime _min5 = new RRM_Config_ue_InactiveTime(20);
   protected static final RRM_Config_ue_InactiveTime _min6 = new RRM_Config_ue_InactiveTime(21);
   protected static final RRM_Config_ue_InactiveTime _min7 = new RRM_Config_ue_InactiveTime(22);
   protected static final RRM_Config_ue_InactiveTime _min8 = new RRM_Config_ue_InactiveTime(23);
   protected static final RRM_Config_ue_InactiveTime _min9 = new RRM_Config_ue_InactiveTime(24);
   protected static final RRM_Config_ue_InactiveTime _min10 = new RRM_Config_ue_InactiveTime(25);
   protected static final RRM_Config_ue_InactiveTime _min12 = new RRM_Config_ue_InactiveTime(26);
   protected static final RRM_Config_ue_InactiveTime _min14 = new RRM_Config_ue_InactiveTime(27);
   protected static final RRM_Config_ue_InactiveTime _min17 = new RRM_Config_ue_InactiveTime(28);
   protected static final RRM_Config_ue_InactiveTime _min20 = new RRM_Config_ue_InactiveTime(29);
   protected static final RRM_Config_ue_InactiveTime _min24 = new RRM_Config_ue_InactiveTime(30);
   protected static final RRM_Config_ue_InactiveTime _min28 = new RRM_Config_ue_InactiveTime(31);
   protected static final RRM_Config_ue_InactiveTime _min33 = new RRM_Config_ue_InactiveTime(32);
   protected static final RRM_Config_ue_InactiveTime _min38 = new RRM_Config_ue_InactiveTime(33);
   protected static final RRM_Config_ue_InactiveTime _min44 = new RRM_Config_ue_InactiveTime(34);
   protected static final RRM_Config_ue_InactiveTime _min50 = new RRM_Config_ue_InactiveTime(35);
   protected static final RRM_Config_ue_InactiveTime _hr1 = new RRM_Config_ue_InactiveTime(36);
   protected static final RRM_Config_ue_InactiveTime _hr1min30 = new RRM_Config_ue_InactiveTime(37);
   protected static final RRM_Config_ue_InactiveTime _hr2 = new RRM_Config_ue_InactiveTime(38);
   protected static final RRM_Config_ue_InactiveTime _hr2min30 = new RRM_Config_ue_InactiveTime(39);
   protected static final RRM_Config_ue_InactiveTime _hr3 = new RRM_Config_ue_InactiveTime(40);
   protected static final RRM_Config_ue_InactiveTime _hr3min30 = new RRM_Config_ue_InactiveTime(41);
   protected static final RRM_Config_ue_InactiveTime _hr4 = new RRM_Config_ue_InactiveTime(42);
   protected static final RRM_Config_ue_InactiveTime _hr5 = new RRM_Config_ue_InactiveTime(43);
   protected static final RRM_Config_ue_InactiveTime _hr6 = new RRM_Config_ue_InactiveTime(44);
   protected static final RRM_Config_ue_InactiveTime _hr8 = new RRM_Config_ue_InactiveTime(45);
   protected static final RRM_Config_ue_InactiveTime _hr10 = new RRM_Config_ue_InactiveTime(46);
   protected static final RRM_Config_ue_InactiveTime _hr13 = new RRM_Config_ue_InactiveTime(47);
   protected static final RRM_Config_ue_InactiveTime _hr16 = new RRM_Config_ue_InactiveTime(48);
   protected static final RRM_Config_ue_InactiveTime _hr20 = new RRM_Config_ue_InactiveTime(49);
   protected static final RRM_Config_ue_InactiveTime _day1 = new RRM_Config_ue_InactiveTime(50);
   protected static final RRM_Config_ue_InactiveTime _day1hr12 = new RRM_Config_ue_InactiveTime(51);
   protected static final RRM_Config_ue_InactiveTime _day2 = new RRM_Config_ue_InactiveTime(52);
   protected static final RRM_Config_ue_InactiveTime _day2hr12 = new RRM_Config_ue_InactiveTime(53);
   protected static final RRM_Config_ue_InactiveTime _day3 = new RRM_Config_ue_InactiveTime(54);
   protected static final RRM_Config_ue_InactiveTime _day4 = new RRM_Config_ue_InactiveTime(55);
   protected static final RRM_Config_ue_InactiveTime _day5 = new RRM_Config_ue_InactiveTime(56);
   protected static final RRM_Config_ue_InactiveTime _day7 = new RRM_Config_ue_InactiveTime(57);
   protected static final RRM_Config_ue_InactiveTime _day10 = new RRM_Config_ue_InactiveTime(58);
   protected static final RRM_Config_ue_InactiveTime _day14 = new RRM_Config_ue_InactiveTime(59);
   protected static final RRM_Config_ue_InactiveTime _day19 = new RRM_Config_ue_InactiveTime(60);
   protected static final RRM_Config_ue_InactiveTime _day24 = new RRM_Config_ue_InactiveTime(61);
   protected static final RRM_Config_ue_InactiveTime _day30 = new RRM_Config_ue_InactiveTime(62);
   protected static final RRM_Config_ue_InactiveTime _dayMoreThan30 = new RRM_Config_ue_InactiveTime(63);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    *   16
    *   17
    *   18
    *   19
    *   20
    *   21
    *   22
    *   23
    *   24
    *   25
    *   26
    *   27
    *   28
    *   29
    *   30
    *   31
    *   32
    *   33
    *   34
    *   35
    *   36
    *   37
    *   38
    *   39
    *   40
    *   41
    *   42
    *   43
    *   44
    *   45
    *   46
    *   47
    *   48
    *   49
    *   50
    *   51
    *   52
    *   53
    *   54
    *   55
    *   56
    *   57
    *   58
    *   59
    *   60
    *   61
    *   62
    *   63
    */
   protected RRM_Config_ue_InactiveTime (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for s1.
    */
   public static RRM_Config_ue_InactiveTime s1() {
      return _s1;
   }

   /**
    * Singleton accessor method for s2.
    */
   public static RRM_Config_ue_InactiveTime s2() {
      return _s2;
   }

   /**
    * Singleton accessor method for s3.
    */
   public static RRM_Config_ue_InactiveTime s3() {
      return _s3;
   }

   /**
    * Singleton accessor method for s5.
    */
   public static RRM_Config_ue_InactiveTime s5() {
      return _s5;
   }

   /**
    * Singleton accessor method for s7.
    */
   public static RRM_Config_ue_InactiveTime s7() {
      return _s7;
   }

   /**
    * Singleton accessor method for s10.
    */
   public static RRM_Config_ue_InactiveTime s10() {
      return _s10;
   }

   /**
    * Singleton accessor method for s15.
    */
   public static RRM_Config_ue_InactiveTime s15() {
      return _s15;
   }

   /**
    * Singleton accessor method for s20.
    */
   public static RRM_Config_ue_InactiveTime s20() {
      return _s20;
   }

   /**
    * Singleton accessor method for s25.
    */
   public static RRM_Config_ue_InactiveTime s25() {
      return _s25;
   }

   /**
    * Singleton accessor method for s30.
    */
   public static RRM_Config_ue_InactiveTime s30() {
      return _s30;
   }

   /**
    * Singleton accessor method for s40.
    */
   public static RRM_Config_ue_InactiveTime s40() {
      return _s40;
   }

   /**
    * Singleton accessor method for s50.
    */
   public static RRM_Config_ue_InactiveTime s50() {
      return _s50;
   }

   /**
    * Singleton accessor method for min1.
    */
   public static RRM_Config_ue_InactiveTime min1() {
      return _min1;
   }

   /**
    * Singleton accessor method for min1s20c.
    */
   public static RRM_Config_ue_InactiveTime min1s20c() {
      return _min1s20c;
   }

   /**
    * Singleton accessor method for min1s40.
    */
   public static RRM_Config_ue_InactiveTime min1s40() {
      return _min1s40;
   }

   /**
    * Singleton accessor method for min2.
    */
   public static RRM_Config_ue_InactiveTime min2() {
      return _min2;
   }

   /**
    * Singleton accessor method for min2s30.
    */
   public static RRM_Config_ue_InactiveTime min2s30() {
      return _min2s30;
   }

   /**
    * Singleton accessor method for min3.
    */
   public static RRM_Config_ue_InactiveTime min3() {
      return _min3;
   }

   /**
    * Singleton accessor method for min3s30.
    */
   public static RRM_Config_ue_InactiveTime min3s30() {
      return _min3s30;
   }

   /**
    * Singleton accessor method for min4.
    */
   public static RRM_Config_ue_InactiveTime min4() {
      return _min4;
   }

   /**
    * Singleton accessor method for min5.
    */
   public static RRM_Config_ue_InactiveTime min5() {
      return _min5;
   }

   /**
    * Singleton accessor method for min6.
    */
   public static RRM_Config_ue_InactiveTime min6() {
      return _min6;
   }

   /**
    * Singleton accessor method for min7.
    */
   public static RRM_Config_ue_InactiveTime min7() {
      return _min7;
   }

   /**
    * Singleton accessor method for min8.
    */
   public static RRM_Config_ue_InactiveTime min8() {
      return _min8;
   }

   /**
    * Singleton accessor method for min9.
    */
   public static RRM_Config_ue_InactiveTime min9() {
      return _min9;
   }

   /**
    * Singleton accessor method for min10.
    */
   public static RRM_Config_ue_InactiveTime min10() {
      return _min10;
   }

   /**
    * Singleton accessor method for min12.
    */
   public static RRM_Config_ue_InactiveTime min12() {
      return _min12;
   }

   /**
    * Singleton accessor method for min14.
    */
   public static RRM_Config_ue_InactiveTime min14() {
      return _min14;
   }

   /**
    * Singleton accessor method for min17.
    */
   public static RRM_Config_ue_InactiveTime min17() {
      return _min17;
   }

   /**
    * Singleton accessor method for min20.
    */
   public static RRM_Config_ue_InactiveTime min20() {
      return _min20;
   }

   /**
    * Singleton accessor method for min24.
    */
   public static RRM_Config_ue_InactiveTime min24() {
      return _min24;
   }

   /**
    * Singleton accessor method for min28.
    */
   public static RRM_Config_ue_InactiveTime min28() {
      return _min28;
   }

   /**
    * Singleton accessor method for min33.
    */
   public static RRM_Config_ue_InactiveTime min33() {
      return _min33;
   }

   /**
    * Singleton accessor method for min38.
    */
   public static RRM_Config_ue_InactiveTime min38() {
      return _min38;
   }

   /**
    * Singleton accessor method for min44.
    */
   public static RRM_Config_ue_InactiveTime min44() {
      return _min44;
   }

   /**
    * Singleton accessor method for min50.
    */
   public static RRM_Config_ue_InactiveTime min50() {
      return _min50;
   }

   /**
    * Singleton accessor method for hr1.
    */
   public static RRM_Config_ue_InactiveTime hr1() {
      return _hr1;
   }

   /**
    * Singleton accessor method for hr1min30.
    */
   public static RRM_Config_ue_InactiveTime hr1min30() {
      return _hr1min30;
   }

   /**
    * Singleton accessor method for hr2.
    */
   public static RRM_Config_ue_InactiveTime hr2() {
      return _hr2;
   }

   /**
    * Singleton accessor method for hr2min30.
    */
   public static RRM_Config_ue_InactiveTime hr2min30() {
      return _hr2min30;
   }

   /**
    * Singleton accessor method for hr3.
    */
   public static RRM_Config_ue_InactiveTime hr3() {
      return _hr3;
   }

   /**
    * Singleton accessor method for hr3min30.
    */
   public static RRM_Config_ue_InactiveTime hr3min30() {
      return _hr3min30;
   }

   /**
    * Singleton accessor method for hr4.
    */
   public static RRM_Config_ue_InactiveTime hr4() {
      return _hr4;
   }

   /**
    * Singleton accessor method for hr5.
    */
   public static RRM_Config_ue_InactiveTime hr5() {
      return _hr5;
   }

   /**
    * Singleton accessor method for hr6.
    */
   public static RRM_Config_ue_InactiveTime hr6() {
      return _hr6;
   }

   /**
    * Singleton accessor method for hr8.
    */
   public static RRM_Config_ue_InactiveTime hr8() {
      return _hr8;
   }

   /**
    * Singleton accessor method for hr10.
    */
   public static RRM_Config_ue_InactiveTime hr10() {
      return _hr10;
   }

   /**
    * Singleton accessor method for hr13.
    */
   public static RRM_Config_ue_InactiveTime hr13() {
      return _hr13;
   }

   /**
    * Singleton accessor method for hr16.
    */
   public static RRM_Config_ue_InactiveTime hr16() {
      return _hr16;
   }

   /**
    * Singleton accessor method for hr20.
    */
   public static RRM_Config_ue_InactiveTime hr20() {
      return _hr20;
   }

   /**
    * Singleton accessor method for day1.
    */
   public static RRM_Config_ue_InactiveTime day1() {
      return _day1;
   }

   /**
    * Singleton accessor method for day1hr12.
    */
   public static RRM_Config_ue_InactiveTime day1hr12() {
      return _day1hr12;
   }

   /**
    * Singleton accessor method for day2.
    */
   public static RRM_Config_ue_InactiveTime day2() {
      return _day2;
   }

   /**
    * Singleton accessor method for day2hr12.
    */
   public static RRM_Config_ue_InactiveTime day2hr12() {
      return _day2hr12;
   }

   /**
    * Singleton accessor method for day3.
    */
   public static RRM_Config_ue_InactiveTime day3() {
      return _day3;
   }

   /**
    * Singleton accessor method for day4.
    */
   public static RRM_Config_ue_InactiveTime day4() {
      return _day4;
   }

   /**
    * Singleton accessor method for day5.
    */
   public static RRM_Config_ue_InactiveTime day5() {
      return _day5;
   }

   /**
    * Singleton accessor method for day7.
    */
   public static RRM_Config_ue_InactiveTime day7() {
      return _day7;
   }

   /**
    * Singleton accessor method for day10.
    */
   public static RRM_Config_ue_InactiveTime day10() {
      return _day10;
   }

   /**
    * Singleton accessor method for day14.
    */
   public static RRM_Config_ue_InactiveTime day14() {
      return _day14;
   }

   /**
    * Singleton accessor method for day19.
    */
   public static RRM_Config_ue_InactiveTime day19() {
      return _day19;
   }

   /**
    * Singleton accessor method for day24.
    */
   public static RRM_Config_ue_InactiveTime day24() {
      return _day24;
   }

   /**
    * Singleton accessor method for day30.
    */
   public static RRM_Config_ue_InactiveTime day30() {
      return _day30;
   }

   /**
    * Singleton accessor method for dayMoreThan30.
    */
   public static RRM_Config_ue_InactiveTime dayMoreThan30() {
      return _dayMoreThan30;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return RRM_Config_ue_InactiveTime.valueOf( RRM_Config_ue_InactiveTime.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static RRM_Config_ue_InactiveTime valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return s1();
         case 1: return s2();
         case 2: return s3();
         case 3: return s5();
         case 4: return s7();
         case 5: return s10();
         case 6: return s15();
         case 7: return s20();
         case 8: return s25();
         case 9: return s30();
         case 10: return s40();
         case 11: return s50();
         case 12: return min1();
         case 13: return min1s20c();
         case 14: return min1s40();
         case 15: return min2();
         case 16: return min2s30();
         case 17: return min3();
         case 18: return min3s30();
         case 19: return min4();
         case 20: return min5();
         case 21: return min6();
         case 22: return min7();
         case 23: return min8();
         case 24: return min9();
         case 25: return min10();
         case 26: return min12();
         case 27: return min14();
         case 28: return min17();
         case 29: return min20();
         case 30: return min24();
         case 31: return min28();
         case 32: return min33();
         case 33: return min38();
         case 34: return min44();
         case 35: return min50();
         case 36: return hr1();
         case 37: return hr1min30();
         case 38: return hr2();
         case 39: return hr2min30();
         case 40: return hr3();
         case 41: return hr3min30();
         case 42: return hr4();
         case 43: return hr5();
         case 44: return hr6();
         case 45: return hr8();
         case 46: return hr10();
         case 47: return hr13();
         case 48: return hr16();
         case 49: return hr20();
         case 50: return day1();
         case 51: return day1hr12();
         case 52: return day2();
         case 53: return day2hr12();
         case 54: return day3();
         case 55: return day4();
         case 56: return day5();
         case 57: return day7();
         case 58: return day10();
         case 59: return day14();
         case 60: return day19();
         case 61: return day24();
         case 62: return day30();
         case 63: return dayMoreThan30();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (64);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         case 16: ret =  16; break;
         case 17: ret =  17; break;
         case 18: ret =  18; break;
         case 19: ret =  19; break;
         case 20: ret =  20; break;
         case 21: ret =  21; break;
         case 22: ret =  22; break;
         case 23: ret =  23; break;
         case 24: ret =  24; break;
         case 25: ret =  25; break;
         case 26: ret =  26; break;
         case 27: ret =  27; break;
         case 28: ret =  28; break;
         case 29: ret =  29; break;
         case 30: ret =  30; break;
         case 31: ret =  31; break;
         case 32: ret =  32; break;
         case 33: ret =  33; break;
         case 34: ret =  34; break;
         case 35: ret =  35; break;
         case 36: ret =  36; break;
         case 37: ret =  37; break;
         case 38: ret =  38; break;
         case 39: ret =  39; break;
         case 40: ret =  40; break;
         case 41: ret =  41; break;
         case 42: ret =  42; break;
         case 43: ret =  43; break;
         case 44: ret =  44; break;
         case 45: ret =  45; break;
         case 46: ret =  46; break;
         case 47: ret =  47; break;
         case 48: ret =  48; break;
         case 49: ret =  49; break;
         case 50: ret =  50; break;
         case 51: ret =  51; break;
         case 52: ret =  52; break;
         case 53: ret =  53; break;
         case 54: ret =  54; break;
         case 55: ret =  55; break;
         case 56: ret =  56; break;
         case 57: ret =  57; break;
         case 58: ret =  58; break;
         case 59: ret =  59; break;
         case 60: ret =  60; break;
         case 61: ret =  61; break;
         case 62: ret =  62; break;
         case 63: ret =  63; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (RRM_Config_ue_InactiveTime.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("s1");
         case 1: return ("s2");
         case 2: return ("s3");
         case 3: return ("s5");
         case 4: return ("s7");
         case 5: return ("s10");
         case 6: return ("s15");
         case 7: return ("s20");
         case 8: return ("s25");
         case 9: return ("s30");
         case 10: return ("s40");
         case 11: return ("s50");
         case 12: return ("min1");
         case 13: return ("min1s20c");
         case 14: return ("min1s40");
         case 15: return ("min2");
         case 16: return ("min2s30");
         case 17: return ("min3");
         case 18: return ("min3s30");
         case 19: return ("min4");
         case 20: return ("min5");
         case 21: return ("min6");
         case 22: return ("min7");
         case 23: return ("min8");
         case 24: return ("min9");
         case 25: return ("min10");
         case 26: return ("min12");
         case 27: return ("min14");
         case 28: return ("min17");
         case 29: return ("min20");
         case 30: return ("min24");
         case 31: return ("min28");
         case 32: return ("min33");
         case 33: return ("min38");
         case 34: return ("min44");
         case 35: return ("min50");
         case 36: return ("hr1");
         case 37: return ("hr1min30");
         case 38: return ("hr2");
         case 39: return ("hr2min30");
         case 40: return ("hr3");
         case 41: return ("hr3min30");
         case 42: return ("hr4");
         case 43: return ("hr5");
         case 44: return ("hr6");
         case 45: return ("hr8");
         case 46: return ("hr10");
         case 47: return ("hr13");
         case 48: return ("hr16");
         case 49: return ("hr20");
         case 50: return ("day1");
         case 51: return ("day1hr12");
         case 52: return ("day2");
         case 53: return ("day2hr12");
         case 54: return ("day3");
         case 55: return ("day4");
         case 56: return ("day5");
         case 57: return ("day7");
         case 58: return ("day10");
         case 59: return ("day14");
         case 60: return ("day19");
         case 61: return ("day24");
         case 62: return ("day30");
         case 63: return ("dayMoreThan30");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
