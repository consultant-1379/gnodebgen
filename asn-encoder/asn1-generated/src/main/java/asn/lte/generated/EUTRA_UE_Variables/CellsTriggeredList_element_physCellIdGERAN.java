/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_UE_Variables;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.CarrierFreqGERAN;
import asn.lte.generated.EUTRA_RRC_Definitions.PhysCellIdGERAN;

public class CellsTriggeredList_element_physCellIdGERAN extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_UE_VariablesRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public CarrierFreqGERAN carrierFreq;
   public PhysCellIdGERAN physCellId;

   public CellsTriggeredList_element_physCellIdGERAN () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CellsTriggeredList_element_physCellIdGERAN (
      CarrierFreqGERAN carrierFreq_,
      PhysCellIdGERAN physCellId_
   ) {
      super();
      carrierFreq = carrierFreq_;
      physCellId = physCellId_;
   }

   public void init () {
      carrierFreq = null;
      physCellId = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return carrierFreq;
         case 1: return physCellId;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "carrierFreq";
         case 1: return "physCellId";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode carrierFreq

      buffer.getContext().eventDispatcher.startElement("carrierFreq", -1);

      carrierFreq = new CarrierFreqGERAN();
      carrierFreq.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("carrierFreq", -1);

      // decode physCellId

      buffer.getContext().eventDispatcher.startElement("physCellId", -1);

      physCellId = new PhysCellIdGERAN();
      physCellId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("physCellId", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (carrierFreq != null) carrierFreq.print (_sb, "carrierFreq", _level+1);
      if (physCellId != null) physCellId.print (_sb, "physCellId", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
