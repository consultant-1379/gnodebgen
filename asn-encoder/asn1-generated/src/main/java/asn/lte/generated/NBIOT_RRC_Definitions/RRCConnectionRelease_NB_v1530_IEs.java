/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.NextHopChainingCount;

public class RRCConnectionRelease_NB_v1530_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RRCConnectionRelease-NB-v1530-IEs";
   }

   public RRCConnectionRelease_NB_v1530_IEs_drb_ContinueROHC_r15 drb_ContinueROHC_r15 = null;  // optional
   public NextHopChainingCount nextHopChainingCount_r15;  // optional
   public RRCConnectionRelease_NB_v1530_IEs_nonCriticalExtension nonCriticalExtension;  // optional

   public RRCConnectionRelease_NB_v1530_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RRCConnectionRelease_NB_v1530_IEs (
      RRCConnectionRelease_NB_v1530_IEs_drb_ContinueROHC_r15 drb_ContinueROHC_r15_,
      NextHopChainingCount nextHopChainingCount_r15_,
      RRCConnectionRelease_NB_v1530_IEs_nonCriticalExtension nonCriticalExtension_
   ) {
      super();
      drb_ContinueROHC_r15 = drb_ContinueROHC_r15_;
      nextHopChainingCount_r15 = nextHopChainingCount_r15_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public RRCConnectionRelease_NB_v1530_IEs (RRCConnectionRelease_NB_v1530_IEs_drb_ContinueROHC_r15 drb_ContinueROHC_r15_,
      long nextHopChainingCount_r15_,
      RRCConnectionRelease_NB_v1530_IEs_nonCriticalExtension nonCriticalExtension_
   ) {
      super();
      drb_ContinueROHC_r15 = drb_ContinueROHC_r15_;
      nextHopChainingCount_r15 = new NextHopChainingCount (nextHopChainingCount_r15_);
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      drb_ContinueROHC_r15 = null;
      nextHopChainingCount_r15 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return drb_ContinueROHC_r15;
         case 1: return nextHopChainingCount_r15;
         case 2: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "drb-ContinueROHC-r15";
         case 1: return "nextHopChainingCount-r15";
         case 2: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean drb_ContinueROHC_r15Present = buffer.decodeBit ("drb_ContinueROHC_r15Present");
      boolean nextHopChainingCount_r15Present = buffer.decodeBit ("nextHopChainingCount_r15Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode drb_ContinueROHC_r15

      if (drb_ContinueROHC_r15Present) {
         buffer.getContext().eventDispatcher.startElement("drb_ContinueROHC_r15", -1);

         int tval = RRCConnectionRelease_NB_v1530_IEs_drb_ContinueROHC_r15.decodeEnumValue (buffer);
         drb_ContinueROHC_r15 = RRCConnectionRelease_NB_v1530_IEs_drb_ContinueROHC_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("drb_ContinueROHC_r15", -1);
      }
      else {
         drb_ContinueROHC_r15 = null;
      }

      // decode nextHopChainingCount_r15

      if (nextHopChainingCount_r15Present) {
         buffer.getContext().eventDispatcher.startElement("nextHopChainingCount_r15", -1);

         nextHopChainingCount_r15 = new NextHopChainingCount();
         nextHopChainingCount_r15.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nextHopChainingCount_r15", -1);
      }
      else {
         nextHopChainingCount_r15 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new RRCConnectionRelease_NB_v1530_IEs_nonCriticalExtension();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (drb_ContinueROHC_r15 != null) drb_ContinueROHC_r15.print (_sb, "drb_ContinueROHC_r15", _level+1);
      if (nextHopChainingCount_r15 != null) nextHopChainingCount_r15.print (_sb, "nextHopChainingCount_r15", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
