/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_Parameters_v1530 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SL-Parameters-v1530";
   }

   public SL_Parameters_v1530_slss_SupportedTxFreq_r15 slss_SupportedTxFreq_r15 = null;  // optional
   public SL_Parameters_v1530_sl_64QAM_Tx_r15 sl_64QAM_Tx_r15 = null;  // optional
   public SL_Parameters_v1530_sl_TxDiversity_r15 sl_TxDiversity_r15 = null;  // optional
   public UE_CategorySL_r15 ue_CategorySL_r15;  // optional
   public V2X_SupportedBandCombination_v1530 v2x_SupportedBandCombinationList_v1530;  // optional

   public SL_Parameters_v1530 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_Parameters_v1530 (
      SL_Parameters_v1530_slss_SupportedTxFreq_r15 slss_SupportedTxFreq_r15_,
      SL_Parameters_v1530_sl_64QAM_Tx_r15 sl_64QAM_Tx_r15_,
      SL_Parameters_v1530_sl_TxDiversity_r15 sl_TxDiversity_r15_,
      UE_CategorySL_r15 ue_CategorySL_r15_,
      V2X_SupportedBandCombination_v1530 v2x_SupportedBandCombinationList_v1530_
   ) {
      super();
      slss_SupportedTxFreq_r15 = slss_SupportedTxFreq_r15_;
      sl_64QAM_Tx_r15 = sl_64QAM_Tx_r15_;
      sl_TxDiversity_r15 = sl_TxDiversity_r15_;
      ue_CategorySL_r15 = ue_CategorySL_r15_;
      v2x_SupportedBandCombinationList_v1530 = v2x_SupportedBandCombinationList_v1530_;
   }

   public void init () {
      slss_SupportedTxFreq_r15 = null;
      sl_64QAM_Tx_r15 = null;
      sl_TxDiversity_r15 = null;
      ue_CategorySL_r15 = null;
      v2x_SupportedBandCombinationList_v1530 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return slss_SupportedTxFreq_r15;
         case 1: return sl_64QAM_Tx_r15;
         case 2: return sl_TxDiversity_r15;
         case 3: return ue_CategorySL_r15;
         case 4: return v2x_SupportedBandCombinationList_v1530;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "slss-SupportedTxFreq-r15";
         case 1: return "sl-64QAM-Tx-r15";
         case 2: return "sl-TxDiversity-r15";
         case 3: return "ue-CategorySL-r15";
         case 4: return "v2x-SupportedBandCombinationList-v1530";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean slss_SupportedTxFreq_r15Present = buffer.decodeBit ("slss_SupportedTxFreq_r15Present");
      boolean sl_64QAM_Tx_r15Present = buffer.decodeBit ("sl_64QAM_Tx_r15Present");
      boolean sl_TxDiversity_r15Present = buffer.decodeBit ("sl_TxDiversity_r15Present");
      boolean ue_CategorySL_r15Present = buffer.decodeBit ("ue_CategorySL_r15Present");
      boolean v2x_SupportedBandCombinationList_v1530Present = buffer.decodeBit ("v2x_SupportedBandCombinationList_v1530Present");

      // decode slss_SupportedTxFreq_r15

      if (slss_SupportedTxFreq_r15Present) {
         buffer.getContext().eventDispatcher.startElement("slss_SupportedTxFreq_r15", -1);

         int tval = SL_Parameters_v1530_slss_SupportedTxFreq_r15.decodeEnumValue (buffer);
         slss_SupportedTxFreq_r15 = SL_Parameters_v1530_slss_SupportedTxFreq_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("slss_SupportedTxFreq_r15", -1);
      }
      else {
         slss_SupportedTxFreq_r15 = null;
      }

      // decode sl_64QAM_Tx_r15

      if (sl_64QAM_Tx_r15Present) {
         buffer.getContext().eventDispatcher.startElement("sl_64QAM_Tx_r15", -1);

         int tval = SL_Parameters_v1530_sl_64QAM_Tx_r15.decodeEnumValue (buffer);
         sl_64QAM_Tx_r15 = SL_Parameters_v1530_sl_64QAM_Tx_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("sl_64QAM_Tx_r15", -1);
      }
      else {
         sl_64QAM_Tx_r15 = null;
      }

      // decode sl_TxDiversity_r15

      if (sl_TxDiversity_r15Present) {
         buffer.getContext().eventDispatcher.startElement("sl_TxDiversity_r15", -1);

         int tval = SL_Parameters_v1530_sl_TxDiversity_r15.decodeEnumValue (buffer);
         sl_TxDiversity_r15 = SL_Parameters_v1530_sl_TxDiversity_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("sl_TxDiversity_r15", -1);
      }
      else {
         sl_TxDiversity_r15 = null;
      }

      // decode ue_CategorySL_r15

      if (ue_CategorySL_r15Present) {
         buffer.getContext().eventDispatcher.startElement("ue_CategorySL_r15", -1);

         ue_CategorySL_r15 = new UE_CategorySL_r15();
         ue_CategorySL_r15.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("ue_CategorySL_r15", -1);
      }
      else {
         ue_CategorySL_r15 = null;
      }

      // decode v2x_SupportedBandCombinationList_v1530

      if (v2x_SupportedBandCombinationList_v1530Present) {
         buffer.getContext().eventDispatcher.startElement("v2x_SupportedBandCombinationList_v1530", -1);

         v2x_SupportedBandCombinationList_v1530 = new V2X_SupportedBandCombination_v1530();
         v2x_SupportedBandCombinationList_v1530.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("v2x_SupportedBandCombinationList_v1530", -1);
      }
      else {
         v2x_SupportedBandCombinationList_v1530 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (slss_SupportedTxFreq_r15 != null) slss_SupportedTxFreq_r15.print (_sb, "slss_SupportedTxFreq_r15", _level+1);
      if (sl_64QAM_Tx_r15 != null) sl_64QAM_Tx_r15.print (_sb, "sl_64QAM_Tx_r15", _level+1);
      if (sl_TxDiversity_r15 != null) sl_TxDiversity_r15.print (_sb, "sl_TxDiversity_r15", _level+1);
      if (ue_CategorySL_r15 != null) ue_CategorySL_r15.print (_sb, "ue_CategorySL_r15", _level+1);
      if (v2x_SupportedBandCombinationList_v1530 != null) v2x_SupportedBandCombinationList_v1530.print (_sb, "v2x_SupportedBandCombinationList_v1530", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
