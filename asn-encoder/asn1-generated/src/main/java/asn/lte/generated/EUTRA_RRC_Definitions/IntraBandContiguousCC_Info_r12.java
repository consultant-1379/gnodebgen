/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class IntraBandContiguousCC_Info_r12 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "IntraBandContiguousCC-Info-r12";
   }

   public IntraBandContiguousCC_Info_r12_fourLayerTM3_TM4_perCC_r12 fourLayerTM3_TM4_perCC_r12 = null;  // optional
   public MIMO_CapabilityDL_r10 supportedMIMO_CapabilityDL_r12 = null;  // optional
   public IntraBandContiguousCC_Info_r12_supportedCSI_Proc_r12 supportedCSI_Proc_r12 = null;  // optional

   public IntraBandContiguousCC_Info_r12 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public IntraBandContiguousCC_Info_r12 (
      IntraBandContiguousCC_Info_r12_fourLayerTM3_TM4_perCC_r12 fourLayerTM3_TM4_perCC_r12_,
      MIMO_CapabilityDL_r10 supportedMIMO_CapabilityDL_r12_,
      IntraBandContiguousCC_Info_r12_supportedCSI_Proc_r12 supportedCSI_Proc_r12_
   ) {
      super();
      fourLayerTM3_TM4_perCC_r12 = fourLayerTM3_TM4_perCC_r12_;
      supportedMIMO_CapabilityDL_r12 = supportedMIMO_CapabilityDL_r12_;
      supportedCSI_Proc_r12 = supportedCSI_Proc_r12_;
   }

   public void init () {
      fourLayerTM3_TM4_perCC_r12 = null;
      supportedMIMO_CapabilityDL_r12 = null;
      supportedCSI_Proc_r12 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return fourLayerTM3_TM4_perCC_r12;
         case 1: return supportedMIMO_CapabilityDL_r12;
         case 2: return supportedCSI_Proc_r12;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "fourLayerTM3-TM4-perCC-r12";
         case 1: return "supportedMIMO-CapabilityDL-r12";
         case 2: return "supportedCSI-Proc-r12";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean fourLayerTM3_TM4_perCC_r12Present = buffer.decodeBit ("fourLayerTM3_TM4_perCC_r12Present");
      boolean supportedMIMO_CapabilityDL_r12Present = buffer.decodeBit ("supportedMIMO_CapabilityDL_r12Present");
      boolean supportedCSI_Proc_r12Present = buffer.decodeBit ("supportedCSI_Proc_r12Present");

      // decode fourLayerTM3_TM4_perCC_r12

      if (fourLayerTM3_TM4_perCC_r12Present) {
         buffer.getContext().eventDispatcher.startElement("fourLayerTM3_TM4_perCC_r12", -1);

         int tval = IntraBandContiguousCC_Info_r12_fourLayerTM3_TM4_perCC_r12.decodeEnumValue (buffer);
         fourLayerTM3_TM4_perCC_r12 = IntraBandContiguousCC_Info_r12_fourLayerTM3_TM4_perCC_r12.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("fourLayerTM3_TM4_perCC_r12", -1);
      }
      else {
         fourLayerTM3_TM4_perCC_r12 = null;
      }

      // decode supportedMIMO_CapabilityDL_r12

      if (supportedMIMO_CapabilityDL_r12Present) {
         buffer.getContext().eventDispatcher.startElement("supportedMIMO_CapabilityDL_r12", -1);

         int tval = MIMO_CapabilityDL_r10.decodeEnumValue (buffer);
         supportedMIMO_CapabilityDL_r12 = MIMO_CapabilityDL_r10.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("supportedMIMO_CapabilityDL_r12", -1);
      }
      else {
         supportedMIMO_CapabilityDL_r12 = null;
      }

      // decode supportedCSI_Proc_r12

      if (supportedCSI_Proc_r12Present) {
         buffer.getContext().eventDispatcher.startElement("supportedCSI_Proc_r12", -1);

         int tval = IntraBandContiguousCC_Info_r12_supportedCSI_Proc_r12.decodeEnumValue (buffer);
         supportedCSI_Proc_r12 = IntraBandContiguousCC_Info_r12_supportedCSI_Proc_r12.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("supportedCSI_Proc_r12", -1);
      }
      else {
         supportedCSI_Proc_r12 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (fourLayerTM3_TM4_perCC_r12 != null) fourLayerTM3_TM4_perCC_r12.print (_sb, "fourLayerTM3_TM4_perCC_r12", _level+1);
      if (supportedMIMO_CapabilityDL_r12 != null) supportedMIMO_CapabilityDL_r12.print (_sb, "supportedMIMO_CapabilityDL_r12", _level+1);
      if (supportedCSI_Proc_r12 != null) supportedCSI_Proc_r12.print (_sb, "supportedCSI_Proc_r12", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
