/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.X2AP_Ericsson_IEs;

import com.objsys.asn1j.runtime.*;

public class EAB_eNB_FeatureList_element_feature_addOrModify extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_X2AP_Ericsson_IEsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   /**
    * fid: fid-OverlaidCellDetection
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-eNB-FeatureProperties-Undefined
    * Java type: EAB_eNB_FeatureProperties_Undefined
    *
    * fid: fid-CarrierAggregation
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-CarrierAggregationProperties
    * Java type: EAB_CarrierAggregationProperties
    *
    * fid: fid-CellSleepMode
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-eNB-FeatureProperties-Undefined
    * Java type: EAB_eNB_FeatureProperties_Undefined
    *
    * fid: fid-Inter-eNB-LBM-CommunicationCapability
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-Inter-eNB-LBM-CommunicationCapability
    * Java type: EAB_Inter_eNB_LBM_CommunicationCapability
    *
    * fid: fid-UplinkTriggeredInterFrequencyMobility
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-eNB-FeatureProperties-Undefined
    * Java type: EAB_eNB_FeatureProperties_Undefined
    *
    * fid: fid-StickyEARFCN
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-eNB-FeatureProperties-Undefined
    * Java type: EAB_eNB_FeatureProperties_Undefined
    *
    * fid: fid-ElasticRAN
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-eNB-FeatureProperties-Undefined
    * Java type: EAB_eNB_FeatureProperties_Undefined
    *
    * fid: fid-Inter-eNB-UplinkCoMP
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-Inter-eNB-ULCoMPProperties
    * Java type: EAB_Inter_eNB_ULCoMPProperties
    *
    * fid: fid-CarrierAggregationFddTdd
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-eNB-FeatureProperties-Undefined
    * Java type: EAB_eNB_FeatureProperties_Undefined
    *
    * fid: fid-ElasticRANUplinkCoMP
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-ElasticRAN-ULCoMPProperties
    * Java type: EAB_ElasticRAN_ULCoMPProperties
    *
    * fid: fid-Inter-eNB-BB-Collaboration
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-Inter-eNB-BB-CollaborationProperties
    * Java type: EAB_Inter_eNB_BB_CollaborationProperties
    *
    * fid: fid-FrequencyBandIndicatorPriority
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-eNB-FeatureProperties-Undefined
    * Java type: EAB_eNB_FeatureProperties_Undefined
    *
    * fid: fid-LicensedAssistedAccess
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-LicensedAssistedAccessProperties
    * Java type: EAB_LicensedAssistedAccessProperties
    *
    * fid: fid-FrequencyBandIndicatorPriorityX2Handovers
    * criticality: EAB_CriticalityIgnore.ignore
    * presence: EAB_PresenceOptional.optional
    * ASN.1 type: EAB-eNB-FeatureProperties-Undefined
    * Java type: EAB_eNB_FeatureProperties_Undefined
    */
   public Asn1Type propertyIE;  // optional

   public EAB_eNB_FeatureList_element_feature_addOrModify () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public EAB_eNB_FeatureList_element_feature_addOrModify (
      Asn1Type propertyIE_
   ) {
      super();
      propertyIE = propertyIE_;
   }

   public void init () {
      propertyIE = null;
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return propertyIE;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "propertyIE";
         default: return null;
      }
   }


   /**
    * Assign fields according to information object having key fid-OverlaidCellDetection
    */
   public void setUsing_fid_OverlaidCellDetection(asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-CarrierAggregation
    */
   public void setUsing_fid_CarrierAggregation(EAB_CarrierAggregationProperties propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-CellSleepMode
    */
   public void setUsing_fid_CellSleepMode(asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-Inter-eNB-LBM-CommunicationCapability
    */
   public void setUsing_fid_Inter_eNB_LBM_CommunicationCapability(EAB_Inter_eNB_LBM_CommunicationCapability propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-UplinkTriggeredInterFrequencyMobility
    */
   public void setUsing_fid_UplinkTriggeredInterFrequencyMobility(asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-StickyEARFCN
    */
   public void setUsing_fid_StickyEARFCN(asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-ElasticRAN
    */
   public void setUsing_fid_ElasticRAN(asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-Inter-eNB-UplinkCoMP
    */
   public void setUsing_fid_Inter_eNB_UplinkCoMP(EAB_Inter_eNB_ULCoMPProperties propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-CarrierAggregationFddTdd
    */
   public void setUsing_fid_CarrierAggregationFddTdd(asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-ElasticRANUplinkCoMP
    */
   public void setUsing_fid_ElasticRANUplinkCoMP(EAB_ElasticRAN_ULCoMPProperties propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-Inter-eNB-BB-Collaboration
    */
   public void setUsing_fid_Inter_eNB_BB_Collaboration(EAB_Inter_eNB_BB_CollaborationProperties propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-FrequencyBandIndicatorPriority
    */
   public void setUsing_fid_FrequencyBandIndicatorPriority(asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-LicensedAssistedAccess
    */
   public void setUsing_fid_LicensedAssistedAccess(EAB_LicensedAssistedAccessProperties propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Assign fields according to information object having key fid-FrequencyBandIndicatorPriorityX2Handovers
    */
   public void setUsing_fid_FrequencyBandIndicatorPriorityX2Handovers(asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined propertyIE) {
      this.propertyIE = propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-OverlaidCellDetection
    */
   public asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined getPropertyIEFor_fid_OverlaidCellDetection() {
      return (asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-CarrierAggregation
    */
   public EAB_CarrierAggregationProperties getPropertyIEFor_fid_CarrierAggregation() {
      return (EAB_CarrierAggregationProperties) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-CellSleepMode
    */
   public asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined getPropertyIEFor_fid_CellSleepMode() {
      return (asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-Inter-eNB-LBM-CommunicationCapability
    */
   public EAB_Inter_eNB_LBM_CommunicationCapability getPropertyIEFor_fid_Inter_eNB_LBM_CommunicationCapability() {
      return (EAB_Inter_eNB_LBM_CommunicationCapability) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-UplinkTriggeredInterFrequencyMobility
    */
   public asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined getPropertyIEFor_fid_UplinkTriggeredInterFrequencyMobility() {
      return (asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-StickyEARFCN
    */
   public asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined getPropertyIEFor_fid_StickyEARFCN() {
      return (asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-ElasticRAN
    */
   public asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined getPropertyIEFor_fid_ElasticRAN() {
      return (asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-Inter-eNB-UplinkCoMP
    */
   public EAB_Inter_eNB_ULCoMPProperties getPropertyIEFor_fid_Inter_eNB_UplinkCoMP() {
      return (EAB_Inter_eNB_ULCoMPProperties) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-CarrierAggregationFddTdd
    */
   public asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined getPropertyIEFor_fid_CarrierAggregationFddTdd() {
      return (asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-ElasticRANUplinkCoMP
    */
   public EAB_ElasticRAN_ULCoMPProperties getPropertyIEFor_fid_ElasticRANUplinkCoMP() {
      return (EAB_ElasticRAN_ULCoMPProperties) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-Inter-eNB-BB-Collaboration
    */
   public EAB_Inter_eNB_BB_CollaborationProperties getPropertyIEFor_fid_Inter_eNB_BB_Collaboration() {
      return (EAB_Inter_eNB_BB_CollaborationProperties) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-FrequencyBandIndicatorPriority
    */
   public asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined getPropertyIEFor_fid_FrequencyBandIndicatorPriority() {
      return (asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-LicensedAssistedAccess
    */
   public EAB_LicensedAssistedAccessProperties getPropertyIEFor_fid_LicensedAssistedAccess() {
      return (EAB_LicensedAssistedAccessProperties) this.propertyIE;
   }

   /**
    * Get value of propertyIE with type set according to information object having key fid-FrequencyBandIndicatorPriorityX2Handovers
    */
   public asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined getPropertyIEFor_fid_FrequencyBandIndicatorPriorityX2Handovers() {
      return (asn.lte.generated.X2AP_Ericsson_CommonDataTypes.EAB_eNB_FeatureProperties_Undefined) this.propertyIE;
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean propertyIEPresent = buffer.decodeBit ("propertyIEPresent");

      // decode propertyIE

      if (propertyIEPresent) {
         buffer.getContext().eventDispatcher.startElement("propertyIE", -1);

         propertyIE = new Asn1OpenType();
         propertyIE.decode (buffer);

         buffer.invokeCharacters(propertyIE.toString());
         buffer.getContext().eventDispatcher.endElement("propertyIE", -1);
      }
      else {
         propertyIE = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (propertyIE != null) propertyIE.print (_sb, "propertyIE", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
