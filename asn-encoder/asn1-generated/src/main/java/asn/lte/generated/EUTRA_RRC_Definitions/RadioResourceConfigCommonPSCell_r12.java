/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RadioResourceConfigCommonPSCell_r12 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RadioResourceConfigCommonPSCell-r12";
   }

   public RadioResourceConfigCommonSCell_r10 basicFields_r12;
   public PUCCH_ConfigCommon pucch_ConfigCommon_r12;
   public RACH_ConfigCommon rach_ConfigCommon_r12;
   public UplinkPowerControlCommonPSCell_r12 uplinkPowerControlCommonPSCell_r12;
   public boolean mV2ExtPresent;
   public UplinkPowerControlCommon_v1310 uplinkPowerControlCommonPSCell_v1310;  // optional
   public boolean mV3ExtPresent;
   public UplinkPowerControlCommon_v1530 uplinkPowerControlCommonPSCell_v1530;  // optional
   public Asn1OpenExt extElem1;

   public RadioResourceConfigCommonPSCell_r12 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RadioResourceConfigCommonPSCell_r12 (
      RadioResourceConfigCommonSCell_r10 basicFields_r12_,
      PUCCH_ConfigCommon pucch_ConfigCommon_r12_,
      RACH_ConfigCommon rach_ConfigCommon_r12_,
      UplinkPowerControlCommonPSCell_r12 uplinkPowerControlCommonPSCell_r12_,
      UplinkPowerControlCommon_v1310 uplinkPowerControlCommonPSCell_v1310_,
      UplinkPowerControlCommon_v1530 uplinkPowerControlCommonPSCell_v1530_
   ) {
      super();
      basicFields_r12 = basicFields_r12_;
      pucch_ConfigCommon_r12 = pucch_ConfigCommon_r12_;
      rach_ConfigCommon_r12 = rach_ConfigCommon_r12_;
      uplinkPowerControlCommonPSCell_r12 = uplinkPowerControlCommonPSCell_r12_;
      uplinkPowerControlCommonPSCell_v1310 = uplinkPowerControlCommonPSCell_v1310_;
      uplinkPowerControlCommonPSCell_v1530 = uplinkPowerControlCommonPSCell_v1530_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public RadioResourceConfigCommonPSCell_r12 (
      RadioResourceConfigCommonSCell_r10 basicFields_r12_,
      PUCCH_ConfigCommon pucch_ConfigCommon_r12_,
      RACH_ConfigCommon rach_ConfigCommon_r12_,
      UplinkPowerControlCommonPSCell_r12 uplinkPowerControlCommonPSCell_r12_
   ) {
      super();
      basicFields_r12 = basicFields_r12_;
      pucch_ConfigCommon_r12 = pucch_ConfigCommon_r12_;
      rach_ConfigCommon_r12 = rach_ConfigCommon_r12_;
      uplinkPowerControlCommonPSCell_r12 = uplinkPowerControlCommonPSCell_r12_;
   }

   public void init () {
      basicFields_r12 = null;
      pucch_ConfigCommon_r12 = null;
      rach_ConfigCommon_r12 = null;
      uplinkPowerControlCommonPSCell_r12 = null;
      uplinkPowerControlCommonPSCell_v1310 = null;
      uplinkPowerControlCommonPSCell_v1530 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return basicFields_r12;
         case 1: return pucch_ConfigCommon_r12;
         case 2: return rach_ConfigCommon_r12;
         case 3: return uplinkPowerControlCommonPSCell_r12;
         case 4: return uplinkPowerControlCommonPSCell_v1310;
         case 5: return uplinkPowerControlCommonPSCell_v1530;
         case 6: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "basicFields-r12";
         case 1: return "pucch-ConfigCommon-r12";
         case 2: return "rach-ConfigCommon-r12";
         case 3: return "uplinkPowerControlCommonPSCell-r12";
         case 4: return "uplinkPowerControlCommonPSCell-v1310";
         case 5: return "uplinkPowerControlCommonPSCell-v1530";
         case 6: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      // decode basicFields_r12

      buffer.getContext().eventDispatcher.startElement("basicFields_r12", -1);

      basicFields_r12 = new RadioResourceConfigCommonSCell_r10();
      basicFields_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("basicFields_r12", -1);

      // decode pucch_ConfigCommon_r12

      buffer.getContext().eventDispatcher.startElement("pucch_ConfigCommon_r12", -1);

      pucch_ConfigCommon_r12 = new PUCCH_ConfigCommon();
      pucch_ConfigCommon_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("pucch_ConfigCommon_r12", -1);

      // decode rach_ConfigCommon_r12

      buffer.getContext().eventDispatcher.startElement("rach_ConfigCommon_r12", -1);

      rach_ConfigCommon_r12 = new RACH_ConfigCommon();
      rach_ConfigCommon_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("rach_ConfigCommon_r12", -1);

      // decode uplinkPowerControlCommonPSCell_r12

      buffer.getContext().eventDispatcher.startElement("uplinkPowerControlCommonPSCell_r12", -1);

      uplinkPowerControlCommonPSCell_r12 = new UplinkPowerControlCommonPSCell_r12();
      uplinkPowerControlCommonPSCell_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("uplinkPowerControlCommonPSCell_r12", -1);

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV3ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean uplinkPowerControlCommonPSCell_v1310Present = buffer.decodeBit ("uplinkPowerControlCommonPSCell_v1310Present");

            // decode uplinkPowerControlCommonPSCell_v1310

            if (uplinkPowerControlCommonPSCell_v1310Present) {
               buffer.getContext().eventDispatcher.startElement("uplinkPowerControlCommonPSCell_v1310", -1);

               uplinkPowerControlCommonPSCell_v1310 = new UplinkPowerControlCommon_v1310();
               uplinkPowerControlCommonPSCell_v1310.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("uplinkPowerControlCommonPSCell_v1310", -1);
            }
            else {
               uplinkPowerControlCommonPSCell_v1310 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV3ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean uplinkPowerControlCommonPSCell_v1530Present = buffer.decodeBit ("uplinkPowerControlCommonPSCell_v1530Present");

            // decode uplinkPowerControlCommonPSCell_v1530

            if (uplinkPowerControlCommonPSCell_v1530Present) {
               buffer.getContext().eventDispatcher.startElement("uplinkPowerControlCommonPSCell_v1530", -1);

               uplinkPowerControlCommonPSCell_v1530 = new UplinkPowerControlCommon_v1530();
               uplinkPowerControlCommonPSCell_v1530.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("uplinkPowerControlCommonPSCell_v1530", -1);
            }
            else {
               uplinkPowerControlCommonPSCell_v1530 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (basicFields_r12 != null) basicFields_r12.print (_sb, "basicFields_r12", _level+1);
      if (pucch_ConfigCommon_r12 != null) pucch_ConfigCommon_r12.print (_sb, "pucch_ConfigCommon_r12", _level+1);
      if (rach_ConfigCommon_r12 != null) rach_ConfigCommon_r12.print (_sb, "rach_ConfigCommon_r12", _level+1);
      if (uplinkPowerControlCommonPSCell_r12 != null) uplinkPowerControlCommonPSCell_r12.print (_sb, "uplinkPowerControlCommonPSCell_r12", _level+1);
      if (uplinkPowerControlCommonPSCell_v1310 != null) uplinkPowerControlCommonPSCell_v1310.print (_sb, "uplinkPowerControlCommonPSCell_v1310", _level+1);
      if (uplinkPowerControlCommonPSCell_v1530 != null) uplinkPowerControlCommonPSCell_v1530.print (_sb, "uplinkPowerControlCommonPSCell_v1530", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
