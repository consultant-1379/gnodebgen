/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class NAICS_Capability_Entry_numberOfAggregatedPRB extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _N50 = 0;
   public static final int _N75 = 1;
   public static final int _N100 = 2;
   public static final int _N125 = 3;
   public static final int _N150 = 4;
   public static final int _N175 = 5;
   public static final int _N200 = 6;
   public static final int _N225 = 7;
   public static final int _N250 = 8;
   public static final int _N275 = 9;
   public static final int _N300 = 10;
   public static final int _N350 = 11;
   public static final int _N400 = 12;
   public static final int _N450 = 13;
   public static final int _N500 = 14;
   public static final int _SPARE = 15;

   // Singleton instances of NAICS_Capability_Entry_numberOfAggregatedPRB
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n50 = new NAICS_Capability_Entry_numberOfAggregatedPRB(0);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n75 = new NAICS_Capability_Entry_numberOfAggregatedPRB(1);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n100 = new NAICS_Capability_Entry_numberOfAggregatedPRB(2);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n125 = new NAICS_Capability_Entry_numberOfAggregatedPRB(3);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n150 = new NAICS_Capability_Entry_numberOfAggregatedPRB(4);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n175 = new NAICS_Capability_Entry_numberOfAggregatedPRB(5);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n200 = new NAICS_Capability_Entry_numberOfAggregatedPRB(6);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n225 = new NAICS_Capability_Entry_numberOfAggregatedPRB(7);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n250 = new NAICS_Capability_Entry_numberOfAggregatedPRB(8);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n275 = new NAICS_Capability_Entry_numberOfAggregatedPRB(9);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n300 = new NAICS_Capability_Entry_numberOfAggregatedPRB(10);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n350 = new NAICS_Capability_Entry_numberOfAggregatedPRB(11);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n400 = new NAICS_Capability_Entry_numberOfAggregatedPRB(12);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n450 = new NAICS_Capability_Entry_numberOfAggregatedPRB(13);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _n500 = new NAICS_Capability_Entry_numberOfAggregatedPRB(14);
   protected static final NAICS_Capability_Entry_numberOfAggregatedPRB _spare = new NAICS_Capability_Entry_numberOfAggregatedPRB(15);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    */
   protected NAICS_Capability_Entry_numberOfAggregatedPRB (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for n50.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n50() {
      return _n50;
   }

   /**
    * Singleton accessor method for n75.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n75() {
      return _n75;
   }

   /**
    * Singleton accessor method for n100.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n100() {
      return _n100;
   }

   /**
    * Singleton accessor method for n125.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n125() {
      return _n125;
   }

   /**
    * Singleton accessor method for n150.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n150() {
      return _n150;
   }

   /**
    * Singleton accessor method for n175.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n175() {
      return _n175;
   }

   /**
    * Singleton accessor method for n200.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n200() {
      return _n200;
   }

   /**
    * Singleton accessor method for n225.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n225() {
      return _n225;
   }

   /**
    * Singleton accessor method for n250.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n250() {
      return _n250;
   }

   /**
    * Singleton accessor method for n275.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n275() {
      return _n275;
   }

   /**
    * Singleton accessor method for n300.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n300() {
      return _n300;
   }

   /**
    * Singleton accessor method for n350.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n350() {
      return _n350;
   }

   /**
    * Singleton accessor method for n400.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n400() {
      return _n400;
   }

   /**
    * Singleton accessor method for n450.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n450() {
      return _n450;
   }

   /**
    * Singleton accessor method for n500.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB n500() {
      return _n500;
   }

   /**
    * Singleton accessor method for spare.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB spare() {
      return _spare;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return NAICS_Capability_Entry_numberOfAggregatedPRB.valueOf( NAICS_Capability_Entry_numberOfAggregatedPRB.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static NAICS_Capability_Entry_numberOfAggregatedPRB valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return n50();
         case 1: return n75();
         case 2: return n100();
         case 3: return n125();
         case 4: return n150();
         case 5: return n175();
         case 6: return n200();
         case 7: return n225();
         case 8: return n250();
         case 9: return n275();
         case 10: return n300();
         case 11: return n350();
         case 12: return n400();
         case 13: return n450();
         case 14: return n500();
         case 15: return spare();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (16);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (NAICS_Capability_Entry_numberOfAggregatedPRB.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("n50");
         case 1: return ("n75");
         case 2: return ("n100");
         case 3: return ("n125");
         case 4: return ("n150");
         case 5: return ("n175");
         case 6: return ("n200");
         case 7: return ("n225");
         case 8: return ("n250");
         case 9: return ("n275");
         case 10: return ("n300");
         case 11: return ("n350");
         case 12: return ("n400");
         case 13: return ("n450");
         case 14: return ("n500");
         case 15: return ("spare");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
