/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SchedulingRequestConfigSCell_r13_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer sr_PUCCH_ResourceIndex_r13;
   public Asn1Integer sr_PUCCH_ResourceIndexP1_r13;  // optional
   public Asn1Integer sr_ConfigIndex_r13;
   public SchedulingRequestConfigSCell_r13_setup_dsr_TransMax_r13 dsr_TransMax_r13 = null;

   public SchedulingRequestConfigSCell_r13_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SchedulingRequestConfigSCell_r13_setup (
      Asn1Integer sr_PUCCH_ResourceIndex_r13_,
      Asn1Integer sr_PUCCH_ResourceIndexP1_r13_,
      Asn1Integer sr_ConfigIndex_r13_,
      SchedulingRequestConfigSCell_r13_setup_dsr_TransMax_r13 dsr_TransMax_r13_
   ) {
      super();
      sr_PUCCH_ResourceIndex_r13 = sr_PUCCH_ResourceIndex_r13_;
      sr_PUCCH_ResourceIndexP1_r13 = sr_PUCCH_ResourceIndexP1_r13_;
      sr_ConfigIndex_r13 = sr_ConfigIndex_r13_;
      dsr_TransMax_r13 = dsr_TransMax_r13_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SchedulingRequestConfigSCell_r13_setup (
      Asn1Integer sr_PUCCH_ResourceIndex_r13_,
      Asn1Integer sr_ConfigIndex_r13_,
      SchedulingRequestConfigSCell_r13_setup_dsr_TransMax_r13 dsr_TransMax_r13_
   ) {
      super();
      sr_PUCCH_ResourceIndex_r13 = sr_PUCCH_ResourceIndex_r13_;
      sr_ConfigIndex_r13 = sr_ConfigIndex_r13_;
      dsr_TransMax_r13 = dsr_TransMax_r13_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SchedulingRequestConfigSCell_r13_setup (long sr_PUCCH_ResourceIndex_r13_,
      long sr_PUCCH_ResourceIndexP1_r13_,
      long sr_ConfigIndex_r13_,
      SchedulingRequestConfigSCell_r13_setup_dsr_TransMax_r13 dsr_TransMax_r13_
   ) {
      super();
      sr_PUCCH_ResourceIndex_r13 = new Asn1Integer (sr_PUCCH_ResourceIndex_r13_);
      sr_PUCCH_ResourceIndexP1_r13 = new Asn1Integer (sr_PUCCH_ResourceIndexP1_r13_);
      sr_ConfigIndex_r13 = new Asn1Integer (sr_ConfigIndex_r13_);
      dsr_TransMax_r13 = dsr_TransMax_r13_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public SchedulingRequestConfigSCell_r13_setup (
      long sr_PUCCH_ResourceIndex_r13_,
      long sr_ConfigIndex_r13_,
      SchedulingRequestConfigSCell_r13_setup_dsr_TransMax_r13 dsr_TransMax_r13_
   ) {
      super();
      sr_PUCCH_ResourceIndex_r13 = new Asn1Integer (sr_PUCCH_ResourceIndex_r13_);
      sr_ConfigIndex_r13 = new Asn1Integer (sr_ConfigIndex_r13_);
      dsr_TransMax_r13 = dsr_TransMax_r13_;
   }

   public void init () {
      sr_PUCCH_ResourceIndex_r13 = null;
      sr_PUCCH_ResourceIndexP1_r13 = null;
      sr_ConfigIndex_r13 = null;
      dsr_TransMax_r13 = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return sr_PUCCH_ResourceIndex_r13;
         case 1: return sr_PUCCH_ResourceIndexP1_r13;
         case 2: return sr_ConfigIndex_r13;
         case 3: return dsr_TransMax_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "sr-PUCCH-ResourceIndex-r13";
         case 1: return "sr-PUCCH-ResourceIndexP1-r13";
         case 2: return "sr-ConfigIndex-r13";
         case 3: return "dsr-TransMax-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean sr_PUCCH_ResourceIndexP1_r13Present = buffer.decodeBit ("sr_PUCCH_ResourceIndexP1_r13Present");

      // decode sr_PUCCH_ResourceIndex_r13

      buffer.getContext().eventDispatcher.startElement("sr_PUCCH_ResourceIndex_r13", -1);

      sr_PUCCH_ResourceIndex_r13 = new Asn1Integer();
      sr_PUCCH_ResourceIndex_r13.decode (buffer, 0, 2047);

      buffer.invokeCharacters(sr_PUCCH_ResourceIndex_r13.toString());
      buffer.getContext().eventDispatcher.endElement("sr_PUCCH_ResourceIndex_r13", -1);

      // decode sr_PUCCH_ResourceIndexP1_r13

      if (sr_PUCCH_ResourceIndexP1_r13Present) {
         buffer.getContext().eventDispatcher.startElement("sr_PUCCH_ResourceIndexP1_r13", -1);

         sr_PUCCH_ResourceIndexP1_r13 = new Asn1Integer();
         sr_PUCCH_ResourceIndexP1_r13.decode (buffer, 0, 2047);

         buffer.invokeCharacters(sr_PUCCH_ResourceIndexP1_r13.toString());
         buffer.getContext().eventDispatcher.endElement("sr_PUCCH_ResourceIndexP1_r13", -1);
      }
      else {
         sr_PUCCH_ResourceIndexP1_r13 = null;
      }

      // decode sr_ConfigIndex_r13

      buffer.getContext().eventDispatcher.startElement("sr_ConfigIndex_r13", -1);

      sr_ConfigIndex_r13 = new Asn1Integer();
      sr_ConfigIndex_r13.decode (buffer, 0, 157);

      buffer.invokeCharacters(sr_ConfigIndex_r13.toString());
      buffer.getContext().eventDispatcher.endElement("sr_ConfigIndex_r13", -1);

      // decode dsr_TransMax_r13

      buffer.getContext().eventDispatcher.startElement("dsr_TransMax_r13", -1);

      {
         int tval = SchedulingRequestConfigSCell_r13_setup_dsr_TransMax_r13.decodeEnumValue (buffer);
         dsr_TransMax_r13 = SchedulingRequestConfigSCell_r13_setup_dsr_TransMax_r13.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("dsr_TransMax_r13", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (sr_PUCCH_ResourceIndex_r13 != null) sr_PUCCH_ResourceIndex_r13.print (_sb, "sr_PUCCH_ResourceIndex_r13", _level+1);
      if (sr_PUCCH_ResourceIndexP1_r13 != null) sr_PUCCH_ResourceIndexP1_r13.print (_sb, "sr_PUCCH_ResourceIndexP1_r13", _level+1);
      if (sr_ConfigIndex_r13 != null) sr_ConfigIndex_r13.print (_sb, "sr_ConfigIndex_r13", _level+1);
      if (dsr_TransMax_r13 != null) dsr_TransMax_r13.print (_sb, "dsr_TransMax_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
