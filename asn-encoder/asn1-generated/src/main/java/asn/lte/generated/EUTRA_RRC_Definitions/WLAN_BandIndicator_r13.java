/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class WLAN_BandIndicator_r13 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "WLAN-BandIndicator-r13";
   }

   // Integer constants for switch-case
   public static final int _BAND2DOT4 = 0;
   public static final int _BAND5 = 1;
   public static final int _BAND60_V1430 = 2;
   public static final int _SPARE5 = 3;
   public static final int _SPARE4 = 4;
   public static final int _SPARE3 = 5;
   public static final int _SPARE2 = 6;
   public static final int _SPARE1 = 7;

   // Singleton instances of WLAN_BandIndicator_r13
   protected static final WLAN_BandIndicator_r13 _band2dot4 = new WLAN_BandIndicator_r13(0);
   protected static final WLAN_BandIndicator_r13 _band5 = new WLAN_BandIndicator_r13(1);
   protected static final WLAN_BandIndicator_r13 _band60_v1430 = new WLAN_BandIndicator_r13(2);
   protected static final WLAN_BandIndicator_r13 _spare5 = new WLAN_BandIndicator_r13(3);
   protected static final WLAN_BandIndicator_r13 _spare4 = new WLAN_BandIndicator_r13(4);
   protected static final WLAN_BandIndicator_r13 _spare3 = new WLAN_BandIndicator_r13(5);
   protected static final WLAN_BandIndicator_r13 _spare2 = new WLAN_BandIndicator_r13(6);
   protected static final WLAN_BandIndicator_r13 _spare1 = new WLAN_BandIndicator_r13(7);
   private static WLAN_BandIndicator_r13 __undefined = new WLAN_BandIndicator_r13(-999);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    */
   protected WLAN_BandIndicator_r13 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for band2dot4.
    */
   public static WLAN_BandIndicator_r13 band2dot4() {
      return _band2dot4;
   }

   /**
    * Singleton accessor method for band5.
    */
   public static WLAN_BandIndicator_r13 band5() {
      return _band5;
   }

   /**
    * Singleton accessor method for band60_v1430.
    */
   public static WLAN_BandIndicator_r13 band60_v1430() {
      return _band60_v1430;
   }

   /**
    * Singleton accessor method for spare5.
    */
   public static WLAN_BandIndicator_r13 spare5() {
      return _spare5;
   }

   /**
    * Singleton accessor method for spare4.
    */
   public static WLAN_BandIndicator_r13 spare4() {
      return _spare4;
   }

   /**
    * Singleton accessor method for spare3.
    */
   public static WLAN_BandIndicator_r13 spare3() {
      return _spare3;
   }

   /**
    * Singleton accessor method for spare2.
    */
   public static WLAN_BandIndicator_r13 spare2() {
      return _spare2;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static WLAN_BandIndicator_r13 spare1() {
      return _spare1;
   }

   /** Undefined value. */
   protected static WLAN_BandIndicator_r13 __undefined_() { return __undefined; }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return WLAN_BandIndicator_r13.valueOf( WLAN_BandIndicator_r13.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static WLAN_BandIndicator_r13 valueOf (int _value)
   {
      switch ((int)_value) {
         case 0: return band2dot4();
         case 1: return band5();
         case 2: return band60_v1430();
         case 3: return spare5();
         case 4: return spare4();
         case 5: return spare3();
         case 6: return spare2();
         case 7: return spare1();
         default: return __undefined_();
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      boolean extbit = buffer.decodeBit ("extbit");

      if (extbit) {
         ui = buffer.decodeSmallNonNegWholeNumber ();

         return 0x7fffffff;
      }
      else {
         ui = (int) buffer.decodeConsWholeNumber (8);

         switch (ui) {
            case 0: ret =  0; break;
            case 1: ret =  1; break;
            case 2: ret =  2; break;
            case 3: ret =  3; break;
            case 4: ret =  4; break;
            case 5: ret =  5; break;
            case 6: ret =  6; break;
            case 7: ret =  7; break;
            default: throw new Asn1InvalidEnumException (ui);
         }
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (WLAN_BandIndicator_r13.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("band2dot4");
         case 1: return ("band5");
         case 2: return ("band60-v1430");
         case 3: return ("spare5");
         case 4: return ("spare4");
         case 5: return ("spare3");
         case 6: return ("spare2");
         case 7: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
