/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class DL_UL_CCs_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "DL-UL-CCs-r15";
   }

   public Asn1Integer maxNumberDL_CCs_r15;  // optional
   public Asn1Integer maxNumberUL_CCs_r15;  // optional

   public DL_UL_CCs_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public DL_UL_CCs_r15 (
      Asn1Integer maxNumberDL_CCs_r15_,
      Asn1Integer maxNumberUL_CCs_r15_
   ) {
      super();
      maxNumberDL_CCs_r15 = maxNumberDL_CCs_r15_;
      maxNumberUL_CCs_r15 = maxNumberUL_CCs_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public DL_UL_CCs_r15 (long maxNumberDL_CCs_r15_,
      long maxNumberUL_CCs_r15_
   ) {
      super();
      maxNumberDL_CCs_r15 = new Asn1Integer (maxNumberDL_CCs_r15_);
      maxNumberUL_CCs_r15 = new Asn1Integer (maxNumberUL_CCs_r15_);
   }

   public void init () {
      maxNumberDL_CCs_r15 = null;
      maxNumberUL_CCs_r15 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return maxNumberDL_CCs_r15;
         case 1: return maxNumberUL_CCs_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "maxNumberDL-CCs-r15";
         case 1: return "maxNumberUL-CCs-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean maxNumberDL_CCs_r15Present = buffer.decodeBit ("maxNumberDL_CCs_r15Present");
      boolean maxNumberUL_CCs_r15Present = buffer.decodeBit ("maxNumberUL_CCs_r15Present");

      // decode maxNumberDL_CCs_r15

      if (maxNumberDL_CCs_r15Present) {
         buffer.getContext().eventDispatcher.startElement("maxNumberDL_CCs_r15", -1);

         maxNumberDL_CCs_r15 = new Asn1Integer();
         maxNumberDL_CCs_r15.decode (buffer, 1, 32);

         buffer.invokeCharacters(maxNumberDL_CCs_r15.toString());
         buffer.getContext().eventDispatcher.endElement("maxNumberDL_CCs_r15", -1);
      }
      else {
         maxNumberDL_CCs_r15 = null;
      }

      // decode maxNumberUL_CCs_r15

      if (maxNumberUL_CCs_r15Present) {
         buffer.getContext().eventDispatcher.startElement("maxNumberUL_CCs_r15", -1);

         maxNumberUL_CCs_r15 = new Asn1Integer();
         maxNumberUL_CCs_r15.decode (buffer, 1, 32);

         buffer.invokeCharacters(maxNumberUL_CCs_r15.toString());
         buffer.getContext().eventDispatcher.endElement("maxNumberUL_CCs_r15", -1);
      }
      else {
         maxNumberUL_CCs_r15 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (maxNumberDL_CCs_r15 != null) maxNumberDL_CCs_r15.print (_sb, "maxNumberDL_CCs_r15", _level+1);
      if (maxNumberUL_CCs_r15 != null) maxNumberUL_CCs_r15.print (_sb, "maxNumberUL_CCs_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
