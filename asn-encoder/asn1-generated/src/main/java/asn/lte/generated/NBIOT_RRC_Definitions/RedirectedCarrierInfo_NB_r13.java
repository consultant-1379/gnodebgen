/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.ARFCN_ValueEUTRA_r9;
import asn.lte.generated.NBIOT_RRC_Definitions.CarrierFreq_NB_r13_carrierFreqOffset_r13;

public class RedirectedCarrierInfo_NB_r13 extends CarrierFreq_NB_r13 {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RedirectedCarrierInfo-NB-r13";
   }

   public RedirectedCarrierInfo_NB_r13 () {
      super();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RedirectedCarrierInfo_NB_r13 (
      ARFCN_ValueEUTRA_r9 carrierFreq_r13_,
      CarrierFreq_NB_r13_carrierFreqOffset_r13 carrierFreqOffset_r13_
   ) {
      super (carrierFreq_r13_, carrierFreqOffset_r13_);
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public RedirectedCarrierInfo_NB_r13 (
      ARFCN_ValueEUTRA_r9 carrierFreq_r13_
   ) {
      super (carrierFreq_r13_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public RedirectedCarrierInfo_NB_r13 (long carrierFreq_r13_,
      CarrierFreq_NB_r13_carrierFreqOffset_r13 carrierFreqOffset_r13_
   ) {
      super (carrierFreq_r13_, carrierFreqOffset_r13_);
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public RedirectedCarrierInfo_NB_r13 (
      long carrierFreq_r13_
   ) {
      super (carrierFreq_r13_);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      super.decode (buffer);

      buffer.invokeCharacters (toString());
   }

}
