/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CI_ConfigurationPerServingCell_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CI-ConfigurationPerServingCell-r16";
   }

   public ServCellIndex servingCellId;
   public Asn1Integer positionInDCI_r16;
   public Asn1Integer positionInDCI_ForSUL_r16;  // optional
   public CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 ci_PayloadSize_r16 = null;
   public CI_ConfigurationPerServingCell_r16_timeFrequencyRegion_r16 timeFrequencyRegion_r16;
   public CI_ConfigurationPerServingCell_r16_uplinkCancellationPriority_v1610 uplinkCancellationPriority_v1610 = null;  // optional

   public CI_ConfigurationPerServingCell_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CI_ConfigurationPerServingCell_r16 (
      ServCellIndex servingCellId_,
      Asn1Integer positionInDCI_r16_,
      Asn1Integer positionInDCI_ForSUL_r16_,
      CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 ci_PayloadSize_r16_,
      CI_ConfigurationPerServingCell_r16_timeFrequencyRegion_r16 timeFrequencyRegion_r16_,
      CI_ConfigurationPerServingCell_r16_uplinkCancellationPriority_v1610 uplinkCancellationPriority_v1610_
   ) {
      super();
      servingCellId = servingCellId_;
      positionInDCI_r16 = positionInDCI_r16_;
      positionInDCI_ForSUL_r16 = positionInDCI_ForSUL_r16_;
      ci_PayloadSize_r16 = ci_PayloadSize_r16_;
      timeFrequencyRegion_r16 = timeFrequencyRegion_r16_;
      uplinkCancellationPriority_v1610 = uplinkCancellationPriority_v1610_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public CI_ConfigurationPerServingCell_r16 (
      ServCellIndex servingCellId_,
      Asn1Integer positionInDCI_r16_,
      CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 ci_PayloadSize_r16_,
      CI_ConfigurationPerServingCell_r16_timeFrequencyRegion_r16 timeFrequencyRegion_r16_
   ) {
      super();
      servingCellId = servingCellId_;
      positionInDCI_r16 = positionInDCI_r16_;
      ci_PayloadSize_r16 = ci_PayloadSize_r16_;
      timeFrequencyRegion_r16 = timeFrequencyRegion_r16_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CI_ConfigurationPerServingCell_r16 (long servingCellId_,
      long positionInDCI_r16_,
      long positionInDCI_ForSUL_r16_,
      CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 ci_PayloadSize_r16_,
      CI_ConfigurationPerServingCell_r16_timeFrequencyRegion_r16 timeFrequencyRegion_r16_,
      CI_ConfigurationPerServingCell_r16_uplinkCancellationPriority_v1610 uplinkCancellationPriority_v1610_
   ) {
      super();
      servingCellId = new ServCellIndex (servingCellId_);
      positionInDCI_r16 = new Asn1Integer (positionInDCI_r16_);
      positionInDCI_ForSUL_r16 = new Asn1Integer (positionInDCI_ForSUL_r16_);
      ci_PayloadSize_r16 = ci_PayloadSize_r16_;
      timeFrequencyRegion_r16 = timeFrequencyRegion_r16_;
      uplinkCancellationPriority_v1610 = uplinkCancellationPriority_v1610_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public CI_ConfigurationPerServingCell_r16 (
      long servingCellId_,
      long positionInDCI_r16_,
      CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16 ci_PayloadSize_r16_,
      CI_ConfigurationPerServingCell_r16_timeFrequencyRegion_r16 timeFrequencyRegion_r16_
   ) {
      super();
      servingCellId = new ServCellIndex (servingCellId_);
      positionInDCI_r16 = new Asn1Integer (positionInDCI_r16_);
      ci_PayloadSize_r16 = ci_PayloadSize_r16_;
      timeFrequencyRegion_r16 = timeFrequencyRegion_r16_;
   }

   public void init () {
      servingCellId = null;
      positionInDCI_r16 = null;
      positionInDCI_ForSUL_r16 = null;
      ci_PayloadSize_r16 = null;
      timeFrequencyRegion_r16 = null;
      uplinkCancellationPriority_v1610 = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return servingCellId;
         case 1: return positionInDCI_r16;
         case 2: return positionInDCI_ForSUL_r16;
         case 3: return ci_PayloadSize_r16;
         case 4: return timeFrequencyRegion_r16;
         case 5: return uplinkCancellationPriority_v1610;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "servingCellId";
         case 1: return "positionInDCI-r16";
         case 2: return "positionInDCI-ForSUL-r16";
         case 3: return "ci-PayloadSize-r16";
         case 4: return "timeFrequencyRegion-r16";
         case 5: return "uplinkCancellationPriority-v1610";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean positionInDCI_ForSUL_r16Present = buffer.decodeBit ("positionInDCI_ForSUL_r16Present");
      boolean uplinkCancellationPriority_v1610Present = buffer.decodeBit ("uplinkCancellationPriority_v1610Present");

      // decode servingCellId

      buffer.getContext().eventDispatcher.startElement("servingCellId", -1);

      servingCellId = new ServCellIndex();
      servingCellId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("servingCellId", -1);

      // decode positionInDCI_r16

      buffer.getContext().eventDispatcher.startElement("positionInDCI_r16", -1);

      positionInDCI_r16 = new Asn1Integer();
      positionInDCI_r16.decode (buffer, 0, 125);

      buffer.invokeCharacters(positionInDCI_r16.toString());
      buffer.getContext().eventDispatcher.endElement("positionInDCI_r16", -1);

      // decode positionInDCI_ForSUL_r16

      if (positionInDCI_ForSUL_r16Present) {
         buffer.getContext().eventDispatcher.startElement("positionInDCI_ForSUL_r16", -1);

         positionInDCI_ForSUL_r16 = new Asn1Integer();
         positionInDCI_ForSUL_r16.decode (buffer, 0, 125);

         buffer.invokeCharacters(positionInDCI_ForSUL_r16.toString());
         buffer.getContext().eventDispatcher.endElement("positionInDCI_ForSUL_r16", -1);
      }
      else {
         positionInDCI_ForSUL_r16 = null;
      }

      // decode ci_PayloadSize_r16

      buffer.getContext().eventDispatcher.startElement("ci_PayloadSize_r16", -1);

      {
         int tval = CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16.decodeEnumValue (buffer);
         ci_PayloadSize_r16 = CI_ConfigurationPerServingCell_r16_ci_PayloadSize_r16.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("ci_PayloadSize_r16", -1);

      // decode timeFrequencyRegion_r16

      buffer.getContext().eventDispatcher.startElement("timeFrequencyRegion_r16", -1);

      timeFrequencyRegion_r16 = new CI_ConfigurationPerServingCell_r16_timeFrequencyRegion_r16();
      timeFrequencyRegion_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("timeFrequencyRegion_r16", -1);

      // decode uplinkCancellationPriority_v1610

      if (uplinkCancellationPriority_v1610Present) {
         buffer.getContext().eventDispatcher.startElement("uplinkCancellationPriority_v1610", -1);

         int tval = CI_ConfigurationPerServingCell_r16_uplinkCancellationPriority_v1610.decodeEnumValue (buffer);
         uplinkCancellationPriority_v1610 = CI_ConfigurationPerServingCell_r16_uplinkCancellationPriority_v1610.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("uplinkCancellationPriority_v1610", -1);
      }
      else {
         uplinkCancellationPriority_v1610 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (servingCellId != null) servingCellId.print (_sb, "servingCellId", _level+1);
      if (positionInDCI_r16 != null) positionInDCI_r16.print (_sb, "positionInDCI_r16", _level+1);
      if (positionInDCI_ForSUL_r16 != null) positionInDCI_ForSUL_r16.print (_sb, "positionInDCI_ForSUL_r16", _level+1);
      if (ci_PayloadSize_r16 != null) ci_PayloadSize_r16.print (_sb, "ci_PayloadSize_r16", _level+1);
      if (timeFrequencyRegion_r16 != null) timeFrequencyRegion_r16.print (_sb, "timeFrequencyRegion_r16", _level+1);
      if (uplinkCancellationPriority_v1610 != null) uplinkCancellationPriority_v1610.print (_sb, "uplinkCancellationPriority_v1610", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
