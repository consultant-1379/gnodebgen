/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RACH_Info_NB_v1530 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RACH-Info-NB-v1530";
   }

   public RACH_Info_NB_v1530_mac_ContentionResolutionTimer_r15 mac_ContentionResolutionTimer_r15 = null;

   public RACH_Info_NB_v1530 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RACH_Info_NB_v1530 (
      RACH_Info_NB_v1530_mac_ContentionResolutionTimer_r15 mac_ContentionResolutionTimer_r15_
   ) {
      super();
      mac_ContentionResolutionTimer_r15 = mac_ContentionResolutionTimer_r15_;
   }

   public void init () {
      mac_ContentionResolutionTimer_r15 = null;
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return mac_ContentionResolutionTimer_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "mac-ContentionResolutionTimer-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode mac_ContentionResolutionTimer_r15

      buffer.getContext().eventDispatcher.startElement("mac_ContentionResolutionTimer_r15", -1);

      {
         int tval = RACH_Info_NB_v1530_mac_ContentionResolutionTimer_r15.decodeEnumValue (buffer);
         mac_ContentionResolutionTimer_r15 = RACH_Info_NB_v1530_mac_ContentionResolutionTimer_r15.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("mac_ContentionResolutionTimer_r15", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (mac_ContentionResolutionTimer_r15 != null) mac_ContentionResolutionTimer_r15.print (_sb, "mac_ContentionResolutionTimer_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
