/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;

public class AS_ConfigNR_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "AS-ConfigNR-r15";
   }

   public Asn1OctetString sourceRB_ConfigNR_r15;  // optional
   public Asn1OctetString sourceRB_ConfigSN_NR_r15;  // optional
   public Asn1OctetString sourceOtherConfigSN_NR_r15;  // optional

   public AS_ConfigNR_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public AS_ConfigNR_r15 (
      Asn1OctetString sourceRB_ConfigNR_r15_,
      Asn1OctetString sourceRB_ConfigSN_NR_r15_,
      Asn1OctetString sourceOtherConfigSN_NR_r15_
   ) {
      super();
      sourceRB_ConfigNR_r15 = sourceRB_ConfigNR_r15_;
      sourceRB_ConfigSN_NR_r15 = sourceRB_ConfigSN_NR_r15_;
      sourceOtherConfigSN_NR_r15 = sourceOtherConfigSN_NR_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public AS_ConfigNR_r15 (byte[] sourceRB_ConfigNR_r15_,
      byte[] sourceRB_ConfigSN_NR_r15_,
      byte[] sourceOtherConfigSN_NR_r15_
   ) {
      super();
      sourceRB_ConfigNR_r15 = new Asn1OctetString (sourceRB_ConfigNR_r15_);
      sourceRB_ConfigSN_NR_r15 = new Asn1OctetString (sourceRB_ConfigSN_NR_r15_);
      sourceOtherConfigSN_NR_r15 = new Asn1OctetString (sourceOtherConfigSN_NR_r15_);
   }

   public void init () {
      sourceRB_ConfigNR_r15 = null;
      sourceRB_ConfigSN_NR_r15 = null;
      sourceOtherConfigSN_NR_r15 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return sourceRB_ConfigNR_r15;
         case 1: return sourceRB_ConfigSN_NR_r15;
         case 2: return sourceOtherConfigSN_NR_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "sourceRB-ConfigNR-r15";
         case 1: return "sourceRB-ConfigSN-NR-r15";
         case 2: return "sourceOtherConfigSN-NR-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean sourceRB_ConfigNR_r15Present = buffer.decodeBit ("sourceRB_ConfigNR_r15Present");
      boolean sourceRB_ConfigSN_NR_r15Present = buffer.decodeBit ("sourceRB_ConfigSN_NR_r15Present");
      boolean sourceOtherConfigSN_NR_r15Present = buffer.decodeBit ("sourceOtherConfigSN_NR_r15Present");

      // decode sourceRB_ConfigNR_r15

      if (sourceRB_ConfigNR_r15Present) {
         buffer.getContext().eventDispatcher.startElement("sourceRB_ConfigNR_r15", -1);

         sourceRB_ConfigNR_r15 = new Asn1OctetString();
         sourceRB_ConfigNR_r15.decode (buffer);

         buffer.invokeCharacters(sourceRB_ConfigNR_r15.toString());
         buffer.getContext().eventDispatcher.endElement("sourceRB_ConfigNR_r15", -1);
      }
      else {
         sourceRB_ConfigNR_r15 = null;
      }

      // decode sourceRB_ConfigSN_NR_r15

      if (sourceRB_ConfigSN_NR_r15Present) {
         buffer.getContext().eventDispatcher.startElement("sourceRB_ConfigSN_NR_r15", -1);

         sourceRB_ConfigSN_NR_r15 = new Asn1OctetString();
         sourceRB_ConfigSN_NR_r15.decode (buffer);

         buffer.invokeCharacters(sourceRB_ConfigSN_NR_r15.toString());
         buffer.getContext().eventDispatcher.endElement("sourceRB_ConfigSN_NR_r15", -1);
      }
      else {
         sourceRB_ConfigSN_NR_r15 = null;
      }

      // decode sourceOtherConfigSN_NR_r15

      if (sourceOtherConfigSN_NR_r15Present) {
         buffer.getContext().eventDispatcher.startElement("sourceOtherConfigSN_NR_r15", -1);

         sourceOtherConfigSN_NR_r15 = new Asn1OctetString();
         sourceOtherConfigSN_NR_r15.decode (buffer);

         buffer.invokeCharacters(sourceOtherConfigSN_NR_r15.toString());
         buffer.getContext().eventDispatcher.endElement("sourceOtherConfigSN_NR_r15", -1);
      }
      else {
         sourceOtherConfigSN_NR_r15 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (sourceRB_ConfigNR_r15 != null) sourceRB_ConfigNR_r15.print (_sb, "sourceRB_ConfigNR_r15", _level+1);
      if (sourceRB_ConfigSN_NR_r15 != null) sourceRB_ConfigSN_NR_r15.print (_sb, "sourceRB_ConfigSN_NR_r15", _level+1);
      if (sourceOtherConfigSN_NR_r15 != null) sourceOtherConfigSN_NR_r15.print (_sb, "sourceOtherConfigSN_NR_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
