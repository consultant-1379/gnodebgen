/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformationBlockType1_MBMS_r14 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SystemInformationBlockType1-MBMS-r14";
   }

   public SystemInformationBlockType1_MBMS_r14_cellAccessRelatedInfo_r14 cellAccessRelatedInfo_r14;
   public FreqBandIndicator_r11 freqBandIndicator_r14;
   public MultiBandInfoList_r11 multiBandInfoList_r14;  // optional
   public SchedulingInfoList_MBMS_r14 schedulingInfoList_MBMS_r14;
   public SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 si_WindowLength_r14 = null;
   public Asn1Integer systemInfoValueTag_r14;
   public NonMBSFN_SubframeConfig_r14 nonMBSFN_SubframeConfig_r14;  // optional
   public PDSCH_ConfigCommon pdsch_ConfigCommon_r14;
   public SystemInformationBlockType13_r9 systemInformationBlockType13_r14;  // optional
   public SystemInformationBlockType1_MBMS_r14_cellAccessRelatedInfoList_r14 cellAccessRelatedInfoList_r14;  // optional
   public SystemInformationBlockType1_MBMS_r14_nonCriticalExtension nonCriticalExtension;  // optional

   public SystemInformationBlockType1_MBMS_r14 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SystemInformationBlockType1_MBMS_r14 (
      SystemInformationBlockType1_MBMS_r14_cellAccessRelatedInfo_r14 cellAccessRelatedInfo_r14_,
      FreqBandIndicator_r11 freqBandIndicator_r14_,
      MultiBandInfoList_r11 multiBandInfoList_r14_,
      SchedulingInfoList_MBMS_r14 schedulingInfoList_MBMS_r14_,
      SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 si_WindowLength_r14_,
      Asn1Integer systemInfoValueTag_r14_,
      NonMBSFN_SubframeConfig_r14 nonMBSFN_SubframeConfig_r14_,
      PDSCH_ConfigCommon pdsch_ConfigCommon_r14_,
      SystemInformationBlockType13_r9 systemInformationBlockType13_r14_,
      SystemInformationBlockType1_MBMS_r14_cellAccessRelatedInfoList_r14 cellAccessRelatedInfoList_r14_,
      SystemInformationBlockType1_MBMS_r14_nonCriticalExtension nonCriticalExtension_
   ) {
      super();
      cellAccessRelatedInfo_r14 = cellAccessRelatedInfo_r14_;
      freqBandIndicator_r14 = freqBandIndicator_r14_;
      multiBandInfoList_r14 = multiBandInfoList_r14_;
      schedulingInfoList_MBMS_r14 = schedulingInfoList_MBMS_r14_;
      si_WindowLength_r14 = si_WindowLength_r14_;
      systemInfoValueTag_r14 = systemInfoValueTag_r14_;
      nonMBSFN_SubframeConfig_r14 = nonMBSFN_SubframeConfig_r14_;
      pdsch_ConfigCommon_r14 = pdsch_ConfigCommon_r14_;
      systemInformationBlockType13_r14 = systemInformationBlockType13_r14_;
      cellAccessRelatedInfoList_r14 = cellAccessRelatedInfoList_r14_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SystemInformationBlockType1_MBMS_r14 (
      SystemInformationBlockType1_MBMS_r14_cellAccessRelatedInfo_r14 cellAccessRelatedInfo_r14_,
      FreqBandIndicator_r11 freqBandIndicator_r14_,
      SchedulingInfoList_MBMS_r14 schedulingInfoList_MBMS_r14_,
      SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 si_WindowLength_r14_,
      Asn1Integer systemInfoValueTag_r14_,
      PDSCH_ConfigCommon pdsch_ConfigCommon_r14_
   ) {
      super();
      cellAccessRelatedInfo_r14 = cellAccessRelatedInfo_r14_;
      freqBandIndicator_r14 = freqBandIndicator_r14_;
      schedulingInfoList_MBMS_r14 = schedulingInfoList_MBMS_r14_;
      si_WindowLength_r14 = si_WindowLength_r14_;
      systemInfoValueTag_r14 = systemInfoValueTag_r14_;
      pdsch_ConfigCommon_r14 = pdsch_ConfigCommon_r14_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SystemInformationBlockType1_MBMS_r14 (SystemInformationBlockType1_MBMS_r14_cellAccessRelatedInfo_r14 cellAccessRelatedInfo_r14_,
      long freqBandIndicator_r14_,
      MultiBandInfoList_r11 multiBandInfoList_r14_,
      SchedulingInfoList_MBMS_r14 schedulingInfoList_MBMS_r14_,
      SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 si_WindowLength_r14_,
      long systemInfoValueTag_r14_,
      NonMBSFN_SubframeConfig_r14 nonMBSFN_SubframeConfig_r14_,
      PDSCH_ConfigCommon pdsch_ConfigCommon_r14_,
      SystemInformationBlockType13_r9 systemInformationBlockType13_r14_,
      SystemInformationBlockType1_MBMS_r14_cellAccessRelatedInfoList_r14 cellAccessRelatedInfoList_r14_,
      SystemInformationBlockType1_MBMS_r14_nonCriticalExtension nonCriticalExtension_
   ) {
      super();
      cellAccessRelatedInfo_r14 = cellAccessRelatedInfo_r14_;
      freqBandIndicator_r14 = new FreqBandIndicator_r11 (freqBandIndicator_r14_);
      multiBandInfoList_r14 = multiBandInfoList_r14_;
      schedulingInfoList_MBMS_r14 = schedulingInfoList_MBMS_r14_;
      si_WindowLength_r14 = si_WindowLength_r14_;
      systemInfoValueTag_r14 = new Asn1Integer (systemInfoValueTag_r14_);
      nonMBSFN_SubframeConfig_r14 = nonMBSFN_SubframeConfig_r14_;
      pdsch_ConfigCommon_r14 = pdsch_ConfigCommon_r14_;
      systemInformationBlockType13_r14 = systemInformationBlockType13_r14_;
      cellAccessRelatedInfoList_r14 = cellAccessRelatedInfoList_r14_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public SystemInformationBlockType1_MBMS_r14 (
      SystemInformationBlockType1_MBMS_r14_cellAccessRelatedInfo_r14 cellAccessRelatedInfo_r14_,
      long freqBandIndicator_r14_,
      SchedulingInfoList_MBMS_r14 schedulingInfoList_MBMS_r14_,
      SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14 si_WindowLength_r14_,
      long systemInfoValueTag_r14_,
      PDSCH_ConfigCommon pdsch_ConfigCommon_r14_
   ) {
      super();
      cellAccessRelatedInfo_r14 = cellAccessRelatedInfo_r14_;
      freqBandIndicator_r14 = new FreqBandIndicator_r11 (freqBandIndicator_r14_);
      schedulingInfoList_MBMS_r14 = schedulingInfoList_MBMS_r14_;
      si_WindowLength_r14 = si_WindowLength_r14_;
      systemInfoValueTag_r14 = new Asn1Integer (systemInfoValueTag_r14_);
      pdsch_ConfigCommon_r14 = pdsch_ConfigCommon_r14_;
   }

   public void init () {
      cellAccessRelatedInfo_r14 = null;
      freqBandIndicator_r14 = null;
      multiBandInfoList_r14 = null;
      schedulingInfoList_MBMS_r14 = null;
      si_WindowLength_r14 = null;
      systemInfoValueTag_r14 = null;
      nonMBSFN_SubframeConfig_r14 = null;
      pdsch_ConfigCommon_r14 = null;
      systemInformationBlockType13_r14 = null;
      cellAccessRelatedInfoList_r14 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 11; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return cellAccessRelatedInfo_r14;
         case 1: return freqBandIndicator_r14;
         case 2: return multiBandInfoList_r14;
         case 3: return schedulingInfoList_MBMS_r14;
         case 4: return si_WindowLength_r14;
         case 5: return systemInfoValueTag_r14;
         case 6: return nonMBSFN_SubframeConfig_r14;
         case 7: return pdsch_ConfigCommon_r14;
         case 8: return systemInformationBlockType13_r14;
         case 9: return cellAccessRelatedInfoList_r14;
         case 10: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "cellAccessRelatedInfo-r14";
         case 1: return "freqBandIndicator-r14";
         case 2: return "multiBandInfoList-r14";
         case 3: return "schedulingInfoList-MBMS-r14";
         case 4: return "si-WindowLength-r14";
         case 5: return "systemInfoValueTag-r14";
         case 6: return "nonMBSFN-SubframeConfig-r14";
         case 7: return "pdsch-ConfigCommon-r14";
         case 8: return "systemInformationBlockType13-r14";
         case 9: return "cellAccessRelatedInfoList-r14";
         case 10: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean multiBandInfoList_r14Present = buffer.decodeBit ("multiBandInfoList_r14Present");
      boolean nonMBSFN_SubframeConfig_r14Present = buffer.decodeBit ("nonMBSFN_SubframeConfig_r14Present");
      boolean systemInformationBlockType13_r14Present = buffer.decodeBit ("systemInformationBlockType13_r14Present");
      boolean cellAccessRelatedInfoList_r14Present = buffer.decodeBit ("cellAccessRelatedInfoList_r14Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode cellAccessRelatedInfo_r14

      buffer.getContext().eventDispatcher.startElement("cellAccessRelatedInfo_r14", -1);

      cellAccessRelatedInfo_r14 = new SystemInformationBlockType1_MBMS_r14_cellAccessRelatedInfo_r14();
      cellAccessRelatedInfo_r14.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("cellAccessRelatedInfo_r14", -1);

      // decode freqBandIndicator_r14

      buffer.getContext().eventDispatcher.startElement("freqBandIndicator_r14", -1);

      freqBandIndicator_r14 = new FreqBandIndicator_r11();
      freqBandIndicator_r14.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("freqBandIndicator_r14", -1);

      // decode multiBandInfoList_r14

      if (multiBandInfoList_r14Present) {
         buffer.getContext().eventDispatcher.startElement("multiBandInfoList_r14", -1);

         multiBandInfoList_r14 = new MultiBandInfoList_r11();
         multiBandInfoList_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("multiBandInfoList_r14", -1);
      }
      else {
         multiBandInfoList_r14 = null;
      }

      // decode schedulingInfoList_MBMS_r14

      buffer.getContext().eventDispatcher.startElement("schedulingInfoList_MBMS_r14", -1);

      schedulingInfoList_MBMS_r14 = new SchedulingInfoList_MBMS_r14();
      schedulingInfoList_MBMS_r14.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("schedulingInfoList_MBMS_r14", -1);

      // decode si_WindowLength_r14

      buffer.getContext().eventDispatcher.startElement("si_WindowLength_r14", -1);

      {
         int tval = SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14.decodeEnumValue (buffer);
         si_WindowLength_r14 = SystemInformationBlockType1_MBMS_r14_si_WindowLength_r14.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("si_WindowLength_r14", -1);

      // decode systemInfoValueTag_r14

      buffer.getContext().eventDispatcher.startElement("systemInfoValueTag_r14", -1);

      systemInfoValueTag_r14 = new Asn1Integer();
      systemInfoValueTag_r14.decode (buffer, 0, 31);

      buffer.invokeCharacters(systemInfoValueTag_r14.toString());
      buffer.getContext().eventDispatcher.endElement("systemInfoValueTag_r14", -1);

      // decode nonMBSFN_SubframeConfig_r14

      if (nonMBSFN_SubframeConfig_r14Present) {
         buffer.getContext().eventDispatcher.startElement("nonMBSFN_SubframeConfig_r14", -1);

         nonMBSFN_SubframeConfig_r14 = new NonMBSFN_SubframeConfig_r14();
         nonMBSFN_SubframeConfig_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonMBSFN_SubframeConfig_r14", -1);
      }
      else {
         nonMBSFN_SubframeConfig_r14 = null;
      }

      // decode pdsch_ConfigCommon_r14

      buffer.getContext().eventDispatcher.startElement("pdsch_ConfigCommon_r14", -1);

      pdsch_ConfigCommon_r14 = new PDSCH_ConfigCommon();
      pdsch_ConfigCommon_r14.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("pdsch_ConfigCommon_r14", -1);

      // decode systemInformationBlockType13_r14

      if (systemInformationBlockType13_r14Present) {
         buffer.getContext().eventDispatcher.startElement("systemInformationBlockType13_r14", -1);

         systemInformationBlockType13_r14 = new SystemInformationBlockType13_r9();
         systemInformationBlockType13_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("systemInformationBlockType13_r14", -1);
      }
      else {
         systemInformationBlockType13_r14 = null;
      }

      // decode cellAccessRelatedInfoList_r14

      if (cellAccessRelatedInfoList_r14Present) {
         buffer.getContext().eventDispatcher.startElement("cellAccessRelatedInfoList_r14", -1);

         cellAccessRelatedInfoList_r14 = new SystemInformationBlockType1_MBMS_r14_cellAccessRelatedInfoList_r14();
         cellAccessRelatedInfoList_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cellAccessRelatedInfoList_r14", -1);
      }
      else {
         cellAccessRelatedInfoList_r14 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new SystemInformationBlockType1_MBMS_r14_nonCriticalExtension();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (cellAccessRelatedInfo_r14 != null) cellAccessRelatedInfo_r14.print (_sb, "cellAccessRelatedInfo_r14", _level+1);
      if (freqBandIndicator_r14 != null) freqBandIndicator_r14.print (_sb, "freqBandIndicator_r14", _level+1);
      if (multiBandInfoList_r14 != null) multiBandInfoList_r14.print (_sb, "multiBandInfoList_r14", _level+1);
      if (schedulingInfoList_MBMS_r14 != null) schedulingInfoList_MBMS_r14.print (_sb, "schedulingInfoList_MBMS_r14", _level+1);
      if (si_WindowLength_r14 != null) si_WindowLength_r14.print (_sb, "si_WindowLength_r14", _level+1);
      if (systemInfoValueTag_r14 != null) systemInfoValueTag_r14.print (_sb, "systemInfoValueTag_r14", _level+1);
      if (nonMBSFN_SubframeConfig_r14 != null) nonMBSFN_SubframeConfig_r14.print (_sb, "nonMBSFN_SubframeConfig_r14", _level+1);
      if (pdsch_ConfigCommon_r14 != null) pdsch_ConfigCommon_r14.print (_sb, "pdsch_ConfigCommon_r14", _level+1);
      if (systemInformationBlockType13_r14 != null) systemInformationBlockType13_r14.print (_sb, "systemInformationBlockType13_r14", _level+1);
      if (cellAccessRelatedInfoList_r14 != null) cellAccessRelatedInfoList_r14.print (_sb, "cellAccessRelatedInfoList_r14", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
