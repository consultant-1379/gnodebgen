/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CQI_NPDCCH_NB_r14 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CQI-NPDCCH-NB-r14";
   }

   // Integer constants for switch-case
   public static final int _NOMEASUREMENTS = 0;
   public static final int _CANDIDATEREP_A = 1;
   public static final int _CANDIDATEREP_B = 2;
   public static final int _CANDIDATEREP_C = 3;
   public static final int _CANDIDATEREP_D = 4;
   public static final int _CANDIDATEREP_E = 5;
   public static final int _CANDIDATEREP_F = 6;
   public static final int _CANDIDATEREP_G = 7;
   public static final int _CANDIDATEREP_H = 8;
   public static final int _CANDIDATEREP_I = 9;
   public static final int _CANDIDATEREP_J = 10;
   public static final int _CANDIDATEREP_K = 11;
   public static final int _CANDIDATEREP_L = 12;

   // Singleton instances of CQI_NPDCCH_NB_r14
   protected static final CQI_NPDCCH_NB_r14 _noMeasurements = new CQI_NPDCCH_NB_r14(0);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_A = new CQI_NPDCCH_NB_r14(1);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_B = new CQI_NPDCCH_NB_r14(2);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_C = new CQI_NPDCCH_NB_r14(3);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_D = new CQI_NPDCCH_NB_r14(4);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_E = new CQI_NPDCCH_NB_r14(5);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_F = new CQI_NPDCCH_NB_r14(6);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_G = new CQI_NPDCCH_NB_r14(7);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_H = new CQI_NPDCCH_NB_r14(8);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_I = new CQI_NPDCCH_NB_r14(9);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_J = new CQI_NPDCCH_NB_r14(10);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_K = new CQI_NPDCCH_NB_r14(11);
   protected static final CQI_NPDCCH_NB_r14 _candidateRep_L = new CQI_NPDCCH_NB_r14(12);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    */
   protected CQI_NPDCCH_NB_r14 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for noMeasurements.
    */
   public static CQI_NPDCCH_NB_r14 noMeasurements() {
      return _noMeasurements;
   }

   /**
    * Singleton accessor method for candidateRep_A.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_A() {
      return _candidateRep_A;
   }

   /**
    * Singleton accessor method for candidateRep_B.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_B() {
      return _candidateRep_B;
   }

   /**
    * Singleton accessor method for candidateRep_C.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_C() {
      return _candidateRep_C;
   }

   /**
    * Singleton accessor method for candidateRep_D.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_D() {
      return _candidateRep_D;
   }

   /**
    * Singleton accessor method for candidateRep_E.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_E() {
      return _candidateRep_E;
   }

   /**
    * Singleton accessor method for candidateRep_F.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_F() {
      return _candidateRep_F;
   }

   /**
    * Singleton accessor method for candidateRep_G.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_G() {
      return _candidateRep_G;
   }

   /**
    * Singleton accessor method for candidateRep_H.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_H() {
      return _candidateRep_H;
   }

   /**
    * Singleton accessor method for candidateRep_I.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_I() {
      return _candidateRep_I;
   }

   /**
    * Singleton accessor method for candidateRep_J.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_J() {
      return _candidateRep_J;
   }

   /**
    * Singleton accessor method for candidateRep_K.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_K() {
      return _candidateRep_K;
   }

   /**
    * Singleton accessor method for candidateRep_L.
    */
   public static CQI_NPDCCH_NB_r14 candidateRep_L() {
      return _candidateRep_L;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return CQI_NPDCCH_NB_r14.valueOf( CQI_NPDCCH_NB_r14.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static CQI_NPDCCH_NB_r14 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return noMeasurements();
         case 1: return candidateRep_A();
         case 2: return candidateRep_B();
         case 3: return candidateRep_C();
         case 4: return candidateRep_D();
         case 5: return candidateRep_E();
         case 6: return candidateRep_F();
         case 7: return candidateRep_G();
         case 8: return candidateRep_H();
         case 9: return candidateRep_I();
         case 10: return candidateRep_J();
         case 11: return candidateRep_K();
         case 12: return candidateRep_L();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (13);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (CQI_NPDCCH_NB_r14.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("noMeasurements");
         case 1: return ("candidateRep-A");
         case 2: return ("candidateRep-B");
         case 3: return ("candidateRep-C");
         case 4: return ("candidateRep-D");
         case 5: return ("candidateRep-E");
         case 6: return ("candidateRep-F");
         case 7: return ("candidateRep-G");
         case 8: return ("candidateRep-H");
         case 9: return ("candidateRep-I");
         case 10: return ("candidateRep-J");
         case 11: return ("candidateRep-K");
         case 12: return ("candidateRep-L");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
