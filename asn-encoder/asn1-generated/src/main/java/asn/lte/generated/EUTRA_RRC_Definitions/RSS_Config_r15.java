/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RSS_Config_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RSS-Config-r15";
   }

   public RSS_Config_r15_duration_r15 duration_r15 = null;
   public Asn1Integer freqLocation_r15;
   public RSS_Config_r15_periodicity_r15 periodicity_r15 = null;
   public RSS_Config_r15_powerBoost_r15 powerBoost_r15 = null;
   public Asn1Integer timeOffset_r15;

   public RSS_Config_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RSS_Config_r15 (
      RSS_Config_r15_duration_r15 duration_r15_,
      Asn1Integer freqLocation_r15_,
      RSS_Config_r15_periodicity_r15 periodicity_r15_,
      RSS_Config_r15_powerBoost_r15 powerBoost_r15_,
      Asn1Integer timeOffset_r15_
   ) {
      super();
      duration_r15 = duration_r15_;
      freqLocation_r15 = freqLocation_r15_;
      periodicity_r15 = periodicity_r15_;
      powerBoost_r15 = powerBoost_r15_;
      timeOffset_r15 = timeOffset_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public RSS_Config_r15 (RSS_Config_r15_duration_r15 duration_r15_,
      long freqLocation_r15_,
      RSS_Config_r15_periodicity_r15 periodicity_r15_,
      RSS_Config_r15_powerBoost_r15 powerBoost_r15_,
      long timeOffset_r15_
   ) {
      super();
      duration_r15 = duration_r15_;
      freqLocation_r15 = new Asn1Integer (freqLocation_r15_);
      periodicity_r15 = periodicity_r15_;
      powerBoost_r15 = powerBoost_r15_;
      timeOffset_r15 = new Asn1Integer (timeOffset_r15_);
   }

   public void init () {
      duration_r15 = null;
      freqLocation_r15 = null;
      periodicity_r15 = null;
      powerBoost_r15 = null;
      timeOffset_r15 = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return duration_r15;
         case 1: return freqLocation_r15;
         case 2: return periodicity_r15;
         case 3: return powerBoost_r15;
         case 4: return timeOffset_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "duration-r15";
         case 1: return "freqLocation-r15";
         case 2: return "periodicity-r15";
         case 3: return "powerBoost-r15";
         case 4: return "timeOffset-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode duration_r15

      buffer.getContext().eventDispatcher.startElement("duration_r15", -1);

      {
         int tval = RSS_Config_r15_duration_r15.decodeEnumValue (buffer);
         duration_r15 = RSS_Config_r15_duration_r15.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("duration_r15", -1);

      // decode freqLocation_r15

      buffer.getContext().eventDispatcher.startElement("freqLocation_r15", -1);

      freqLocation_r15 = new Asn1Integer();
      freqLocation_r15.decode (buffer, 0, 98);

      buffer.invokeCharacters(freqLocation_r15.toString());
      buffer.getContext().eventDispatcher.endElement("freqLocation_r15", -1);

      // decode periodicity_r15

      buffer.getContext().eventDispatcher.startElement("periodicity_r15", -1);

      {
         int tval = RSS_Config_r15_periodicity_r15.decodeEnumValue (buffer);
         periodicity_r15 = RSS_Config_r15_periodicity_r15.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("periodicity_r15", -1);

      // decode powerBoost_r15

      buffer.getContext().eventDispatcher.startElement("powerBoost_r15", -1);

      {
         int tval = RSS_Config_r15_powerBoost_r15.decodeEnumValue (buffer);
         powerBoost_r15 = RSS_Config_r15_powerBoost_r15.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("powerBoost_r15", -1);

      // decode timeOffset_r15

      buffer.getContext().eventDispatcher.startElement("timeOffset_r15", -1);

      timeOffset_r15 = new Asn1Integer();
      timeOffset_r15.decode (buffer, 0, 31);

      buffer.invokeCharacters(timeOffset_r15.toString());
      buffer.getContext().eventDispatcher.endElement("timeOffset_r15", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (duration_r15 != null) duration_r15.print (_sb, "duration_r15", _level+1);
      if (freqLocation_r15 != null) freqLocation_r15.print (_sb, "freqLocation_r15", _level+1);
      if (periodicity_r15 != null) periodicity_r15.print (_sb, "periodicity_r15", _level+1);
      if (powerBoost_r15 != null) powerBoost_r15.print (_sb, "powerBoost_r15", _level+1);
      if (timeOffset_r15 != null) timeOffset_r15.print (_sb, "timeOffset_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
