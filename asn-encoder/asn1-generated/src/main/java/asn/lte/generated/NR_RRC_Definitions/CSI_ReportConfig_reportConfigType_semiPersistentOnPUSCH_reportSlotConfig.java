/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _SL5 = 0;
   public static final int _SL10 = 1;
   public static final int _SL20 = 2;
   public static final int _SL40 = 3;
   public static final int _SL80 = 4;
   public static final int _SL160 = 5;
   public static final int _SL320 = 6;

   // Singleton instances of CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig
   protected static final CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig _sl5 = new CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig(0);
   protected static final CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig _sl10 = new CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig(1);
   protected static final CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig _sl20 = new CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig(2);
   protected static final CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig _sl40 = new CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig(3);
   protected static final CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig _sl80 = new CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig(4);
   protected static final CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig _sl160 = new CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig(5);
   protected static final CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig _sl320 = new CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig(6);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    */
   protected CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for sl5.
    */
   public static CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig sl5() {
      return _sl5;
   }

   /**
    * Singleton accessor method for sl10.
    */
   public static CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig sl10() {
      return _sl10;
   }

   /**
    * Singleton accessor method for sl20.
    */
   public static CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig sl20() {
      return _sl20;
   }

   /**
    * Singleton accessor method for sl40.
    */
   public static CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig sl40() {
      return _sl40;
   }

   /**
    * Singleton accessor method for sl80.
    */
   public static CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig sl80() {
      return _sl80;
   }

   /**
    * Singleton accessor method for sl160.
    */
   public static CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig sl160() {
      return _sl160;
   }

   /**
    * Singleton accessor method for sl320.
    */
   public static CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig sl320() {
      return _sl320;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig.valueOf( CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return sl5();
         case 1: return sl10();
         case 2: return sl20();
         case 3: return sl40();
         case 4: return sl80();
         case 5: return sl160();
         case 6: return sl320();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (7);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("sl5");
         case 1: return ("sl10");
         case 2: return ("sl20");
         case 3: return ("sl40");
         case 4: return ("sl80");
         case 5: return ("sl160");
         case 6: return ("sl320");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
