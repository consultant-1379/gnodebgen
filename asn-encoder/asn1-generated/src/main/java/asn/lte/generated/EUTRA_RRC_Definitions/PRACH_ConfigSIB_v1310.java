/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PRACH_ConfigSIB_v1310 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PRACH-ConfigSIB-v1310";
   }

   public RSRP_ThresholdsPrachInfoList_r13 rsrp_ThresholdsPrachInfoList_r13;
   public PRACH_ConfigSIB_v1310_mpdcch_startSF_CSS_RA_r13 mpdcch_startSF_CSS_RA_r13;  // optional
   public Asn1Integer prach_HoppingOffset_r13;  // optional
   public PRACH_ParametersListCE_r13 prach_ParametersListCE_r13;

   public PRACH_ConfigSIB_v1310 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PRACH_ConfigSIB_v1310 (
      RSRP_ThresholdsPrachInfoList_r13 rsrp_ThresholdsPrachInfoList_r13_,
      PRACH_ConfigSIB_v1310_mpdcch_startSF_CSS_RA_r13 mpdcch_startSF_CSS_RA_r13_,
      Asn1Integer prach_HoppingOffset_r13_,
      PRACH_ParametersListCE_r13 prach_ParametersListCE_r13_
   ) {
      super();
      rsrp_ThresholdsPrachInfoList_r13 = rsrp_ThresholdsPrachInfoList_r13_;
      mpdcch_startSF_CSS_RA_r13 = mpdcch_startSF_CSS_RA_r13_;
      prach_HoppingOffset_r13 = prach_HoppingOffset_r13_;
      prach_ParametersListCE_r13 = prach_ParametersListCE_r13_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public PRACH_ConfigSIB_v1310 (
      RSRP_ThresholdsPrachInfoList_r13 rsrp_ThresholdsPrachInfoList_r13_,
      PRACH_ParametersListCE_r13 prach_ParametersListCE_r13_
   ) {
      super();
      rsrp_ThresholdsPrachInfoList_r13 = rsrp_ThresholdsPrachInfoList_r13_;
      prach_ParametersListCE_r13 = prach_ParametersListCE_r13_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PRACH_ConfigSIB_v1310 (RSRP_ThresholdsPrachInfoList_r13 rsrp_ThresholdsPrachInfoList_r13_,
      PRACH_ConfigSIB_v1310_mpdcch_startSF_CSS_RA_r13 mpdcch_startSF_CSS_RA_r13_,
      long prach_HoppingOffset_r13_,
      PRACH_ParametersListCE_r13 prach_ParametersListCE_r13_
   ) {
      super();
      rsrp_ThresholdsPrachInfoList_r13 = rsrp_ThresholdsPrachInfoList_r13_;
      mpdcch_startSF_CSS_RA_r13 = mpdcch_startSF_CSS_RA_r13_;
      prach_HoppingOffset_r13 = new Asn1Integer (prach_HoppingOffset_r13_);
      prach_ParametersListCE_r13 = prach_ParametersListCE_r13_;
   }

   public void init () {
      rsrp_ThresholdsPrachInfoList_r13 = null;
      mpdcch_startSF_CSS_RA_r13 = null;
      prach_HoppingOffset_r13 = null;
      prach_ParametersListCE_r13 = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return rsrp_ThresholdsPrachInfoList_r13;
         case 1: return mpdcch_startSF_CSS_RA_r13;
         case 2: return prach_HoppingOffset_r13;
         case 3: return prach_ParametersListCE_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "rsrp-ThresholdsPrachInfoList-r13";
         case 1: return "mpdcch-startSF-CSS-RA-r13";
         case 2: return "prach-HoppingOffset-r13";
         case 3: return "prach-ParametersListCE-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean mpdcch_startSF_CSS_RA_r13Present = buffer.decodeBit ("mpdcch_startSF_CSS_RA_r13Present");
      boolean prach_HoppingOffset_r13Present = buffer.decodeBit ("prach_HoppingOffset_r13Present");

      // decode rsrp_ThresholdsPrachInfoList_r13

      buffer.getContext().eventDispatcher.startElement("rsrp_ThresholdsPrachInfoList_r13", -1);

      rsrp_ThresholdsPrachInfoList_r13 = new RSRP_ThresholdsPrachInfoList_r13();
      rsrp_ThresholdsPrachInfoList_r13.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("rsrp_ThresholdsPrachInfoList_r13", -1);

      // decode mpdcch_startSF_CSS_RA_r13

      if (mpdcch_startSF_CSS_RA_r13Present) {
         buffer.getContext().eventDispatcher.startElement("mpdcch_startSF_CSS_RA_r13", -1);

         mpdcch_startSF_CSS_RA_r13 = new PRACH_ConfigSIB_v1310_mpdcch_startSF_CSS_RA_r13();
         mpdcch_startSF_CSS_RA_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mpdcch_startSF_CSS_RA_r13", -1);
      }
      else {
         mpdcch_startSF_CSS_RA_r13 = null;
      }

      // decode prach_HoppingOffset_r13

      if (prach_HoppingOffset_r13Present) {
         buffer.getContext().eventDispatcher.startElement("prach_HoppingOffset_r13", -1);

         prach_HoppingOffset_r13 = new Asn1Integer();
         prach_HoppingOffset_r13.decode (buffer, 0, 94);

         buffer.invokeCharacters(prach_HoppingOffset_r13.toString());
         buffer.getContext().eventDispatcher.endElement("prach_HoppingOffset_r13", -1);
      }
      else {
         prach_HoppingOffset_r13 = null;
      }

      // decode prach_ParametersListCE_r13

      buffer.getContext().eventDispatcher.startElement("prach_ParametersListCE_r13", -1);

      prach_ParametersListCE_r13 = new PRACH_ParametersListCE_r13();
      prach_ParametersListCE_r13.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("prach_ParametersListCE_r13", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (rsrp_ThresholdsPrachInfoList_r13 != null) rsrp_ThresholdsPrachInfoList_r13.print (_sb, "rsrp_ThresholdsPrachInfoList_r13", _level+1);
      if (mpdcch_startSF_CSS_RA_r13 != null) mpdcch_startSF_CSS_RA_r13.print (_sb, "mpdcch_startSF_CSS_RA_r13", _level+1);
      if (prach_HoppingOffset_r13 != null) prach_HoppingOffset_r13.print (_sb, "prach_HoppingOffset_r13", _level+1);
      if (prach_ParametersListCE_r13 != null) prach_ParametersListCE_r13.print (_sb, "prach_ParametersListCE_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
