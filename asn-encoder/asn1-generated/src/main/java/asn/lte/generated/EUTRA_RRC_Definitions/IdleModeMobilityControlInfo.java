/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class IdleModeMobilityControlInfo extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "IdleModeMobilityControlInfo";
   }

   public FreqPriorityListEUTRA freqPriorityListEUTRA;  // optional
   public FreqsPriorityListGERAN freqPriorityListGERAN;  // optional
   public FreqPriorityListUTRA_FDD freqPriorityListUTRA_FDD;  // optional
   public FreqPriorityListUTRA_TDD freqPriorityListUTRA_TDD;  // optional
   public BandClassPriorityListHRPD bandClassPriorityListHRPD;  // optional
   public BandClassPriorityList1XRTT bandClassPriorityList1XRTT;  // optional
   public IdleModeMobilityControlInfo_t320 t320 = null;  // optional
   public boolean mV2ExtPresent;
   public FreqPriorityListExtEUTRA_r12 freqPriorityListExtEUTRA_r12;  // optional
   public boolean mV3ExtPresent;
   public FreqPriorityListEUTRA_v1310 freqPriorityListEUTRA_v1310;  // optional
   public FreqPriorityListExtEUTRA_v1310 freqPriorityListExtEUTRA_v1310;  // optional
   public boolean mV4ExtPresent;
   public FreqPriorityListNR_r15 freqPriorityListNR_r15;  // optional
   public Asn1OpenExt extElem1;

   public IdleModeMobilityControlInfo () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public IdleModeMobilityControlInfo (
      FreqPriorityListEUTRA freqPriorityListEUTRA_,
      FreqsPriorityListGERAN freqPriorityListGERAN_,
      FreqPriorityListUTRA_FDD freqPriorityListUTRA_FDD_,
      FreqPriorityListUTRA_TDD freqPriorityListUTRA_TDD_,
      BandClassPriorityListHRPD bandClassPriorityListHRPD_,
      BandClassPriorityList1XRTT bandClassPriorityList1XRTT_,
      IdleModeMobilityControlInfo_t320 t320_,
      FreqPriorityListExtEUTRA_r12 freqPriorityListExtEUTRA_r12_,
      FreqPriorityListEUTRA_v1310 freqPriorityListEUTRA_v1310_,
      FreqPriorityListExtEUTRA_v1310 freqPriorityListExtEUTRA_v1310_,
      FreqPriorityListNR_r15 freqPriorityListNR_r15_
   ) {
      super();
      freqPriorityListEUTRA = freqPriorityListEUTRA_;
      freqPriorityListGERAN = freqPriorityListGERAN_;
      freqPriorityListUTRA_FDD = freqPriorityListUTRA_FDD_;
      freqPriorityListUTRA_TDD = freqPriorityListUTRA_TDD_;
      bandClassPriorityListHRPD = bandClassPriorityListHRPD_;
      bandClassPriorityList1XRTT = bandClassPriorityList1XRTT_;
      t320 = t320_;
      freqPriorityListExtEUTRA_r12 = freqPriorityListExtEUTRA_r12_;
      freqPriorityListEUTRA_v1310 = freqPriorityListEUTRA_v1310_;
      freqPriorityListExtEUTRA_v1310 = freqPriorityListExtEUTRA_v1310_;
      freqPriorityListNR_r15 = freqPriorityListNR_r15_;
   }

   public void init () {
      freqPriorityListEUTRA = null;
      freqPriorityListGERAN = null;
      freqPriorityListUTRA_FDD = null;
      freqPriorityListUTRA_TDD = null;
      bandClassPriorityListHRPD = null;
      bandClassPriorityList1XRTT = null;
      t320 = null;
      freqPriorityListExtEUTRA_r12 = null;
      freqPriorityListEUTRA_v1310 = null;
      freqPriorityListExtEUTRA_v1310 = null;
      freqPriorityListNR_r15 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 12; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return freqPriorityListEUTRA;
         case 1: return freqPriorityListGERAN;
         case 2: return freqPriorityListUTRA_FDD;
         case 3: return freqPriorityListUTRA_TDD;
         case 4: return bandClassPriorityListHRPD;
         case 5: return bandClassPriorityList1XRTT;
         case 6: return t320;
         case 7: return freqPriorityListExtEUTRA_r12;
         case 8: return freqPriorityListEUTRA_v1310;
         case 9: return freqPriorityListExtEUTRA_v1310;
         case 10: return freqPriorityListNR_r15;
         case 11: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "freqPriorityListEUTRA";
         case 1: return "freqPriorityListGERAN";
         case 2: return "freqPriorityListUTRA-FDD";
         case 3: return "freqPriorityListUTRA-TDD";
         case 4: return "bandClassPriorityListHRPD";
         case 5: return "bandClassPriorityList1XRTT";
         case 6: return "t320";
         case 7: return "freqPriorityListExtEUTRA-r12";
         case 8: return "freqPriorityListEUTRA-v1310";
         case 9: return "freqPriorityListExtEUTRA-v1310";
         case 10: return "freqPriorityListNR-r15";
         case 11: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean freqPriorityListEUTRAPresent = buffer.decodeBit ("freqPriorityListEUTRAPresent");
      boolean freqPriorityListGERANPresent = buffer.decodeBit ("freqPriorityListGERANPresent");
      boolean freqPriorityListUTRA_FDDPresent = buffer.decodeBit ("freqPriorityListUTRA_FDDPresent");
      boolean freqPriorityListUTRA_TDDPresent = buffer.decodeBit ("freqPriorityListUTRA_TDDPresent");
      boolean bandClassPriorityListHRPDPresent = buffer.decodeBit ("bandClassPriorityListHRPDPresent");
      boolean bandClassPriorityList1XRTTPresent = buffer.decodeBit ("bandClassPriorityList1XRTTPresent");
      boolean t320Present = buffer.decodeBit ("t320Present");

      // decode freqPriorityListEUTRA

      if (freqPriorityListEUTRAPresent) {
         buffer.getContext().eventDispatcher.startElement("freqPriorityListEUTRA", -1);

         freqPriorityListEUTRA = new FreqPriorityListEUTRA();
         freqPriorityListEUTRA.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("freqPriorityListEUTRA", -1);
      }
      else {
         freqPriorityListEUTRA = null;
      }

      // decode freqPriorityListGERAN

      if (freqPriorityListGERANPresent) {
         buffer.getContext().eventDispatcher.startElement("freqPriorityListGERAN", -1);

         freqPriorityListGERAN = new FreqsPriorityListGERAN();
         freqPriorityListGERAN.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("freqPriorityListGERAN", -1);
      }
      else {
         freqPriorityListGERAN = null;
      }

      // decode freqPriorityListUTRA_FDD

      if (freqPriorityListUTRA_FDDPresent) {
         buffer.getContext().eventDispatcher.startElement("freqPriorityListUTRA_FDD", -1);

         freqPriorityListUTRA_FDD = new FreqPriorityListUTRA_FDD();
         freqPriorityListUTRA_FDD.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("freqPriorityListUTRA_FDD", -1);
      }
      else {
         freqPriorityListUTRA_FDD = null;
      }

      // decode freqPriorityListUTRA_TDD

      if (freqPriorityListUTRA_TDDPresent) {
         buffer.getContext().eventDispatcher.startElement("freqPriorityListUTRA_TDD", -1);

         freqPriorityListUTRA_TDD = new FreqPriorityListUTRA_TDD();
         freqPriorityListUTRA_TDD.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("freqPriorityListUTRA_TDD", -1);
      }
      else {
         freqPriorityListUTRA_TDD = null;
      }

      // decode bandClassPriorityListHRPD

      if (bandClassPriorityListHRPDPresent) {
         buffer.getContext().eventDispatcher.startElement("bandClassPriorityListHRPD", -1);

         bandClassPriorityListHRPD = new BandClassPriorityListHRPD();
         bandClassPriorityListHRPD.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bandClassPriorityListHRPD", -1);
      }
      else {
         bandClassPriorityListHRPD = null;
      }

      // decode bandClassPriorityList1XRTT

      if (bandClassPriorityList1XRTTPresent) {
         buffer.getContext().eventDispatcher.startElement("bandClassPriorityList1XRTT", -1);

         bandClassPriorityList1XRTT = new BandClassPriorityList1XRTT();
         bandClassPriorityList1XRTT.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bandClassPriorityList1XRTT", -1);
      }
      else {
         bandClassPriorityList1XRTT = null;
      }

      // decode t320

      if (t320Present) {
         buffer.getContext().eventDispatcher.startElement("t320", -1);

         int tval = IdleModeMobilityControlInfo_t320.decodeEnumValue (buffer);
         t320 = IdleModeMobilityControlInfo_t320.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("t320", -1);
      }
      else {
         t320 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV3ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV4ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean freqPriorityListExtEUTRA_r12Present = buffer.decodeBit ("freqPriorityListExtEUTRA_r12Present");

            // decode freqPriorityListExtEUTRA_r12

            if (freqPriorityListExtEUTRA_r12Present) {
               buffer.getContext().eventDispatcher.startElement("freqPriorityListExtEUTRA_r12", -1);

               freqPriorityListExtEUTRA_r12 = new FreqPriorityListExtEUTRA_r12();
               freqPriorityListExtEUTRA_r12.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("freqPriorityListExtEUTRA_r12", -1);
            }
            else {
               freqPriorityListExtEUTRA_r12 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV3ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean freqPriorityListEUTRA_v1310Present = buffer.decodeBit ("freqPriorityListEUTRA_v1310Present");

            boolean freqPriorityListExtEUTRA_v1310Present = buffer.decodeBit ("freqPriorityListExtEUTRA_v1310Present");

            // decode freqPriorityListEUTRA_v1310

            if (freqPriorityListEUTRA_v1310Present) {
               buffer.getContext().eventDispatcher.startElement("freqPriorityListEUTRA_v1310", -1);

               freqPriorityListEUTRA_v1310 = new FreqPriorityListEUTRA_v1310();
               freqPriorityListEUTRA_v1310.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("freqPriorityListEUTRA_v1310", -1);
            }
            else {
               freqPriorityListEUTRA_v1310 = null;
            }

            // decode freqPriorityListExtEUTRA_v1310

            if (freqPriorityListExtEUTRA_v1310Present) {
               buffer.getContext().eventDispatcher.startElement("freqPriorityListExtEUTRA_v1310", -1);

               freqPriorityListExtEUTRA_v1310 = new FreqPriorityListExtEUTRA_v1310();
               freqPriorityListExtEUTRA_v1310.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("freqPriorityListExtEUTRA_v1310", -1);
            }
            else {
               freqPriorityListExtEUTRA_v1310 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV4ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean freqPriorityListNR_r15Present = buffer.decodeBit ("freqPriorityListNR_r15Present");

            // decode freqPriorityListNR_r15

            if (freqPriorityListNR_r15Present) {
               buffer.getContext().eventDispatcher.startElement("freqPriorityListNR_r15", -1);

               freqPriorityListNR_r15 = new FreqPriorityListNR_r15();
               freqPriorityListNR_r15.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("freqPriorityListNR_r15", -1);
            }
            else {
               freqPriorityListNR_r15 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (freqPriorityListEUTRA != null) freqPriorityListEUTRA.print (_sb, "freqPriorityListEUTRA", _level+1);
      if (freqPriorityListGERAN != null) freqPriorityListGERAN.print (_sb, "freqPriorityListGERAN", _level+1);
      if (freqPriorityListUTRA_FDD != null) freqPriorityListUTRA_FDD.print (_sb, "freqPriorityListUTRA_FDD", _level+1);
      if (freqPriorityListUTRA_TDD != null) freqPriorityListUTRA_TDD.print (_sb, "freqPriorityListUTRA_TDD", _level+1);
      if (bandClassPriorityListHRPD != null) bandClassPriorityListHRPD.print (_sb, "bandClassPriorityListHRPD", _level+1);
      if (bandClassPriorityList1XRTT != null) bandClassPriorityList1XRTT.print (_sb, "bandClassPriorityList1XRTT", _level+1);
      if (t320 != null) t320.print (_sb, "t320", _level+1);
      if (freqPriorityListExtEUTRA_r12 != null) freqPriorityListExtEUTRA_r12.print (_sb, "freqPriorityListExtEUTRA_r12", _level+1);
      if (freqPriorityListEUTRA_v1310 != null) freqPriorityListEUTRA_v1310.print (_sb, "freqPriorityListEUTRA_v1310", _level+1);
      if (freqPriorityListExtEUTRA_v1310 != null) freqPriorityListExtEUTRA_v1310.print (_sb, "freqPriorityListExtEUTRA_v1310", _level+1);
      if (freqPriorityListNR_r15 != null) freqPriorityListNR_r15.print (_sb, "freqPriorityListNR_r15", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
