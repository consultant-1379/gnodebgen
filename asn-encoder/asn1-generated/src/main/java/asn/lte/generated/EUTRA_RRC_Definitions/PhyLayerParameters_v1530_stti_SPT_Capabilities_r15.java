/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PhyLayerParameters_v1530_stti_SPT_Capabilities_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_aperiodicCsi_ReportingSTTI_r15 aperiodicCsi_ReportingSTTI_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_BasedSPDCCH_MBSFN_r15 dmrs_BasedSPDCCH_MBSFN_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_BasedSPDCCH_nonMBSFN_r15 dmrs_BasedSPDCCH_nonMBSFN_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_PositionPattern_r15 dmrs_PositionPattern_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_SharingSubslotPDSCH_r15 dmrs_SharingSubslotPDSCH_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_RepetitionSubslotPDSCH_r15 dmrs_RepetitionSubslotPDSCH_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_epdcch_SPT_differentCells_r15 epdcch_SPT_differentCells_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_epdcch_STTI_differentCells_r15 epdcch_STTI_differentCells_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_maxLayersSlotOrSubslotPUSCH_r15 maxLayersSlotOrSubslotPUSCH_r15 = null;  // optional
   public Asn1Integer maxNumberUpdatedCSI_Proc_SPT_r15;  // optional
   public Asn1Integer maxNumberUpdatedCSI_Proc_STTI_Comb77_r15;  // optional
   public Asn1Integer maxNumberUpdatedCSI_Proc_STTI_Comb27_r15;  // optional
   public Asn1Integer maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15;  // optional
   public Asn1Integer maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15;  // optional
   public MIMO_UE_Parameters_r13 mimo_UE_ParametersSTTI_r15;  // optional
   public MIMO_UE_Parameters_v1430 mimo_UE_ParametersSTTI_v1530;  // optional
   public Asn1Integer numberOfBlindDecodesUSS_r15;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_pdsch_SlotSubslotPDSCH_Decoding_r15 pdsch_SlotSubslotPDSCH_Decoding_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_powerUCI_SlotPUSCH powerUCI_SlotPUSCH = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_powerUCI_SubslotPUSCH powerUCI_SubslotPUSCH = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_slotPDSCH_TxDiv_TM9and10 slotPDSCH_TxDiv_TM9and10 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_subslotPDSCH_TxDiv_TM9and10 subslotPDSCH_TxDiv_TM9and10 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_spdcch_differentRS_types_r15 spdcch_differentRS_types_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_srs_DCI7_TriggeringFS2_r15 srs_DCI7_TriggeringFS2_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_sps_cyclicShift_r15 sps_cyclicShift_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_spdcch_Reuse_r15 spdcch_Reuse_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_sps_STTI_r15 sps_STTI_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm8_slotPDSCH_r15 tm8_slotPDSCH_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm9_slotSubslot_r15 tm9_slotSubslot_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm9_slotSubslotMBSFN_r15 tm9_slotSubslotMBSFN_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm10_slotSubslot_r15 tm10_slotSubslot_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm10_slotSubslotMBSFN_r15 tm10_slotSubslotMBSFN_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_txDiv_SPUCCH_r15 txDiv_SPUCCH_r15 = null;  // optional
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_ul_AsyncHarqSharingDiff_TTI_Lengths_r15 ul_AsyncHarqSharingDiff_TTI_Lengths_r15 = null;  // optional

   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15 (
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_aperiodicCsi_ReportingSTTI_r15 aperiodicCsi_ReportingSTTI_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_BasedSPDCCH_MBSFN_r15 dmrs_BasedSPDCCH_MBSFN_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_BasedSPDCCH_nonMBSFN_r15 dmrs_BasedSPDCCH_nonMBSFN_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_PositionPattern_r15 dmrs_PositionPattern_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_SharingSubslotPDSCH_r15 dmrs_SharingSubslotPDSCH_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_RepetitionSubslotPDSCH_r15 dmrs_RepetitionSubslotPDSCH_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_epdcch_SPT_differentCells_r15 epdcch_SPT_differentCells_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_epdcch_STTI_differentCells_r15 epdcch_STTI_differentCells_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_maxLayersSlotOrSubslotPUSCH_r15 maxLayersSlotOrSubslotPUSCH_r15_,
      Asn1Integer maxNumberUpdatedCSI_Proc_SPT_r15_,
      Asn1Integer maxNumberUpdatedCSI_Proc_STTI_Comb77_r15_,
      Asn1Integer maxNumberUpdatedCSI_Proc_STTI_Comb27_r15_,
      Asn1Integer maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15_,
      Asn1Integer maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15_,
      MIMO_UE_Parameters_r13 mimo_UE_ParametersSTTI_r15_,
      MIMO_UE_Parameters_v1430 mimo_UE_ParametersSTTI_v1530_,
      Asn1Integer numberOfBlindDecodesUSS_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_pdsch_SlotSubslotPDSCH_Decoding_r15 pdsch_SlotSubslotPDSCH_Decoding_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_powerUCI_SlotPUSCH powerUCI_SlotPUSCH_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_powerUCI_SubslotPUSCH powerUCI_SubslotPUSCH_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_slotPDSCH_TxDiv_TM9and10 slotPDSCH_TxDiv_TM9and10_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_subslotPDSCH_TxDiv_TM9and10 subslotPDSCH_TxDiv_TM9and10_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_spdcch_differentRS_types_r15 spdcch_differentRS_types_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_srs_DCI7_TriggeringFS2_r15 srs_DCI7_TriggeringFS2_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_sps_cyclicShift_r15 sps_cyclicShift_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_spdcch_Reuse_r15 spdcch_Reuse_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_sps_STTI_r15 sps_STTI_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm8_slotPDSCH_r15 tm8_slotPDSCH_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm9_slotSubslot_r15 tm9_slotSubslot_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm9_slotSubslotMBSFN_r15 tm9_slotSubslotMBSFN_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm10_slotSubslot_r15 tm10_slotSubslot_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm10_slotSubslotMBSFN_r15 tm10_slotSubslotMBSFN_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_txDiv_SPUCCH_r15 txDiv_SPUCCH_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_ul_AsyncHarqSharingDiff_TTI_Lengths_r15 ul_AsyncHarqSharingDiff_TTI_Lengths_r15_
   ) {
      super();
      aperiodicCsi_ReportingSTTI_r15 = aperiodicCsi_ReportingSTTI_r15_;
      dmrs_BasedSPDCCH_MBSFN_r15 = dmrs_BasedSPDCCH_MBSFN_r15_;
      dmrs_BasedSPDCCH_nonMBSFN_r15 = dmrs_BasedSPDCCH_nonMBSFN_r15_;
      dmrs_PositionPattern_r15 = dmrs_PositionPattern_r15_;
      dmrs_SharingSubslotPDSCH_r15 = dmrs_SharingSubslotPDSCH_r15_;
      dmrs_RepetitionSubslotPDSCH_r15 = dmrs_RepetitionSubslotPDSCH_r15_;
      epdcch_SPT_differentCells_r15 = epdcch_SPT_differentCells_r15_;
      epdcch_STTI_differentCells_r15 = epdcch_STTI_differentCells_r15_;
      maxLayersSlotOrSubslotPUSCH_r15 = maxLayersSlotOrSubslotPUSCH_r15_;
      maxNumberUpdatedCSI_Proc_SPT_r15 = maxNumberUpdatedCSI_Proc_SPT_r15_;
      maxNumberUpdatedCSI_Proc_STTI_Comb77_r15 = maxNumberUpdatedCSI_Proc_STTI_Comb77_r15_;
      maxNumberUpdatedCSI_Proc_STTI_Comb27_r15 = maxNumberUpdatedCSI_Proc_STTI_Comb27_r15_;
      maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15 = maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15_;
      maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15 = maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15_;
      mimo_UE_ParametersSTTI_r15 = mimo_UE_ParametersSTTI_r15_;
      mimo_UE_ParametersSTTI_v1530 = mimo_UE_ParametersSTTI_v1530_;
      numberOfBlindDecodesUSS_r15 = numberOfBlindDecodesUSS_r15_;
      pdsch_SlotSubslotPDSCH_Decoding_r15 = pdsch_SlotSubslotPDSCH_Decoding_r15_;
      powerUCI_SlotPUSCH = powerUCI_SlotPUSCH_;
      powerUCI_SubslotPUSCH = powerUCI_SubslotPUSCH_;
      slotPDSCH_TxDiv_TM9and10 = slotPDSCH_TxDiv_TM9and10_;
      subslotPDSCH_TxDiv_TM9and10 = subslotPDSCH_TxDiv_TM9and10_;
      spdcch_differentRS_types_r15 = spdcch_differentRS_types_r15_;
      srs_DCI7_TriggeringFS2_r15 = srs_DCI7_TriggeringFS2_r15_;
      sps_cyclicShift_r15 = sps_cyclicShift_r15_;
      spdcch_Reuse_r15 = spdcch_Reuse_r15_;
      sps_STTI_r15 = sps_STTI_r15_;
      tm8_slotPDSCH_r15 = tm8_slotPDSCH_r15_;
      tm9_slotSubslot_r15 = tm9_slotSubslot_r15_;
      tm9_slotSubslotMBSFN_r15 = tm9_slotSubslotMBSFN_r15_;
      tm10_slotSubslot_r15 = tm10_slotSubslot_r15_;
      tm10_slotSubslotMBSFN_r15 = tm10_slotSubslotMBSFN_r15_;
      txDiv_SPUCCH_r15 = txDiv_SPUCCH_r15_;
      ul_AsyncHarqSharingDiff_TTI_Lengths_r15 = ul_AsyncHarqSharingDiff_TTI_Lengths_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PhyLayerParameters_v1530_stti_SPT_Capabilities_r15 (PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_aperiodicCsi_ReportingSTTI_r15 aperiodicCsi_ReportingSTTI_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_BasedSPDCCH_MBSFN_r15 dmrs_BasedSPDCCH_MBSFN_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_BasedSPDCCH_nonMBSFN_r15 dmrs_BasedSPDCCH_nonMBSFN_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_PositionPattern_r15 dmrs_PositionPattern_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_SharingSubslotPDSCH_r15 dmrs_SharingSubslotPDSCH_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_RepetitionSubslotPDSCH_r15 dmrs_RepetitionSubslotPDSCH_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_epdcch_SPT_differentCells_r15 epdcch_SPT_differentCells_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_epdcch_STTI_differentCells_r15 epdcch_STTI_differentCells_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_maxLayersSlotOrSubslotPUSCH_r15 maxLayersSlotOrSubslotPUSCH_r15_,
      long maxNumberUpdatedCSI_Proc_SPT_r15_,
      long maxNumberUpdatedCSI_Proc_STTI_Comb77_r15_,
      long maxNumberUpdatedCSI_Proc_STTI_Comb27_r15_,
      long maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15_,
      long maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15_,
      MIMO_UE_Parameters_r13 mimo_UE_ParametersSTTI_r15_,
      MIMO_UE_Parameters_v1430 mimo_UE_ParametersSTTI_v1530_,
      long numberOfBlindDecodesUSS_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_pdsch_SlotSubslotPDSCH_Decoding_r15 pdsch_SlotSubslotPDSCH_Decoding_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_powerUCI_SlotPUSCH powerUCI_SlotPUSCH_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_powerUCI_SubslotPUSCH powerUCI_SubslotPUSCH_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_slotPDSCH_TxDiv_TM9and10 slotPDSCH_TxDiv_TM9and10_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_subslotPDSCH_TxDiv_TM9and10 subslotPDSCH_TxDiv_TM9and10_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_spdcch_differentRS_types_r15 spdcch_differentRS_types_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_srs_DCI7_TriggeringFS2_r15 srs_DCI7_TriggeringFS2_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_sps_cyclicShift_r15 sps_cyclicShift_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_spdcch_Reuse_r15 spdcch_Reuse_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_sps_STTI_r15 sps_STTI_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm8_slotPDSCH_r15 tm8_slotPDSCH_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm9_slotSubslot_r15 tm9_slotSubslot_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm9_slotSubslotMBSFN_r15 tm9_slotSubslotMBSFN_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm10_slotSubslot_r15 tm10_slotSubslot_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm10_slotSubslotMBSFN_r15 tm10_slotSubslotMBSFN_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_txDiv_SPUCCH_r15 txDiv_SPUCCH_r15_,
      PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_ul_AsyncHarqSharingDiff_TTI_Lengths_r15 ul_AsyncHarqSharingDiff_TTI_Lengths_r15_
   ) {
      super();
      aperiodicCsi_ReportingSTTI_r15 = aperiodicCsi_ReportingSTTI_r15_;
      dmrs_BasedSPDCCH_MBSFN_r15 = dmrs_BasedSPDCCH_MBSFN_r15_;
      dmrs_BasedSPDCCH_nonMBSFN_r15 = dmrs_BasedSPDCCH_nonMBSFN_r15_;
      dmrs_PositionPattern_r15 = dmrs_PositionPattern_r15_;
      dmrs_SharingSubslotPDSCH_r15 = dmrs_SharingSubslotPDSCH_r15_;
      dmrs_RepetitionSubslotPDSCH_r15 = dmrs_RepetitionSubslotPDSCH_r15_;
      epdcch_SPT_differentCells_r15 = epdcch_SPT_differentCells_r15_;
      epdcch_STTI_differentCells_r15 = epdcch_STTI_differentCells_r15_;
      maxLayersSlotOrSubslotPUSCH_r15 = maxLayersSlotOrSubslotPUSCH_r15_;
      maxNumberUpdatedCSI_Proc_SPT_r15 = new Asn1Integer (maxNumberUpdatedCSI_Proc_SPT_r15_);
      maxNumberUpdatedCSI_Proc_STTI_Comb77_r15 = new Asn1Integer (maxNumberUpdatedCSI_Proc_STTI_Comb77_r15_);
      maxNumberUpdatedCSI_Proc_STTI_Comb27_r15 = new Asn1Integer (maxNumberUpdatedCSI_Proc_STTI_Comb27_r15_);
      maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15 = new Asn1Integer (maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15_);
      maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15 = new Asn1Integer (maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15_);
      mimo_UE_ParametersSTTI_r15 = mimo_UE_ParametersSTTI_r15_;
      mimo_UE_ParametersSTTI_v1530 = mimo_UE_ParametersSTTI_v1530_;
      numberOfBlindDecodesUSS_r15 = new Asn1Integer (numberOfBlindDecodesUSS_r15_);
      pdsch_SlotSubslotPDSCH_Decoding_r15 = pdsch_SlotSubslotPDSCH_Decoding_r15_;
      powerUCI_SlotPUSCH = powerUCI_SlotPUSCH_;
      powerUCI_SubslotPUSCH = powerUCI_SubslotPUSCH_;
      slotPDSCH_TxDiv_TM9and10 = slotPDSCH_TxDiv_TM9and10_;
      subslotPDSCH_TxDiv_TM9and10 = subslotPDSCH_TxDiv_TM9and10_;
      spdcch_differentRS_types_r15 = spdcch_differentRS_types_r15_;
      srs_DCI7_TriggeringFS2_r15 = srs_DCI7_TriggeringFS2_r15_;
      sps_cyclicShift_r15 = sps_cyclicShift_r15_;
      spdcch_Reuse_r15 = spdcch_Reuse_r15_;
      sps_STTI_r15 = sps_STTI_r15_;
      tm8_slotPDSCH_r15 = tm8_slotPDSCH_r15_;
      tm9_slotSubslot_r15 = tm9_slotSubslot_r15_;
      tm9_slotSubslotMBSFN_r15 = tm9_slotSubslotMBSFN_r15_;
      tm10_slotSubslot_r15 = tm10_slotSubslot_r15_;
      tm10_slotSubslotMBSFN_r15 = tm10_slotSubslotMBSFN_r15_;
      txDiv_SPUCCH_r15 = txDiv_SPUCCH_r15_;
      ul_AsyncHarqSharingDiff_TTI_Lengths_r15 = ul_AsyncHarqSharingDiff_TTI_Lengths_r15_;
   }

   public void init () {
      aperiodicCsi_ReportingSTTI_r15 = null;
      dmrs_BasedSPDCCH_MBSFN_r15 = null;
      dmrs_BasedSPDCCH_nonMBSFN_r15 = null;
      dmrs_PositionPattern_r15 = null;
      dmrs_SharingSubslotPDSCH_r15 = null;
      dmrs_RepetitionSubslotPDSCH_r15 = null;
      epdcch_SPT_differentCells_r15 = null;
      epdcch_STTI_differentCells_r15 = null;
      maxLayersSlotOrSubslotPUSCH_r15 = null;
      maxNumberUpdatedCSI_Proc_SPT_r15 = null;
      maxNumberUpdatedCSI_Proc_STTI_Comb77_r15 = null;
      maxNumberUpdatedCSI_Proc_STTI_Comb27_r15 = null;
      maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15 = null;
      maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15 = null;
      mimo_UE_ParametersSTTI_r15 = null;
      mimo_UE_ParametersSTTI_v1530 = null;
      numberOfBlindDecodesUSS_r15 = null;
      pdsch_SlotSubslotPDSCH_Decoding_r15 = null;
      powerUCI_SlotPUSCH = null;
      powerUCI_SubslotPUSCH = null;
      slotPDSCH_TxDiv_TM9and10 = null;
      subslotPDSCH_TxDiv_TM9and10 = null;
      spdcch_differentRS_types_r15 = null;
      srs_DCI7_TriggeringFS2_r15 = null;
      sps_cyclicShift_r15 = null;
      spdcch_Reuse_r15 = null;
      sps_STTI_r15 = null;
      tm8_slotPDSCH_r15 = null;
      tm9_slotSubslot_r15 = null;
      tm9_slotSubslotMBSFN_r15 = null;
      tm10_slotSubslot_r15 = null;
      tm10_slotSubslotMBSFN_r15 = null;
      txDiv_SPUCCH_r15 = null;
      ul_AsyncHarqSharingDiff_TTI_Lengths_r15 = null;
   }

   public int getElementCount() { return 34; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return aperiodicCsi_ReportingSTTI_r15;
         case 1: return dmrs_BasedSPDCCH_MBSFN_r15;
         case 2: return dmrs_BasedSPDCCH_nonMBSFN_r15;
         case 3: return dmrs_PositionPattern_r15;
         case 4: return dmrs_SharingSubslotPDSCH_r15;
         case 5: return dmrs_RepetitionSubslotPDSCH_r15;
         case 6: return epdcch_SPT_differentCells_r15;
         case 7: return epdcch_STTI_differentCells_r15;
         case 8: return maxLayersSlotOrSubslotPUSCH_r15;
         case 9: return maxNumberUpdatedCSI_Proc_SPT_r15;
         case 10: return maxNumberUpdatedCSI_Proc_STTI_Comb77_r15;
         case 11: return maxNumberUpdatedCSI_Proc_STTI_Comb27_r15;
         case 12: return maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15;
         case 13: return maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15;
         case 14: return mimo_UE_ParametersSTTI_r15;
         case 15: return mimo_UE_ParametersSTTI_v1530;
         case 16: return numberOfBlindDecodesUSS_r15;
         case 17: return pdsch_SlotSubslotPDSCH_Decoding_r15;
         case 18: return powerUCI_SlotPUSCH;
         case 19: return powerUCI_SubslotPUSCH;
         case 20: return slotPDSCH_TxDiv_TM9and10;
         case 21: return subslotPDSCH_TxDiv_TM9and10;
         case 22: return spdcch_differentRS_types_r15;
         case 23: return srs_DCI7_TriggeringFS2_r15;
         case 24: return sps_cyclicShift_r15;
         case 25: return spdcch_Reuse_r15;
         case 26: return sps_STTI_r15;
         case 27: return tm8_slotPDSCH_r15;
         case 28: return tm9_slotSubslot_r15;
         case 29: return tm9_slotSubslotMBSFN_r15;
         case 30: return tm10_slotSubslot_r15;
         case 31: return tm10_slotSubslotMBSFN_r15;
         case 32: return txDiv_SPUCCH_r15;
         case 33: return ul_AsyncHarqSharingDiff_TTI_Lengths_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "aperiodicCsi-ReportingSTTI-r15";
         case 1: return "dmrs-BasedSPDCCH-MBSFN-r15";
         case 2: return "dmrs-BasedSPDCCH-nonMBSFN-r15";
         case 3: return "dmrs-PositionPattern-r15";
         case 4: return "dmrs-SharingSubslotPDSCH-r15";
         case 5: return "dmrs-RepetitionSubslotPDSCH-r15";
         case 6: return "epdcch-SPT-differentCells-r15";
         case 7: return "epdcch-STTI-differentCells-r15";
         case 8: return "maxLayersSlotOrSubslotPUSCH-r15";
         case 9: return "maxNumberUpdatedCSI-Proc-SPT-r15";
         case 10: return "maxNumberUpdatedCSI-Proc-STTI-Comb77-r15";
         case 11: return "maxNumberUpdatedCSI-Proc-STTI-Comb27-r15";
         case 12: return "maxNumberUpdatedCSI-Proc-STTI-Comb22-Set1-r15";
         case 13: return "maxNumberUpdatedCSI-Proc-STTI-Comb22-Set2-r15";
         case 14: return "mimo-UE-ParametersSTTI-r15";
         case 15: return "mimo-UE-ParametersSTTI-v1530";
         case 16: return "numberOfBlindDecodesUSS-r15";
         case 17: return "pdsch-SlotSubslotPDSCH-Decoding-r15";
         case 18: return "powerUCI-SlotPUSCH";
         case 19: return "powerUCI-SubslotPUSCH";
         case 20: return "slotPDSCH-TxDiv-TM9and10";
         case 21: return "subslotPDSCH-TxDiv-TM9and10";
         case 22: return "spdcch-differentRS-types-r15";
         case 23: return "srs-DCI7-TriggeringFS2-r15";
         case 24: return "sps-cyclicShift-r15";
         case 25: return "spdcch-Reuse-r15";
         case 26: return "sps-STTI-r15";
         case 27: return "tm8-slotPDSCH-r15";
         case 28: return "tm9-slotSubslot-r15";
         case 29: return "tm9-slotSubslotMBSFN-r15";
         case 30: return "tm10-slotSubslot-r15";
         case 31: return "tm10-slotSubslotMBSFN-r15";
         case 32: return "txDiv-SPUCCH-r15";
         case 33: return "ul-AsyncHarqSharingDiff-TTI-Lengths-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean aperiodicCsi_ReportingSTTI_r15Present = buffer.decodeBit ("aperiodicCsi_ReportingSTTI_r15Present");
      boolean dmrs_BasedSPDCCH_MBSFN_r15Present = buffer.decodeBit ("dmrs_BasedSPDCCH_MBSFN_r15Present");
      boolean dmrs_BasedSPDCCH_nonMBSFN_r15Present = buffer.decodeBit ("dmrs_BasedSPDCCH_nonMBSFN_r15Present");
      boolean dmrs_PositionPattern_r15Present = buffer.decodeBit ("dmrs_PositionPattern_r15Present");
      boolean dmrs_SharingSubslotPDSCH_r15Present = buffer.decodeBit ("dmrs_SharingSubslotPDSCH_r15Present");
      boolean dmrs_RepetitionSubslotPDSCH_r15Present = buffer.decodeBit ("dmrs_RepetitionSubslotPDSCH_r15Present");
      boolean epdcch_SPT_differentCells_r15Present = buffer.decodeBit ("epdcch_SPT_differentCells_r15Present");
      boolean epdcch_STTI_differentCells_r15Present = buffer.decodeBit ("epdcch_STTI_differentCells_r15Present");
      boolean maxLayersSlotOrSubslotPUSCH_r15Present = buffer.decodeBit ("maxLayersSlotOrSubslotPUSCH_r15Present");
      boolean maxNumberUpdatedCSI_Proc_SPT_r15Present = buffer.decodeBit ("maxNumberUpdatedCSI_Proc_SPT_r15Present");
      boolean maxNumberUpdatedCSI_Proc_STTI_Comb77_r15Present = buffer.decodeBit ("maxNumberUpdatedCSI_Proc_STTI_Comb77_r15Present");
      boolean maxNumberUpdatedCSI_Proc_STTI_Comb27_r15Present = buffer.decodeBit ("maxNumberUpdatedCSI_Proc_STTI_Comb27_r15Present");
      boolean maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15Present = buffer.decodeBit ("maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15Present");
      boolean maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15Present = buffer.decodeBit ("maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15Present");
      boolean mimo_UE_ParametersSTTI_r15Present = buffer.decodeBit ("mimo_UE_ParametersSTTI_r15Present");
      boolean mimo_UE_ParametersSTTI_v1530Present = buffer.decodeBit ("mimo_UE_ParametersSTTI_v1530Present");
      boolean numberOfBlindDecodesUSS_r15Present = buffer.decodeBit ("numberOfBlindDecodesUSS_r15Present");
      boolean pdsch_SlotSubslotPDSCH_Decoding_r15Present = buffer.decodeBit ("pdsch_SlotSubslotPDSCH_Decoding_r15Present");
      boolean powerUCI_SlotPUSCHPresent = buffer.decodeBit ("powerUCI_SlotPUSCHPresent");
      boolean powerUCI_SubslotPUSCHPresent = buffer.decodeBit ("powerUCI_SubslotPUSCHPresent");
      boolean slotPDSCH_TxDiv_TM9and10Present = buffer.decodeBit ("slotPDSCH_TxDiv_TM9and10Present");
      boolean subslotPDSCH_TxDiv_TM9and10Present = buffer.decodeBit ("subslotPDSCH_TxDiv_TM9and10Present");
      boolean spdcch_differentRS_types_r15Present = buffer.decodeBit ("spdcch_differentRS_types_r15Present");
      boolean srs_DCI7_TriggeringFS2_r15Present = buffer.decodeBit ("srs_DCI7_TriggeringFS2_r15Present");
      boolean sps_cyclicShift_r15Present = buffer.decodeBit ("sps_cyclicShift_r15Present");
      boolean spdcch_Reuse_r15Present = buffer.decodeBit ("spdcch_Reuse_r15Present");
      boolean sps_STTI_r15Present = buffer.decodeBit ("sps_STTI_r15Present");
      boolean tm8_slotPDSCH_r15Present = buffer.decodeBit ("tm8_slotPDSCH_r15Present");
      boolean tm9_slotSubslot_r15Present = buffer.decodeBit ("tm9_slotSubslot_r15Present");
      boolean tm9_slotSubslotMBSFN_r15Present = buffer.decodeBit ("tm9_slotSubslotMBSFN_r15Present");
      boolean tm10_slotSubslot_r15Present = buffer.decodeBit ("tm10_slotSubslot_r15Present");
      boolean tm10_slotSubslotMBSFN_r15Present = buffer.decodeBit ("tm10_slotSubslotMBSFN_r15Present");
      boolean txDiv_SPUCCH_r15Present = buffer.decodeBit ("txDiv_SPUCCH_r15Present");
      boolean ul_AsyncHarqSharingDiff_TTI_Lengths_r15Present = buffer.decodeBit ("ul_AsyncHarqSharingDiff_TTI_Lengths_r15Present");

      // decode aperiodicCsi_ReportingSTTI_r15

      if (aperiodicCsi_ReportingSTTI_r15Present) {
         buffer.getContext().eventDispatcher.startElement("aperiodicCsi_ReportingSTTI_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_aperiodicCsi_ReportingSTTI_r15.decodeEnumValue (buffer);
         aperiodicCsi_ReportingSTTI_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_aperiodicCsi_ReportingSTTI_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("aperiodicCsi_ReportingSTTI_r15", -1);
      }
      else {
         aperiodicCsi_ReportingSTTI_r15 = null;
      }

      // decode dmrs_BasedSPDCCH_MBSFN_r15

      if (dmrs_BasedSPDCCH_MBSFN_r15Present) {
         buffer.getContext().eventDispatcher.startElement("dmrs_BasedSPDCCH_MBSFN_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_BasedSPDCCH_MBSFN_r15.decodeEnumValue (buffer);
         dmrs_BasedSPDCCH_MBSFN_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_BasedSPDCCH_MBSFN_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("dmrs_BasedSPDCCH_MBSFN_r15", -1);
      }
      else {
         dmrs_BasedSPDCCH_MBSFN_r15 = null;
      }

      // decode dmrs_BasedSPDCCH_nonMBSFN_r15

      if (dmrs_BasedSPDCCH_nonMBSFN_r15Present) {
         buffer.getContext().eventDispatcher.startElement("dmrs_BasedSPDCCH_nonMBSFN_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_BasedSPDCCH_nonMBSFN_r15.decodeEnumValue (buffer);
         dmrs_BasedSPDCCH_nonMBSFN_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_BasedSPDCCH_nonMBSFN_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("dmrs_BasedSPDCCH_nonMBSFN_r15", -1);
      }
      else {
         dmrs_BasedSPDCCH_nonMBSFN_r15 = null;
      }

      // decode dmrs_PositionPattern_r15

      if (dmrs_PositionPattern_r15Present) {
         buffer.getContext().eventDispatcher.startElement("dmrs_PositionPattern_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_PositionPattern_r15.decodeEnumValue (buffer);
         dmrs_PositionPattern_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_PositionPattern_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("dmrs_PositionPattern_r15", -1);
      }
      else {
         dmrs_PositionPattern_r15 = null;
      }

      // decode dmrs_SharingSubslotPDSCH_r15

      if (dmrs_SharingSubslotPDSCH_r15Present) {
         buffer.getContext().eventDispatcher.startElement("dmrs_SharingSubslotPDSCH_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_SharingSubslotPDSCH_r15.decodeEnumValue (buffer);
         dmrs_SharingSubslotPDSCH_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_SharingSubslotPDSCH_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("dmrs_SharingSubslotPDSCH_r15", -1);
      }
      else {
         dmrs_SharingSubslotPDSCH_r15 = null;
      }

      // decode dmrs_RepetitionSubslotPDSCH_r15

      if (dmrs_RepetitionSubslotPDSCH_r15Present) {
         buffer.getContext().eventDispatcher.startElement("dmrs_RepetitionSubslotPDSCH_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_RepetitionSubslotPDSCH_r15.decodeEnumValue (buffer);
         dmrs_RepetitionSubslotPDSCH_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_dmrs_RepetitionSubslotPDSCH_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("dmrs_RepetitionSubslotPDSCH_r15", -1);
      }
      else {
         dmrs_RepetitionSubslotPDSCH_r15 = null;
      }

      // decode epdcch_SPT_differentCells_r15

      if (epdcch_SPT_differentCells_r15Present) {
         buffer.getContext().eventDispatcher.startElement("epdcch_SPT_differentCells_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_epdcch_SPT_differentCells_r15.decodeEnumValue (buffer);
         epdcch_SPT_differentCells_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_epdcch_SPT_differentCells_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("epdcch_SPT_differentCells_r15", -1);
      }
      else {
         epdcch_SPT_differentCells_r15 = null;
      }

      // decode epdcch_STTI_differentCells_r15

      if (epdcch_STTI_differentCells_r15Present) {
         buffer.getContext().eventDispatcher.startElement("epdcch_STTI_differentCells_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_epdcch_STTI_differentCells_r15.decodeEnumValue (buffer);
         epdcch_STTI_differentCells_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_epdcch_STTI_differentCells_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("epdcch_STTI_differentCells_r15", -1);
      }
      else {
         epdcch_STTI_differentCells_r15 = null;
      }

      // decode maxLayersSlotOrSubslotPUSCH_r15

      if (maxLayersSlotOrSubslotPUSCH_r15Present) {
         buffer.getContext().eventDispatcher.startElement("maxLayersSlotOrSubslotPUSCH_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_maxLayersSlotOrSubslotPUSCH_r15.decodeEnumValue (buffer);
         maxLayersSlotOrSubslotPUSCH_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_maxLayersSlotOrSubslotPUSCH_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("maxLayersSlotOrSubslotPUSCH_r15", -1);
      }
      else {
         maxLayersSlotOrSubslotPUSCH_r15 = null;
      }

      // decode maxNumberUpdatedCSI_Proc_SPT_r15

      if (maxNumberUpdatedCSI_Proc_SPT_r15Present) {
         buffer.getContext().eventDispatcher.startElement("maxNumberUpdatedCSI_Proc_SPT_r15", -1);

         maxNumberUpdatedCSI_Proc_SPT_r15 = new Asn1Integer();
         maxNumberUpdatedCSI_Proc_SPT_r15.decode (buffer, 5, 32);

         buffer.invokeCharacters(maxNumberUpdatedCSI_Proc_SPT_r15.toString());
         buffer.getContext().eventDispatcher.endElement("maxNumberUpdatedCSI_Proc_SPT_r15", -1);
      }
      else {
         maxNumberUpdatedCSI_Proc_SPT_r15 = null;
      }

      // decode maxNumberUpdatedCSI_Proc_STTI_Comb77_r15

      if (maxNumberUpdatedCSI_Proc_STTI_Comb77_r15Present) {
         buffer.getContext().eventDispatcher.startElement("maxNumberUpdatedCSI_Proc_STTI_Comb77_r15", -1);

         maxNumberUpdatedCSI_Proc_STTI_Comb77_r15 = new Asn1Integer();
         maxNumberUpdatedCSI_Proc_STTI_Comb77_r15.decode (buffer, 1, 32);

         buffer.invokeCharacters(maxNumberUpdatedCSI_Proc_STTI_Comb77_r15.toString());
         buffer.getContext().eventDispatcher.endElement("maxNumberUpdatedCSI_Proc_STTI_Comb77_r15", -1);
      }
      else {
         maxNumberUpdatedCSI_Proc_STTI_Comb77_r15 = null;
      }

      // decode maxNumberUpdatedCSI_Proc_STTI_Comb27_r15

      if (maxNumberUpdatedCSI_Proc_STTI_Comb27_r15Present) {
         buffer.getContext().eventDispatcher.startElement("maxNumberUpdatedCSI_Proc_STTI_Comb27_r15", -1);

         maxNumberUpdatedCSI_Proc_STTI_Comb27_r15 = new Asn1Integer();
         maxNumberUpdatedCSI_Proc_STTI_Comb27_r15.decode (buffer, 1, 32);

         buffer.invokeCharacters(maxNumberUpdatedCSI_Proc_STTI_Comb27_r15.toString());
         buffer.getContext().eventDispatcher.endElement("maxNumberUpdatedCSI_Proc_STTI_Comb27_r15", -1);
      }
      else {
         maxNumberUpdatedCSI_Proc_STTI_Comb27_r15 = null;
      }

      // decode maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15

      if (maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15Present) {
         buffer.getContext().eventDispatcher.startElement("maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15", -1);

         maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15 = new Asn1Integer();
         maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15.decode (buffer, 1, 32);

         buffer.invokeCharacters(maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15.toString());
         buffer.getContext().eventDispatcher.endElement("maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15", -1);
      }
      else {
         maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15 = null;
      }

      // decode maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15

      if (maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15Present) {
         buffer.getContext().eventDispatcher.startElement("maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15", -1);

         maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15 = new Asn1Integer();
         maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15.decode (buffer, 1, 32);

         buffer.invokeCharacters(maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15.toString());
         buffer.getContext().eventDispatcher.endElement("maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15", -1);
      }
      else {
         maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15 = null;
      }

      // decode mimo_UE_ParametersSTTI_r15

      if (mimo_UE_ParametersSTTI_r15Present) {
         buffer.getContext().eventDispatcher.startElement("mimo_UE_ParametersSTTI_r15", -1);

         mimo_UE_ParametersSTTI_r15 = new MIMO_UE_Parameters_r13();
         mimo_UE_ParametersSTTI_r15.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mimo_UE_ParametersSTTI_r15", -1);
      }
      else {
         mimo_UE_ParametersSTTI_r15 = null;
      }

      // decode mimo_UE_ParametersSTTI_v1530

      if (mimo_UE_ParametersSTTI_v1530Present) {
         buffer.getContext().eventDispatcher.startElement("mimo_UE_ParametersSTTI_v1530", -1);

         mimo_UE_ParametersSTTI_v1530 = new MIMO_UE_Parameters_v1430();
         mimo_UE_ParametersSTTI_v1530.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("mimo_UE_ParametersSTTI_v1530", -1);
      }
      else {
         mimo_UE_ParametersSTTI_v1530 = null;
      }

      // decode numberOfBlindDecodesUSS_r15

      if (numberOfBlindDecodesUSS_r15Present) {
         buffer.getContext().eventDispatcher.startElement("numberOfBlindDecodesUSS_r15", -1);

         numberOfBlindDecodesUSS_r15 = new Asn1Integer();
         numberOfBlindDecodesUSS_r15.decode (buffer, 4, 32);

         buffer.invokeCharacters(numberOfBlindDecodesUSS_r15.toString());
         buffer.getContext().eventDispatcher.endElement("numberOfBlindDecodesUSS_r15", -1);
      }
      else {
         numberOfBlindDecodesUSS_r15 = null;
      }

      // decode pdsch_SlotSubslotPDSCH_Decoding_r15

      if (pdsch_SlotSubslotPDSCH_Decoding_r15Present) {
         buffer.getContext().eventDispatcher.startElement("pdsch_SlotSubslotPDSCH_Decoding_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_pdsch_SlotSubslotPDSCH_Decoding_r15.decodeEnumValue (buffer);
         pdsch_SlotSubslotPDSCH_Decoding_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_pdsch_SlotSubslotPDSCH_Decoding_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("pdsch_SlotSubslotPDSCH_Decoding_r15", -1);
      }
      else {
         pdsch_SlotSubslotPDSCH_Decoding_r15 = null;
      }

      // decode powerUCI_SlotPUSCH

      if (powerUCI_SlotPUSCHPresent) {
         buffer.getContext().eventDispatcher.startElement("powerUCI_SlotPUSCH", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_powerUCI_SlotPUSCH.decodeEnumValue (buffer);
         powerUCI_SlotPUSCH = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_powerUCI_SlotPUSCH.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("powerUCI_SlotPUSCH", -1);
      }
      else {
         powerUCI_SlotPUSCH = null;
      }

      // decode powerUCI_SubslotPUSCH

      if (powerUCI_SubslotPUSCHPresent) {
         buffer.getContext().eventDispatcher.startElement("powerUCI_SubslotPUSCH", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_powerUCI_SubslotPUSCH.decodeEnumValue (buffer);
         powerUCI_SubslotPUSCH = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_powerUCI_SubslotPUSCH.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("powerUCI_SubslotPUSCH", -1);
      }
      else {
         powerUCI_SubslotPUSCH = null;
      }

      // decode slotPDSCH_TxDiv_TM9and10

      if (slotPDSCH_TxDiv_TM9and10Present) {
         buffer.getContext().eventDispatcher.startElement("slotPDSCH_TxDiv_TM9and10", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_slotPDSCH_TxDiv_TM9and10.decodeEnumValue (buffer);
         slotPDSCH_TxDiv_TM9and10 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_slotPDSCH_TxDiv_TM9and10.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("slotPDSCH_TxDiv_TM9and10", -1);
      }
      else {
         slotPDSCH_TxDiv_TM9and10 = null;
      }

      // decode subslotPDSCH_TxDiv_TM9and10

      if (subslotPDSCH_TxDiv_TM9and10Present) {
         buffer.getContext().eventDispatcher.startElement("subslotPDSCH_TxDiv_TM9and10", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_subslotPDSCH_TxDiv_TM9and10.decodeEnumValue (buffer);
         subslotPDSCH_TxDiv_TM9and10 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_subslotPDSCH_TxDiv_TM9and10.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("subslotPDSCH_TxDiv_TM9and10", -1);
      }
      else {
         subslotPDSCH_TxDiv_TM9and10 = null;
      }

      // decode spdcch_differentRS_types_r15

      if (spdcch_differentRS_types_r15Present) {
         buffer.getContext().eventDispatcher.startElement("spdcch_differentRS_types_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_spdcch_differentRS_types_r15.decodeEnumValue (buffer);
         spdcch_differentRS_types_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_spdcch_differentRS_types_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("spdcch_differentRS_types_r15", -1);
      }
      else {
         spdcch_differentRS_types_r15 = null;
      }

      // decode srs_DCI7_TriggeringFS2_r15

      if (srs_DCI7_TriggeringFS2_r15Present) {
         buffer.getContext().eventDispatcher.startElement("srs_DCI7_TriggeringFS2_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_srs_DCI7_TriggeringFS2_r15.decodeEnumValue (buffer);
         srs_DCI7_TriggeringFS2_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_srs_DCI7_TriggeringFS2_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("srs_DCI7_TriggeringFS2_r15", -1);
      }
      else {
         srs_DCI7_TriggeringFS2_r15 = null;
      }

      // decode sps_cyclicShift_r15

      if (sps_cyclicShift_r15Present) {
         buffer.getContext().eventDispatcher.startElement("sps_cyclicShift_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_sps_cyclicShift_r15.decodeEnumValue (buffer);
         sps_cyclicShift_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_sps_cyclicShift_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("sps_cyclicShift_r15", -1);
      }
      else {
         sps_cyclicShift_r15 = null;
      }

      // decode spdcch_Reuse_r15

      if (spdcch_Reuse_r15Present) {
         buffer.getContext().eventDispatcher.startElement("spdcch_Reuse_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_spdcch_Reuse_r15.decodeEnumValue (buffer);
         spdcch_Reuse_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_spdcch_Reuse_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("spdcch_Reuse_r15", -1);
      }
      else {
         spdcch_Reuse_r15 = null;
      }

      // decode sps_STTI_r15

      if (sps_STTI_r15Present) {
         buffer.getContext().eventDispatcher.startElement("sps_STTI_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_sps_STTI_r15.decodeEnumValue (buffer);
         sps_STTI_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_sps_STTI_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("sps_STTI_r15", -1);
      }
      else {
         sps_STTI_r15 = null;
      }

      // decode tm8_slotPDSCH_r15

      if (tm8_slotPDSCH_r15Present) {
         buffer.getContext().eventDispatcher.startElement("tm8_slotPDSCH_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm8_slotPDSCH_r15.decodeEnumValue (buffer);
         tm8_slotPDSCH_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm8_slotPDSCH_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tm8_slotPDSCH_r15", -1);
      }
      else {
         tm8_slotPDSCH_r15 = null;
      }

      // decode tm9_slotSubslot_r15

      if (tm9_slotSubslot_r15Present) {
         buffer.getContext().eventDispatcher.startElement("tm9_slotSubslot_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm9_slotSubslot_r15.decodeEnumValue (buffer);
         tm9_slotSubslot_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm9_slotSubslot_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tm9_slotSubslot_r15", -1);
      }
      else {
         tm9_slotSubslot_r15 = null;
      }

      // decode tm9_slotSubslotMBSFN_r15

      if (tm9_slotSubslotMBSFN_r15Present) {
         buffer.getContext().eventDispatcher.startElement("tm9_slotSubslotMBSFN_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm9_slotSubslotMBSFN_r15.decodeEnumValue (buffer);
         tm9_slotSubslotMBSFN_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm9_slotSubslotMBSFN_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tm9_slotSubslotMBSFN_r15", -1);
      }
      else {
         tm9_slotSubslotMBSFN_r15 = null;
      }

      // decode tm10_slotSubslot_r15

      if (tm10_slotSubslot_r15Present) {
         buffer.getContext().eventDispatcher.startElement("tm10_slotSubslot_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm10_slotSubslot_r15.decodeEnumValue (buffer);
         tm10_slotSubslot_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm10_slotSubslot_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tm10_slotSubslot_r15", -1);
      }
      else {
         tm10_slotSubslot_r15 = null;
      }

      // decode tm10_slotSubslotMBSFN_r15

      if (tm10_slotSubslotMBSFN_r15Present) {
         buffer.getContext().eventDispatcher.startElement("tm10_slotSubslotMBSFN_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm10_slotSubslotMBSFN_r15.decodeEnumValue (buffer);
         tm10_slotSubslotMBSFN_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_tm10_slotSubslotMBSFN_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("tm10_slotSubslotMBSFN_r15", -1);
      }
      else {
         tm10_slotSubslotMBSFN_r15 = null;
      }

      // decode txDiv_SPUCCH_r15

      if (txDiv_SPUCCH_r15Present) {
         buffer.getContext().eventDispatcher.startElement("txDiv_SPUCCH_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_txDiv_SPUCCH_r15.decodeEnumValue (buffer);
         txDiv_SPUCCH_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_txDiv_SPUCCH_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("txDiv_SPUCCH_r15", -1);
      }
      else {
         txDiv_SPUCCH_r15 = null;
      }

      // decode ul_AsyncHarqSharingDiff_TTI_Lengths_r15

      if (ul_AsyncHarqSharingDiff_TTI_Lengths_r15Present) {
         buffer.getContext().eventDispatcher.startElement("ul_AsyncHarqSharingDiff_TTI_Lengths_r15", -1);

         int tval = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_ul_AsyncHarqSharingDiff_TTI_Lengths_r15.decodeEnumValue (buffer);
         ul_AsyncHarqSharingDiff_TTI_Lengths_r15 = PhyLayerParameters_v1530_stti_SPT_Capabilities_r15_ul_AsyncHarqSharingDiff_TTI_Lengths_r15.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("ul_AsyncHarqSharingDiff_TTI_Lengths_r15", -1);
      }
      else {
         ul_AsyncHarqSharingDiff_TTI_Lengths_r15 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (aperiodicCsi_ReportingSTTI_r15 != null) aperiodicCsi_ReportingSTTI_r15.print (_sb, "aperiodicCsi_ReportingSTTI_r15", _level+1);
      if (dmrs_BasedSPDCCH_MBSFN_r15 != null) dmrs_BasedSPDCCH_MBSFN_r15.print (_sb, "dmrs_BasedSPDCCH_MBSFN_r15", _level+1);
      if (dmrs_BasedSPDCCH_nonMBSFN_r15 != null) dmrs_BasedSPDCCH_nonMBSFN_r15.print (_sb, "dmrs_BasedSPDCCH_nonMBSFN_r15", _level+1);
      if (dmrs_PositionPattern_r15 != null) dmrs_PositionPattern_r15.print (_sb, "dmrs_PositionPattern_r15", _level+1);
      if (dmrs_SharingSubslotPDSCH_r15 != null) dmrs_SharingSubslotPDSCH_r15.print (_sb, "dmrs_SharingSubslotPDSCH_r15", _level+1);
      if (dmrs_RepetitionSubslotPDSCH_r15 != null) dmrs_RepetitionSubslotPDSCH_r15.print (_sb, "dmrs_RepetitionSubslotPDSCH_r15", _level+1);
      if (epdcch_SPT_differentCells_r15 != null) epdcch_SPT_differentCells_r15.print (_sb, "epdcch_SPT_differentCells_r15", _level+1);
      if (epdcch_STTI_differentCells_r15 != null) epdcch_STTI_differentCells_r15.print (_sb, "epdcch_STTI_differentCells_r15", _level+1);
      if (maxLayersSlotOrSubslotPUSCH_r15 != null) maxLayersSlotOrSubslotPUSCH_r15.print (_sb, "maxLayersSlotOrSubslotPUSCH_r15", _level+1);
      if (maxNumberUpdatedCSI_Proc_SPT_r15 != null) maxNumberUpdatedCSI_Proc_SPT_r15.print (_sb, "maxNumberUpdatedCSI_Proc_SPT_r15", _level+1);
      if (maxNumberUpdatedCSI_Proc_STTI_Comb77_r15 != null) maxNumberUpdatedCSI_Proc_STTI_Comb77_r15.print (_sb, "maxNumberUpdatedCSI_Proc_STTI_Comb77_r15", _level+1);
      if (maxNumberUpdatedCSI_Proc_STTI_Comb27_r15 != null) maxNumberUpdatedCSI_Proc_STTI_Comb27_r15.print (_sb, "maxNumberUpdatedCSI_Proc_STTI_Comb27_r15", _level+1);
      if (maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15 != null) maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15.print (_sb, "maxNumberUpdatedCSI_Proc_STTI_Comb22_Set1_r15", _level+1);
      if (maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15 != null) maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15.print (_sb, "maxNumberUpdatedCSI_Proc_STTI_Comb22_Set2_r15", _level+1);
      if (mimo_UE_ParametersSTTI_r15 != null) mimo_UE_ParametersSTTI_r15.print (_sb, "mimo_UE_ParametersSTTI_r15", _level+1);
      if (mimo_UE_ParametersSTTI_v1530 != null) mimo_UE_ParametersSTTI_v1530.print (_sb, "mimo_UE_ParametersSTTI_v1530", _level+1);
      if (numberOfBlindDecodesUSS_r15 != null) numberOfBlindDecodesUSS_r15.print (_sb, "numberOfBlindDecodesUSS_r15", _level+1);
      if (pdsch_SlotSubslotPDSCH_Decoding_r15 != null) pdsch_SlotSubslotPDSCH_Decoding_r15.print (_sb, "pdsch_SlotSubslotPDSCH_Decoding_r15", _level+1);
      if (powerUCI_SlotPUSCH != null) powerUCI_SlotPUSCH.print (_sb, "powerUCI_SlotPUSCH", _level+1);
      if (powerUCI_SubslotPUSCH != null) powerUCI_SubslotPUSCH.print (_sb, "powerUCI_SubslotPUSCH", _level+1);
      if (slotPDSCH_TxDiv_TM9and10 != null) slotPDSCH_TxDiv_TM9and10.print (_sb, "slotPDSCH_TxDiv_TM9and10", _level+1);
      if (subslotPDSCH_TxDiv_TM9and10 != null) subslotPDSCH_TxDiv_TM9and10.print (_sb, "subslotPDSCH_TxDiv_TM9and10", _level+1);
      if (spdcch_differentRS_types_r15 != null) spdcch_differentRS_types_r15.print (_sb, "spdcch_differentRS_types_r15", _level+1);
      if (srs_DCI7_TriggeringFS2_r15 != null) srs_DCI7_TriggeringFS2_r15.print (_sb, "srs_DCI7_TriggeringFS2_r15", _level+1);
      if (sps_cyclicShift_r15 != null) sps_cyclicShift_r15.print (_sb, "sps_cyclicShift_r15", _level+1);
      if (spdcch_Reuse_r15 != null) spdcch_Reuse_r15.print (_sb, "spdcch_Reuse_r15", _level+1);
      if (sps_STTI_r15 != null) sps_STTI_r15.print (_sb, "sps_STTI_r15", _level+1);
      if (tm8_slotPDSCH_r15 != null) tm8_slotPDSCH_r15.print (_sb, "tm8_slotPDSCH_r15", _level+1);
      if (tm9_slotSubslot_r15 != null) tm9_slotSubslot_r15.print (_sb, "tm9_slotSubslot_r15", _level+1);
      if (tm9_slotSubslotMBSFN_r15 != null) tm9_slotSubslotMBSFN_r15.print (_sb, "tm9_slotSubslotMBSFN_r15", _level+1);
      if (tm10_slotSubslot_r15 != null) tm10_slotSubslot_r15.print (_sb, "tm10_slotSubslot_r15", _level+1);
      if (tm10_slotSubslotMBSFN_r15 != null) tm10_slotSubslotMBSFN_r15.print (_sb, "tm10_slotSubslotMBSFN_r15", _level+1);
      if (txDiv_SPUCCH_r15 != null) txDiv_SPUCCH_r15.print (_sb, "txDiv_SPUCCH_r15", _level+1);
      if (ul_AsyncHarqSharingDiff_TTI_Lengths_r15 != null) ul_AsyncHarqSharingDiff_TTI_Lengths_r15.print (_sb, "ul_AsyncHarqSharingDiff_TTI_Lengths_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
