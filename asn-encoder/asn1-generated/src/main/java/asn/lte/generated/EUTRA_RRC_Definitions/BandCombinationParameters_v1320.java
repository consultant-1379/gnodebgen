/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class BandCombinationParameters_v1320 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "BandCombinationParameters-v1320";
   }

   public BandCombinationParameters_v1320_bandParameterList_v1320 bandParameterList_v1320;  // optional
   public BandCombinationParameters_v1320_additionalRx_Tx_PerformanceReq_r13 additionalRx_Tx_PerformanceReq_r13 = null;  // optional

   public BandCombinationParameters_v1320 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public BandCombinationParameters_v1320 (
      BandCombinationParameters_v1320_bandParameterList_v1320 bandParameterList_v1320_,
      BandCombinationParameters_v1320_additionalRx_Tx_PerformanceReq_r13 additionalRx_Tx_PerformanceReq_r13_
   ) {
      super();
      bandParameterList_v1320 = bandParameterList_v1320_;
      additionalRx_Tx_PerformanceReq_r13 = additionalRx_Tx_PerformanceReq_r13_;
   }

   public void init () {
      bandParameterList_v1320 = null;
      additionalRx_Tx_PerformanceReq_r13 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return bandParameterList_v1320;
         case 1: return additionalRx_Tx_PerformanceReq_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "bandParameterList-v1320";
         case 1: return "additionalRx-Tx-PerformanceReq-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean bandParameterList_v1320Present = buffer.decodeBit ("bandParameterList_v1320Present");
      boolean additionalRx_Tx_PerformanceReq_r13Present = buffer.decodeBit ("additionalRx_Tx_PerformanceReq_r13Present");

      // decode bandParameterList_v1320

      if (bandParameterList_v1320Present) {
         buffer.getContext().eventDispatcher.startElement("bandParameterList_v1320", -1);

         bandParameterList_v1320 = new BandCombinationParameters_v1320_bandParameterList_v1320();
         bandParameterList_v1320.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bandParameterList_v1320", -1);
      }
      else {
         bandParameterList_v1320 = null;
      }

      // decode additionalRx_Tx_PerformanceReq_r13

      if (additionalRx_Tx_PerformanceReq_r13Present) {
         buffer.getContext().eventDispatcher.startElement("additionalRx_Tx_PerformanceReq_r13", -1);

         int tval = BandCombinationParameters_v1320_additionalRx_Tx_PerformanceReq_r13.decodeEnumValue (buffer);
         additionalRx_Tx_PerformanceReq_r13 = BandCombinationParameters_v1320_additionalRx_Tx_PerformanceReq_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("additionalRx_Tx_PerformanceReq_r13", -1);
      }
      else {
         additionalRx_Tx_PerformanceReq_r13 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (bandParameterList_v1320 != null) bandParameterList_v1320.print (_sb, "bandParameterList_v1320", _level+1);
      if (additionalRx_Tx_PerformanceReq_r13 != null) additionalRx_Tx_PerformanceReq_r13.print (_sb, "additionalRx_Tx_PerformanceReq_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
