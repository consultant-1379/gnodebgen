/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MeasAndMobParametersMRDC extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MeasAndMobParametersMRDC";
   }

   public MeasAndMobParametersMRDC_Common measAndMobParametersMRDC_Common;  // optional
   public MeasAndMobParametersMRDC_XDD_Diff measAndMobParametersMRDC_XDD_Diff;  // optional
   public MeasAndMobParametersMRDC_FRX_Diff measAndMobParametersMRDC_FRX_Diff;  // optional

   public MeasAndMobParametersMRDC () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasAndMobParametersMRDC (
      MeasAndMobParametersMRDC_Common measAndMobParametersMRDC_Common_,
      MeasAndMobParametersMRDC_XDD_Diff measAndMobParametersMRDC_XDD_Diff_,
      MeasAndMobParametersMRDC_FRX_Diff measAndMobParametersMRDC_FRX_Diff_
   ) {
      super();
      measAndMobParametersMRDC_Common = measAndMobParametersMRDC_Common_;
      measAndMobParametersMRDC_XDD_Diff = measAndMobParametersMRDC_XDD_Diff_;
      measAndMobParametersMRDC_FRX_Diff = measAndMobParametersMRDC_FRX_Diff_;
   }

   public void init () {
      measAndMobParametersMRDC_Common = null;
      measAndMobParametersMRDC_XDD_Diff = null;
      measAndMobParametersMRDC_FRX_Diff = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return measAndMobParametersMRDC_Common;
         case 1: return measAndMobParametersMRDC_XDD_Diff;
         case 2: return measAndMobParametersMRDC_FRX_Diff;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "measAndMobParametersMRDC-Common";
         case 1: return "measAndMobParametersMRDC-XDD-Diff";
         case 2: return "measAndMobParametersMRDC-FRX-Diff";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean measAndMobParametersMRDC_CommonPresent = buffer.decodeBit ("measAndMobParametersMRDC_CommonPresent");
      boolean measAndMobParametersMRDC_XDD_DiffPresent = buffer.decodeBit ("measAndMobParametersMRDC_XDD_DiffPresent");
      boolean measAndMobParametersMRDC_FRX_DiffPresent = buffer.decodeBit ("measAndMobParametersMRDC_FRX_DiffPresent");

      // decode measAndMobParametersMRDC_Common

      if (measAndMobParametersMRDC_CommonPresent) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersMRDC_Common", -1);

         measAndMobParametersMRDC_Common = new MeasAndMobParametersMRDC_Common();
         measAndMobParametersMRDC_Common.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measAndMobParametersMRDC_Common", -1);
      }
      else {
         measAndMobParametersMRDC_Common = null;
      }

      // decode measAndMobParametersMRDC_XDD_Diff

      if (measAndMobParametersMRDC_XDD_DiffPresent) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersMRDC_XDD_Diff", -1);

         measAndMobParametersMRDC_XDD_Diff = new MeasAndMobParametersMRDC_XDD_Diff();
         measAndMobParametersMRDC_XDD_Diff.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measAndMobParametersMRDC_XDD_Diff", -1);
      }
      else {
         measAndMobParametersMRDC_XDD_Diff = null;
      }

      // decode measAndMobParametersMRDC_FRX_Diff

      if (measAndMobParametersMRDC_FRX_DiffPresent) {
         buffer.getContext().eventDispatcher.startElement("measAndMobParametersMRDC_FRX_Diff", -1);

         measAndMobParametersMRDC_FRX_Diff = new MeasAndMobParametersMRDC_FRX_Diff();
         measAndMobParametersMRDC_FRX_Diff.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("measAndMobParametersMRDC_FRX_Diff", -1);
      }
      else {
         measAndMobParametersMRDC_FRX_Diff = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (measAndMobParametersMRDC_Common != null) measAndMobParametersMRDC_Common.print (_sb, "measAndMobParametersMRDC_Common", _level+1);
      if (measAndMobParametersMRDC_XDD_Diff != null) measAndMobParametersMRDC_XDD_Diff.print (_sb, "measAndMobParametersMRDC_XDD_Diff", _level+1);
      if (measAndMobParametersMRDC_FRX_Diff != null) measAndMobParametersMRDC_FRX_Diff.print (_sb, "measAndMobParametersMRDC_FRX_Diff", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
