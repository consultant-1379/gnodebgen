/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_SyncConfigNFreq_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SL-SyncConfigNFreq-r13";
   }

   public SL_SyncConfigNFreq_r13_asyncParameters_r13 asyncParameters_r13;  // optional
   public SL_SyncConfigNFreq_r13_txParameters_r13 txParameters_r13;  // optional
   public SL_SyncConfigNFreq_r13_rxParameters_r13 rxParameters_r13;  // optional
   public boolean mV2ExtPresent;
   public SL_OffsetIndicatorSync_v1430 syncOffsetIndicator_v1430;  // optional
   public SL_SyncConfigNFreq_r13_gnss_Sync_r14 gnss_Sync_r14 = null;  // optional
   public boolean mV3ExtPresent;
   public SL_OffsetIndicatorSync_r14 syncOffsetIndicator2_r14;  // optional
   public SL_OffsetIndicatorSync_r14 syncOffsetIndicator3_r14;  // optional
   public boolean mV4ExtPresent;
   public SL_SyncConfigNFreq_r13_slss_TxDisabled_r15 slss_TxDisabled_r15 = null;  // optional
   public Asn1OpenExt extElem1;

   public SL_SyncConfigNFreq_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_SyncConfigNFreq_r13 (
      SL_SyncConfigNFreq_r13_asyncParameters_r13 asyncParameters_r13_,
      SL_SyncConfigNFreq_r13_txParameters_r13 txParameters_r13_,
      SL_SyncConfigNFreq_r13_rxParameters_r13 rxParameters_r13_,
      SL_OffsetIndicatorSync_v1430 syncOffsetIndicator_v1430_,
      SL_SyncConfigNFreq_r13_gnss_Sync_r14 gnss_Sync_r14_,
      SL_OffsetIndicatorSync_r14 syncOffsetIndicator2_r14_,
      SL_OffsetIndicatorSync_r14 syncOffsetIndicator3_r14_,
      SL_SyncConfigNFreq_r13_slss_TxDisabled_r15 slss_TxDisabled_r15_
   ) {
      super();
      asyncParameters_r13 = asyncParameters_r13_;
      txParameters_r13 = txParameters_r13_;
      rxParameters_r13 = rxParameters_r13_;
      syncOffsetIndicator_v1430 = syncOffsetIndicator_v1430_;
      gnss_Sync_r14 = gnss_Sync_r14_;
      syncOffsetIndicator2_r14 = syncOffsetIndicator2_r14_;
      syncOffsetIndicator3_r14 = syncOffsetIndicator3_r14_;
      slss_TxDisabled_r15 = slss_TxDisabled_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SL_SyncConfigNFreq_r13 (SL_SyncConfigNFreq_r13_asyncParameters_r13 asyncParameters_r13_,
      SL_SyncConfigNFreq_r13_txParameters_r13 txParameters_r13_,
      SL_SyncConfigNFreq_r13_rxParameters_r13 rxParameters_r13_,
      long syncOffsetIndicator_v1430_,
      SL_SyncConfigNFreq_r13_gnss_Sync_r14 gnss_Sync_r14_,
      long syncOffsetIndicator2_r14_,
      long syncOffsetIndicator3_r14_,
      SL_SyncConfigNFreq_r13_slss_TxDisabled_r15 slss_TxDisabled_r15_
   ) {
      super();
      asyncParameters_r13 = asyncParameters_r13_;
      txParameters_r13 = txParameters_r13_;
      rxParameters_r13 = rxParameters_r13_;
      syncOffsetIndicator_v1430 = new SL_OffsetIndicatorSync_v1430 (syncOffsetIndicator_v1430_);
      gnss_Sync_r14 = gnss_Sync_r14_;
      syncOffsetIndicator2_r14 = new SL_OffsetIndicatorSync_r14 (syncOffsetIndicator2_r14_);
      syncOffsetIndicator3_r14 = new SL_OffsetIndicatorSync_r14 (syncOffsetIndicator3_r14_);
      slss_TxDisabled_r15 = slss_TxDisabled_r15_;
   }

   public void init () {
      asyncParameters_r13 = null;
      txParameters_r13 = null;
      rxParameters_r13 = null;
      syncOffsetIndicator_v1430 = null;
      gnss_Sync_r14 = null;
      syncOffsetIndicator2_r14 = null;
      syncOffsetIndicator3_r14 = null;
      slss_TxDisabled_r15 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 9; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return asyncParameters_r13;
         case 1: return txParameters_r13;
         case 2: return rxParameters_r13;
         case 3: return syncOffsetIndicator_v1430;
         case 4: return gnss_Sync_r14;
         case 5: return syncOffsetIndicator2_r14;
         case 6: return syncOffsetIndicator3_r14;
         case 7: return slss_TxDisabled_r15;
         case 8: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "asyncParameters-r13";
         case 1: return "txParameters-r13";
         case 2: return "rxParameters-r13";
         case 3: return "syncOffsetIndicator-v1430";
         case 4: return "gnss-Sync-r14";
         case 5: return "syncOffsetIndicator2-r14";
         case 6: return "syncOffsetIndicator3-r14";
         case 7: return "slss-TxDisabled-r15";
         case 8: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean asyncParameters_r13Present = buffer.decodeBit ("asyncParameters_r13Present");
      boolean txParameters_r13Present = buffer.decodeBit ("txParameters_r13Present");
      boolean rxParameters_r13Present = buffer.decodeBit ("rxParameters_r13Present");

      // decode asyncParameters_r13

      if (asyncParameters_r13Present) {
         buffer.getContext().eventDispatcher.startElement("asyncParameters_r13", -1);

         asyncParameters_r13 = new SL_SyncConfigNFreq_r13_asyncParameters_r13();
         asyncParameters_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("asyncParameters_r13", -1);
      }
      else {
         asyncParameters_r13 = null;
      }

      // decode txParameters_r13

      if (txParameters_r13Present) {
         buffer.getContext().eventDispatcher.startElement("txParameters_r13", -1);

         txParameters_r13 = new SL_SyncConfigNFreq_r13_txParameters_r13();
         txParameters_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("txParameters_r13", -1);
      }
      else {
         txParameters_r13 = null;
      }

      // decode rxParameters_r13

      if (rxParameters_r13Present) {
         buffer.getContext().eventDispatcher.startElement("rxParameters_r13", -1);

         rxParameters_r13 = new SL_SyncConfigNFreq_r13_rxParameters_r13();
         rxParameters_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("rxParameters_r13", -1);
      }
      else {
         rxParameters_r13 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV3ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV4ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean syncOffsetIndicator_v1430Present = buffer.decodeBit ("syncOffsetIndicator_v1430Present");

            boolean gnss_Sync_r14Present = buffer.decodeBit ("gnss_Sync_r14Present");

            // decode syncOffsetIndicator_v1430

            if (syncOffsetIndicator_v1430Present) {
               buffer.getContext().eventDispatcher.startElement("syncOffsetIndicator_v1430", -1);

               syncOffsetIndicator_v1430 = new SL_OffsetIndicatorSync_v1430();
               syncOffsetIndicator_v1430.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("syncOffsetIndicator_v1430", -1);
            }
            else {
               syncOffsetIndicator_v1430 = null;
            }

            // decode gnss_Sync_r14

            if (gnss_Sync_r14Present) {
               buffer.getContext().eventDispatcher.startElement("gnss_Sync_r14", -1);

               int tval = SL_SyncConfigNFreq_r13_gnss_Sync_r14.decodeEnumValue (buffer);
               gnss_Sync_r14 = SL_SyncConfigNFreq_r13_gnss_Sync_r14.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("gnss_Sync_r14", -1);
            }
            else {
               gnss_Sync_r14 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV3ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean syncOffsetIndicator2_r14Present = buffer.decodeBit ("syncOffsetIndicator2_r14Present");

            boolean syncOffsetIndicator3_r14Present = buffer.decodeBit ("syncOffsetIndicator3_r14Present");

            // decode syncOffsetIndicator2_r14

            if (syncOffsetIndicator2_r14Present) {
               buffer.getContext().eventDispatcher.startElement("syncOffsetIndicator2_r14", -1);

               syncOffsetIndicator2_r14 = new SL_OffsetIndicatorSync_r14();
               syncOffsetIndicator2_r14.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("syncOffsetIndicator2_r14", -1);
            }
            else {
               syncOffsetIndicator2_r14 = null;
            }

            // decode syncOffsetIndicator3_r14

            if (syncOffsetIndicator3_r14Present) {
               buffer.getContext().eventDispatcher.startElement("syncOffsetIndicator3_r14", -1);

               syncOffsetIndicator3_r14 = new SL_OffsetIndicatorSync_r14();
               syncOffsetIndicator3_r14.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("syncOffsetIndicator3_r14", -1);
            }
            else {
               syncOffsetIndicator3_r14 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV4ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean slss_TxDisabled_r15Present = buffer.decodeBit ("slss_TxDisabled_r15Present");

            // decode slss_TxDisabled_r15

            if (slss_TxDisabled_r15Present) {
               buffer.getContext().eventDispatcher.startElement("slss_TxDisabled_r15", -1);

               int tval = SL_SyncConfigNFreq_r13_slss_TxDisabled_r15.decodeEnumValue (buffer);
               slss_TxDisabled_r15 = SL_SyncConfigNFreq_r13_slss_TxDisabled_r15.valueOf (tval);
               buffer.getContext().eventDispatcher.endElement("slss_TxDisabled_r15", -1);
            }
            else {
               slss_TxDisabled_r15 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (asyncParameters_r13 != null) asyncParameters_r13.print (_sb, "asyncParameters_r13", _level+1);
      if (txParameters_r13 != null) txParameters_r13.print (_sb, "txParameters_r13", _level+1);
      if (rxParameters_r13 != null) rxParameters_r13.print (_sb, "rxParameters_r13", _level+1);
      if (syncOffsetIndicator_v1430 != null) syncOffsetIndicator_v1430.print (_sb, "syncOffsetIndicator_v1430", _level+1);
      if (gnss_Sync_r14 != null) gnss_Sync_r14.print (_sb, "gnss_Sync_r14", _level+1);
      if (syncOffsetIndicator2_r14 != null) syncOffsetIndicator2_r14.print (_sb, "syncOffsetIndicator2_r14", _level+1);
      if (syncOffsetIndicator3_r14 != null) syncOffsetIndicator3_r14.print (_sb, "syncOffsetIndicator3_r14", _level+1);
      if (slss_TxDisabled_r15 != null) slss_TxDisabled_r15.print (_sb, "slss_TxDisabled_r15", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
