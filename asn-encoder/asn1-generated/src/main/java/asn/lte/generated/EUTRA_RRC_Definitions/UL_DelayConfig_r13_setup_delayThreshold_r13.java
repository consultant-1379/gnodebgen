/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class UL_DelayConfig_r13_setup_delayThreshold_r13 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _MS30 = 0;
   public static final int _MS40 = 1;
   public static final int _MS50 = 2;
   public static final int _MS60 = 3;
   public static final int _MS70 = 4;
   public static final int _MS80 = 5;
   public static final int _MS90 = 6;
   public static final int _MS100 = 7;
   public static final int _MS150 = 8;
   public static final int _MS300 = 9;
   public static final int _MS500 = 10;
   public static final int _MS750 = 11;
   public static final int _SPARE4 = 12;
   public static final int _SPARE3 = 13;
   public static final int _SPARE2 = 14;
   public static final int _SPARE1 = 15;

   // Singleton instances of UL_DelayConfig_r13_setup_delayThreshold_r13
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms30 = new UL_DelayConfig_r13_setup_delayThreshold_r13(0);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms40 = new UL_DelayConfig_r13_setup_delayThreshold_r13(1);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms50 = new UL_DelayConfig_r13_setup_delayThreshold_r13(2);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms60 = new UL_DelayConfig_r13_setup_delayThreshold_r13(3);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms70 = new UL_DelayConfig_r13_setup_delayThreshold_r13(4);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms80 = new UL_DelayConfig_r13_setup_delayThreshold_r13(5);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms90 = new UL_DelayConfig_r13_setup_delayThreshold_r13(6);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms100 = new UL_DelayConfig_r13_setup_delayThreshold_r13(7);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms150 = new UL_DelayConfig_r13_setup_delayThreshold_r13(8);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms300 = new UL_DelayConfig_r13_setup_delayThreshold_r13(9);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms500 = new UL_DelayConfig_r13_setup_delayThreshold_r13(10);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _ms750 = new UL_DelayConfig_r13_setup_delayThreshold_r13(11);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _spare4 = new UL_DelayConfig_r13_setup_delayThreshold_r13(12);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _spare3 = new UL_DelayConfig_r13_setup_delayThreshold_r13(13);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _spare2 = new UL_DelayConfig_r13_setup_delayThreshold_r13(14);
   protected static final UL_DelayConfig_r13_setup_delayThreshold_r13 _spare1 = new UL_DelayConfig_r13_setup_delayThreshold_r13(15);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    *   9
    *   10
    *   11
    *   12
    *   13
    *   14
    *   15
    */
   protected UL_DelayConfig_r13_setup_delayThreshold_r13 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for ms30.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms30() {
      return _ms30;
   }

   /**
    * Singleton accessor method for ms40.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms40() {
      return _ms40;
   }

   /**
    * Singleton accessor method for ms50.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms50() {
      return _ms50;
   }

   /**
    * Singleton accessor method for ms60.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms60() {
      return _ms60;
   }

   /**
    * Singleton accessor method for ms70.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms70() {
      return _ms70;
   }

   /**
    * Singleton accessor method for ms80.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms80() {
      return _ms80;
   }

   /**
    * Singleton accessor method for ms90.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms90() {
      return _ms90;
   }

   /**
    * Singleton accessor method for ms100.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms100() {
      return _ms100;
   }

   /**
    * Singleton accessor method for ms150.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms150() {
      return _ms150;
   }

   /**
    * Singleton accessor method for ms300.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms300() {
      return _ms300;
   }

   /**
    * Singleton accessor method for ms500.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms500() {
      return _ms500;
   }

   /**
    * Singleton accessor method for ms750.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 ms750() {
      return _ms750;
   }

   /**
    * Singleton accessor method for spare4.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 spare4() {
      return _spare4;
   }

   /**
    * Singleton accessor method for spare3.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 spare3() {
      return _spare3;
   }

   /**
    * Singleton accessor method for spare2.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 spare2() {
      return _spare2;
   }

   /**
    * Singleton accessor method for spare1.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 spare1() {
      return _spare1;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return UL_DelayConfig_r13_setup_delayThreshold_r13.valueOf( UL_DelayConfig_r13_setup_delayThreshold_r13.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static UL_DelayConfig_r13_setup_delayThreshold_r13 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return ms30();
         case 1: return ms40();
         case 2: return ms50();
         case 3: return ms60();
         case 4: return ms70();
         case 5: return ms80();
         case 6: return ms90();
         case 7: return ms100();
         case 8: return ms150();
         case 9: return ms300();
         case 10: return ms500();
         case 11: return ms750();
         case 12: return spare4();
         case 13: return spare3();
         case 14: return spare2();
         case 15: return spare1();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (16);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         case 9: ret =  9; break;
         case 10: ret =  10; break;
         case 11: ret =  11; break;
         case 12: ret =  12; break;
         case 13: ret =  13; break;
         case 14: ret =  14; break;
         case 15: ret =  15; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (UL_DelayConfig_r13_setup_delayThreshold_r13.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("ms30");
         case 1: return ("ms40");
         case 2: return ("ms50");
         case 3: return ("ms60");
         case 4: return ("ms70");
         case 5: return ("ms80");
         case 6: return ("ms90");
         case 7: return ("ms100");
         case 8: return ("ms150");
         case 9: return ("ms300");
         case 10: return ("ms500");
         case 11: return ("ms750");
         case 12: return ("spare4");
         case 13: return ("spare3");
         case 14: return ("spare2");
         case 15: return ("spare1");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
