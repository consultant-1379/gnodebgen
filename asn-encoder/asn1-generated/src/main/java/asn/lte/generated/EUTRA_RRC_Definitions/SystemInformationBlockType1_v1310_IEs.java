/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformationBlockType1_v1310_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SystemInformationBlockType1-v1310-IEs";
   }

   public Asn1BitString hyperSFN_r13;  // optional
   public SystemInformationBlockType1_v1310_IEs_eDRX_Allowed_r13 eDRX_Allowed_r13 = null;  // optional
   public CellSelectionInfoCE_r13 cellSelectionInfoCE_r13;  // optional
   public SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13 bandwidthReducedAccessRelatedInfo_r13;  // optional
   public SystemInformationBlockType1_v1320_IEs nonCriticalExtension;  // optional

   public SystemInformationBlockType1_v1310_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SystemInformationBlockType1_v1310_IEs (
      Asn1BitString hyperSFN_r13_,
      SystemInformationBlockType1_v1310_IEs_eDRX_Allowed_r13 eDRX_Allowed_r13_,
      CellSelectionInfoCE_r13 cellSelectionInfoCE_r13_,
      SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13 bandwidthReducedAccessRelatedInfo_r13_,
      SystemInformationBlockType1_v1320_IEs nonCriticalExtension_
   ) {
      super();
      hyperSFN_r13 = hyperSFN_r13_;
      eDRX_Allowed_r13 = eDRX_Allowed_r13_;
      cellSelectionInfoCE_r13 = cellSelectionInfoCE_r13_;
      bandwidthReducedAccessRelatedInfo_r13 = bandwidthReducedAccessRelatedInfo_r13_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      hyperSFN_r13 = null;
      eDRX_Allowed_r13 = null;
      cellSelectionInfoCE_r13 = null;
      bandwidthReducedAccessRelatedInfo_r13 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return hyperSFN_r13;
         case 1: return eDRX_Allowed_r13;
         case 2: return cellSelectionInfoCE_r13;
         case 3: return bandwidthReducedAccessRelatedInfo_r13;
         case 4: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "hyperSFN-r13";
         case 1: return "eDRX-Allowed-r13";
         case 2: return "cellSelectionInfoCE-r13";
         case 3: return "bandwidthReducedAccessRelatedInfo-r13";
         case 4: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean hyperSFN_r13Present = buffer.decodeBit ("hyperSFN_r13Present");
      boolean eDRX_Allowed_r13Present = buffer.decodeBit ("eDRX_Allowed_r13Present");
      boolean cellSelectionInfoCE_r13Present = buffer.decodeBit ("cellSelectionInfoCE_r13Present");
      boolean bandwidthReducedAccessRelatedInfo_r13Present = buffer.decodeBit ("bandwidthReducedAccessRelatedInfo_r13Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode hyperSFN_r13

      if (hyperSFN_r13Present) {
         buffer.getContext().eventDispatcher.startElement("hyperSFN_r13", -1);

         hyperSFN_r13 = new Asn1BitString();
         hyperSFN_r13.decode (buffer, 10, 10);

         buffer.invokeCharacters(hyperSFN_r13.toString());
         buffer.getContext().eventDispatcher.endElement("hyperSFN_r13", -1);
      }
      else {
         hyperSFN_r13 = null;
      }

      // decode eDRX_Allowed_r13

      if (eDRX_Allowed_r13Present) {
         buffer.getContext().eventDispatcher.startElement("eDRX_Allowed_r13", -1);

         int tval = SystemInformationBlockType1_v1310_IEs_eDRX_Allowed_r13.decodeEnumValue (buffer);
         eDRX_Allowed_r13 = SystemInformationBlockType1_v1310_IEs_eDRX_Allowed_r13.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("eDRX_Allowed_r13", -1);
      }
      else {
         eDRX_Allowed_r13 = null;
      }

      // decode cellSelectionInfoCE_r13

      if (cellSelectionInfoCE_r13Present) {
         buffer.getContext().eventDispatcher.startElement("cellSelectionInfoCE_r13", -1);

         cellSelectionInfoCE_r13 = new CellSelectionInfoCE_r13();
         cellSelectionInfoCE_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cellSelectionInfoCE_r13", -1);
      }
      else {
         cellSelectionInfoCE_r13 = null;
      }

      // decode bandwidthReducedAccessRelatedInfo_r13

      if (bandwidthReducedAccessRelatedInfo_r13Present) {
         buffer.getContext().eventDispatcher.startElement("bandwidthReducedAccessRelatedInfo_r13", -1);

         bandwidthReducedAccessRelatedInfo_r13 = new SystemInformationBlockType1_v1310_IEs_bandwidthReducedAccessRelatedInfo_r13();
         bandwidthReducedAccessRelatedInfo_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("bandwidthReducedAccessRelatedInfo_r13", -1);
      }
      else {
         bandwidthReducedAccessRelatedInfo_r13 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new SystemInformationBlockType1_v1320_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (hyperSFN_r13 != null) hyperSFN_r13.print (_sb, "hyperSFN_r13", _level+1);
      if (eDRX_Allowed_r13 != null) eDRX_Allowed_r13.print (_sb, "eDRX_Allowed_r13", _level+1);
      if (cellSelectionInfoCE_r13 != null) cellSelectionInfoCE_r13.print (_sb, "cellSelectionInfoCE_r13", _level+1);
      if (bandwidthReducedAccessRelatedInfo_r13 != null) bandwidthReducedAccessRelatedInfo_r13.print (_sb, "bandwidthReducedAccessRelatedInfo_r13", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
