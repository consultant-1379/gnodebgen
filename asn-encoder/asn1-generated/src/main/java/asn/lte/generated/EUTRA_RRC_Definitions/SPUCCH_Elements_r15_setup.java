/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SPUCCH_Elements_r15_setup extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public SPUCCH_Elements_r15_setup_n1SubslotSPUCCH_AN_List_r15 n1SubslotSPUCCH_AN_List_r15;  // optional
   public Asn1Integer n1SlotSPUCCH_FH_AN_List_r15;  // optional
   public Asn1Integer n1SlotSPUCCH_NoFH_AN_List_r15;  // optional
   public Asn1Integer n3SPUCCH_AN_List_r15;  // optional
   public SPUCCH_Elements_r15_setup_n4SPUCCHSlot_Resource_r15 n4SPUCCHSlot_Resource_r15;  // optional
   public SPUCCH_Elements_r15_setup_n4SPUCCHSubslot_Resource_r15 n4SPUCCHSubslot_Resource_r15;  // optional
   public Asn1Integer n4maxCoderateSlotPUCCH_r15;  // optional
   public Asn1Integer n4maxCoderateSubslotPUCCH_r15;  // optional
   public Asn1Integer n4maxCoderateMultiResourceSlotPUCCH_r15;  // optional
   public Asn1Integer n4maxCoderateMultiResourceSubslotPUCCH_r15;  // optional

   public SPUCCH_Elements_r15_setup () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SPUCCH_Elements_r15_setup (
      SPUCCH_Elements_r15_setup_n1SubslotSPUCCH_AN_List_r15 n1SubslotSPUCCH_AN_List_r15_,
      Asn1Integer n1SlotSPUCCH_FH_AN_List_r15_,
      Asn1Integer n1SlotSPUCCH_NoFH_AN_List_r15_,
      Asn1Integer n3SPUCCH_AN_List_r15_,
      SPUCCH_Elements_r15_setup_n4SPUCCHSlot_Resource_r15 n4SPUCCHSlot_Resource_r15_,
      SPUCCH_Elements_r15_setup_n4SPUCCHSubslot_Resource_r15 n4SPUCCHSubslot_Resource_r15_,
      Asn1Integer n4maxCoderateSlotPUCCH_r15_,
      Asn1Integer n4maxCoderateSubslotPUCCH_r15_,
      Asn1Integer n4maxCoderateMultiResourceSlotPUCCH_r15_,
      Asn1Integer n4maxCoderateMultiResourceSubslotPUCCH_r15_
   ) {
      super();
      n1SubslotSPUCCH_AN_List_r15 = n1SubslotSPUCCH_AN_List_r15_;
      n1SlotSPUCCH_FH_AN_List_r15 = n1SlotSPUCCH_FH_AN_List_r15_;
      n1SlotSPUCCH_NoFH_AN_List_r15 = n1SlotSPUCCH_NoFH_AN_List_r15_;
      n3SPUCCH_AN_List_r15 = n3SPUCCH_AN_List_r15_;
      n4SPUCCHSlot_Resource_r15 = n4SPUCCHSlot_Resource_r15_;
      n4SPUCCHSubslot_Resource_r15 = n4SPUCCHSubslot_Resource_r15_;
      n4maxCoderateSlotPUCCH_r15 = n4maxCoderateSlotPUCCH_r15_;
      n4maxCoderateSubslotPUCCH_r15 = n4maxCoderateSubslotPUCCH_r15_;
      n4maxCoderateMultiResourceSlotPUCCH_r15 = n4maxCoderateMultiResourceSlotPUCCH_r15_;
      n4maxCoderateMultiResourceSubslotPUCCH_r15 = n4maxCoderateMultiResourceSubslotPUCCH_r15_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SPUCCH_Elements_r15_setup (SPUCCH_Elements_r15_setup_n1SubslotSPUCCH_AN_List_r15 n1SubslotSPUCCH_AN_List_r15_,
      long n1SlotSPUCCH_FH_AN_List_r15_,
      long n1SlotSPUCCH_NoFH_AN_List_r15_,
      long n3SPUCCH_AN_List_r15_,
      SPUCCH_Elements_r15_setup_n4SPUCCHSlot_Resource_r15 n4SPUCCHSlot_Resource_r15_,
      SPUCCH_Elements_r15_setup_n4SPUCCHSubslot_Resource_r15 n4SPUCCHSubslot_Resource_r15_,
      long n4maxCoderateSlotPUCCH_r15_,
      long n4maxCoderateSubslotPUCCH_r15_,
      long n4maxCoderateMultiResourceSlotPUCCH_r15_,
      long n4maxCoderateMultiResourceSubslotPUCCH_r15_
   ) {
      super();
      n1SubslotSPUCCH_AN_List_r15 = n1SubslotSPUCCH_AN_List_r15_;
      n1SlotSPUCCH_FH_AN_List_r15 = new Asn1Integer (n1SlotSPUCCH_FH_AN_List_r15_);
      n1SlotSPUCCH_NoFH_AN_List_r15 = new Asn1Integer (n1SlotSPUCCH_NoFH_AN_List_r15_);
      n3SPUCCH_AN_List_r15 = new Asn1Integer (n3SPUCCH_AN_List_r15_);
      n4SPUCCHSlot_Resource_r15 = n4SPUCCHSlot_Resource_r15_;
      n4SPUCCHSubslot_Resource_r15 = n4SPUCCHSubslot_Resource_r15_;
      n4maxCoderateSlotPUCCH_r15 = new Asn1Integer (n4maxCoderateSlotPUCCH_r15_);
      n4maxCoderateSubslotPUCCH_r15 = new Asn1Integer (n4maxCoderateSubslotPUCCH_r15_);
      n4maxCoderateMultiResourceSlotPUCCH_r15 = new Asn1Integer (n4maxCoderateMultiResourceSlotPUCCH_r15_);
      n4maxCoderateMultiResourceSubslotPUCCH_r15 = new Asn1Integer (n4maxCoderateMultiResourceSubslotPUCCH_r15_);
   }

   public void init () {
      n1SubslotSPUCCH_AN_List_r15 = null;
      n1SlotSPUCCH_FH_AN_List_r15 = null;
      n1SlotSPUCCH_NoFH_AN_List_r15 = null;
      n3SPUCCH_AN_List_r15 = null;
      n4SPUCCHSlot_Resource_r15 = null;
      n4SPUCCHSubslot_Resource_r15 = null;
      n4maxCoderateSlotPUCCH_r15 = null;
      n4maxCoderateSubslotPUCCH_r15 = null;
      n4maxCoderateMultiResourceSlotPUCCH_r15 = null;
      n4maxCoderateMultiResourceSubslotPUCCH_r15 = null;
   }

   public int getElementCount() { return 10; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return n1SubslotSPUCCH_AN_List_r15;
         case 1: return n1SlotSPUCCH_FH_AN_List_r15;
         case 2: return n1SlotSPUCCH_NoFH_AN_List_r15;
         case 3: return n3SPUCCH_AN_List_r15;
         case 4: return n4SPUCCHSlot_Resource_r15;
         case 5: return n4SPUCCHSubslot_Resource_r15;
         case 6: return n4maxCoderateSlotPUCCH_r15;
         case 7: return n4maxCoderateSubslotPUCCH_r15;
         case 8: return n4maxCoderateMultiResourceSlotPUCCH_r15;
         case 9: return n4maxCoderateMultiResourceSubslotPUCCH_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "n1SubslotSPUCCH-AN-List-r15";
         case 1: return "n1SlotSPUCCH-FH-AN-List-r15";
         case 2: return "n1SlotSPUCCH-NoFH-AN-List-r15";
         case 3: return "n3SPUCCH-AN-List-r15";
         case 4: return "n4SPUCCHSlot-Resource-r15";
         case 5: return "n4SPUCCHSubslot-Resource-r15";
         case 6: return "n4maxCoderateSlotPUCCH-r15";
         case 7: return "n4maxCoderateSubslotPUCCH-r15";
         case 8: return "n4maxCoderateMultiResourceSlotPUCCH-r15";
         case 9: return "n4maxCoderateMultiResourceSubslotPUCCH-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean n1SubslotSPUCCH_AN_List_r15Present = buffer.decodeBit ("n1SubslotSPUCCH_AN_List_r15Present");
      boolean n1SlotSPUCCH_FH_AN_List_r15Present = buffer.decodeBit ("n1SlotSPUCCH_FH_AN_List_r15Present");
      boolean n1SlotSPUCCH_NoFH_AN_List_r15Present = buffer.decodeBit ("n1SlotSPUCCH_NoFH_AN_List_r15Present");
      boolean n3SPUCCH_AN_List_r15Present = buffer.decodeBit ("n3SPUCCH_AN_List_r15Present");
      boolean n4SPUCCHSlot_Resource_r15Present = buffer.decodeBit ("n4SPUCCHSlot_Resource_r15Present");
      boolean n4SPUCCHSubslot_Resource_r15Present = buffer.decodeBit ("n4SPUCCHSubslot_Resource_r15Present");
      boolean n4maxCoderateSlotPUCCH_r15Present = buffer.decodeBit ("n4maxCoderateSlotPUCCH_r15Present");
      boolean n4maxCoderateSubslotPUCCH_r15Present = buffer.decodeBit ("n4maxCoderateSubslotPUCCH_r15Present");
      boolean n4maxCoderateMultiResourceSlotPUCCH_r15Present = buffer.decodeBit ("n4maxCoderateMultiResourceSlotPUCCH_r15Present");
      boolean n4maxCoderateMultiResourceSubslotPUCCH_r15Present = buffer.decodeBit ("n4maxCoderateMultiResourceSubslotPUCCH_r15Present");

      // decode n1SubslotSPUCCH_AN_List_r15

      if (n1SubslotSPUCCH_AN_List_r15Present) {
         buffer.getContext().eventDispatcher.startElement("n1SubslotSPUCCH_AN_List_r15", -1);

         n1SubslotSPUCCH_AN_List_r15 = new SPUCCH_Elements_r15_setup_n1SubslotSPUCCH_AN_List_r15();
         n1SubslotSPUCCH_AN_List_r15.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("n1SubslotSPUCCH_AN_List_r15", -1);
      }
      else {
         n1SubslotSPUCCH_AN_List_r15 = null;
      }

      // decode n1SlotSPUCCH_FH_AN_List_r15

      if (n1SlotSPUCCH_FH_AN_List_r15Present) {
         buffer.getContext().eventDispatcher.startElement("n1SlotSPUCCH_FH_AN_List_r15", -1);

         n1SlotSPUCCH_FH_AN_List_r15 = new Asn1Integer();
         n1SlotSPUCCH_FH_AN_List_r15.decode (buffer, 0, 1319);

         buffer.invokeCharacters(n1SlotSPUCCH_FH_AN_List_r15.toString());
         buffer.getContext().eventDispatcher.endElement("n1SlotSPUCCH_FH_AN_List_r15", -1);
      }
      else {
         n1SlotSPUCCH_FH_AN_List_r15 = null;
      }

      // decode n1SlotSPUCCH_NoFH_AN_List_r15

      if (n1SlotSPUCCH_NoFH_AN_List_r15Present) {
         buffer.getContext().eventDispatcher.startElement("n1SlotSPUCCH_NoFH_AN_List_r15", -1);

         n1SlotSPUCCH_NoFH_AN_List_r15 = new Asn1Integer();
         n1SlotSPUCCH_NoFH_AN_List_r15.decode (buffer, 0, 3959);

         buffer.invokeCharacters(n1SlotSPUCCH_NoFH_AN_List_r15.toString());
         buffer.getContext().eventDispatcher.endElement("n1SlotSPUCCH_NoFH_AN_List_r15", -1);
      }
      else {
         n1SlotSPUCCH_NoFH_AN_List_r15 = null;
      }

      // decode n3SPUCCH_AN_List_r15

      if (n3SPUCCH_AN_List_r15Present) {
         buffer.getContext().eventDispatcher.startElement("n3SPUCCH_AN_List_r15", -1);

         n3SPUCCH_AN_List_r15 = new Asn1Integer();
         n3SPUCCH_AN_List_r15.decode (buffer, 0, 549);

         buffer.invokeCharacters(n3SPUCCH_AN_List_r15.toString());
         buffer.getContext().eventDispatcher.endElement("n3SPUCCH_AN_List_r15", -1);
      }
      else {
         n3SPUCCH_AN_List_r15 = null;
      }

      // decode n4SPUCCHSlot_Resource_r15

      if (n4SPUCCHSlot_Resource_r15Present) {
         buffer.getContext().eventDispatcher.startElement("n4SPUCCHSlot_Resource_r15", -1);

         n4SPUCCHSlot_Resource_r15 = new SPUCCH_Elements_r15_setup_n4SPUCCHSlot_Resource_r15();
         n4SPUCCHSlot_Resource_r15.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("n4SPUCCHSlot_Resource_r15", -1);
      }
      else {
         n4SPUCCHSlot_Resource_r15 = null;
      }

      // decode n4SPUCCHSubslot_Resource_r15

      if (n4SPUCCHSubslot_Resource_r15Present) {
         buffer.getContext().eventDispatcher.startElement("n4SPUCCHSubslot_Resource_r15", -1);

         n4SPUCCHSubslot_Resource_r15 = new SPUCCH_Elements_r15_setup_n4SPUCCHSubslot_Resource_r15();
         n4SPUCCHSubslot_Resource_r15.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("n4SPUCCHSubslot_Resource_r15", -1);
      }
      else {
         n4SPUCCHSubslot_Resource_r15 = null;
      }

      // decode n4maxCoderateSlotPUCCH_r15

      if (n4maxCoderateSlotPUCCH_r15Present) {
         buffer.getContext().eventDispatcher.startElement("n4maxCoderateSlotPUCCH_r15", -1);

         n4maxCoderateSlotPUCCH_r15 = new Asn1Integer();
         n4maxCoderateSlotPUCCH_r15.decode (buffer, 0, 7);

         buffer.invokeCharacters(n4maxCoderateSlotPUCCH_r15.toString());
         buffer.getContext().eventDispatcher.endElement("n4maxCoderateSlotPUCCH_r15", -1);
      }
      else {
         n4maxCoderateSlotPUCCH_r15 = null;
      }

      // decode n4maxCoderateSubslotPUCCH_r15

      if (n4maxCoderateSubslotPUCCH_r15Present) {
         buffer.getContext().eventDispatcher.startElement("n4maxCoderateSubslotPUCCH_r15", -1);

         n4maxCoderateSubslotPUCCH_r15 = new Asn1Integer();
         n4maxCoderateSubslotPUCCH_r15.decode (buffer, 0, 7);

         buffer.invokeCharacters(n4maxCoderateSubslotPUCCH_r15.toString());
         buffer.getContext().eventDispatcher.endElement("n4maxCoderateSubslotPUCCH_r15", -1);
      }
      else {
         n4maxCoderateSubslotPUCCH_r15 = null;
      }

      // decode n4maxCoderateMultiResourceSlotPUCCH_r15

      if (n4maxCoderateMultiResourceSlotPUCCH_r15Present) {
         buffer.getContext().eventDispatcher.startElement("n4maxCoderateMultiResourceSlotPUCCH_r15", -1);

         n4maxCoderateMultiResourceSlotPUCCH_r15 = new Asn1Integer();
         n4maxCoderateMultiResourceSlotPUCCH_r15.decode (buffer, 0, 7);

         buffer.invokeCharacters(n4maxCoderateMultiResourceSlotPUCCH_r15.toString());
         buffer.getContext().eventDispatcher.endElement("n4maxCoderateMultiResourceSlotPUCCH_r15", -1);
      }
      else {
         n4maxCoderateMultiResourceSlotPUCCH_r15 = null;
      }

      // decode n4maxCoderateMultiResourceSubslotPUCCH_r15

      if (n4maxCoderateMultiResourceSubslotPUCCH_r15Present) {
         buffer.getContext().eventDispatcher.startElement("n4maxCoderateMultiResourceSubslotPUCCH_r15", -1);

         n4maxCoderateMultiResourceSubslotPUCCH_r15 = new Asn1Integer();
         n4maxCoderateMultiResourceSubslotPUCCH_r15.decode (buffer, 0, 7);

         buffer.invokeCharacters(n4maxCoderateMultiResourceSubslotPUCCH_r15.toString());
         buffer.getContext().eventDispatcher.endElement("n4maxCoderateMultiResourceSubslotPUCCH_r15", -1);
      }
      else {
         n4maxCoderateMultiResourceSubslotPUCCH_r15 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (n1SubslotSPUCCH_AN_List_r15 != null) n1SubslotSPUCCH_AN_List_r15.print (_sb, "n1SubslotSPUCCH_AN_List_r15", _level+1);
      if (n1SlotSPUCCH_FH_AN_List_r15 != null) n1SlotSPUCCH_FH_AN_List_r15.print (_sb, "n1SlotSPUCCH_FH_AN_List_r15", _level+1);
      if (n1SlotSPUCCH_NoFH_AN_List_r15 != null) n1SlotSPUCCH_NoFH_AN_List_r15.print (_sb, "n1SlotSPUCCH_NoFH_AN_List_r15", _level+1);
      if (n3SPUCCH_AN_List_r15 != null) n3SPUCCH_AN_List_r15.print (_sb, "n3SPUCCH_AN_List_r15", _level+1);
      if (n4SPUCCHSlot_Resource_r15 != null) n4SPUCCHSlot_Resource_r15.print (_sb, "n4SPUCCHSlot_Resource_r15", _level+1);
      if (n4SPUCCHSubslot_Resource_r15 != null) n4SPUCCHSubslot_Resource_r15.print (_sb, "n4SPUCCHSubslot_Resource_r15", _level+1);
      if (n4maxCoderateSlotPUCCH_r15 != null) n4maxCoderateSlotPUCCH_r15.print (_sb, "n4maxCoderateSlotPUCCH_r15", _level+1);
      if (n4maxCoderateSubslotPUCCH_r15 != null) n4maxCoderateSubslotPUCCH_r15.print (_sb, "n4maxCoderateSubslotPUCCH_r15", _level+1);
      if (n4maxCoderateMultiResourceSlotPUCCH_r15 != null) n4maxCoderateMultiResourceSlotPUCCH_r15.print (_sb, "n4maxCoderateMultiResourceSlotPUCCH_r15", _level+1);
      if (n4maxCoderateMultiResourceSubslotPUCCH_r15 != null) n4maxCoderateMultiResourceSubslotPUCCH_r15.print (_sb, "n4maxCoderateMultiResourceSubslotPUCCH_r15", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
