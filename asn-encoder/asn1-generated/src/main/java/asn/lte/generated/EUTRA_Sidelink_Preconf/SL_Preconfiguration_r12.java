/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_Sidelink_Preconf;

import com.objsys.asn1j.runtime.*;

public class SL_Preconfiguration_r12 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_Sidelink_PreconfRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SL-Preconfiguration-r12";
   }

   public SL_PreconfigGeneral_r12 preconfigGeneral_r12;
   public SL_PreconfigSync_r12 preconfigSync_r12;
   public SL_PreconfigCommPoolList4_r12 preconfigComm_r12;
   public boolean mV2ExtPresent;
   public SL_Preconfiguration_r12_preconfigComm_v1310 preconfigComm_v1310;  // optional
   public SL_Preconfiguration_r12_preconfigDisc_r13 preconfigDisc_r13;  // optional
   public SL_PreconfigRelay_r13 preconfigRelay_r13;  // optional
   public Asn1OpenExt extElem1;

   public SL_Preconfiguration_r12 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_Preconfiguration_r12 (
      SL_PreconfigGeneral_r12 preconfigGeneral_r12_,
      SL_PreconfigSync_r12 preconfigSync_r12_,
      SL_PreconfigCommPoolList4_r12 preconfigComm_r12_,
      SL_Preconfiguration_r12_preconfigComm_v1310 preconfigComm_v1310_,
      SL_Preconfiguration_r12_preconfigDisc_r13 preconfigDisc_r13_,
      SL_PreconfigRelay_r13 preconfigRelay_r13_
   ) {
      super();
      preconfigGeneral_r12 = preconfigGeneral_r12_;
      preconfigSync_r12 = preconfigSync_r12_;
      preconfigComm_r12 = preconfigComm_r12_;
      preconfigComm_v1310 = preconfigComm_v1310_;
      preconfigDisc_r13 = preconfigDisc_r13_;
      preconfigRelay_r13 = preconfigRelay_r13_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SL_Preconfiguration_r12 (
      SL_PreconfigGeneral_r12 preconfigGeneral_r12_,
      SL_PreconfigSync_r12 preconfigSync_r12_,
      SL_PreconfigCommPoolList4_r12 preconfigComm_r12_
   ) {
      super();
      preconfigGeneral_r12 = preconfigGeneral_r12_;
      preconfigSync_r12 = preconfigSync_r12_;
      preconfigComm_r12 = preconfigComm_r12_;
   }

   public void init () {
      preconfigGeneral_r12 = null;
      preconfigSync_r12 = null;
      preconfigComm_r12 = null;
      preconfigComm_v1310 = null;
      preconfigDisc_r13 = null;
      preconfigRelay_r13 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return preconfigGeneral_r12;
         case 1: return preconfigSync_r12;
         case 2: return preconfigComm_r12;
         case 3: return preconfigComm_v1310;
         case 4: return preconfigDisc_r13;
         case 5: return preconfigRelay_r13;
         case 6: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "preconfigGeneral-r12";
         case 1: return "preconfigSync-r12";
         case 2: return "preconfigComm-r12";
         case 3: return "preconfigComm-v1310";
         case 4: return "preconfigDisc-r13";
         case 5: return "preconfigRelay-r13";
         case 6: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      // decode preconfigGeneral_r12

      buffer.getContext().eventDispatcher.startElement("preconfigGeneral_r12", -1);

      preconfigGeneral_r12 = new SL_PreconfigGeneral_r12();
      preconfigGeneral_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("preconfigGeneral_r12", -1);

      // decode preconfigSync_r12

      buffer.getContext().eventDispatcher.startElement("preconfigSync_r12", -1);

      preconfigSync_r12 = new SL_PreconfigSync_r12();
      preconfigSync_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("preconfigSync_r12", -1);

      // decode preconfigComm_r12

      buffer.getContext().eventDispatcher.startElement("preconfigComm_r12", -1);

      preconfigComm_r12 = new SL_PreconfigCommPoolList4_r12();
      preconfigComm_r12.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("preconfigComm_r12", -1);

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean preconfigComm_v1310Present = buffer.decodeBit ("preconfigComm_v1310Present");

            boolean preconfigDisc_r13Present = buffer.decodeBit ("preconfigDisc_r13Present");

            boolean preconfigRelay_r13Present = buffer.decodeBit ("preconfigRelay_r13Present");

            // decode preconfigComm_v1310

            if (preconfigComm_v1310Present) {
               buffer.getContext().eventDispatcher.startElement("preconfigComm_v1310", -1);

               preconfigComm_v1310 = new SL_Preconfiguration_r12_preconfigComm_v1310();
               preconfigComm_v1310.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("preconfigComm_v1310", -1);
            }
            else {
               preconfigComm_v1310 = null;
            }

            // decode preconfigDisc_r13

            if (preconfigDisc_r13Present) {
               buffer.getContext().eventDispatcher.startElement("preconfigDisc_r13", -1);

               preconfigDisc_r13 = new SL_Preconfiguration_r12_preconfigDisc_r13();
               preconfigDisc_r13.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("preconfigDisc_r13", -1);
            }
            else {
               preconfigDisc_r13 = null;
            }

            // decode preconfigRelay_r13

            if (preconfigRelay_r13Present) {
               buffer.getContext().eventDispatcher.startElement("preconfigRelay_r13", -1);

               preconfigRelay_r13 = new SL_PreconfigRelay_r13();
               preconfigRelay_r13.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("preconfigRelay_r13", -1);
            }
            else {
               preconfigRelay_r13 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (preconfigGeneral_r12 != null) preconfigGeneral_r12.print (_sb, "preconfigGeneral_r12", _level+1);
      if (preconfigSync_r12 != null) preconfigSync_r12.print (_sb, "preconfigSync_r12", _level+1);
      if (preconfigComm_r12 != null) preconfigComm_r12.print (_sb, "preconfigComm_r12", _level+1);
      if (preconfigComm_v1310 != null) preconfigComm_v1310.print (_sb, "preconfigComm_v1310", _level+1);
      if (preconfigDisc_r13 != null) preconfigDisc_r13.print (_sb, "preconfigDisc_r13", _level+1);
      if (preconfigRelay_r13 != null) preconfigRelay_r13.print (_sb, "preconfigRelay_r13", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
