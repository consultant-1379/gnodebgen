/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_InterNodeDefinitions;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.SCellToAddModListExt_r13;
import asn.lte.generated.EUTRA_RRC_Definitions.RCLWI_Configuration_r13;

public class AS_Config_v1320 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_InterNodeDefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "AS-Config-v1320";
   }

   public SCellToAddModListExt_r13 sourceSCellConfigList_r13;  // optional
   public RCLWI_Configuration_r13 sourceRCLWI_Configuration_r13;  // optional

   public AS_Config_v1320 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public AS_Config_v1320 (
      SCellToAddModListExt_r13 sourceSCellConfigList_r13_,
      RCLWI_Configuration_r13 sourceRCLWI_Configuration_r13_
   ) {
      super();
      sourceSCellConfigList_r13 = sourceSCellConfigList_r13_;
      sourceRCLWI_Configuration_r13 = sourceRCLWI_Configuration_r13_;
   }

   public void init () {
      sourceSCellConfigList_r13 = null;
      sourceRCLWI_Configuration_r13 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return sourceSCellConfigList_r13;
         case 1: return sourceRCLWI_Configuration_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "sourceSCellConfigList-r13";
         case 1: return "sourceRCLWI-Configuration-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean sourceSCellConfigList_r13Present = buffer.decodeBit ("sourceSCellConfigList_r13Present");
      boolean sourceRCLWI_Configuration_r13Present = buffer.decodeBit ("sourceRCLWI_Configuration_r13Present");

      // decode sourceSCellConfigList_r13

      if (sourceSCellConfigList_r13Present) {
         buffer.getContext().eventDispatcher.startElement("sourceSCellConfigList_r13", -1);

         sourceSCellConfigList_r13 = new SCellToAddModListExt_r13();
         sourceSCellConfigList_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sourceSCellConfigList_r13", -1);
      }
      else {
         sourceSCellConfigList_r13 = null;
      }

      // decode sourceRCLWI_Configuration_r13

      if (sourceRCLWI_Configuration_r13Present) {
         buffer.getContext().eventDispatcher.startElement("sourceRCLWI_Configuration_r13", -1);

         sourceRCLWI_Configuration_r13 = new RCLWI_Configuration_r13();
         sourceRCLWI_Configuration_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sourceRCLWI_Configuration_r13", -1);
      }
      else {
         sourceRCLWI_Configuration_r13 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (sourceSCellConfigList_r13 != null) sourceSCellConfigList_r13.print (_sb, "sourceSCellConfigList_r13", _level+1);
      if (sourceRCLWI_Configuration_r13 != null) sourceRCLWI_Configuration_r13.print (_sb, "sourceRCLWI_Configuration_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
