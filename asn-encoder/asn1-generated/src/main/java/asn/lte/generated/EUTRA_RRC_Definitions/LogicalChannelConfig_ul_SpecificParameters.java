/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class LogicalChannelConfig_ul_SpecificParameters extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1Integer priority;
   public LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate prioritisedBitRate = null;
   public LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration bucketSizeDuration = null;
   public Asn1Integer logicalChannelGroup;  // optional

   public LogicalChannelConfig_ul_SpecificParameters () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public LogicalChannelConfig_ul_SpecificParameters (
      Asn1Integer priority_,
      LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate prioritisedBitRate_,
      LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration bucketSizeDuration_,
      Asn1Integer logicalChannelGroup_
   ) {
      super();
      priority = priority_;
      prioritisedBitRate = prioritisedBitRate_;
      bucketSizeDuration = bucketSizeDuration_;
      logicalChannelGroup = logicalChannelGroup_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public LogicalChannelConfig_ul_SpecificParameters (
      Asn1Integer priority_,
      LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate prioritisedBitRate_,
      LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration bucketSizeDuration_
   ) {
      super();
      priority = priority_;
      prioritisedBitRate = prioritisedBitRate_;
      bucketSizeDuration = bucketSizeDuration_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public LogicalChannelConfig_ul_SpecificParameters (long priority_,
      LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate prioritisedBitRate_,
      LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration bucketSizeDuration_,
      long logicalChannelGroup_
   ) {
      super();
      priority = new Asn1Integer (priority_);
      prioritisedBitRate = prioritisedBitRate_;
      bucketSizeDuration = bucketSizeDuration_;
      logicalChannelGroup = new Asn1Integer (logicalChannelGroup_);
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public LogicalChannelConfig_ul_SpecificParameters (
      long priority_,
      LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate prioritisedBitRate_,
      LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration bucketSizeDuration_
   ) {
      super();
      priority = new Asn1Integer (priority_);
      prioritisedBitRate = prioritisedBitRate_;
      bucketSizeDuration = bucketSizeDuration_;
   }

   public void init () {
      priority = null;
      prioritisedBitRate = null;
      bucketSizeDuration = null;
      logicalChannelGroup = null;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return priority;
         case 1: return prioritisedBitRate;
         case 2: return bucketSizeDuration;
         case 3: return logicalChannelGroup;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "priority";
         case 1: return "prioritisedBitRate";
         case 2: return "bucketSizeDuration";
         case 3: return "logicalChannelGroup";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean logicalChannelGroupPresent = buffer.decodeBit ("logicalChannelGroupPresent");

      // decode priority

      buffer.getContext().eventDispatcher.startElement("priority", -1);

      priority = new Asn1Integer();
      priority.decode (buffer, 1, 16);

      buffer.invokeCharacters(priority.toString());
      buffer.getContext().eventDispatcher.endElement("priority", -1);

      // decode prioritisedBitRate

      buffer.getContext().eventDispatcher.startElement("prioritisedBitRate", -1);

      {
         int tval = LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate.decodeEnumValue (buffer);
         prioritisedBitRate = LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("prioritisedBitRate", -1);

      // decode bucketSizeDuration

      buffer.getContext().eventDispatcher.startElement("bucketSizeDuration", -1);

      {
         int tval = LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration.decodeEnumValue (buffer);
         bucketSizeDuration = LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("bucketSizeDuration", -1);

      // decode logicalChannelGroup

      if (logicalChannelGroupPresent) {
         buffer.getContext().eventDispatcher.startElement("logicalChannelGroup", -1);

         logicalChannelGroup = new Asn1Integer();
         logicalChannelGroup.decode (buffer, 0, 3);

         buffer.invokeCharacters(logicalChannelGroup.toString());
         buffer.getContext().eventDispatcher.endElement("logicalChannelGroup", -1);
      }
      else {
         logicalChannelGroup = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (priority != null) priority.print (_sb, "priority", _level+1);
      if (prioritisedBitRate != null) prioritisedBitRate.print (_sb, "prioritisedBitRate", _level+1);
      if (bucketSizeDuration != null) bucketSizeDuration.print (_sb, "bucketSizeDuration", _level+1);
      if (logicalChannelGroup != null) logicalChannelGroup.print (_sb, "logicalChannelGroup", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
