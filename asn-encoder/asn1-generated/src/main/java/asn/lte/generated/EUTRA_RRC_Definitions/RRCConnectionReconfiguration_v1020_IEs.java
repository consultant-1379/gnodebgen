/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RRCConnectionReconfiguration_v1020_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RRCConnectionReconfiguration-v1020-IEs";
   }

   public SCellToReleaseList_r10 sCellToReleaseList_r10;  // optional
   public SCellToAddModList_r10 sCellToAddModList_r10;  // optional
   public RRCConnectionReconfiguration_v1130_IEs nonCriticalExtension;  // optional

   public RRCConnectionReconfiguration_v1020_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RRCConnectionReconfiguration_v1020_IEs (
      SCellToReleaseList_r10 sCellToReleaseList_r10_,
      SCellToAddModList_r10 sCellToAddModList_r10_,
      RRCConnectionReconfiguration_v1130_IEs nonCriticalExtension_
   ) {
      super();
      sCellToReleaseList_r10 = sCellToReleaseList_r10_;
      sCellToAddModList_r10 = sCellToAddModList_r10_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      sCellToReleaseList_r10 = null;
      sCellToAddModList_r10 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return sCellToReleaseList_r10;
         case 1: return sCellToAddModList_r10;
         case 2: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "sCellToReleaseList-r10";
         case 1: return "sCellToAddModList-r10";
         case 2: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean sCellToReleaseList_r10Present = buffer.decodeBit ("sCellToReleaseList_r10Present");
      boolean sCellToAddModList_r10Present = buffer.decodeBit ("sCellToAddModList_r10Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode sCellToReleaseList_r10

      if (sCellToReleaseList_r10Present) {
         buffer.getContext().eventDispatcher.startElement("sCellToReleaseList_r10", -1);

         sCellToReleaseList_r10 = new SCellToReleaseList_r10();
         sCellToReleaseList_r10.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sCellToReleaseList_r10", -1);
      }
      else {
         sCellToReleaseList_r10 = null;
      }

      // decode sCellToAddModList_r10

      if (sCellToAddModList_r10Present) {
         buffer.getContext().eventDispatcher.startElement("sCellToAddModList_r10", -1);

         sCellToAddModList_r10 = new SCellToAddModList_r10();
         sCellToAddModList_r10.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("sCellToAddModList_r10", -1);
      }
      else {
         sCellToAddModList_r10 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new RRCConnectionReconfiguration_v1130_IEs();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (sCellToReleaseList_r10 != null) sCellToReleaseList_r10.print (_sb, "sCellToReleaseList_r10", _level+1);
      if (sCellToAddModList_r10 != null) sCellToAddModList_r10.print (_sb, "sCellToAddModList_r10", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
