/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class ACDC_BarringPerPLMN_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ACDC-BarringPerPLMN-r13";
   }

   public Asn1Integer plmn_IdentityIndex_r13;
   public Asn1Boolean acdc_OnlyForHPLMN_r13;
   public BarringPerACDC_CategoryList_r13 barringPerACDC_CategoryList_r13;

   public ACDC_BarringPerPLMN_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public ACDC_BarringPerPLMN_r13 (
      Asn1Integer plmn_IdentityIndex_r13_,
      Asn1Boolean acdc_OnlyForHPLMN_r13_,
      BarringPerACDC_CategoryList_r13 barringPerACDC_CategoryList_r13_
   ) {
      super();
      plmn_IdentityIndex_r13 = plmn_IdentityIndex_r13_;
      acdc_OnlyForHPLMN_r13 = acdc_OnlyForHPLMN_r13_;
      barringPerACDC_CategoryList_r13 = barringPerACDC_CategoryList_r13_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public ACDC_BarringPerPLMN_r13 (long plmn_IdentityIndex_r13_,
      boolean acdc_OnlyForHPLMN_r13_,
      BarringPerACDC_CategoryList_r13 barringPerACDC_CategoryList_r13_
   ) {
      super();
      plmn_IdentityIndex_r13 = new Asn1Integer (plmn_IdentityIndex_r13_);
      acdc_OnlyForHPLMN_r13 = new Asn1Boolean (acdc_OnlyForHPLMN_r13_);
      barringPerACDC_CategoryList_r13 = barringPerACDC_CategoryList_r13_;
   }

   public void init () {
      plmn_IdentityIndex_r13 = null;
      acdc_OnlyForHPLMN_r13 = null;
      barringPerACDC_CategoryList_r13 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return plmn_IdentityIndex_r13;
         case 1: return acdc_OnlyForHPLMN_r13;
         case 2: return barringPerACDC_CategoryList_r13;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "plmn-IdentityIndex-r13";
         case 1: return "acdc-OnlyForHPLMN-r13";
         case 2: return "barringPerACDC-CategoryList-r13";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode plmn_IdentityIndex_r13

      buffer.getContext().eventDispatcher.startElement("plmn_IdentityIndex_r13", -1);

      plmn_IdentityIndex_r13 = new Asn1Integer();
      plmn_IdentityIndex_r13.decode (buffer, 1, 6);

      buffer.invokeCharacters(plmn_IdentityIndex_r13.toString());
      buffer.getContext().eventDispatcher.endElement("plmn_IdentityIndex_r13", -1);

      // decode acdc_OnlyForHPLMN_r13

      buffer.getContext().eventDispatcher.startElement("acdc_OnlyForHPLMN_r13", -1);

      acdc_OnlyForHPLMN_r13 = new Asn1Boolean();
      acdc_OnlyForHPLMN_r13.decode (buffer);

      buffer.invokeCharacters(acdc_OnlyForHPLMN_r13.toString());
      buffer.getContext().eventDispatcher.endElement("acdc_OnlyForHPLMN_r13", -1);

      // decode barringPerACDC_CategoryList_r13

      buffer.getContext().eventDispatcher.startElement("barringPerACDC_CategoryList_r13", -1);

      barringPerACDC_CategoryList_r13 = new BarringPerACDC_CategoryList_r13();
      barringPerACDC_CategoryList_r13.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("barringPerACDC_CategoryList_r13", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (plmn_IdentityIndex_r13 != null) plmn_IdentityIndex_r13.print (_sb, "plmn_IdentityIndex_r13", _level+1);
      if (acdc_OnlyForHPLMN_r13 != null) acdc_OnlyForHPLMN_r13.print (_sb, "acdc_OnlyForHPLMN_r13", _level+1);
      if (barringPerACDC_CategoryList_r13 != null) barringPerACDC_CategoryList_r13.print (_sb, "barringPerACDC_CategoryList_r13", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
