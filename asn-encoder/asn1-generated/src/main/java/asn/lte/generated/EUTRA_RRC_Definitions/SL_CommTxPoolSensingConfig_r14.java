/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SL_CommTxPoolSensingConfig_r14 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SL-CommTxPoolSensingConfig-r14";
   }

   public SL_PSSCH_TxConfigList_r14 pssch_TxConfigList_r14;
   public SL_ThresPSSCH_RSRP_List_r14 thresPSSCH_RSRP_List_r14;
   public SL_RestrictResourceReservationPeriodList_r14 restrictResourceReservationPeriod_r14;  // optional
   public SL_CommTxPoolSensingConfig_r14_probResourceKeep_r14 probResourceKeep_r14 = null;
   public SL_CommTxPoolSensingConfig_r14_p2x_SensingConfig_r14 p2x_SensingConfig_r14;  // optional
   public SL_CommTxPoolSensingConfig_r14_sl_ReselectAfter_r14 sl_ReselectAfter_r14 = null;  // optional

   public SL_CommTxPoolSensingConfig_r14 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SL_CommTxPoolSensingConfig_r14 (
      SL_PSSCH_TxConfigList_r14 pssch_TxConfigList_r14_,
      SL_ThresPSSCH_RSRP_List_r14 thresPSSCH_RSRP_List_r14_,
      SL_RestrictResourceReservationPeriodList_r14 restrictResourceReservationPeriod_r14_,
      SL_CommTxPoolSensingConfig_r14_probResourceKeep_r14 probResourceKeep_r14_,
      SL_CommTxPoolSensingConfig_r14_p2x_SensingConfig_r14 p2x_SensingConfig_r14_,
      SL_CommTxPoolSensingConfig_r14_sl_ReselectAfter_r14 sl_ReselectAfter_r14_
   ) {
      super();
      pssch_TxConfigList_r14 = pssch_TxConfigList_r14_;
      thresPSSCH_RSRP_List_r14 = thresPSSCH_RSRP_List_r14_;
      restrictResourceReservationPeriod_r14 = restrictResourceReservationPeriod_r14_;
      probResourceKeep_r14 = probResourceKeep_r14_;
      p2x_SensingConfig_r14 = p2x_SensingConfig_r14_;
      sl_ReselectAfter_r14 = sl_ReselectAfter_r14_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public SL_CommTxPoolSensingConfig_r14 (
      SL_PSSCH_TxConfigList_r14 pssch_TxConfigList_r14_,
      SL_ThresPSSCH_RSRP_List_r14 thresPSSCH_RSRP_List_r14_,
      SL_CommTxPoolSensingConfig_r14_probResourceKeep_r14 probResourceKeep_r14_
   ) {
      super();
      pssch_TxConfigList_r14 = pssch_TxConfigList_r14_;
      thresPSSCH_RSRP_List_r14 = thresPSSCH_RSRP_List_r14_;
      probResourceKeep_r14 = probResourceKeep_r14_;
   }

   public void init () {
      pssch_TxConfigList_r14 = null;
      thresPSSCH_RSRP_List_r14 = null;
      restrictResourceReservationPeriod_r14 = null;
      probResourceKeep_r14 = null;
      p2x_SensingConfig_r14 = null;
      sl_ReselectAfter_r14 = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return pssch_TxConfigList_r14;
         case 1: return thresPSSCH_RSRP_List_r14;
         case 2: return restrictResourceReservationPeriod_r14;
         case 3: return probResourceKeep_r14;
         case 4: return p2x_SensingConfig_r14;
         case 5: return sl_ReselectAfter_r14;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "pssch-TxConfigList-r14";
         case 1: return "thresPSSCH-RSRP-List-r14";
         case 2: return "restrictResourceReservationPeriod-r14";
         case 3: return "probResourceKeep-r14";
         case 4: return "p2x-SensingConfig-r14";
         case 5: return "sl-ReselectAfter-r14";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean restrictResourceReservationPeriod_r14Present = buffer.decodeBit ("restrictResourceReservationPeriod_r14Present");
      boolean p2x_SensingConfig_r14Present = buffer.decodeBit ("p2x_SensingConfig_r14Present");
      boolean sl_ReselectAfter_r14Present = buffer.decodeBit ("sl_ReselectAfter_r14Present");

      // decode pssch_TxConfigList_r14

      buffer.getContext().eventDispatcher.startElement("pssch_TxConfigList_r14", -1);

      pssch_TxConfigList_r14 = new SL_PSSCH_TxConfigList_r14();
      pssch_TxConfigList_r14.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("pssch_TxConfigList_r14", -1);

      // decode thresPSSCH_RSRP_List_r14

      buffer.getContext().eventDispatcher.startElement("thresPSSCH_RSRP_List_r14", -1);

      thresPSSCH_RSRP_List_r14 = new SL_ThresPSSCH_RSRP_List_r14();
      thresPSSCH_RSRP_List_r14.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("thresPSSCH_RSRP_List_r14", -1);

      // decode restrictResourceReservationPeriod_r14

      if (restrictResourceReservationPeriod_r14Present) {
         buffer.getContext().eventDispatcher.startElement("restrictResourceReservationPeriod_r14", -1);

         restrictResourceReservationPeriod_r14 = new SL_RestrictResourceReservationPeriodList_r14();
         restrictResourceReservationPeriod_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("restrictResourceReservationPeriod_r14", -1);
      }
      else {
         restrictResourceReservationPeriod_r14 = null;
      }

      // decode probResourceKeep_r14

      buffer.getContext().eventDispatcher.startElement("probResourceKeep_r14", -1);

      {
         int tval = SL_CommTxPoolSensingConfig_r14_probResourceKeep_r14.decodeEnumValue (buffer);
         probResourceKeep_r14 = SL_CommTxPoolSensingConfig_r14_probResourceKeep_r14.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("probResourceKeep_r14", -1);

      // decode p2x_SensingConfig_r14

      if (p2x_SensingConfig_r14Present) {
         buffer.getContext().eventDispatcher.startElement("p2x_SensingConfig_r14", -1);

         p2x_SensingConfig_r14 = new SL_CommTxPoolSensingConfig_r14_p2x_SensingConfig_r14();
         p2x_SensingConfig_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("p2x_SensingConfig_r14", -1);
      }
      else {
         p2x_SensingConfig_r14 = null;
      }

      // decode sl_ReselectAfter_r14

      if (sl_ReselectAfter_r14Present) {
         buffer.getContext().eventDispatcher.startElement("sl_ReselectAfter_r14", -1);

         int tval = SL_CommTxPoolSensingConfig_r14_sl_ReselectAfter_r14.decodeEnumValue (buffer);
         sl_ReselectAfter_r14 = SL_CommTxPoolSensingConfig_r14_sl_ReselectAfter_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("sl_ReselectAfter_r14", -1);
      }
      else {
         sl_ReselectAfter_r14 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (pssch_TxConfigList_r14 != null) pssch_TxConfigList_r14.print (_sb, "pssch_TxConfigList_r14", _level+1);
      if (thresPSSCH_RSRP_List_r14 != null) thresPSSCH_RSRP_List_r14.print (_sb, "thresPSSCH_RSRP_List_r14", _level+1);
      if (restrictResourceReservationPeriod_r14 != null) restrictResourceReservationPeriod_r14.print (_sb, "restrictResourceReservationPeriod_r14", _level+1);
      if (probResourceKeep_r14 != null) probResourceKeep_r14.print (_sb, "probResourceKeep_r14", _level+1);
      if (p2x_SensingConfig_r14 != null) p2x_SensingConfig_r14.print (_sb, "p2x_SensingConfig_r14", _level+1);
      if (sl_ReselectAfter_r14 != null) sl_ReselectAfter_r14.print (_sb, "sl_ReselectAfter_r14", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
