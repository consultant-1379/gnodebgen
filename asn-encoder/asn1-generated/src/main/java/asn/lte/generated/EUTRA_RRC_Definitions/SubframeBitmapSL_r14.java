/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SubframeBitmapSL_r14 extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SubframeBitmapSL-r14";
   }

   // Choice element identifier constants
   public final static byte _BS10_R14 = 1;
   public final static byte _BS16_R14 = 2;
   public final static byte _BS20_R14 = 3;
   public final static byte _BS30_R14 = 4;
   public final static byte _BS40_R14 = 5;
   public final static byte _BS50_R14 = 6;
   public final static byte _BS60_R14 = 7;
   public final static byte _BS100_R14 = 8;

   public SubframeBitmapSL_r14 () {
      super();
   }

   public SubframeBitmapSL_r14 (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _BS10_R14: return "bs10_r14";
      case _BS16_R14: return "bs16_r14";
      case _BS20_R14: return "bs20_r14";
      case _BS30_R14: return "bs30_r14";
      case _BS40_R14: return "bs40_r14";
      case _BS50_R14: return "bs50_r14";
      case _BS60_R14: return "bs60_r14";
      case _BS100_R14: return "bs100_r14";
      default: return "UNDEFINED";
      }
   }

   public void set_bs10_r14 (Asn1BitString value) {
      setElement (_BS10_R14, value);
   }

   public void set_bs16_r14 (Asn1BitString value) {
      setElement (_BS16_R14, value);
   }

   public void set_bs20_r14 (Asn1BitString value) {
      setElement (_BS20_R14, value);
   }

   public void set_bs30_r14 (Asn1BitString value) {
      setElement (_BS30_R14, value);
   }

   public void set_bs40_r14 (Asn1BitString value) {
      setElement (_BS40_R14, value);
   }

   public void set_bs50_r14 (Asn1BitString value) {
      setElement (_BS50_R14, value);
   }

   public void set_bs60_r14 (Asn1BitString value) {
      setElement (_BS60_R14, value);
   }

   public void set_bs100_r14 (Asn1BitString value) {
      setElement (_BS100_R14, value);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (8, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // bs10_r14
         case 0: { 
            Asn1BitString bs10_r14;
            element = bs10_r14 = new Asn1BitString();
            bs10_r14.decode (buffer, 10, 10);

            buffer.invokeCharacters(bs10_r14.toString());
            break;
         }

         // bs16_r14
         case 1: { 
            Asn1BitString bs16_r14;
            element = bs16_r14 = new Asn1BitString();
            bs16_r14.decode (buffer, 16, 16);

            buffer.invokeCharacters(bs16_r14.toString());
            break;
         }

         // bs20_r14
         case 2: { 
            Asn1BitString bs20_r14;
            element = bs20_r14 = new Asn1BitString();
            bs20_r14.decode (buffer, 20, 20);

            buffer.invokeCharacters(bs20_r14.toString());
            break;
         }

         // bs30_r14
         case 3: { 
            Asn1BitString bs30_r14;
            element = bs30_r14 = new Asn1BitString();
            bs30_r14.decode (buffer, 30, 30);

            buffer.invokeCharacters(bs30_r14.toString());
            break;
         }

         // bs40_r14
         case 4: { 
            Asn1BitString bs40_r14;
            element = bs40_r14 = new Asn1BitString();
            bs40_r14.decode (buffer, 40, 40);

            buffer.invokeCharacters(bs40_r14.toString());
            break;
         }

         // bs50_r14
         case 5: { 
            Asn1BitString bs50_r14;
            element = bs50_r14 = new Asn1BitString();
            bs50_r14.decode (buffer, 50, 50);

            buffer.invokeCharacters(bs50_r14.toString());
            break;
         }

         // bs60_r14
         case 6: { 
            Asn1BitString bs60_r14;
            element = bs60_r14 = new Asn1BitString();
            bs60_r14.decode (buffer, 60, 60);

            buffer.invokeCharacters(bs60_r14.toString());
            break;
         }

         // bs100_r14
         case 7: { 
            Asn1BitString bs100_r14;
            element = bs100_r14 = new Asn1BitString();
            bs100_r14.decode (buffer, 100, 100);

            buffer.invokeCharacters(bs100_r14.toString());
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
