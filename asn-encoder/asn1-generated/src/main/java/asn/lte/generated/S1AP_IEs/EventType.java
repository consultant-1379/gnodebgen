/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.S1AP_IEs;

import com.objsys.asn1j.runtime.*;

public class EventType extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_S1AP_IEsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "EventType";
   }

   // Integer constants for switch-case
   public static final int _DIRECT = 0;
   public static final int _CHANGE_OF_SERVE_CELL = 1;
   public static final int _STOP_CHANGE_OF_SERVE_CELL = 2;

   // Singleton instances of EventType
   protected static final EventType _direct = new EventType(0);
   protected static final EventType _change_of_serve_cell = new EventType(1);
   protected static final EventType _stop_change_of_serve_cell = new EventType(2);
   private static EventType __undefined = new EventType(-999);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    */
   protected EventType (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for direct.
    */
   public static EventType direct() {
      return _direct;
   }

   /**
    * Singleton accessor method for change_of_serve_cell.
    */
   public static EventType change_of_serve_cell() {
      return _change_of_serve_cell;
   }

   /**
    * Singleton accessor method for stop_change_of_serve_cell.
    */
   public static EventType stop_change_of_serve_cell() {
      return _stop_change_of_serve_cell;
   }

   /** Undefined value. */
   protected static EventType __undefined_() { return __undefined; }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return EventType.valueOf( EventType.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static EventType valueOf (int _value)
   {
      switch ((int)_value) {
         case 0: return direct();
         case 1: return change_of_serve_cell();
         case 2: return stop_change_of_serve_cell();
         default: return __undefined_();
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      boolean extbit = buffer.decodeBit ("extbit");

      if (extbit) {
         ui = buffer.decodeSmallNonNegWholeNumber ();

         return 0x7fffffff;
      }
      else {
         ui = (int) buffer.decodeConsWholeNumber (3);

         switch (ui) {
            case 0: ret =  0; break;
            case 1: ret =  1; break;
            case 2: ret =  2; break;
            default: throw new Asn1InvalidEnumException (ui);
         }
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (EventType.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("direct");
         case 1: return ("change-of-serve-cell");
         case 2: return ("stop-change-of-serve-cell");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
