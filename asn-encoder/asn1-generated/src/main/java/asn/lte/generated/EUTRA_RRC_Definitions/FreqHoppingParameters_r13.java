/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class FreqHoppingParameters_r13 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "FreqHoppingParameters-r13";
   }

   public FreqHoppingParameters_r13_dummy dummy = null;  // optional
   public FreqHoppingParameters_r13_dummy2 dummy2;  // optional
   public FreqHoppingParameters_r13_dummy3 dummy3;  // optional
   public FreqHoppingParameters_r13_interval_ULHoppingConfigCommonModeA_r13 interval_ULHoppingConfigCommonModeA_r13;  // optional
   public FreqHoppingParameters_r13_interval_ULHoppingConfigCommonModeB_r13 interval_ULHoppingConfigCommonModeB_r13;  // optional
   public Asn1Integer dummy4;  // optional

   public FreqHoppingParameters_r13 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public FreqHoppingParameters_r13 (
      FreqHoppingParameters_r13_dummy dummy_,
      FreqHoppingParameters_r13_dummy2 dummy2_,
      FreqHoppingParameters_r13_dummy3 dummy3_,
      FreqHoppingParameters_r13_interval_ULHoppingConfigCommonModeA_r13 interval_ULHoppingConfigCommonModeA_r13_,
      FreqHoppingParameters_r13_interval_ULHoppingConfigCommonModeB_r13 interval_ULHoppingConfigCommonModeB_r13_,
      Asn1Integer dummy4_
   ) {
      super();
      dummy = dummy_;
      dummy2 = dummy2_;
      dummy3 = dummy3_;
      interval_ULHoppingConfigCommonModeA_r13 = interval_ULHoppingConfigCommonModeA_r13_;
      interval_ULHoppingConfigCommonModeB_r13 = interval_ULHoppingConfigCommonModeB_r13_;
      dummy4 = dummy4_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public FreqHoppingParameters_r13 (FreqHoppingParameters_r13_dummy dummy_,
      FreqHoppingParameters_r13_dummy2 dummy2_,
      FreqHoppingParameters_r13_dummy3 dummy3_,
      FreqHoppingParameters_r13_interval_ULHoppingConfigCommonModeA_r13 interval_ULHoppingConfigCommonModeA_r13_,
      FreqHoppingParameters_r13_interval_ULHoppingConfigCommonModeB_r13 interval_ULHoppingConfigCommonModeB_r13_,
      long dummy4_
   ) {
      super();
      dummy = dummy_;
      dummy2 = dummy2_;
      dummy3 = dummy3_;
      interval_ULHoppingConfigCommonModeA_r13 = interval_ULHoppingConfigCommonModeA_r13_;
      interval_ULHoppingConfigCommonModeB_r13 = interval_ULHoppingConfigCommonModeB_r13_;
      dummy4 = new Asn1Integer (dummy4_);
   }

   public void init () {
      dummy = null;
      dummy2 = null;
      dummy3 = null;
      interval_ULHoppingConfigCommonModeA_r13 = null;
      interval_ULHoppingConfigCommonModeB_r13 = null;
      dummy4 = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return dummy;
         case 1: return dummy2;
         case 2: return dummy3;
         case 3: return interval_ULHoppingConfigCommonModeA_r13;
         case 4: return interval_ULHoppingConfigCommonModeB_r13;
         case 5: return dummy4;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "dummy";
         case 1: return "dummy2";
         case 2: return "dummy3";
         case 3: return "interval-ULHoppingConfigCommonModeA-r13";
         case 4: return "interval-ULHoppingConfigCommonModeB-r13";
         case 5: return "dummy4";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean dummyPresent = buffer.decodeBit ("dummyPresent");
      boolean dummy2Present = buffer.decodeBit ("dummy2Present");
      boolean dummy3Present = buffer.decodeBit ("dummy3Present");
      boolean interval_ULHoppingConfigCommonModeA_r13Present = buffer.decodeBit ("interval_ULHoppingConfigCommonModeA_r13Present");
      boolean interval_ULHoppingConfigCommonModeB_r13Present = buffer.decodeBit ("interval_ULHoppingConfigCommonModeB_r13Present");
      boolean dummy4Present = buffer.decodeBit ("dummy4Present");

      // decode dummy

      if (dummyPresent) {
         buffer.getContext().eventDispatcher.startElement("dummy", -1);

         int tval = FreqHoppingParameters_r13_dummy.decodeEnumValue (buffer);
         dummy = FreqHoppingParameters_r13_dummy.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("dummy", -1);
      }
      else {
         dummy = null;
      }

      // decode dummy2

      if (dummy2Present) {
         buffer.getContext().eventDispatcher.startElement("dummy2", -1);

         dummy2 = new FreqHoppingParameters_r13_dummy2();
         dummy2.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("dummy2", -1);
      }
      else {
         dummy2 = null;
      }

      // decode dummy3

      if (dummy3Present) {
         buffer.getContext().eventDispatcher.startElement("dummy3", -1);

         dummy3 = new FreqHoppingParameters_r13_dummy3();
         dummy3.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("dummy3", -1);
      }
      else {
         dummy3 = null;
      }

      // decode interval_ULHoppingConfigCommonModeA_r13

      if (interval_ULHoppingConfigCommonModeA_r13Present) {
         buffer.getContext().eventDispatcher.startElement("interval_ULHoppingConfigCommonModeA_r13", -1);

         interval_ULHoppingConfigCommonModeA_r13 = new FreqHoppingParameters_r13_interval_ULHoppingConfigCommonModeA_r13();
         interval_ULHoppingConfigCommonModeA_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("interval_ULHoppingConfigCommonModeA_r13", -1);
      }
      else {
         interval_ULHoppingConfigCommonModeA_r13 = null;
      }

      // decode interval_ULHoppingConfigCommonModeB_r13

      if (interval_ULHoppingConfigCommonModeB_r13Present) {
         buffer.getContext().eventDispatcher.startElement("interval_ULHoppingConfigCommonModeB_r13", -1);

         interval_ULHoppingConfigCommonModeB_r13 = new FreqHoppingParameters_r13_interval_ULHoppingConfigCommonModeB_r13();
         interval_ULHoppingConfigCommonModeB_r13.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("interval_ULHoppingConfigCommonModeB_r13", -1);
      }
      else {
         interval_ULHoppingConfigCommonModeB_r13 = null;
      }

      // decode dummy4

      if (dummy4Present) {
         buffer.getContext().eventDispatcher.startElement("dummy4", -1);

         dummy4 = new Asn1Integer();
         dummy4.decode (buffer, 1, 16);

         buffer.invokeCharacters(dummy4.toString());
         buffer.getContext().eventDispatcher.endElement("dummy4", -1);
      }
      else {
         dummy4 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (dummy != null) dummy.print (_sb, "dummy", _level+1);
      if (dummy2 != null) dummy2.print (_sb, "dummy2", _level+1);
      if (dummy3 != null) dummy3.print (_sb, "dummy3", _level+1);
      if (interval_ULHoppingConfigCommonModeA_r13 != null) interval_ULHoppingConfigCommonModeA_r13.print (_sb, "interval_ULHoppingConfigCommonModeA_r13", _level+1);
      if (interval_ULHoppingConfigCommonModeB_r13 != null) interval_ULHoppingConfigCommonModeB_r13.print (_sb, "interval_ULHoppingConfigCommonModeB_r13", _level+1);
      if (dummy4 != null) dummy4.print (_sb, "dummy4", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
