/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CSI_RS_Config_NZP_v1430 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CSI-RS-Config-NZP-v1430";
   }

   public NZP_TransmissionComb_r14 transmissionComb_r14;  // optional
   public NZP_FrequencyDensity_r14 frequencyDensity_r14 = null;  // optional

   public CSI_RS_Config_NZP_v1430 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CSI_RS_Config_NZP_v1430 (
      NZP_TransmissionComb_r14 transmissionComb_r14_,
      NZP_FrequencyDensity_r14 frequencyDensity_r14_
   ) {
      super();
      transmissionComb_r14 = transmissionComb_r14_;
      frequencyDensity_r14 = frequencyDensity_r14_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CSI_RS_Config_NZP_v1430 (long transmissionComb_r14_,
      NZP_FrequencyDensity_r14 frequencyDensity_r14_
   ) {
      super();
      transmissionComb_r14 = new NZP_TransmissionComb_r14 (transmissionComb_r14_);
      frequencyDensity_r14 = frequencyDensity_r14_;
   }

   public void init () {
      transmissionComb_r14 = null;
      frequencyDensity_r14 = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return transmissionComb_r14;
         case 1: return frequencyDensity_r14;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "transmissionComb-r14";
         case 1: return "frequencyDensity-r14";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean transmissionComb_r14Present = buffer.decodeBit ("transmissionComb_r14Present");
      boolean frequencyDensity_r14Present = buffer.decodeBit ("frequencyDensity_r14Present");

      // decode transmissionComb_r14

      if (transmissionComb_r14Present) {
         buffer.getContext().eventDispatcher.startElement("transmissionComb_r14", -1);

         transmissionComb_r14 = new NZP_TransmissionComb_r14();
         transmissionComb_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("transmissionComb_r14", -1);
      }
      else {
         transmissionComb_r14 = null;
      }

      // decode frequencyDensity_r14

      if (frequencyDensity_r14Present) {
         buffer.getContext().eventDispatcher.startElement("frequencyDensity_r14", -1);

         int tval = NZP_FrequencyDensity_r14.decodeEnumValue (buffer);
         frequencyDensity_r14 = NZP_FrequencyDensity_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("frequencyDensity_r14", -1);
      }
      else {
         frequencyDensity_r14 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (transmissionComb_r14 != null) transmissionComb_r14.print (_sb, "transmissionComb_r14", _level+1);
      if (frequencyDensity_r14 != null) frequencyDensity_r14.print (_sb, "frequencyDensity_r14", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
