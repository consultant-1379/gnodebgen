/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;
import asn.lte.generated.EUTRA_RRC_Definitions.RRCConnectionReestablishmentReject;

public class DL_CCCH_MessageType_NB_c1 extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _RRCCONNECTIONREESTABLISHMENT_R13 = 1;
   public final static byte _RRCCONNECTIONREESTABLISHMENTREJECT_R13 = 2;
   public final static byte _RRCCONNECTIONREJECT_R13 = 3;
   public final static byte _RRCCONNECTIONSETUP_R13 = 4;
   public final static byte _RRCEARLYDATACOMPLETE_R15 = 5;
   public final static byte _SPARE3 = 6;
   public final static byte _SPARE2 = 7;
   public final static byte _SPARE1 = 8;

   public DL_CCCH_MessageType_NB_c1 () {
      super();
   }

   public DL_CCCH_MessageType_NB_c1 (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _RRCCONNECTIONREESTABLISHMENT_R13: return "rrcConnectionReestablishment_r13";
      case _RRCCONNECTIONREESTABLISHMENTREJECT_R13: return "rrcConnectionReestablishmentReject_r13";
      case _RRCCONNECTIONREJECT_R13: return "rrcConnectionReject_r13";
      case _RRCCONNECTIONSETUP_R13: return "rrcConnectionSetup_r13";
      case _RRCEARLYDATACOMPLETE_R15: return "rrcEarlyDataComplete_r15";
      case _SPARE3: return "spare3";
      case _SPARE2: return "spare2";
      case _SPARE1: return "spare1";
      default: return "UNDEFINED";
      }
   }

   public void set_rrcConnectionReestablishment_r13 (RRCConnectionReestablishment_NB value) {
      setElement (_RRCCONNECTIONREESTABLISHMENT_R13, value);
   }

   public void set_rrcConnectionReestablishmentReject_r13 (RRCConnectionReestablishmentReject value) {
      setElement (_RRCCONNECTIONREESTABLISHMENTREJECT_R13, value);
   }

   public void set_rrcConnectionReject_r13 (RRCConnectionReject_NB value) {
      setElement (_RRCCONNECTIONREJECT_R13, value);
   }

   public void set_rrcConnectionSetup_r13 (RRCConnectionSetup_NB value) {
      setElement (_RRCCONNECTIONSETUP_R13, value);
   }

   public void set_rrcEarlyDataComplete_r15 (RRCEarlyDataComplete_NB_r15 value) {
      setElement (_RRCEARLYDATACOMPLETE_R15, value);
   }

   public void set_spare3 () {
      setElement (_SPARE3, Asn1Null.NULL_VALUE);
   }

   public void set_spare2 () {
      setElement (_SPARE2, Asn1Null.NULL_VALUE);
   }

   public void set_spare1 () {
      setElement (_SPARE1, Asn1Null.NULL_VALUE);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (8, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // rrcConnectionReestablishment_r13
         case 0: { 
            RRCConnectionReestablishment_NB rrcConnectionReestablishment_r13;
            element = rrcConnectionReestablishment_r13 = new RRCConnectionReestablishment_NB();
            rrcConnectionReestablishment_r13.decode (buffer);
            break;
         }

         // rrcConnectionReestablishmentReject_r13
         case 1: { 
            RRCConnectionReestablishmentReject rrcConnectionReestablishmentReject_r13;
            element = rrcConnectionReestablishmentReject_r13 = new RRCConnectionReestablishmentReject();
            rrcConnectionReestablishmentReject_r13.decode (buffer);
            break;
         }

         // rrcConnectionReject_r13
         case 2: { 
            RRCConnectionReject_NB rrcConnectionReject_r13;
            element = rrcConnectionReject_r13 = new RRCConnectionReject_NB();
            rrcConnectionReject_r13.decode (buffer);
            break;
         }

         // rrcConnectionSetup_r13
         case 3: { 
            RRCConnectionSetup_NB rrcConnectionSetup_r13;
            element = rrcConnectionSetup_r13 = new RRCConnectionSetup_NB();
            rrcConnectionSetup_r13.decode (buffer);
            break;
         }

         // rrcEarlyDataComplete_r15
         case 4: { 
            RRCEarlyDataComplete_NB_r15 rrcEarlyDataComplete_r15;
            element = rrcEarlyDataComplete_r15 = new RRCEarlyDataComplete_NB_r15();
            rrcEarlyDataComplete_r15.decode (buffer);
            break;
         }

         // spare3
         case 5: { 
            Asn1Null spare3;
            element = spare3 = Asn1Null.NULL_VALUE;
            spare3.decode (buffer);

            buffer.invokeCharacters(spare3.toString());
            break;
         }

         // spare2
         case 6: { 
            Asn1Null spare2;
            element = spare2 = Asn1Null.NULL_VALUE;
            spare2.decode (buffer);

            buffer.invokeCharacters(spare2.toString());
            break;
         }

         // spare1
         case 7: { 
            Asn1Null spare1;
            element = spare1 = Asn1Null.NULL_VALUE;
            spare1.decode (buffer);

            buffer.invokeCharacters(spare1.toString());
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (element != null) {
         element.print (_sb, getElemName(), _level+1);
      }
      indent (_sb, _level);
      _sb.append("}\n");
   }

}
