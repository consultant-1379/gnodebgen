/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _DB5 = 0;
   public static final int _DB10 = 1;
   public static final int _DB15 = 2;
   public static final int _DB20 = 3;
   public static final int _DB25 = 4;
   public static final int _DB30 = 5;
   public static final int _DB35 = 6;

   // Singleton instances of CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14
   protected static final CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 _dB5 = new CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14(0);
   protected static final CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 _dB10 = new CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14(1);
   protected static final CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 _dB15 = new CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14(2);
   protected static final CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 _dB20 = new CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14(3);
   protected static final CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 _dB25 = new CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14(4);
   protected static final CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 _dB30 = new CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14(5);
   protected static final CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 _dB35 = new CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14(6);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    */
   protected CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for dB5.
    */
   public static CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 dB5() {
      return _dB5;
   }

   /**
    * Singleton accessor method for dB10.
    */
   public static CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 dB10() {
      return _dB10;
   }

   /**
    * Singleton accessor method for dB15.
    */
   public static CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 dB15() {
      return _dB15;
   }

   /**
    * Singleton accessor method for dB20.
    */
   public static CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 dB20() {
      return _dB20;
   }

   /**
    * Singleton accessor method for dB25.
    */
   public static CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 dB25() {
      return _dB25;
   }

   /**
    * Singleton accessor method for dB30.
    */
   public static CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 dB30() {
      return _dB30;
   }

   /**
    * Singleton accessor method for dB35.
    */
   public static CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 dB35() {
      return _dB35;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14.valueOf( CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return dB5();
         case 1: return dB10();
         case 2: return dB15();
         case 3: return dB20();
         case 4: return dB25();
         case 5: return dB30();
         case 6: return dB35();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (7);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      buffer.invokeCharacters (CellSelectionInfo_NB_v1430_ce_authorisationOffset_r14.valueOf(ret).toString());

      return ret;
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("dB5");
         case 1: return ("dB10");
         case 2: return ("dB15");
         case 3: return ("dB20");
         case 4: return ("dB25");
         case 5: return ("dB30");
         case 6: return ("dB35");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" = ").append(toString()).append("\n");
   }

}
