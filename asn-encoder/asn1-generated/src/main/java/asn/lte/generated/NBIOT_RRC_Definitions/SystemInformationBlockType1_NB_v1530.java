/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NBIOT_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class SystemInformationBlockType1_NB_v1530 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NBIOT_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SystemInformationBlockType1-NB-v1530";
   }

   public SystemInformationBlockType1_NB_v1530_tdd_Parameters_r15 tdd_Parameters_r15;  // optional
   public SchedulingInfoList_NB_v1530 schedulingInfoList_v1530;  // optional
   public SystemInformationBlockType1_NB_v1530_nonCriticalExtension nonCriticalExtension;  // optional

   public SystemInformationBlockType1_NB_v1530 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SystemInformationBlockType1_NB_v1530 (
      SystemInformationBlockType1_NB_v1530_tdd_Parameters_r15 tdd_Parameters_r15_,
      SchedulingInfoList_NB_v1530 schedulingInfoList_v1530_,
      SystemInformationBlockType1_NB_v1530_nonCriticalExtension nonCriticalExtension_
   ) {
      super();
      tdd_Parameters_r15 = tdd_Parameters_r15_;
      schedulingInfoList_v1530 = schedulingInfoList_v1530_;
      nonCriticalExtension = nonCriticalExtension_;
   }

   public void init () {
      tdd_Parameters_r15 = null;
      schedulingInfoList_v1530 = null;
      nonCriticalExtension = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return tdd_Parameters_r15;
         case 1: return schedulingInfoList_v1530;
         case 2: return nonCriticalExtension;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "tdd-Parameters-r15";
         case 1: return "schedulingInfoList-v1530";
         case 2: return "nonCriticalExtension";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean tdd_Parameters_r15Present = buffer.decodeBit ("tdd_Parameters_r15Present");
      boolean schedulingInfoList_v1530Present = buffer.decodeBit ("schedulingInfoList_v1530Present");
      boolean nonCriticalExtensionPresent = buffer.decodeBit ("nonCriticalExtensionPresent");

      // decode tdd_Parameters_r15

      if (tdd_Parameters_r15Present) {
         buffer.getContext().eventDispatcher.startElement("tdd_Parameters_r15", -1);

         tdd_Parameters_r15 = new SystemInformationBlockType1_NB_v1530_tdd_Parameters_r15();
         tdd_Parameters_r15.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("tdd_Parameters_r15", -1);
      }
      else {
         tdd_Parameters_r15 = null;
      }

      // decode schedulingInfoList_v1530

      if (schedulingInfoList_v1530Present) {
         buffer.getContext().eventDispatcher.startElement("schedulingInfoList_v1530", -1);

         schedulingInfoList_v1530 = new SchedulingInfoList_NB_v1530();
         schedulingInfoList_v1530.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("schedulingInfoList_v1530", -1);
      }
      else {
         schedulingInfoList_v1530 = null;
      }

      // decode nonCriticalExtension

      if (nonCriticalExtensionPresent) {
         buffer.getContext().eventDispatcher.startElement("nonCriticalExtension", -1);

         nonCriticalExtension = new SystemInformationBlockType1_NB_v1530_nonCriticalExtension();
         nonCriticalExtension.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("nonCriticalExtension", -1);
      }
      else {
         nonCriticalExtension = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (tdd_Parameters_r15 != null) tdd_Parameters_r15.print (_sb, "tdd_Parameters_r15", _level+1);
      if (schedulingInfoList_v1530 != null) schedulingInfoList_v1530.print (_sb, "schedulingInfoList_v1530", _level+1);
      if (nonCriticalExtension != null) nonCriticalExtension.print (_sb, "nonCriticalExtension", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
