/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.NR_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class MeasReportQuantity extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_NR_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "MeasReportQuantity";
   }

   public Asn1Boolean rsrp;
   public Asn1Boolean rsrq;
   public Asn1Boolean sinr;

   public MeasReportQuantity () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasReportQuantity (
      Asn1Boolean rsrp_,
      Asn1Boolean rsrq_,
      Asn1Boolean sinr_
   ) {
      super();
      rsrp = rsrp_;
      rsrq = rsrq_;
      sinr = sinr_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public MeasReportQuantity (boolean rsrp_,
      boolean rsrq_,
      boolean sinr_
   ) {
      super();
      rsrp = new Asn1Boolean (rsrp_);
      rsrq = new Asn1Boolean (rsrq_);
      sinr = new Asn1Boolean (sinr_);
   }

   public void init () {
      rsrp = null;
      rsrq = null;
      sinr = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return rsrp;
         case 1: return rsrq;
         case 2: return sinr;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "rsrp";
         case 1: return "rsrq";
         case 2: return "sinr";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode rsrp

      buffer.getContext().eventDispatcher.startElement("rsrp", -1);

      rsrp = new Asn1Boolean();
      rsrp.decode (buffer);

      buffer.invokeCharacters(rsrp.toString());
      buffer.getContext().eventDispatcher.endElement("rsrp", -1);

      // decode rsrq

      buffer.getContext().eventDispatcher.startElement("rsrq", -1);

      rsrq = new Asn1Boolean();
      rsrq.decode (buffer);

      buffer.invokeCharacters(rsrq.toString());
      buffer.getContext().eventDispatcher.endElement("rsrq", -1);

      // decode sinr

      buffer.getContext().eventDispatcher.startElement("sinr", -1);

      sinr = new Asn1Boolean();
      sinr.decode (buffer);

      buffer.invokeCharacters(sinr.toString());
      buffer.getContext().eventDispatcher.endElement("sinr", -1);

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (rsrp != null) rsrp.print (_sb, "rsrp", _level+1);
      if (rsrq != null) rsrq.print (_sb, "rsrq", _level+1);
      if (sinr != null) sinr.print (_sb, "sinr", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
