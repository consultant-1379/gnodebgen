/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class PDSCH_RE_MappingQCL_Config_r11 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PDSCH-RE-MappingQCL-Config-r11";
   }

   public PDSCH_RE_MappingQCL_ConfigId_r11 pdsch_RE_MappingQCL_ConfigId_r11;
   public PDSCH_RE_MappingQCL_Config_r11_optionalSetOfFields_r11 optionalSetOfFields_r11;  // optional
   public CSI_RS_ConfigZPId_r11 csi_RS_ConfigZPId_r11;
   public CSI_RS_ConfigNZPId_r11 qcl_CSI_RS_ConfigNZPId_r11;  // optional
   public boolean mV2ExtPresent;
   public PDSCH_RE_MappingQCL_Config_r11_mbsfn_SubframeConfigList_v1430 mbsfn_SubframeConfigList_v1430;  // optional
   public boolean mV3ExtPresent;
   public PDSCH_RE_MappingQCL_Config_r11_codewordOneConfig_v1530 codewordOneConfig_v1530;  // optional
   public Asn1OpenExt extElem1;

   public PDSCH_RE_MappingQCL_Config_r11 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PDSCH_RE_MappingQCL_Config_r11 (
      PDSCH_RE_MappingQCL_ConfigId_r11 pdsch_RE_MappingQCL_ConfigId_r11_,
      PDSCH_RE_MappingQCL_Config_r11_optionalSetOfFields_r11 optionalSetOfFields_r11_,
      CSI_RS_ConfigZPId_r11 csi_RS_ConfigZPId_r11_,
      CSI_RS_ConfigNZPId_r11 qcl_CSI_RS_ConfigNZPId_r11_,
      PDSCH_RE_MappingQCL_Config_r11_mbsfn_SubframeConfigList_v1430 mbsfn_SubframeConfigList_v1430_,
      PDSCH_RE_MappingQCL_Config_r11_codewordOneConfig_v1530 codewordOneConfig_v1530_
   ) {
      super();
      pdsch_RE_MappingQCL_ConfigId_r11 = pdsch_RE_MappingQCL_ConfigId_r11_;
      optionalSetOfFields_r11 = optionalSetOfFields_r11_;
      csi_RS_ConfigZPId_r11 = csi_RS_ConfigZPId_r11_;
      qcl_CSI_RS_ConfigNZPId_r11 = qcl_CSI_RS_ConfigNZPId_r11_;
      mbsfn_SubframeConfigList_v1430 = mbsfn_SubframeConfigList_v1430_;
      codewordOneConfig_v1530 = codewordOneConfig_v1530_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public PDSCH_RE_MappingQCL_Config_r11 (
      PDSCH_RE_MappingQCL_ConfigId_r11 pdsch_RE_MappingQCL_ConfigId_r11_,
      CSI_RS_ConfigZPId_r11 csi_RS_ConfigZPId_r11_
   ) {
      super();
      pdsch_RE_MappingQCL_ConfigId_r11 = pdsch_RE_MappingQCL_ConfigId_r11_;
      csi_RS_ConfigZPId_r11 = csi_RS_ConfigZPId_r11_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PDSCH_RE_MappingQCL_Config_r11 (long pdsch_RE_MappingQCL_ConfigId_r11_,
      PDSCH_RE_MappingQCL_Config_r11_optionalSetOfFields_r11 optionalSetOfFields_r11_,
      long csi_RS_ConfigZPId_r11_,
      long qcl_CSI_RS_ConfigNZPId_r11_,
      PDSCH_RE_MappingQCL_Config_r11_mbsfn_SubframeConfigList_v1430 mbsfn_SubframeConfigList_v1430_,
      PDSCH_RE_MappingQCL_Config_r11_codewordOneConfig_v1530 codewordOneConfig_v1530_
   ) {
      super();
      pdsch_RE_MappingQCL_ConfigId_r11 = new PDSCH_RE_MappingQCL_ConfigId_r11 (pdsch_RE_MappingQCL_ConfigId_r11_);
      optionalSetOfFields_r11 = optionalSetOfFields_r11_;
      csi_RS_ConfigZPId_r11 = new CSI_RS_ConfigZPId_r11 (csi_RS_ConfigZPId_r11_);
      qcl_CSI_RS_ConfigNZPId_r11 = new CSI_RS_ConfigNZPId_r11 (qcl_CSI_RS_ConfigNZPId_r11_);
      mbsfn_SubframeConfigList_v1430 = mbsfn_SubframeConfigList_v1430_;
      codewordOneConfig_v1530 = codewordOneConfig_v1530_;
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public PDSCH_RE_MappingQCL_Config_r11 (
      long pdsch_RE_MappingQCL_ConfigId_r11_,
      long csi_RS_ConfigZPId_r11_
   ) {
      super();
      pdsch_RE_MappingQCL_ConfigId_r11 = new PDSCH_RE_MappingQCL_ConfigId_r11 (pdsch_RE_MappingQCL_ConfigId_r11_);
      csi_RS_ConfigZPId_r11 = new CSI_RS_ConfigZPId_r11 (csi_RS_ConfigZPId_r11_);
   }

   public void init () {
      pdsch_RE_MappingQCL_ConfigId_r11 = null;
      optionalSetOfFields_r11 = null;
      csi_RS_ConfigZPId_r11 = null;
      qcl_CSI_RS_ConfigNZPId_r11 = null;
      mbsfn_SubframeConfigList_v1430 = null;
      codewordOneConfig_v1530 = null;
      extElem1 = null;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return pdsch_RE_MappingQCL_ConfigId_r11;
         case 1: return optionalSetOfFields_r11;
         case 2: return csi_RS_ConfigZPId_r11;
         case 3: return qcl_CSI_RS_ConfigNZPId_r11;
         case 4: return mbsfn_SubframeConfigList_v1430;
         case 5: return codewordOneConfig_v1530;
         case 6: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "pdsch-RE-MappingQCL-ConfigId-r11";
         case 1: return "optionalSetOfFields-r11";
         case 2: return "csi-RS-ConfigZPId-r11";
         case 3: return "qcl-CSI-RS-ConfigNZPId-r11";
         case 4: return "mbsfn-SubframeConfigList-v1430";
         case 5: return "codewordOneConfig-v1530";
         case 6: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean optionalSetOfFields_r11Present = buffer.decodeBit ("optionalSetOfFields_r11Present");
      boolean qcl_CSI_RS_ConfigNZPId_r11Present = buffer.decodeBit ("qcl_CSI_RS_ConfigNZPId_r11Present");

      // decode pdsch_RE_MappingQCL_ConfigId_r11

      buffer.getContext().eventDispatcher.startElement("pdsch_RE_MappingQCL_ConfigId_r11", -1);

      pdsch_RE_MappingQCL_ConfigId_r11 = new PDSCH_RE_MappingQCL_ConfigId_r11();
      pdsch_RE_MappingQCL_ConfigId_r11.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("pdsch_RE_MappingQCL_ConfigId_r11", -1);

      // decode optionalSetOfFields_r11

      if (optionalSetOfFields_r11Present) {
         buffer.getContext().eventDispatcher.startElement("optionalSetOfFields_r11", -1);

         optionalSetOfFields_r11 = new PDSCH_RE_MappingQCL_Config_r11_optionalSetOfFields_r11();
         optionalSetOfFields_r11.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("optionalSetOfFields_r11", -1);
      }
      else {
         optionalSetOfFields_r11 = null;
      }

      // decode csi_RS_ConfigZPId_r11

      buffer.getContext().eventDispatcher.startElement("csi_RS_ConfigZPId_r11", -1);

      csi_RS_ConfigZPId_r11 = new CSI_RS_ConfigZPId_r11();
      csi_RS_ConfigZPId_r11.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("csi_RS_ConfigZPId_r11", -1);

      // decode qcl_CSI_RS_ConfigNZPId_r11

      if (qcl_CSI_RS_ConfigNZPId_r11Present) {
         buffer.getContext().eventDispatcher.startElement("qcl_CSI_RS_ConfigNZPId_r11", -1);

         qcl_CSI_RS_ConfigNZPId_r11 = new CSI_RS_ConfigNZPId_r11();
         qcl_CSI_RS_ConfigNZPId_r11.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("qcl_CSI_RS_ConfigNZPId_r11", -1);
      }
      else {
         qcl_CSI_RS_ConfigNZPId_r11 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV2ExtPresent");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("mV3ExtPresent");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV2ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean mbsfn_SubframeConfigList_v1430Present = buffer.decodeBit ("mbsfn_SubframeConfigList_v1430Present");

            // decode mbsfn_SubframeConfigList_v1430

            if (mbsfn_SubframeConfigList_v1430Present) {
               buffer.getContext().eventDispatcher.startElement("mbsfn_SubframeConfigList_v1430", -1);

               mbsfn_SubframeConfigList_v1430 = new PDSCH_RE_MappingQCL_Config_r11_mbsfn_SubframeConfigList_v1430();
               mbsfn_SubframeConfigList_v1430.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("mbsfn_SubframeConfigList_v1430", -1);
            }
            else {
               mbsfn_SubframeConfigList_v1430 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode extension group

         if (i < bitcnt && bitmap[i++]) {
            mV3ExtPresent = true;
            bitidx = buffer.decodeExtLength ();

            boolean codewordOneConfig_v1530Present = buffer.decodeBit ("codewordOneConfig_v1530Present");

            // decode codewordOneConfig_v1530

            if (codewordOneConfig_v1530Present) {
               buffer.getContext().eventDispatcher.startElement("codewordOneConfig_v1530", -1);

               codewordOneConfig_v1530 = new PDSCH_RE_MappingQCL_Config_r11_codewordOneConfig_v1530();
               codewordOneConfig_v1530.decode (buffer);
               buffer.getContext().eventDispatcher.endElement("codewordOneConfig_v1530", -1);
            }
            else {
               codewordOneConfig_v1530 = null;
            }

            buffer.moveBitCursor (bitidx);
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (pdsch_RE_MappingQCL_ConfigId_r11 != null) pdsch_RE_MappingQCL_ConfigId_r11.print (_sb, "pdsch_RE_MappingQCL_ConfigId_r11", _level+1);
      if (optionalSetOfFields_r11 != null) optionalSetOfFields_r11.print (_sb, "optionalSetOfFields_r11", _level+1);
      if (csi_RS_ConfigZPId_r11 != null) csi_RS_ConfigZPId_r11.print (_sb, "csi_RS_ConfigZPId_r11", _level+1);
      if (qcl_CSI_RS_ConfigNZPId_r11 != null) qcl_CSI_RS_ConfigNZPId_r11.print (_sb, "qcl_CSI_RS_ConfigNZPId_r11", _level+1);
      if (mbsfn_SubframeConfigList_v1430 != null) mbsfn_SubframeConfigList_v1430.print (_sb, "mbsfn_SubframeConfigList_v1430", _level+1);
      if (codewordOneConfig_v1530 != null) codewordOneConfig_v1530.print (_sb, "codewordOneConfig_v1530", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
