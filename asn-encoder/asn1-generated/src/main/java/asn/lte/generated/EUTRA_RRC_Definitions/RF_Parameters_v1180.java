/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.EUTRA_RRC_Definitions;

import com.objsys.asn1j.runtime.*;

public class RF_Parameters_v1180 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_EUTRA_RRC_DefinitionsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "RF-Parameters-v1180";
   }

   public RF_Parameters_v1180_freqBandRetrieval_r11 freqBandRetrieval_r11 = null;  // optional
   public RF_Parameters_v1180_requestedBands_r11 requestedBands_r11;  // optional
   public SupportedBandCombinationAdd_r11 supportedBandCombinationAdd_r11;  // optional

   public RF_Parameters_v1180 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RF_Parameters_v1180 (
      RF_Parameters_v1180_freqBandRetrieval_r11 freqBandRetrieval_r11_,
      RF_Parameters_v1180_requestedBands_r11 requestedBands_r11_,
      SupportedBandCombinationAdd_r11 supportedBandCombinationAdd_r11_
   ) {
      super();
      freqBandRetrieval_r11 = freqBandRetrieval_r11_;
      requestedBands_r11 = requestedBands_r11_;
      supportedBandCombinationAdd_r11 = supportedBandCombinationAdd_r11_;
   }

   public void init () {
      freqBandRetrieval_r11 = null;
      requestedBands_r11 = null;
      supportedBandCombinationAdd_r11 = null;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return freqBandRetrieval_r11;
         case 1: return requestedBands_r11;
         case 2: return supportedBandCombinationAdd_r11;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "freqBandRetrieval-r11";
         case 1: return "requestedBands-r11";
         case 2: return "supportedBandCombinationAdd-r11";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean freqBandRetrieval_r11Present = buffer.decodeBit ("freqBandRetrieval_r11Present");
      boolean requestedBands_r11Present = buffer.decodeBit ("requestedBands_r11Present");
      boolean supportedBandCombinationAdd_r11Present = buffer.decodeBit ("supportedBandCombinationAdd_r11Present");

      // decode freqBandRetrieval_r11

      if (freqBandRetrieval_r11Present) {
         buffer.getContext().eventDispatcher.startElement("freqBandRetrieval_r11", -1);

         int tval = RF_Parameters_v1180_freqBandRetrieval_r11.decodeEnumValue (buffer);
         freqBandRetrieval_r11 = RF_Parameters_v1180_freqBandRetrieval_r11.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("freqBandRetrieval_r11", -1);
      }
      else {
         freqBandRetrieval_r11 = null;
      }

      // decode requestedBands_r11

      if (requestedBands_r11Present) {
         buffer.getContext().eventDispatcher.startElement("requestedBands_r11", -1);

         requestedBands_r11 = new RF_Parameters_v1180_requestedBands_r11();
         requestedBands_r11.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("requestedBands_r11", -1);
      }
      else {
         requestedBands_r11 = null;
      }

      // decode supportedBandCombinationAdd_r11

      if (supportedBandCombinationAdd_r11Present) {
         buffer.getContext().eventDispatcher.startElement("supportedBandCombinationAdd_r11", -1);

         supportedBandCombinationAdd_r11 = new SupportedBandCombinationAdd_r11();
         supportedBandCombinationAdd_r11.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("supportedBandCombinationAdd_r11", -1);
      }
      else {
         supportedBandCombinationAdd_r11 = null;
      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (freqBandRetrieval_r11 != null) freqBandRetrieval_r11.print (_sb, "freqBandRetrieval_r11", _level+1);
      if (requestedBands_r11 != null) requestedBands_r11.print (_sb, "requestedBands_r11", _level+1);
      if (supportedBandCombinationAdd_r11 != null) supportedBandCombinationAdd_r11.print (_sb, "supportedBandCombinationAdd_r11", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
