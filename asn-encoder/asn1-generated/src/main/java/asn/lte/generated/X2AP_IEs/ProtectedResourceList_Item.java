/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.4, Date: 05-Aug-2021.
 */
package asn.lte.generated.X2AP_IEs;

import com.objsys.asn1j.runtime.*;

public class ProtectedResourceList_Item extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_X2AP_IEsRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ProtectedResourceList-Item";
   }

   public ResourceType resourceType = null;
   public Asn1BitString intraPRBProtectedResourceFootprint;
   public Asn1BitString protectedFootprintFrequencyPattern;
   public ProtectedFootprintTimePattern protectedFootprintTimePattern;
   public ProtectedResourceList_Item_iE_Extensions iE_Extensions;  // optional
   public Asn1OpenExt extElem1;

   public ProtectedResourceList_Item () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public ProtectedResourceList_Item (
      ResourceType resourceType_,
      Asn1BitString intraPRBProtectedResourceFootprint_,
      Asn1BitString protectedFootprintFrequencyPattern_,
      ProtectedFootprintTimePattern protectedFootprintTimePattern_,
      ProtectedResourceList_Item_iE_Extensions iE_Extensions_
   ) {
      super();
      resourceType = resourceType_;
      intraPRBProtectedResourceFootprint = intraPRBProtectedResourceFootprint_;
      protectedFootprintFrequencyPattern = protectedFootprintFrequencyPattern_;
      protectedFootprintTimePattern = protectedFootprintTimePattern_;
      iE_Extensions = iE_Extensions_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public ProtectedResourceList_Item (
      ResourceType resourceType_,
      Asn1BitString intraPRBProtectedResourceFootprint_,
      Asn1BitString protectedFootprintFrequencyPattern_,
      ProtectedFootprintTimePattern protectedFootprintTimePattern_
   ) {
      super();
      resourceType = resourceType_;
      intraPRBProtectedResourceFootprint = intraPRBProtectedResourceFootprint_;
      protectedFootprintFrequencyPattern = protectedFootprintFrequencyPattern_;
      protectedFootprintTimePattern = protectedFootprintTimePattern_;
   }

   public void init () {
      resourceType = null;
      intraPRBProtectedResourceFootprint = null;
      protectedFootprintFrequencyPattern = null;
      protectedFootprintTimePattern = null;
      iE_Extensions = null;
      extElem1 = null;
   }

   public int getElementCount() { return 6; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return resourceType;
         case 1: return intraPRBProtectedResourceFootprint;
         case 2: return protectedFootprintFrequencyPattern;
         case 3: return protectedFootprintTimePattern;
         case 4: return iE_Extensions;
         case 5: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "resourceType";
         case 1: return "intraPRBProtectedResourceFootprint";
         case 2: return "protectedFootprintFrequencyPattern";
         case 3: return "protectedFootprintTimePattern";
         case 4: return "iE-Extensions";
         case 5: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean iE_ExtensionsPresent = buffer.decodeBit ("iE_ExtensionsPresent");

      // decode resourceType

      buffer.getContext().eventDispatcher.startElement("resourceType", -1);

      {
         int tval = ResourceType.decodeEnumValue (buffer);
         resourceType = ResourceType.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("resourceType", -1);

      // decode intraPRBProtectedResourceFootprint

      buffer.getContext().eventDispatcher.startElement("intraPRBProtectedResourceFootprint", -1);

      intraPRBProtectedResourceFootprint = new Asn1BitString();
      boolean extbit_1 = buffer.decodeBit ("extbit_1");
      if (!extbit_1) {
         intraPRBProtectedResourceFootprint.decode (buffer, 84, 84);
      }
      else {
         intraPRBProtectedResourceFootprint.decode (buffer);
      }

      buffer.invokeCharacters(intraPRBProtectedResourceFootprint.toString());
      buffer.getContext().eventDispatcher.endElement("intraPRBProtectedResourceFootprint", -1);

      // decode protectedFootprintFrequencyPattern

      buffer.getContext().eventDispatcher.startElement("protectedFootprintFrequencyPattern", -1);

      protectedFootprintFrequencyPattern = new Asn1BitString();
      boolean extbit_2 = buffer.decodeBit ("extbit_2");
      if (!extbit_2) {
         protectedFootprintFrequencyPattern.decode (buffer, 6, 110);
      }
      else {
         protectedFootprintFrequencyPattern.decode (buffer);
      }

      buffer.invokeCharacters(protectedFootprintFrequencyPattern.toString());
      buffer.getContext().eventDispatcher.endElement("protectedFootprintFrequencyPattern", -1);

      // decode protectedFootprintTimePattern

      buffer.getContext().eventDispatcher.startElement("protectedFootprintTimePattern", -1);

      protectedFootprintTimePattern = new ProtectedFootprintTimePattern();
      protectedFootprintTimePattern.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("protectedFootprintTimePattern", -1);

      // decode iE_Extensions

      if (iE_ExtensionsPresent) {
         buffer.getContext().eventDispatcher.startElement("iE_Extensions", -1);

         iE_Extensions = new ProtectedResourceList_Item_iE_Extensions();
         iE_Extensions.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("iE_Extensions", -1);
      }
      else {
         iE_Extensions = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);

                  buffer.invokeCharacters (openType.toString());
                  buffer.getContext().eventDispatcher.endElement("...", -1);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void print (java.lang.StringBuilder _sb, String _varName, int _level)
   {
      indent (_sb, _level);
      _sb.append(_varName).append(" {\n");
      if (resourceType != null) resourceType.print (_sb, "resourceType", _level+1);
      if (intraPRBProtectedResourceFootprint != null) intraPRBProtectedResourceFootprint.print (_sb, "intraPRBProtectedResourceFootprint", _level+1);
      if (protectedFootprintFrequencyPattern != null) protectedFootprintFrequencyPattern.print (_sb, "protectedFootprintFrequencyPattern", _level+1);
      if (protectedFootprintTimePattern != null) protectedFootprintTimePattern.print (_sb, "protectedFootprintTimePattern", _level+1);
      if (iE_Extensions != null) iE_Extensions.print (_sb, "iE_Extensions", _level+1);
      if (extElem1 != null) extElem1.print (_sb, "extElem1", _level+1);
      indent (_sb, _level);
      _sb.append ("}\n");
   }

}
