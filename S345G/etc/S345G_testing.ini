# This is used for the test environment and to reduce the build time on all
# different development environments such as Windows which is take a long time for each
# connection creation for each channel causing a long build time delay
[General]
# where events should be written to
# remember to wrap address and ports in quotes!
DestIP="localhost"
# port can take a range
# e.g. "10102" is port 10102, "10102-10104" would be ports 10102, 10103 and 10104
Destport="10102"

#
# EBS-N to 96 flows routes based on the gnodeBId. for balanced loads in testing
# the number of nodes should be a multiple of 96 * 3  = 288

# Desired events per sec (if set this will override numCalls per sec, busy hour, control file etc.)
# 1 nodes * 3 network functions * 18 events per network function per second
TargetEventsPerSec=45

# The number of calls to be generated per second.
# This is the target rate but can be overridden by the busyhour control detailed below.
numCallsPerSec=3000

# when unsure of the hardware capabilities, S3 can be configured to start slowly and
# speed up to the highest sustainable rate less than or equal to 'numCallsPerSec' by
# setting an initial value to start at. This system will then try to increase this value by 20%
# every 10 seconds while it remains stable.
initCallsPerSec=1500

# Number of channels to open - each channel relates to an gNodeB and
# will result in a connection being made to the destination for each Network function.
# Can be reduced if insufficient topology is available
# The number of channels set to 1 to reduce the number of connections created during the test build
NumChannels=1
#FirstChannel allows you to skip some channels when running in a multi-instance mode
FirstChannel=1

# if UseSerialCells is set greater than zero, it tells S3 to rotate through the cells
# rather then pick them at random. This gives a more even distribution of events to
# each cell if that is important for testing.
UseSerialCells = 1

# if numNodes not specified, then S3 will look for and use TopologyList
# numNodes=1000

# TraceRacUeRef > 0 tells S3 to start the RacUeRef at this value and increment it by one for each session.
# useful for traceing events and sessions etc.
# if zero or undefined, a random value will be used to populate the EVENT_PARAM_RAC_UE_REF field.
#TraceRacUeRef=1

# Topology
# S3 has three mechanisms to load topology information and will use the first satisfied below.
# 1 - NumNodes
#  create the specified number of nodes
# gNodeBId will be x
#  nodes named Node_0000x_CUCP, Node_0000x_CUUP, Node_0000x_DU
# 2 - UseTopologyList
#  read a file with topology file list

# The numChannels and FirstChannel parameters still apply so
#   numNodes=300
#   numChannels=250
#   firstChannel=10
# would produce 250 eNodeBs from eNodeB_00010 to eNodeB_00259 inclusive

TopologyPLMNmcc = "310"
TopologyPLMNmnc = "410"
CellsPerNode=3
# the number of bits that can be used for the gNodeBId Len. (valid 22..32)
gNodeBIdLen = 22


# UseTopologyList
#
# specify a csv with the minimal information required.
#  The first none comment line will contain the mcc,mnc to use
#  each following none comment line will have the eNodeB name, the eNodeB id, the number of cells.
# ignored if numNodes has been specified
UseTopologyList="etc/topologyFile.txt"

# How often to schedule transmissions, in millisecs. The value 126 works very well.
DistMonitor=126


# To send all output to file...
LogToFile=0

# number of timeslots in scheduler queue.
# multiply by DistMonitor to get length of q in millisecs, which must be greater then longest expected call.
# QueueSize=10000

# RunFor, if present and not zero is time (in seconds) to run for.
# after which, it will stop generating new calls and wait for
# cooldown=45
# =((DistMonitor*QueueSize)/1000) seconds for already scheduled events to be sent.
# RunFor=120
cooldown=2

#
# busy hour control
#
# On the hour(local time), S3 will check if there is a setting here for that hour
# and if there is, it will change the target number of calls per second by the
# specified percentage. i.e. at 1 in the morning, if there is a value for hour1=33,
# the rate will be adjusted to 33% of the NumCallsPerSec value.
#
# Note - a value of zero means DO NOT CHANGE the current rate. This allows rates to be
# specified that have no impact and so can be overridden on the command line.
#
#hour1=33 # starting from 1 am, the call rate is 33% numCallsPerSec
#hour8=100 # starting from 8 am, the call rate is 100% numCallsPerSec
#hour11=33 # starting from 11 am, the call rate is 33% numCallsPerSec
#hour16=100 # starting from 4 pm, the call rate is 110% numCallsPerSec
#hour19=33 # starting from 7 pm, the call rate is 33% numCallsPerSec

#
# LoadControlFile
#
# This mechanism allows external processes to change the load being produced by S3.
# If set, S3 will monitor the named file and if it is detected and it contains
# a number, then S3 will attempt to change the numCallsPerSec by that percentage
# such that TargetCallsPerSec = NumCallsPerSec * (adjust * 0.01)
# S3 will only look for the file once every ten seconds.
# S3 will delete the file after it has read it but will not act on the file if
# the delete fails or the current load is not stable.
# This mechansim overrides any busy hour adjustment.
# Example:
# Given
# LoadControlFile="/tmp/loadControl.myInst"
# the command "$ echo 120 > /tmp/loadControl.myInst"
# would cause S3 to run at 120% of the numCallsPerSec
# LoadControlFile="/tmp/loadControl.myInst"

#
# Call duration rules setup
#
# Up to 99 rules numbered Duration1 to Duration99
# that give the length of the call and the number of calls of that length
# call length at least 1
# Only first 1000 call rules will be used.
# NOTE : At least one duration rule is required.
#Duration1=1,195   # 192 calls of 1 second
#Duration2=2,146   # 144 calls of 2 seconds
#Duration3=5,98     # 96 calls of 5 seconds
#Duration4=10,98
#Duration5=12,81
#Duration6=15,293
#Duration7=20,63
#Duration8=35,6

[Paths]
# Specify the pattern and times used per cycle
# eg callsetup2release.pat=10
# means the pattern is used at least ten times per cycle
# total number of patterns in a cycle is the sum of the
# times used
# -or-

# directory containing patterns to use and where to look for PatternINIFileName
PatternDir="patterns/testPatterns"

# Pattern configurations can be maintained in separate ini file as below. S3 will look for the file in the specified "PatternDir"
# and load the patterns along with patterns listed in S345G.ini file.
# For example :
PatternINIFileName="patterns.ini"
